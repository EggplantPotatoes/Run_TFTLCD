
touchgfx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00024750  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001b8c  080249f0  080249f0  000349f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000970  0802657c  0802657c  0003657c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08026eec  08026eec  00036eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 000157c0  08026f04  08026f04  00036f04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000048  0803c6c4  0803c6c4  0004c6c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM          00000008  0803c70c  0803c70c  0004c70c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .init_array   00000014  0803c714  0803c714  0004c714  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  0803c728  0803c728  0004c728  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         000000f8  24000000  0803c730  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          000021e8  240000f8  0803c828  000500f8  2**2
                  ALLOC
 12 ._user_heap_stack 00000600  240022e0  0803c828  000522e0  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000500f8  2**0
                  CONTENTS, READONLY
 14 .comment      000000c2  00000000  00000000  00050126  2**0
                  CONTENTS, READONLY
 15 .debug_info   0009957d  00000000  00000000  000501e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 000115c4  00000000  00000000  000e9765  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000031e0  00000000  00000000  000fad30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00002503  00000000  00000000  000fdf10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  000441c8  00000000  00000000  00100413  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   00040ef0  00000000  00000000  001445db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00188256  00000000  00000000  001854cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_frame  0000d9c8  00000000  00000000  0030d724  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000059  00000000  00000000  0031b0ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	240000f8 	.word	0x240000f8
 80002bc:	00000000 	.word	0x00000000
 80002c0:	080249d8 	.word	0x080249d8

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	240000fc 	.word	0x240000fc
 80002dc:	080249d8 	.word	0x080249d8

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <__aeabi_uldivmod>:
 8000380:	b953      	cbnz	r3, 8000398 <__aeabi_uldivmod+0x18>
 8000382:	b94a      	cbnz	r2, 8000398 <__aeabi_uldivmod+0x18>
 8000384:	2900      	cmp	r1, #0
 8000386:	bf08      	it	eq
 8000388:	2800      	cmpeq	r0, #0
 800038a:	bf1c      	itt	ne
 800038c:	f04f 31ff 	movne.w	r1, #4294967295
 8000390:	f04f 30ff 	movne.w	r0, #4294967295
 8000394:	f000 b970 	b.w	8000678 <__aeabi_idiv0>
 8000398:	f1ad 0c08 	sub.w	ip, sp, #8
 800039c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80003a0:	f000 f806 	bl	80003b0 <__udivmoddi4>
 80003a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80003a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80003ac:	b004      	add	sp, #16
 80003ae:	4770      	bx	lr

080003b0 <__udivmoddi4>:
 80003b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80003b4:	9e08      	ldr	r6, [sp, #32]
 80003b6:	460d      	mov	r5, r1
 80003b8:	4604      	mov	r4, r0
 80003ba:	460f      	mov	r7, r1
 80003bc:	2b00      	cmp	r3, #0
 80003be:	d14a      	bne.n	8000456 <__udivmoddi4+0xa6>
 80003c0:	428a      	cmp	r2, r1
 80003c2:	4694      	mov	ip, r2
 80003c4:	d965      	bls.n	8000492 <__udivmoddi4+0xe2>
 80003c6:	fab2 f382 	clz	r3, r2
 80003ca:	b143      	cbz	r3, 80003de <__udivmoddi4+0x2e>
 80003cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80003d0:	f1c3 0220 	rsb	r2, r3, #32
 80003d4:	409f      	lsls	r7, r3
 80003d6:	fa20 f202 	lsr.w	r2, r0, r2
 80003da:	4317      	orrs	r7, r2
 80003dc:	409c      	lsls	r4, r3
 80003de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003e2:	fa1f f58c 	uxth.w	r5, ip
 80003e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ea:	0c22      	lsrs	r2, r4, #16
 80003ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80003f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003f4:	fb01 f005 	mul.w	r0, r1, r5
 80003f8:	4290      	cmp	r0, r2
 80003fa:	d90a      	bls.n	8000412 <__udivmoddi4+0x62>
 80003fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000400:	f101 37ff 	add.w	r7, r1, #4294967295
 8000404:	f080 811c 	bcs.w	8000640 <__udivmoddi4+0x290>
 8000408:	4290      	cmp	r0, r2
 800040a:	f240 8119 	bls.w	8000640 <__udivmoddi4+0x290>
 800040e:	3902      	subs	r1, #2
 8000410:	4462      	add	r2, ip
 8000412:	1a12      	subs	r2, r2, r0
 8000414:	b2a4      	uxth	r4, r4
 8000416:	fbb2 f0fe 	udiv	r0, r2, lr
 800041a:	fb0e 2210 	mls	r2, lr, r0, r2
 800041e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000422:	fb00 f505 	mul.w	r5, r0, r5
 8000426:	42a5      	cmp	r5, r4
 8000428:	d90a      	bls.n	8000440 <__udivmoddi4+0x90>
 800042a:	eb1c 0404 	adds.w	r4, ip, r4
 800042e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000432:	f080 8107 	bcs.w	8000644 <__udivmoddi4+0x294>
 8000436:	42a5      	cmp	r5, r4
 8000438:	f240 8104 	bls.w	8000644 <__udivmoddi4+0x294>
 800043c:	4464      	add	r4, ip
 800043e:	3802      	subs	r0, #2
 8000440:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000444:	1b64      	subs	r4, r4, r5
 8000446:	2100      	movs	r1, #0
 8000448:	b11e      	cbz	r6, 8000452 <__udivmoddi4+0xa2>
 800044a:	40dc      	lsrs	r4, r3
 800044c:	2300      	movs	r3, #0
 800044e:	e9c6 4300 	strd	r4, r3, [r6]
 8000452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000456:	428b      	cmp	r3, r1
 8000458:	d908      	bls.n	800046c <__udivmoddi4+0xbc>
 800045a:	2e00      	cmp	r6, #0
 800045c:	f000 80ed 	beq.w	800063a <__udivmoddi4+0x28a>
 8000460:	2100      	movs	r1, #0
 8000462:	e9c6 0500 	strd	r0, r5, [r6]
 8000466:	4608      	mov	r0, r1
 8000468:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800046c:	fab3 f183 	clz	r1, r3
 8000470:	2900      	cmp	r1, #0
 8000472:	d149      	bne.n	8000508 <__udivmoddi4+0x158>
 8000474:	42ab      	cmp	r3, r5
 8000476:	d302      	bcc.n	800047e <__udivmoddi4+0xce>
 8000478:	4282      	cmp	r2, r0
 800047a:	f200 80f8 	bhi.w	800066e <__udivmoddi4+0x2be>
 800047e:	1a84      	subs	r4, r0, r2
 8000480:	eb65 0203 	sbc.w	r2, r5, r3
 8000484:	2001      	movs	r0, #1
 8000486:	4617      	mov	r7, r2
 8000488:	2e00      	cmp	r6, #0
 800048a:	d0e2      	beq.n	8000452 <__udivmoddi4+0xa2>
 800048c:	e9c6 4700 	strd	r4, r7, [r6]
 8000490:	e7df      	b.n	8000452 <__udivmoddi4+0xa2>
 8000492:	b902      	cbnz	r2, 8000496 <__udivmoddi4+0xe6>
 8000494:	deff      	udf	#255	; 0xff
 8000496:	fab2 f382 	clz	r3, r2
 800049a:	2b00      	cmp	r3, #0
 800049c:	f040 8090 	bne.w	80005c0 <__udivmoddi4+0x210>
 80004a0:	1a8a      	subs	r2, r1, r2
 80004a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004a6:	fa1f fe8c 	uxth.w	lr, ip
 80004aa:	2101      	movs	r1, #1
 80004ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80004b0:	fb07 2015 	mls	r0, r7, r5, r2
 80004b4:	0c22      	lsrs	r2, r4, #16
 80004b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80004ba:	fb0e f005 	mul.w	r0, lr, r5
 80004be:	4290      	cmp	r0, r2
 80004c0:	d908      	bls.n	80004d4 <__udivmoddi4+0x124>
 80004c2:	eb1c 0202 	adds.w	r2, ip, r2
 80004c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80004ca:	d202      	bcs.n	80004d2 <__udivmoddi4+0x122>
 80004cc:	4290      	cmp	r0, r2
 80004ce:	f200 80cb 	bhi.w	8000668 <__udivmoddi4+0x2b8>
 80004d2:	4645      	mov	r5, r8
 80004d4:	1a12      	subs	r2, r2, r0
 80004d6:	b2a4      	uxth	r4, r4
 80004d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004dc:	fb07 2210 	mls	r2, r7, r0, r2
 80004e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004e4:	fb0e fe00 	mul.w	lr, lr, r0
 80004e8:	45a6      	cmp	lr, r4
 80004ea:	d908      	bls.n	80004fe <__udivmoddi4+0x14e>
 80004ec:	eb1c 0404 	adds.w	r4, ip, r4
 80004f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004f4:	d202      	bcs.n	80004fc <__udivmoddi4+0x14c>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f200 80bb 	bhi.w	8000672 <__udivmoddi4+0x2c2>
 80004fc:	4610      	mov	r0, r2
 80004fe:	eba4 040e 	sub.w	r4, r4, lr
 8000502:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000506:	e79f      	b.n	8000448 <__udivmoddi4+0x98>
 8000508:	f1c1 0720 	rsb	r7, r1, #32
 800050c:	408b      	lsls	r3, r1
 800050e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000512:	ea4c 0c03 	orr.w	ip, ip, r3
 8000516:	fa05 f401 	lsl.w	r4, r5, r1
 800051a:	fa20 f307 	lsr.w	r3, r0, r7
 800051e:	40fd      	lsrs	r5, r7
 8000520:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000524:	4323      	orrs	r3, r4
 8000526:	fbb5 f8f9 	udiv	r8, r5, r9
 800052a:	fa1f fe8c 	uxth.w	lr, ip
 800052e:	fb09 5518 	mls	r5, r9, r8, r5
 8000532:	0c1c      	lsrs	r4, r3, #16
 8000534:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000538:	fb08 f50e 	mul.w	r5, r8, lr
 800053c:	42a5      	cmp	r5, r4
 800053e:	fa02 f201 	lsl.w	r2, r2, r1
 8000542:	fa00 f001 	lsl.w	r0, r0, r1
 8000546:	d90b      	bls.n	8000560 <__udivmoddi4+0x1b0>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000550:	f080 8088 	bcs.w	8000664 <__udivmoddi4+0x2b4>
 8000554:	42a5      	cmp	r5, r4
 8000556:	f240 8085 	bls.w	8000664 <__udivmoddi4+0x2b4>
 800055a:	f1a8 0802 	sub.w	r8, r8, #2
 800055e:	4464      	add	r4, ip
 8000560:	1b64      	subs	r4, r4, r5
 8000562:	b29d      	uxth	r5, r3
 8000564:	fbb4 f3f9 	udiv	r3, r4, r9
 8000568:	fb09 4413 	mls	r4, r9, r3, r4
 800056c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000570:	fb03 fe0e 	mul.w	lr, r3, lr
 8000574:	45a6      	cmp	lr, r4
 8000576:	d908      	bls.n	800058a <__udivmoddi4+0x1da>
 8000578:	eb1c 0404 	adds.w	r4, ip, r4
 800057c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000580:	d26c      	bcs.n	800065c <__udivmoddi4+0x2ac>
 8000582:	45a6      	cmp	lr, r4
 8000584:	d96a      	bls.n	800065c <__udivmoddi4+0x2ac>
 8000586:	3b02      	subs	r3, #2
 8000588:	4464      	add	r4, ip
 800058a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800058e:	fba3 9502 	umull	r9, r5, r3, r2
 8000592:	eba4 040e 	sub.w	r4, r4, lr
 8000596:	42ac      	cmp	r4, r5
 8000598:	46c8      	mov	r8, r9
 800059a:	46ae      	mov	lr, r5
 800059c:	d356      	bcc.n	800064c <__udivmoddi4+0x29c>
 800059e:	d053      	beq.n	8000648 <__udivmoddi4+0x298>
 80005a0:	b156      	cbz	r6, 80005b8 <__udivmoddi4+0x208>
 80005a2:	ebb0 0208 	subs.w	r2, r0, r8
 80005a6:	eb64 040e 	sbc.w	r4, r4, lr
 80005aa:	fa04 f707 	lsl.w	r7, r4, r7
 80005ae:	40ca      	lsrs	r2, r1
 80005b0:	40cc      	lsrs	r4, r1
 80005b2:	4317      	orrs	r7, r2
 80005b4:	e9c6 7400 	strd	r7, r4, [r6]
 80005b8:	4618      	mov	r0, r3
 80005ba:	2100      	movs	r1, #0
 80005bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80005c0:	f1c3 0120 	rsb	r1, r3, #32
 80005c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80005c8:	fa20 f201 	lsr.w	r2, r0, r1
 80005cc:	fa25 f101 	lsr.w	r1, r5, r1
 80005d0:	409d      	lsls	r5, r3
 80005d2:	432a      	orrs	r2, r5
 80005d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005d8:	fa1f fe8c 	uxth.w	lr, ip
 80005dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80005e0:	fb07 1510 	mls	r5, r7, r0, r1
 80005e4:	0c11      	lsrs	r1, r2, #16
 80005e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ea:	fb00 f50e 	mul.w	r5, r0, lr
 80005ee:	428d      	cmp	r5, r1
 80005f0:	fa04 f403 	lsl.w	r4, r4, r3
 80005f4:	d908      	bls.n	8000608 <__udivmoddi4+0x258>
 80005f6:	eb1c 0101 	adds.w	r1, ip, r1
 80005fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80005fe:	d22f      	bcs.n	8000660 <__udivmoddi4+0x2b0>
 8000600:	428d      	cmp	r5, r1
 8000602:	d92d      	bls.n	8000660 <__udivmoddi4+0x2b0>
 8000604:	3802      	subs	r0, #2
 8000606:	4461      	add	r1, ip
 8000608:	1b49      	subs	r1, r1, r5
 800060a:	b292      	uxth	r2, r2
 800060c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000610:	fb07 1115 	mls	r1, r7, r5, r1
 8000614:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000618:	fb05 f10e 	mul.w	r1, r5, lr
 800061c:	4291      	cmp	r1, r2
 800061e:	d908      	bls.n	8000632 <__udivmoddi4+0x282>
 8000620:	eb1c 0202 	adds.w	r2, ip, r2
 8000624:	f105 38ff 	add.w	r8, r5, #4294967295
 8000628:	d216      	bcs.n	8000658 <__udivmoddi4+0x2a8>
 800062a:	4291      	cmp	r1, r2
 800062c:	d914      	bls.n	8000658 <__udivmoddi4+0x2a8>
 800062e:	3d02      	subs	r5, #2
 8000630:	4462      	add	r2, ip
 8000632:	1a52      	subs	r2, r2, r1
 8000634:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000638:	e738      	b.n	80004ac <__udivmoddi4+0xfc>
 800063a:	4631      	mov	r1, r6
 800063c:	4630      	mov	r0, r6
 800063e:	e708      	b.n	8000452 <__udivmoddi4+0xa2>
 8000640:	4639      	mov	r1, r7
 8000642:	e6e6      	b.n	8000412 <__udivmoddi4+0x62>
 8000644:	4610      	mov	r0, r2
 8000646:	e6fb      	b.n	8000440 <__udivmoddi4+0x90>
 8000648:	4548      	cmp	r0, r9
 800064a:	d2a9      	bcs.n	80005a0 <__udivmoddi4+0x1f0>
 800064c:	ebb9 0802 	subs.w	r8, r9, r2
 8000650:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000654:	3b01      	subs	r3, #1
 8000656:	e7a3      	b.n	80005a0 <__udivmoddi4+0x1f0>
 8000658:	4645      	mov	r5, r8
 800065a:	e7ea      	b.n	8000632 <__udivmoddi4+0x282>
 800065c:	462b      	mov	r3, r5
 800065e:	e794      	b.n	800058a <__udivmoddi4+0x1da>
 8000660:	4640      	mov	r0, r8
 8000662:	e7d1      	b.n	8000608 <__udivmoddi4+0x258>
 8000664:	46d0      	mov	r8, sl
 8000666:	e77b      	b.n	8000560 <__udivmoddi4+0x1b0>
 8000668:	3d02      	subs	r5, #2
 800066a:	4462      	add	r2, ip
 800066c:	e732      	b.n	80004d4 <__udivmoddi4+0x124>
 800066e:	4608      	mov	r0, r1
 8000670:	e70a      	b.n	8000488 <__udivmoddi4+0xd8>
 8000672:	4464      	add	r4, ip
 8000674:	3802      	subs	r0, #2
 8000676:	e742      	b.n	80004fe <__udivmoddi4+0x14e>

08000678 <__aeabi_idiv0>:
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop

0800067c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800067c:	b580      	push	{r7, lr}
 800067e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000680:	f001 f986 	bl	8001990 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000684:	f000 f822 	bl	80006cc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000688:	f000 fade 	bl	8000c48 <MX_GPIO_Init>
  MX_TIM3_Init();
 800068c:	f000 f9a2 	bl	80009d4 <MX_TIM3_Init>
  MX_USART1_UART_Init();
 8000690:	f000 f9ee 	bl	8000a70 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000694:	f000 fa3a 	bl	8000b0c <MX_USART2_UART_Init>
  MX_FMC_Init();
 8000698:	f000 fa84 	bl	8000ba4 <MX_FMC_Init>
  MX_LTDC_Init();
 800069c:	f000 f8ec 	bl	8000878 <MX_LTDC_Init>
  MX_DMA2D_Init();
 80006a0:	f000 f8b0 	bl	8000804 <MX_DMA2D_Init>
  MX_QUADSPI_Init();
 80006a4:	f000 f96a 	bl	800097c <MX_QUADSPI_Init>
  MX_CRC_Init();
 80006a8:	f000 f88a 	bl	80007c0 <MX_CRC_Init>
  MX_TouchGFX_Init();
 80006ac:	f009 ffc2 	bl	800a634 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  log_com_uart_init();
 80006b0:	f00f fc62 	bl	800ff78 <log_com_uart_init>
  user_delay_init(400);
 80006b4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80006b8:	f00f fbb4 	bl	800fe24 <user_delay_init>
//    printf("STM32H743 SDRAM Test \r\n");

    SDRAM_Init();
 80006bc:	f00f f866 	bl	800f78c <SDRAM_Init>
//        printf("SDRAM Test success\r\n");
//    } else {
//        printf("SDRAM Test fail\r\n");
//    }

    W25QXX_Init();
 80006c0:	f00e ffec 	bl	800f69c <W25QXX_Init>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80006c4:	f009 ffbe 	bl	800a644 <MX_TouchGFX_Process>
 80006c8:	e7fc      	b.n	80006c4 <main+0x48>
	...

080006cc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006cc:	b580      	push	{r7, lr}
 80006ce:	b09c      	sub	sp, #112	; 0x70
 80006d0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80006d6:	224c      	movs	r2, #76	; 0x4c
 80006d8:	2100      	movs	r1, #0
 80006da:	4618      	mov	r0, r3
 80006dc:	f023 fbf0 	bl	8023ec0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006e0:	1d3b      	adds	r3, r7, #4
 80006e2:	2220      	movs	r2, #32
 80006e4:	2100      	movs	r1, #0
 80006e6:	4618      	mov	r0, r3
 80006e8:	f023 fbea 	bl	8023ec0 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80006ec:	2002      	movs	r0, #2
 80006ee:	f003 f90b 	bl	8003908 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80006f2:	2300      	movs	r3, #0
 80006f4:	603b      	str	r3, [r7, #0]
 80006f6:	4b30      	ldr	r3, [pc, #192]	; (80007b8 <SystemClock_Config+0xec>)
 80006f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80006fa:	4a2f      	ldr	r2, [pc, #188]	; (80007b8 <SystemClock_Config+0xec>)
 80006fc:	f023 0301 	bic.w	r3, r3, #1
 8000700:	62d3      	str	r3, [r2, #44]	; 0x2c
 8000702:	4b2d      	ldr	r3, [pc, #180]	; (80007b8 <SystemClock_Config+0xec>)
 8000704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000706:	f003 0301 	and.w	r3, r3, #1
 800070a:	603b      	str	r3, [r7, #0]
 800070c:	4b2b      	ldr	r3, [pc, #172]	; (80007bc <SystemClock_Config+0xf0>)
 800070e:	699b      	ldr	r3, [r3, #24]
 8000710:	4a2a      	ldr	r2, [pc, #168]	; (80007bc <SystemClock_Config+0xf0>)
 8000712:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000716:	6193      	str	r3, [r2, #24]
 8000718:	4b28      	ldr	r3, [pc, #160]	; (80007bc <SystemClock_Config+0xf0>)
 800071a:	699b      	ldr	r3, [r3, #24]
 800071c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000720:	603b      	str	r3, [r7, #0]
 8000722:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000724:	bf00      	nop
 8000726:	4b25      	ldr	r3, [pc, #148]	; (80007bc <SystemClock_Config+0xf0>)
 8000728:	699b      	ldr	r3, [r3, #24]
 800072a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800072e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000732:	d1f8      	bne.n	8000726 <SystemClock_Config+0x5a>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000734:	2301      	movs	r3, #1
 8000736:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000738:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800073c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800073e:	2302      	movs	r3, #2
 8000740:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000742:	2302      	movs	r3, #2
 8000744:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 2;
 8000746:	2302      	movs	r3, #2
 8000748:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 64;
 800074a:	2340      	movs	r3, #64	; 0x40
 800074c:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 800074e:	2302      	movs	r3, #2
 8000750:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000752:	2302      	movs	r3, #2
 8000754:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000756:	2302      	movs	r3, #2
 8000758:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 800075a:	230c      	movs	r3, #12
 800075c:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800075e:	2300      	movs	r3, #0
 8000760:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000762:	2300      	movs	r3, #0
 8000764:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000766:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800076a:	4618      	mov	r0, r3
 800076c:	f003 fcd2 	bl	8004114 <HAL_RCC_OscConfig>
 8000770:	4603      	mov	r3, r0
 8000772:	2b00      	cmp	r3, #0
 8000774:	d001      	beq.n	800077a <SystemClock_Config+0xae>
  {
    Error_Handler();
 8000776:	f000 fb83 	bl	8000e80 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800077a:	233f      	movs	r3, #63	; 0x3f
 800077c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800077e:	2303      	movs	r3, #3
 8000780:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000782:	2300      	movs	r3, #0
 8000784:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000786:	2308      	movs	r3, #8
 8000788:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 800078a:	2340      	movs	r3, #64	; 0x40
 800078c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800078e:	2340      	movs	r3, #64	; 0x40
 8000790:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000792:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000796:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000798:	2340      	movs	r3, #64	; 0x40
 800079a:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800079c:	1d3b      	adds	r3, r7, #4
 800079e:	2102      	movs	r1, #2
 80007a0:	4618      	mov	r0, r3
 80007a2:	f004 f911 	bl	80049c8 <HAL_RCC_ClockConfig>
 80007a6:	4603      	mov	r3, r0
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	d001      	beq.n	80007b0 <SystemClock_Config+0xe4>
  {
    Error_Handler();
 80007ac:	f000 fb68 	bl	8000e80 <Error_Handler>
  }
}
 80007b0:	bf00      	nop
 80007b2:	3770      	adds	r7, #112	; 0x70
 80007b4:	46bd      	mov	sp, r7
 80007b6:	bd80      	pop	{r7, pc}
 80007b8:	58000400 	.word	0x58000400
 80007bc:	58024800 	.word	0x58024800

080007c0 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80007c4:	4b0d      	ldr	r3, [pc, #52]	; (80007fc <MX_CRC_Init+0x3c>)
 80007c6:	4a0e      	ldr	r2, [pc, #56]	; (8000800 <MX_CRC_Init+0x40>)
 80007c8:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80007ca:	4b0c      	ldr	r3, [pc, #48]	; (80007fc <MX_CRC_Init+0x3c>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80007d0:	4b0a      	ldr	r3, [pc, #40]	; (80007fc <MX_CRC_Init+0x3c>)
 80007d2:	2200      	movs	r2, #0
 80007d4:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80007d6:	4b09      	ldr	r3, [pc, #36]	; (80007fc <MX_CRC_Init+0x3c>)
 80007d8:	2200      	movs	r2, #0
 80007da:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80007dc:	4b07      	ldr	r3, [pc, #28]	; (80007fc <MX_CRC_Init+0x3c>)
 80007de:	2200      	movs	r2, #0
 80007e0:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80007e2:	4b06      	ldr	r3, [pc, #24]	; (80007fc <MX_CRC_Init+0x3c>)
 80007e4:	2201      	movs	r2, #1
 80007e6:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80007e8:	4804      	ldr	r0, [pc, #16]	; (80007fc <MX_CRC_Init+0x3c>)
 80007ea:	f001 fa9b 	bl	8001d24 <HAL_CRC_Init>
 80007ee:	4603      	mov	r3, r0
 80007f0:	2b00      	cmp	r3, #0
 80007f2:	d001      	beq.n	80007f8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80007f4:	f000 fb44 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80007f8:	bf00      	nop
 80007fa:	bd80      	pop	{r7, pc}
 80007fc:	24000114 	.word	0x24000114
 8000800:	58024c00 	.word	0x58024c00

08000804 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 8000804:	b580      	push	{r7, lr}
 8000806:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8000808:	4b19      	ldr	r3, [pc, #100]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800080a:	4a1a      	ldr	r2, [pc, #104]	; (8000874 <MX_DMA2D_Init+0x70>)
 800080c:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 800080e:	4b18      	ldr	r3, [pc, #96]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000810:	2200      	movs	r2, #0
 8000812:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8000814:	4b16      	ldr	r3, [pc, #88]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000816:	2202      	movs	r2, #2
 8000818:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800081a:	4b15      	ldr	r3, [pc, #84]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800081c:	2200      	movs	r2, #0
 800081e:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000820:	4b13      	ldr	r3, [pc, #76]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000822:	2200      	movs	r2, #0
 8000824:	645a      	str	r2, [r3, #68]	; 0x44
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8000826:	4b12      	ldr	r3, [pc, #72]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000828:	2202      	movs	r2, #2
 800082a:	649a      	str	r2, [r3, #72]	; 0x48
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800082c:	4b10      	ldr	r3, [pc, #64]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800082e:	2200      	movs	r2, #0
 8000830:	64da      	str	r2, [r3, #76]	; 0x4c
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000832:	4b0f      	ldr	r3, [pc, #60]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000834:	2200      	movs	r2, #0
 8000836:	651a      	str	r2, [r3, #80]	; 0x50
  hdma2d.LayerCfg[1].AlphaInverted = DMA2D_REGULAR_ALPHA;
 8000838:	4b0d      	ldr	r3, [pc, #52]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800083a:	2200      	movs	r2, #0
 800083c:	655a      	str	r2, [r3, #84]	; 0x54
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
 800083e:	4b0c      	ldr	r3, [pc, #48]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000840:	2200      	movs	r2, #0
 8000842:	659a      	str	r2, [r3, #88]	; 0x58
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
 8000844:	4b0a      	ldr	r3, [pc, #40]	; (8000870 <MX_DMA2D_Init+0x6c>)
 8000846:	2200      	movs	r2, #0
 8000848:	65da      	str	r2, [r3, #92]	; 0x5c
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800084a:	4809      	ldr	r0, [pc, #36]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800084c:	f002 f8c0 	bl	80029d0 <HAL_DMA2D_Init>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d001      	beq.n	800085a <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8000856:	f000 fb13 	bl	8000e80 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800085a:	2101      	movs	r1, #1
 800085c:	4804      	ldr	r0, [pc, #16]	; (8000870 <MX_DMA2D_Init+0x6c>)
 800085e:	f002 fa2b 	bl	8002cb8 <HAL_DMA2D_ConfigLayer>
 8000862:	4603      	mov	r3, r0
 8000864:	2b00      	cmp	r3, #0
 8000866:	d001      	beq.n	800086c <MX_DMA2D_Init+0x68>
  {
    Error_Handler();
 8000868:	f000 fb0a 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 800086c:	bf00      	nop
 800086e:	bd80      	pop	{r7, pc}
 8000870:	24000138 	.word	0x24000138
 8000874:	52001000 	.word	0x52001000

08000878 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000878:	b580      	push	{r7, lr}
 800087a:	b08e      	sub	sp, #56	; 0x38
 800087c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800087e:	1d3b      	adds	r3, r7, #4
 8000880:	2234      	movs	r2, #52	; 0x34
 8000882:	2100      	movs	r1, #0
 8000884:	4618      	mov	r0, r3
 8000886:	f023 fb1b 	bl	8023ec0 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 800088a:	4b3a      	ldr	r3, [pc, #232]	; (8000974 <MX_LTDC_Init+0xfc>)
 800088c:	4a3a      	ldr	r2, [pc, #232]	; (8000978 <MX_LTDC_Init+0x100>)
 800088e:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000890:	4b38      	ldr	r3, [pc, #224]	; (8000974 <MX_LTDC_Init+0xfc>)
 8000892:	2200      	movs	r2, #0
 8000894:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000896:	4b37      	ldr	r3, [pc, #220]	; (8000974 <MX_LTDC_Init+0xfc>)
 8000898:	2200      	movs	r2, #0
 800089a:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800089c:	4b35      	ldr	r3, [pc, #212]	; (8000974 <MX_LTDC_Init+0xfc>)
 800089e:	2200      	movs	r2, #0
 80008a0:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80008a2:	4b34      	ldr	r3, [pc, #208]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008a4:	2200      	movs	r2, #0
 80008a6:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 19;
 80008a8:	4b32      	ldr	r3, [pc, #200]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008aa:	2213      	movs	r2, #19
 80008ac:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 2;
 80008ae:	4b31      	ldr	r3, [pc, #196]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008b0:	2202      	movs	r2, #2
 80008b2:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 159;
 80008b4:	4b2f      	ldr	r3, [pc, #188]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008b6:	229f      	movs	r2, #159	; 0x9f
 80008b8:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 22;
 80008ba:	4b2e      	ldr	r3, [pc, #184]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008bc:	2216      	movs	r2, #22
 80008be:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 1183;
 80008c0:	4b2c      	ldr	r3, [pc, #176]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008c2:	f240 429f 	movw	r2, #1183	; 0x49f
 80008c6:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 622;
 80008c8:	4b2a      	ldr	r3, [pc, #168]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008ca:	f240 226e 	movw	r2, #622	; 0x26e
 80008ce:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 1343;
 80008d0:	4b28      	ldr	r3, [pc, #160]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008d2:	f240 523f 	movw	r2, #1343	; 0x53f
 80008d6:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 634;
 80008d8:	4b26      	ldr	r3, [pc, #152]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008da:	f240 227a 	movw	r2, #634	; 0x27a
 80008de:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 80008e0:	4b24      	ldr	r3, [pc, #144]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008e2:	2200      	movs	r2, #0
 80008e4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80008e8:	4b22      	ldr	r3, [pc, #136]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008ea:	2200      	movs	r2, #0
 80008ec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80008f0:	4b20      	ldr	r3, [pc, #128]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008f2:	2200      	movs	r2, #0
 80008f4:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80008f8:	481e      	ldr	r0, [pc, #120]	; (8000974 <MX_LTDC_Init+0xfc>)
 80008fa:	f002 fc6d 	bl	80031d8 <HAL_LTDC_Init>
 80008fe:	4603      	mov	r3, r0
 8000900:	2b00      	cmp	r3, #0
 8000902:	d001      	beq.n	8000908 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000904:	f000 fabc 	bl	8000e80 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000908:	2300      	movs	r3, #0
 800090a:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 1024;
 800090c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000910:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000912:	2300      	movs	r3, #0
 8000914:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 600;
 8000916:	f44f 7316 	mov.w	r3, #600	; 0x258
 800091a:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800091c:	2302      	movs	r3, #2
 800091e:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000920:	23ff      	movs	r3, #255	; 0xff
 8000922:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000924:	2300      	movs	r3, #0
 8000926:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000928:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800092c:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800092e:	2305      	movs	r3, #5
 8000930:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000932:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 8000936:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 1024;
 8000938:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800093c:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 600;
 800093e:	f44f 7316 	mov.w	r3, #600	; 0x258
 8000942:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000944:	2300      	movs	r3, #0
 8000946:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 800094a:	2300      	movs	r3, #0
 800094c:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000950:	2300      	movs	r3, #0
 8000952:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000956:	1d3b      	adds	r3, r7, #4
 8000958:	2200      	movs	r2, #0
 800095a:	4619      	mov	r1, r3
 800095c:	4805      	ldr	r0, [pc, #20]	; (8000974 <MX_LTDC_Init+0xfc>)
 800095e:	f002 fdc3 	bl	80034e8 <HAL_LTDC_ConfigLayer>
 8000962:	4603      	mov	r3, r0
 8000964:	2b00      	cmp	r3, #0
 8000966:	d001      	beq.n	800096c <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8000968:	f000 fa8a 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 800096c:	bf00      	nop
 800096e:	3738      	adds	r7, #56	; 0x38
 8000970:	46bd      	mov	sp, r7
 8000972:	bd80      	pop	{r7, pc}
 8000974:	240001a0 	.word	0x240001a0
 8000978:	50001000 	.word	0x50001000

0800097c <MX_QUADSPI_Init>:
  * @brief QUADSPI Initialization Function
  * @param None
  * @retval None
  */
static void MX_QUADSPI_Init(void)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  /* QUADSPI parameter configuration*/
  hqspi.Instance = QUADSPI;
 8000980:	4b12      	ldr	r3, [pc, #72]	; (80009cc <MX_QUADSPI_Init+0x50>)
 8000982:	4a13      	ldr	r2, [pc, #76]	; (80009d0 <MX_QUADSPI_Init+0x54>)
 8000984:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 1;
 8000986:	4b11      	ldr	r3, [pc, #68]	; (80009cc <MX_QUADSPI_Init+0x50>)
 8000988:	2201      	movs	r2, #1
 800098a:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 4;
 800098c:	4b0f      	ldr	r3, [pc, #60]	; (80009cc <MX_QUADSPI_Init+0x50>)
 800098e:	2204      	movs	r2, #4
 8000990:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000992:	4b0e      	ldr	r3, [pc, #56]	; (80009cc <MX_QUADSPI_Init+0x50>)
 8000994:	2210      	movs	r2, #16
 8000996:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 24;
 8000998:	4b0c      	ldr	r3, [pc, #48]	; (80009cc <MX_QUADSPI_Init+0x50>)
 800099a:	2218      	movs	r2, #24
 800099c:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800099e:	4b0b      	ldr	r3, [pc, #44]	; (80009cc <MX_QUADSPI_Init+0x50>)
 80009a0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80009a4:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80009a6:	4b09      	ldr	r3, [pc, #36]	; (80009cc <MX_QUADSPI_Init+0x50>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	619a      	str	r2, [r3, #24]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80009ac:	4b07      	ldr	r3, [pc, #28]	; (80009cc <MX_QUADSPI_Init+0x50>)
 80009ae:	2200      	movs	r2, #0
 80009b0:	61da      	str	r2, [r3, #28]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80009b2:	4b06      	ldr	r3, [pc, #24]	; (80009cc <MX_QUADSPI_Init+0x50>)
 80009b4:	2200      	movs	r2, #0
 80009b6:	621a      	str	r2, [r3, #32]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80009b8:	4804      	ldr	r0, [pc, #16]	; (80009cc <MX_QUADSPI_Init+0x50>)
 80009ba:	f002 ffdf 	bl	800397c <HAL_QSPI_Init>
 80009be:	4603      	mov	r3, r0
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d001      	beq.n	80009c8 <MX_QUADSPI_Init+0x4c>
  {
    Error_Handler();
 80009c4:	f000 fa5c 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 80009c8:	bf00      	nop
 80009ca:	bd80      	pop	{r7, pc}
 80009cc:	24000248 	.word	0x24000248
 80009d0:	52005000 	.word	0x52005000

080009d4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80009d4:	b580      	push	{r7, lr}
 80009d6:	b088      	sub	sp, #32
 80009d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80009da:	f107 0310 	add.w	r3, r7, #16
 80009de:	2200      	movs	r2, #0
 80009e0:	601a      	str	r2, [r3, #0]
 80009e2:	605a      	str	r2, [r3, #4]
 80009e4:	609a      	str	r2, [r3, #8]
 80009e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80009e8:	1d3b      	adds	r3, r7, #4
 80009ea:	2200      	movs	r2, #0
 80009ec:	601a      	str	r2, [r3, #0]
 80009ee:	605a      	str	r2, [r3, #4]
 80009f0:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80009f2:	4b1d      	ldr	r3, [pc, #116]	; (8000a68 <MX_TIM3_Init+0x94>)
 80009f4:	4a1d      	ldr	r2, [pc, #116]	; (8000a6c <MX_TIM3_Init+0x98>)
 80009f6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 80009f8:	4b1b      	ldr	r3, [pc, #108]	; (8000a68 <MX_TIM3_Init+0x94>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80009fe:	4b1a      	ldr	r3, [pc, #104]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a00:	2200      	movs	r2, #0
 8000a02:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8000a04:	4b18      	ldr	r3, [pc, #96]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a06:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000a0a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a0c:	4b16      	ldr	r3, [pc, #88]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a0e:	2200      	movs	r2, #0
 8000a10:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a12:	4b15      	ldr	r3, [pc, #84]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a14:	2200      	movs	r2, #0
 8000a16:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000a18:	4813      	ldr	r0, [pc, #76]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a1a:	f006 fa26 	bl	8006e6a <HAL_TIM_Base_Init>
 8000a1e:	4603      	mov	r3, r0
 8000a20:	2b00      	cmp	r3, #0
 8000a22:	d001      	beq.n	8000a28 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 8000a24:	f000 fa2c 	bl	8000e80 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000a28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000a2c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000a2e:	f107 0310 	add.w	r3, r7, #16
 8000a32:	4619      	mov	r1, r3
 8000a34:	480c      	ldr	r0, [pc, #48]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a36:	f006 fb8f 	bl	8007158 <HAL_TIM_ConfigClockSource>
 8000a3a:	4603      	mov	r3, r0
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	d001      	beq.n	8000a44 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 8000a40:	f000 fa1e 	bl	8000e80 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a44:	2300      	movs	r3, #0
 8000a46:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a48:	2300      	movs	r3, #0
 8000a4a:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000a4c:	1d3b      	adds	r3, r7, #4
 8000a4e:	4619      	mov	r1, r3
 8000a50:	4805      	ldr	r0, [pc, #20]	; (8000a68 <MX_TIM3_Init+0x94>)
 8000a52:	f006 fde3 	bl	800761c <HAL_TIMEx_MasterConfigSynchronization>
 8000a56:	4603      	mov	r3, r0
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	d001      	beq.n	8000a60 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 8000a5c:	f000 fa10 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000a60:	bf00      	nop
 8000a62:	3720      	adds	r7, #32
 8000a64:	46bd      	mov	sp, r7
 8000a66:	bd80      	pop	{r7, pc}
 8000a68:	24000294 	.word	0x24000294
 8000a6c:	40000400 	.word	0x40000400

08000a70 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000a70:	b580      	push	{r7, lr}
 8000a72:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000a74:	4b22      	ldr	r3, [pc, #136]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a76:	4a23      	ldr	r2, [pc, #140]	; (8000b04 <MX_USART1_UART_Init+0x94>)
 8000a78:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 2000000;
 8000a7a:	4b21      	ldr	r3, [pc, #132]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a7c:	4a22      	ldr	r2, [pc, #136]	; (8000b08 <MX_USART1_UART_Init+0x98>)
 8000a7e:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000a80:	4b1f      	ldr	r3, [pc, #124]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a82:	2200      	movs	r2, #0
 8000a84:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000a86:	4b1e      	ldr	r3, [pc, #120]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000a8c:	4b1c      	ldr	r3, [pc, #112]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000a92:	4b1b      	ldr	r3, [pc, #108]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a94:	220c      	movs	r2, #12
 8000a96:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a98:	4b19      	ldr	r3, [pc, #100]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000a9e:	4b18      	ldr	r3, [pc, #96]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000aa4:	4b16      	ldr	r3, [pc, #88]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8000aaa:	4b15      	ldr	r3, [pc, #84]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000aac:	2200      	movs	r2, #0
 8000aae:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000ab0:	4b13      	ldr	r3, [pc, #76]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000ab6:	4812      	ldr	r0, [pc, #72]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000ab8:	f006 fe5c 	bl	8007774 <HAL_UART_Init>
 8000abc:	4603      	mov	r3, r0
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d001      	beq.n	8000ac6 <MX_USART1_UART_Init+0x56>
  {
    Error_Handler();
 8000ac2:	f000 f9dd 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000ac6:	2100      	movs	r1, #0
 8000ac8:	480d      	ldr	r0, [pc, #52]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000aca:	f009 fbe6 	bl	800a29a <HAL_UARTEx_SetTxFifoThreshold>
 8000ace:	4603      	mov	r3, r0
 8000ad0:	2b00      	cmp	r3, #0
 8000ad2:	d001      	beq.n	8000ad8 <MX_USART1_UART_Init+0x68>
  {
    Error_Handler();
 8000ad4:	f000 f9d4 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000ad8:	2100      	movs	r1, #0
 8000ada:	4809      	ldr	r0, [pc, #36]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000adc:	f009 fc1b 	bl	800a316 <HAL_UARTEx_SetRxFifoThreshold>
 8000ae0:	4603      	mov	r3, r0
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d001      	beq.n	8000aea <MX_USART1_UART_Init+0x7a>
  {
    Error_Handler();
 8000ae6:	f000 f9cb 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8000aea:	4805      	ldr	r0, [pc, #20]	; (8000b00 <MX_USART1_UART_Init+0x90>)
 8000aec:	f009 fb9c 	bl	800a228 <HAL_UARTEx_DisableFifoMode>
 8000af0:	4603      	mov	r3, r0
 8000af2:	2b00      	cmp	r3, #0
 8000af4:	d001      	beq.n	8000afa <MX_USART1_UART_Init+0x8a>
  {
    Error_Handler();
 8000af6:	f000 f9c3 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000afa:	bf00      	nop
 8000afc:	bd80      	pop	{r7, pc}
 8000afe:	bf00      	nop
 8000b00:	240002e0 	.word	0x240002e0
 8000b04:	40011000 	.word	0x40011000
 8000b08:	001e8480 	.word	0x001e8480

08000b0c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000b10:	4b22      	ldr	r3, [pc, #136]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b12:	4a23      	ldr	r2, [pc, #140]	; (8000ba0 <MX_USART2_UART_Init+0x94>)
 8000b14:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000b16:	4b21      	ldr	r3, [pc, #132]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b18:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000b1c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000b1e:	4b1f      	ldr	r3, [pc, #124]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b20:	2200      	movs	r2, #0
 8000b22:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000b24:	4b1d      	ldr	r3, [pc, #116]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b26:	2200      	movs	r2, #0
 8000b28:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000b2a:	4b1c      	ldr	r3, [pc, #112]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b2c:	2200      	movs	r2, #0
 8000b2e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000b30:	4b1a      	ldr	r3, [pc, #104]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b32:	220c      	movs	r2, #12
 8000b34:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000b36:	4b19      	ldr	r3, [pc, #100]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b38:	2200      	movs	r2, #0
 8000b3a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000b3c:	4b17      	ldr	r3, [pc, #92]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000b42:	4b16      	ldr	r3, [pc, #88]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8000b48:	4b14      	ldr	r3, [pc, #80]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000b4e:	4b13      	ldr	r3, [pc, #76]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b50:	2200      	movs	r2, #0
 8000b52:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000b54:	4811      	ldr	r0, [pc, #68]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b56:	f006 fe0d 	bl	8007774 <HAL_UART_Init>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d001      	beq.n	8000b64 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8000b60:	f000 f98e 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000b64:	2100      	movs	r1, #0
 8000b66:	480d      	ldr	r0, [pc, #52]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b68:	f009 fb97 	bl	800a29a <HAL_UARTEx_SetTxFifoThreshold>
 8000b6c:	4603      	mov	r3, r0
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d001      	beq.n	8000b76 <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 8000b72:	f000 f985 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000b76:	2100      	movs	r1, #0
 8000b78:	4808      	ldr	r0, [pc, #32]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b7a:	f009 fbcc 	bl	800a316 <HAL_UARTEx_SetRxFifoThreshold>
 8000b7e:	4603      	mov	r3, r0
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d001      	beq.n	8000b88 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8000b84:	f000 f97c 	bl	8000e80 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8000b88:	4804      	ldr	r0, [pc, #16]	; (8000b9c <MX_USART2_UART_Init+0x90>)
 8000b8a:	f009 fb4d 	bl	800a228 <HAL_UARTEx_DisableFifoMode>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d001      	beq.n	8000b98 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8000b94:	f000 f974 	bl	8000e80 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000b98:	bf00      	nop
 8000b9a:	bd80      	pop	{r7, pc}
 8000b9c:	24000374 	.word	0x24000374
 8000ba0:	40004400 	.word	0x40004400

08000ba4 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b088      	sub	sp, #32
 8000ba8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8000baa:	1d3b      	adds	r3, r7, #4
 8000bac:	2200      	movs	r2, #0
 8000bae:	601a      	str	r2, [r3, #0]
 8000bb0:	605a      	str	r2, [r3, #4]
 8000bb2:	609a      	str	r2, [r3, #8]
 8000bb4:	60da      	str	r2, [r3, #12]
 8000bb6:	611a      	str	r2, [r3, #16]
 8000bb8:	615a      	str	r2, [r3, #20]
 8000bba:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000bbc:	4b20      	ldr	r3, [pc, #128]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bbe:	4a21      	ldr	r2, [pc, #132]	; (8000c44 <MX_FMC_Init+0xa0>)
 8000bc0:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000bc2:	4b1f      	ldr	r3, [pc, #124]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8000bc8:	4b1d      	ldr	r3, [pc, #116]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bca:	2201      	movs	r2, #1
 8000bcc:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_13;
 8000bce:	4b1c      	ldr	r3, [pc, #112]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bd0:	2208      	movs	r2, #8
 8000bd2:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000bd4:	4b1a      	ldr	r3, [pc, #104]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bd6:	2210      	movs	r2, #16
 8000bd8:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000bda:	4b19      	ldr	r3, [pc, #100]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bdc:	2240      	movs	r2, #64	; 0x40
 8000bde:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000be0:	4b17      	ldr	r3, [pc, #92]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000be2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000be6:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000be8:	4b15      	ldr	r3, [pc, #84]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000bee:	4b14      	ldr	r3, [pc, #80]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bf0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000bf4:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000bf6:	4b12      	ldr	r3, [pc, #72]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000bf8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000bfc:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000bfe:	4b10      	ldr	r3, [pc, #64]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000c00:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000c04:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000c06:	2302      	movs	r3, #2
 8000c08:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 8;
 8000c0a:	2308      	movs	r3, #8
 8000c0c:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 6;
 8000c0e:	2306      	movs	r3, #6
 8000c10:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 6;
 8000c12:	2306      	movs	r3, #6
 8000c14:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 6;
 8000c16:	2306      	movs	r3, #6
 8000c18:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000c1a:	2302      	movs	r3, #2
 8000c1c:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8000c1e:	2302      	movs	r3, #2
 8000c20:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000c22:	1d3b      	adds	r3, r7, #4
 8000c24:	4619      	mov	r1, r3
 8000c26:	4806      	ldr	r0, [pc, #24]	; (8000c40 <MX_FMC_Init+0x9c>)
 8000c28:	f006 f886 	bl	8006d38 <HAL_SDRAM_Init>
 8000c2c:	4603      	mov	r3, r0
 8000c2e:	2b00      	cmp	r3, #0
 8000c30:	d001      	beq.n	8000c36 <MX_FMC_Init+0x92>
  {
    Error_Handler( );
 8000c32:	f000 f925 	bl	8000e80 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8000c36:	bf00      	nop
 8000c38:	3720      	adds	r7, #32
 8000c3a:	46bd      	mov	sp, r7
 8000c3c:	bd80      	pop	{r7, pc}
 8000c3e:	bf00      	nop
 8000c40:	24000408 	.word	0x24000408
 8000c44:	52004140 	.word	0x52004140

08000c48 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c48:	b580      	push	{r7, lr}
 8000c4a:	b08e      	sub	sp, #56	; 0x38
 8000c4c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c4e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c52:	2200      	movs	r2, #0
 8000c54:	601a      	str	r2, [r3, #0]
 8000c56:	605a      	str	r2, [r3, #4]
 8000c58:	609a      	str	r2, [r3, #8]
 8000c5a:	60da      	str	r2, [r3, #12]
 8000c5c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000c5e:	4b83      	ldr	r3, [pc, #524]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c64:	4a81      	ldr	r2, [pc, #516]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c66:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000c6a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000c6e:	4b7f      	ldr	r3, [pc, #508]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c70:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000c78:	623b      	str	r3, [r7, #32]
 8000c7a:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c7c:	4b7b      	ldr	r3, [pc, #492]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c82:	4a7a      	ldr	r2, [pc, #488]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c84:	f043 0304 	orr.w	r3, r3, #4
 8000c88:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000c8c:	4b77      	ldr	r3, [pc, #476]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c92:	f003 0304 	and.w	r3, r3, #4
 8000c96:	61fb      	str	r3, [r7, #28]
 8000c98:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000c9a:	4b74      	ldr	r3, [pc, #464]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000c9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ca0:	4a72      	ldr	r2, [pc, #456]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000ca2:	f043 0320 	orr.w	r3, r3, #32
 8000ca6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000caa:	4b70      	ldr	r3, [pc, #448]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cb0:	f003 0320 	and.w	r3, r3, #32
 8000cb4:	61bb      	str	r3, [r7, #24]
 8000cb6:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000cb8:	4b6c      	ldr	r3, [pc, #432]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cbe:	4a6b      	ldr	r2, [pc, #428]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cc0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000cc4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000cc8:	4b68      	ldr	r3, [pc, #416]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000cd2:	617b      	str	r3, [r7, #20]
 8000cd4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cd6:	4b65      	ldr	r3, [pc, #404]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cd8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cdc:	4a63      	ldr	r2, [pc, #396]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cde:	f043 0301 	orr.w	r3, r3, #1
 8000ce2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000ce6:	4b61      	ldr	r3, [pc, #388]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000ce8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cec:	f003 0301 	and.w	r3, r3, #1
 8000cf0:	613b      	str	r3, [r7, #16]
 8000cf2:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cf4:	4b5d      	ldr	r3, [pc, #372]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cf6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cfa:	4a5c      	ldr	r2, [pc, #368]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000cfc:	f043 0302 	orr.w	r3, r3, #2
 8000d00:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d04:	4b59      	ldr	r3, [pc, #356]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d06:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d0a:	f003 0302 	and.w	r3, r3, #2
 8000d0e:	60fb      	str	r3, [r7, #12]
 8000d10:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000d12:	4b56      	ldr	r3, [pc, #344]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d14:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d18:	4a54      	ldr	r2, [pc, #336]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d1e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d22:	4b52      	ldr	r3, [pc, #328]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d24:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d28:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d2c:	60bb      	str	r3, [r7, #8]
 8000d2e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d30:	4b4e      	ldr	r3, [pc, #312]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d32:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d36:	4a4d      	ldr	r2, [pc, #308]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d38:	f043 0310 	orr.w	r3, r3, #16
 8000d3c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d40:	4b4a      	ldr	r3, [pc, #296]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d46:	f003 0310 	and.w	r3, r3, #16
 8000d4a:	607b      	str	r3, [r7, #4]
 8000d4c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d4e:	4b47      	ldr	r3, [pc, #284]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d50:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d54:	4a45      	ldr	r2, [pc, #276]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d56:	f043 0308 	orr.w	r3, r3, #8
 8000d5a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d5e:	4b43      	ldr	r3, [pc, #268]	; (8000e6c <MX_GPIO_Init+0x224>)
 8000d60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d64:	f003 0308 	and.w	r3, r3, #8
 8000d68:	603b      	str	r3, [r7, #0]
 8000d6a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOI, TP_CS_Pin|TP_SDA_Pin, GPIO_PIN_SET);
 8000d6c:	2201      	movs	r2, #1
 8000d6e:	f44f 7184 	mov.w	r1, #264	; 0x108
 8000d72:	483f      	ldr	r0, [pc, #252]	; (8000e70 <MX_GPIO_Init+0x228>)
 8000d74:	f002 fa16 	bl	80031a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|LED0_Pin|LCD_BL_Pin, GPIO_PIN_SET);
 8000d78:	2201      	movs	r2, #1
 8000d7a:	2123      	movs	r1, #35	; 0x23
 8000d7c:	483d      	ldr	r0, [pc, #244]	; (8000e74 <MX_GPIO_Init+0x22c>)
 8000d7e:	f002 fa11 	bl	80031a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TP_SCK_GPIO_Port, TP_SCK_Pin, GPIO_PIN_SET);
 8000d82:	2201      	movs	r2, #1
 8000d84:	2140      	movs	r1, #64	; 0x40
 8000d86:	483c      	ldr	r0, [pc, #240]	; (8000e78 <MX_GPIO_Init+0x230>)
 8000d88:	f002 fa0c 	bl	80031a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : TP_CS_Pin */
  GPIO_InitStruct.Pin = TP_CS_Pin;
 8000d8c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d90:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d92:	2301      	movs	r3, #1
 8000d94:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d96:	2301      	movs	r3, #1
 8000d98:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(TP_CS_GPIO_Port, &GPIO_InitStruct);
 8000d9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000da2:	4619      	mov	r1, r3
 8000da4:	4832      	ldr	r0, [pc, #200]	; (8000e70 <MX_GPIO_Init+0x228>)
 8000da6:	f002 f835 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : KEY2_Pin */
  GPIO_InitStruct.Pin = KEY2_Pin;
 8000daa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000dae:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000db0:	2300      	movs	r3, #0
 8000db2:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000db4:	2301      	movs	r3, #1
 8000db6:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(KEY2_GPIO_Port, &GPIO_InitStruct);
 8000db8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dbc:	4619      	mov	r1, r3
 8000dbe:	482f      	ldr	r0, [pc, #188]	; (8000e7c <MX_GPIO_Init+0x234>)
 8000dc0:	f002 f828 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pins : KEY1_Pin KEY0_Pin */
  GPIO_InitStruct.Pin = KEY1_Pin|KEY0_Pin;
 8000dc4:	230c      	movs	r3, #12
 8000dc6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000dc8:	2300      	movs	r3, #0
 8000dca:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000dcc:	2301      	movs	r3, #1
 8000dce:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000dd0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dd4:	4619      	mov	r1, r3
 8000dd6:	4828      	ldr	r0, [pc, #160]	; (8000e78 <MX_GPIO_Init+0x230>)
 8000dd8:	f002 f81c 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED1_Pin LED0_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|LED0_Pin;
 8000ddc:	2303      	movs	r3, #3
 8000dde:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000de0:	2301      	movs	r3, #1
 8000de2:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000de4:	2301      	movs	r3, #1
 8000de6:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000de8:	2302      	movs	r3, #2
 8000dea:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000dec:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000df0:	4619      	mov	r1, r3
 8000df2:	4820      	ldr	r0, [pc, #128]	; (8000e74 <MX_GPIO_Init+0x22c>)
 8000df4:	f002 f80e 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : TP_SCK_Pin */
  GPIO_InitStruct.Pin = TP_SCK_Pin;
 8000df8:	2340      	movs	r3, #64	; 0x40
 8000dfa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dfc:	2301      	movs	r3, #1
 8000dfe:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e00:	2301      	movs	r3, #1
 8000e02:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000e04:	2302      	movs	r3, #2
 8000e06:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(TP_SCK_GPIO_Port, &GPIO_InitStruct);
 8000e08:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e0c:	4619      	mov	r1, r3
 8000e0e:	481a      	ldr	r0, [pc, #104]	; (8000e78 <MX_GPIO_Init+0x230>)
 8000e10:	f002 f800 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : TP_PEN_Pin */
  GPIO_InitStruct.Pin = TP_PEN_Pin;
 8000e14:	2380      	movs	r3, #128	; 0x80
 8000e16:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e18:	2300      	movs	r3, #0
 8000e1a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(TP_PEN_GPIO_Port, &GPIO_InitStruct);
 8000e20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e24:	4619      	mov	r1, r3
 8000e26:	4814      	ldr	r0, [pc, #80]	; (8000e78 <MX_GPIO_Init+0x230>)
 8000e28:	f001 fff4 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : TP_SDA_Pin */
  GPIO_InitStruct.Pin = TP_SDA_Pin;
 8000e2c:	2308      	movs	r3, #8
 8000e2e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8000e30:	2311      	movs	r3, #17
 8000e32:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e34:	2301      	movs	r3, #1
 8000e36:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e38:	2300      	movs	r3, #0
 8000e3a:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(TP_SDA_GPIO_Port, &GPIO_InitStruct);
 8000e3c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e40:	4619      	mov	r1, r3
 8000e42:	480b      	ldr	r0, [pc, #44]	; (8000e70 <MX_GPIO_Init+0x228>)
 8000e44:	f001 ffe6 	bl	8002e14 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_BL_Pin */
  GPIO_InitStruct.Pin = LCD_BL_Pin;
 8000e48:	2320      	movs	r3, #32
 8000e4a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e4c:	2301      	movs	r3, #1
 8000e4e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e50:	2300      	movs	r3, #0
 8000e52:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e54:	2300      	movs	r3, #0
 8000e56:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(LCD_BL_GPIO_Port, &GPIO_InitStruct);
 8000e58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e5c:	4619      	mov	r1, r3
 8000e5e:	4805      	ldr	r0, [pc, #20]	; (8000e74 <MX_GPIO_Init+0x22c>)
 8000e60:	f001 ffd8 	bl	8002e14 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000e64:	bf00      	nop
 8000e66:	3738      	adds	r7, #56	; 0x38
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bd80      	pop	{r7, pc}
 8000e6c:	58024400 	.word	0x58024400
 8000e70:	58022000 	.word	0x58022000
 8000e74:	58020400 	.word	0x58020400
 8000e78:	58021c00 	.word	0x58021c00
 8000e7c:	58020800 	.word	0x58020800

08000e80 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e80:	b480      	push	{r7}
 8000e82:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e84:	b672      	cpsid	i
}
 8000e86:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e88:	e7fe      	b.n	8000e88 <Error_Handler+0x8>
	...

08000e8c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000e8c:	b480      	push	{r7}
 8000e8e:	b083      	sub	sp, #12
 8000e90:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000e92:	4b0a      	ldr	r3, [pc, #40]	; (8000ebc <HAL_MspInit+0x30>)
 8000e94:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000e98:	4a08      	ldr	r2, [pc, #32]	; (8000ebc <HAL_MspInit+0x30>)
 8000e9a:	f043 0302 	orr.w	r3, r3, #2
 8000e9e:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000ea2:	4b06      	ldr	r3, [pc, #24]	; (8000ebc <HAL_MspInit+0x30>)
 8000ea4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000ea8:	f003 0302 	and.w	r3, r3, #2
 8000eac:	607b      	str	r3, [r7, #4]
 8000eae:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000eb0:	bf00      	nop
 8000eb2:	370c      	adds	r7, #12
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eba:	4770      	bx	lr
 8000ebc:	58024400 	.word	0x58024400

08000ec0 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000ec0:	b480      	push	{r7}
 8000ec2:	b085      	sub	sp, #20
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	4a0b      	ldr	r2, [pc, #44]	; (8000efc <HAL_CRC_MspInit+0x3c>)
 8000ece:	4293      	cmp	r3, r2
 8000ed0:	d10e      	bne.n	8000ef0 <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000ed2:	4b0b      	ldr	r3, [pc, #44]	; (8000f00 <HAL_CRC_MspInit+0x40>)
 8000ed4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ed8:	4a09      	ldr	r2, [pc, #36]	; (8000f00 <HAL_CRC_MspInit+0x40>)
 8000eda:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000ede:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000ee2:	4b07      	ldr	r3, [pc, #28]	; (8000f00 <HAL_CRC_MspInit+0x40>)
 8000ee4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ee8:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000eec:	60fb      	str	r3, [r7, #12]
 8000eee:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000ef0:	bf00      	nop
 8000ef2:	3714      	adds	r7, #20
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000efa:	4770      	bx	lr
 8000efc:	58024c00 	.word	0x58024c00
 8000f00:	58024400 	.word	0x58024400

08000f04 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8000f04:	b580      	push	{r7, lr}
 8000f06:	b084      	sub	sp, #16
 8000f08:	af00      	add	r7, sp, #0
 8000f0a:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8000f0c:	687b      	ldr	r3, [r7, #4]
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	4a0e      	ldr	r2, [pc, #56]	; (8000f4c <HAL_DMA2D_MspInit+0x48>)
 8000f12:	4293      	cmp	r3, r2
 8000f14:	d116      	bne.n	8000f44 <HAL_DMA2D_MspInit+0x40>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000f16:	4b0e      	ldr	r3, [pc, #56]	; (8000f50 <HAL_DMA2D_MspInit+0x4c>)
 8000f18:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000f1c:	4a0c      	ldr	r2, [pc, #48]	; (8000f50 <HAL_DMA2D_MspInit+0x4c>)
 8000f1e:	f043 0310 	orr.w	r3, r3, #16
 8000f22:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 8000f26:	4b0a      	ldr	r3, [pc, #40]	; (8000f50 <HAL_DMA2D_MspInit+0x4c>)
 8000f28:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000f2c:	f003 0310 	and.w	r3, r3, #16
 8000f30:	60fb      	str	r3, [r7, #12]
 8000f32:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 8000f34:	2200      	movs	r2, #0
 8000f36:	2100      	movs	r1, #0
 8000f38:	205a      	movs	r0, #90	; 0x5a
 8000f3a:	f000 fea2 	bl	8001c82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000f3e:	205a      	movs	r0, #90	; 0x5a
 8000f40:	f000 feb9 	bl	8001cb6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000f44:	bf00      	nop
 8000f46:	3710      	adds	r7, #16
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}
 8000f4c:	52001000 	.word	0x52001000
 8000f50:	58024400 	.word	0x58024400

08000f54 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000f54:	b580      	push	{r7, lr}
 8000f56:	b0be      	sub	sp, #248	; 0xf8
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f5c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8000f60:	2200      	movs	r2, #0
 8000f62:	601a      	str	r2, [r3, #0]
 8000f64:	605a      	str	r2, [r3, #4]
 8000f66:	609a      	str	r2, [r3, #8]
 8000f68:	60da      	str	r2, [r3, #12]
 8000f6a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000f6c:	f107 0320 	add.w	r3, r7, #32
 8000f70:	22c0      	movs	r2, #192	; 0xc0
 8000f72:	2100      	movs	r1, #0
 8000f74:	4618      	mov	r0, r3
 8000f76:	f022 ffa3 	bl	8023ec0 <memset>
  if(hltdc->Instance==LTDC)
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	4a6a      	ldr	r2, [pc, #424]	; (8001128 <HAL_LTDC_MspInit+0x1d4>)
 8000f80:	4293      	cmp	r3, r2
 8000f82:	f040 80cd 	bne.w	8001120 <HAL_LTDC_MspInit+0x1cc>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000f86:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000f8a:	f04f 0300 	mov.w	r3, #0
 8000f8e:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL3.PLL3M = 32;
 8000f92:	2320      	movs	r3, #32
 8000f94:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLL3.PLL3N = 192;
 8000f96:	23c0      	movs	r3, #192	; 0xc0
 8000f98:	64fb      	str	r3, [r7, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8000f9a:	2302      	movs	r3, #2
 8000f9c:	653b      	str	r3, [r7, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8000f9e:	2302      	movs	r3, #2
 8000fa0:	657b      	str	r3, [r7, #84]	; 0x54
    PeriphClkInitStruct.PLL3.PLL3R = 3;
 8000fa2:	2303      	movs	r3, #3
 8000fa4:	65bb      	str	r3, [r7, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_3;
 8000fa6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8000faa:	65fb      	str	r3, [r7, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 8000fac:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000fb0:	663b      	str	r3, [r7, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	667b      	str	r3, [r7, #100]	; 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fb6:	f107 0320 	add.w	r3, r7, #32
 8000fba:	4618      	mov	r0, r3
 8000fbc:	f004 f890 	bl	80050e0 <HAL_RCCEx_PeriphCLKConfig>
 8000fc0:	4603      	mov	r3, r0
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	d001      	beq.n	8000fca <HAL_LTDC_MspInit+0x76>
    {
      Error_Handler();
 8000fc6:	f7ff ff5b 	bl	8000e80 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000fca:	4b58      	ldr	r3, [pc, #352]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000fcc:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8000fd0:	4a56      	ldr	r2, [pc, #344]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000fd2:	f043 0308 	orr.w	r3, r3, #8
 8000fd6:	f8c2 30e4 	str.w	r3, [r2, #228]	; 0xe4
 8000fda:	4b54      	ldr	r3, [pc, #336]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000fdc:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8000fe0:	f003 0308 	and.w	r3, r3, #8
 8000fe4:	61fb      	str	r3, [r7, #28]
 8000fe6:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000fe8:	4b50      	ldr	r3, [pc, #320]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000fea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fee:	4a4f      	ldr	r2, [pc, #316]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000ff0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ff4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000ff8:	4b4c      	ldr	r3, [pc, #304]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8000ffa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ffe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001002:	61bb      	str	r3, [r7, #24]
 8001004:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001006:	4b49      	ldr	r3, [pc, #292]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001008:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800100c:	4a47      	ldr	r2, [pc, #284]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 800100e:	f043 0320 	orr.w	r3, r3, #32
 8001012:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001016:	4b45      	ldr	r3, [pc, #276]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001018:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800101c:	f003 0320 	and.w	r3, r3, #32
 8001020:	617b      	str	r3, [r7, #20]
 8001022:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8001024:	4b41      	ldr	r3, [pc, #260]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001026:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800102a:	4a40      	ldr	r2, [pc, #256]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 800102c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001030:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001034:	4b3d      	ldr	r3, [pc, #244]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001036:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800103a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800103e:	613b      	str	r3, [r7, #16]
 8001040:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001042:	4b3a      	ldr	r3, [pc, #232]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001044:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001048:	4a38      	ldr	r2, [pc, #224]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 800104a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800104e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001052:	4b36      	ldr	r3, [pc, #216]	; (800112c <HAL_LTDC_MspInit+0x1d8>)
 8001054:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001058:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800105c:	60fb      	str	r3, [r7, #12]
 800105e:	68fb      	ldr	r3, [r7, #12]
    PI4     ------> LTDC_B4
    PI5     ------> LTDC_B5
    PI6     ------> LTDC_B6
    PI7     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_0|GPIO_PIN_1
 8001060:	f240 63f7 	movw	r3, #1783	; 0x6f7
 8001064:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
                          |GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
                          |GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001068:	2302      	movs	r3, #2
 800106a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800106e:	2300      	movs	r3, #0
 8001070:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001074:	2303      	movs	r3, #3
 8001076:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800107a:	230e      	movs	r3, #14
 800107c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001080:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001084:	4619      	mov	r1, r3
 8001086:	482a      	ldr	r0, [pc, #168]	; (8001130 <HAL_LTDC_MspInit+0x1dc>)
 8001088:	f001 fec4 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800108c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001090:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001094:	2302      	movs	r3, #2
 8001096:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109a:	2300      	movs	r3, #0
 800109c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010a0:	2303      	movs	r3, #3
 80010a2:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80010a6:	230e      	movs	r3, #14
 80010a8:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010ac:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80010b0:	4619      	mov	r1, r3
 80010b2:	4820      	ldr	r0, [pc, #128]	; (8001134 <HAL_LTDC_MspInit+0x1e0>)
 80010b4:	f001 feae 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
 80010b8:	f44f 437e 	mov.w	r3, #65024	; 0xfe00
 80010bc:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010c0:	2302      	movs	r3, #2
 80010c2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010c6:	2300      	movs	r3, #0
 80010c8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010cc:	2303      	movs	r3, #3
 80010ce:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80010d2:	230e      	movs	r3, #14
 80010d4:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80010d8:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80010dc:	4619      	mov	r1, r3
 80010de:	4816      	ldr	r0, [pc, #88]	; (8001138 <HAL_LTDC_MspInit+0x1e4>)
 80010e0:	f001 fe98 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80010e4:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 80010e8:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010ec:	2302      	movs	r3, #2
 80010ee:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f2:	2300      	movs	r3, #0
 80010f4:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010f8:	2303      	movs	r3, #3
 80010fa:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80010fe:	230e      	movs	r3, #14
 8001100:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001104:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001108:	4619      	mov	r1, r3
 800110a:	480c      	ldr	r0, [pc, #48]	; (800113c <HAL_LTDC_MspInit+0x1e8>)
 800110c:	f001 fe82 	bl	8002e14 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 8, 0);
 8001110:	2200      	movs	r2, #0
 8001112:	2108      	movs	r1, #8
 8001114:	2058      	movs	r0, #88	; 0x58
 8001116:	f000 fdb4 	bl	8001c82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800111a:	2058      	movs	r0, #88	; 0x58
 800111c:	f000 fdcb 	bl	8001cb6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001120:	bf00      	nop
 8001122:	37f8      	adds	r7, #248	; 0xf8
 8001124:	46bd      	mov	sp, r7
 8001126:	bd80      	pop	{r7, pc}
 8001128:	50001000 	.word	0x50001000
 800112c:	58024400 	.word	0x58024400
 8001130:	58022000 	.word	0x58022000
 8001134:	58021400 	.word	0x58021400
 8001138:	58021c00 	.word	0x58021c00
 800113c:	58021800 	.word	0x58021800

08001140 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001140:	b580      	push	{r7, lr}
 8001142:	b0bc      	sub	sp, #240	; 0xf0
 8001144:	af00      	add	r7, sp, #0
 8001146:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001148:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800114c:	2200      	movs	r2, #0
 800114e:	601a      	str	r2, [r3, #0]
 8001150:	605a      	str	r2, [r3, #4]
 8001152:	609a      	str	r2, [r3, #8]
 8001154:	60da      	str	r2, [r3, #12]
 8001156:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001158:	f107 0318 	add.w	r3, r7, #24
 800115c:	22c0      	movs	r2, #192	; 0xc0
 800115e:	2100      	movs	r1, #0
 8001160:	4618      	mov	r0, r3
 8001162:	f022 fead 	bl	8023ec0 <memset>
  if(hqspi->Instance==QUADSPI)
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	681b      	ldr	r3, [r3, #0]
 800116a:	4a4e      	ldr	r2, [pc, #312]	; (80012a4 <HAL_QSPI_MspInit+0x164>)
 800116c:	4293      	cmp	r3, r2
 800116e:	f040 8094 	bne.w	800129a <HAL_QSPI_MspInit+0x15a>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 8001172:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001176:	f04f 0300 	mov.w	r3, #0
 800117a:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
 800117e:	2300      	movs	r3, #0
 8001180:	667b      	str	r3, [r7, #100]	; 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001182:	f107 0318 	add.w	r3, r7, #24
 8001186:	4618      	mov	r0, r3
 8001188:	f003 ffaa 	bl	80050e0 <HAL_RCCEx_PeriphCLKConfig>
 800118c:	4603      	mov	r3, r0
 800118e:	2b00      	cmp	r3, #0
 8001190:	d001      	beq.n	8001196 <HAL_QSPI_MspInit+0x56>
    {
      Error_Handler();
 8001192:	f7ff fe75 	bl	8000e80 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001196:	4b44      	ldr	r3, [pc, #272]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 8001198:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800119c:	4a42      	ldr	r2, [pc, #264]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 800119e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011a2:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80011a6:	4b40      	ldr	r3, [pc, #256]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011a8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011ac:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011b0:	617b      	str	r3, [r7, #20]
 80011b2:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 80011b4:	4b3c      	ldr	r3, [pc, #240]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011ba:	4a3b      	ldr	r2, [pc, #236]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011bc:	f043 0320 	orr.w	r3, r3, #32
 80011c0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011c4:	4b38      	ldr	r3, [pc, #224]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011c6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011ca:	f003 0320 	and.w	r3, r3, #32
 80011ce:	613b      	str	r3, [r7, #16]
 80011d0:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80011d2:	4b35      	ldr	r3, [pc, #212]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011d4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011d8:	4a33      	ldr	r2, [pc, #204]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011da:	f043 0302 	orr.w	r3, r3, #2
 80011de:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011e2:	4b31      	ldr	r3, [pc, #196]	; (80012a8 <HAL_QSPI_MspInit+0x168>)
 80011e4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011e8:	f003 0302 	and.w	r3, r3, #2
 80011ec:	60fb      	str	r3, [r7, #12]
 80011ee:	68fb      	ldr	r3, [r7, #12]
    PF8     ------> QUADSPI_BK1_IO0
    PF9     ------> QUADSPI_BK1_IO1
    PB2     ------> QUADSPI_CLK
    PB6     ------> QUADSPI_BK1_NCS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80011f0:	23c0      	movs	r3, #192	; 0xc0
 80011f2:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f6:	2302      	movs	r3, #2
 80011f8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011fc:	2300      	movs	r3, #0
 80011fe:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001202:	2303      	movs	r3, #3
 8001204:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001208:	2309      	movs	r3, #9
 800120a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800120e:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001212:	4619      	mov	r1, r3
 8001214:	4825      	ldr	r0, [pc, #148]	; (80012ac <HAL_QSPI_MspInit+0x16c>)
 8001216:	f001 fdfd 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800121a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800121e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001222:	2302      	movs	r3, #2
 8001224:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001228:	2300      	movs	r3, #0
 800122a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800122e:	2303      	movs	r3, #3
 8001230:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001234:	230a      	movs	r3, #10
 8001236:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800123a:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800123e:	4619      	mov	r1, r3
 8001240:	481a      	ldr	r0, [pc, #104]	; (80012ac <HAL_QSPI_MspInit+0x16c>)
 8001242:	f001 fde7 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001246:	2304      	movs	r3, #4
 8001248:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800124c:	2302      	movs	r3, #2
 800124e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001252:	2300      	movs	r3, #0
 8001254:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001258:	2303      	movs	r3, #3
 800125a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800125e:	2309      	movs	r3, #9
 8001260:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001264:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001268:	4619      	mov	r1, r3
 800126a:	4811      	ldr	r0, [pc, #68]	; (80012b0 <HAL_QSPI_MspInit+0x170>)
 800126c:	f001 fdd2 	bl	8002e14 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001270:	2340      	movs	r3, #64	; 0x40
 8001272:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001276:	2302      	movs	r3, #2
 8001278:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800127c:	2300      	movs	r3, #0
 800127e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001282:	2303      	movs	r3, #3
 8001284:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001288:	230a      	movs	r3, #10
 800128a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800128e:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001292:	4619      	mov	r1, r3
 8001294:	4806      	ldr	r0, [pc, #24]	; (80012b0 <HAL_QSPI_MspInit+0x170>)
 8001296:	f001 fdbd 	bl	8002e14 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 800129a:	bf00      	nop
 800129c:	37f0      	adds	r7, #240	; 0xf0
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}
 80012a2:	bf00      	nop
 80012a4:	52005000 	.word	0x52005000
 80012a8:	58024400 	.word	0x58024400
 80012ac:	58021400 	.word	0x58021400
 80012b0:	58020400 	.word	0x58020400

080012b4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80012b4:	b580      	push	{r7, lr}
 80012b6:	b084      	sub	sp, #16
 80012b8:	af00      	add	r7, sp, #0
 80012ba:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	4a0e      	ldr	r2, [pc, #56]	; (80012fc <HAL_TIM_Base_MspInit+0x48>)
 80012c2:	4293      	cmp	r3, r2
 80012c4:	d116      	bne.n	80012f4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 80012c6:	4b0e      	ldr	r3, [pc, #56]	; (8001300 <HAL_TIM_Base_MspInit+0x4c>)
 80012c8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80012cc:	4a0c      	ldr	r2, [pc, #48]	; (8001300 <HAL_TIM_Base_MspInit+0x4c>)
 80012ce:	f043 0302 	orr.w	r3, r3, #2
 80012d2:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80012d6:	4b0a      	ldr	r3, [pc, #40]	; (8001300 <HAL_TIM_Base_MspInit+0x4c>)
 80012d8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80012dc:	f003 0302 	and.w	r3, r3, #2
 80012e0:	60fb      	str	r3, [r7, #12]
 80012e2:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 7, 0);
 80012e4:	2200      	movs	r2, #0
 80012e6:	2107      	movs	r1, #7
 80012e8:	201d      	movs	r0, #29
 80012ea:	f000 fcca 	bl	8001c82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 80012ee:	201d      	movs	r0, #29
 80012f0:	f000 fce1 	bl	8001cb6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80012f4:	bf00      	nop
 80012f6:	3710      	adds	r7, #16
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	40000400 	.word	0x40000400
 8001300:	58024400 	.word	0x58024400

08001304 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001304:	b580      	push	{r7, lr}
 8001306:	b0bc      	sub	sp, #240	; 0xf0
 8001308:	af00      	add	r7, sp, #0
 800130a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800130c:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001310:	2200      	movs	r2, #0
 8001312:	601a      	str	r2, [r3, #0]
 8001314:	605a      	str	r2, [r3, #4]
 8001316:	609a      	str	r2, [r3, #8]
 8001318:	60da      	str	r2, [r3, #12]
 800131a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800131c:	f107 0318 	add.w	r3, r7, #24
 8001320:	22c0      	movs	r2, #192	; 0xc0
 8001322:	2100      	movs	r1, #0
 8001324:	4618      	mov	r0, r3
 8001326:	f022 fdcb 	bl	8023ec0 <memset>
  if(huart->Instance==USART1)
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	4a55      	ldr	r2, [pc, #340]	; (8001484 <HAL_UART_MspInit+0x180>)
 8001330:	4293      	cmp	r3, r2
 8001332:	d14f      	bne.n	80013d4 <HAL_UART_MspInit+0xd0>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001334:	f04f 0201 	mov.w	r2, #1
 8001338:	f04f 0300 	mov.w	r3, #0
 800133c:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
 8001340:	2300      	movs	r3, #0
 8001342:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001346:	f107 0318 	add.w	r3, r7, #24
 800134a:	4618      	mov	r0, r3
 800134c:	f003 fec8 	bl	80050e0 <HAL_RCCEx_PeriphCLKConfig>
 8001350:	4603      	mov	r3, r0
 8001352:	2b00      	cmp	r3, #0
 8001354:	d001      	beq.n	800135a <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 8001356:	f7ff fd93 	bl	8000e80 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800135a:	4b4b      	ldr	r3, [pc, #300]	; (8001488 <HAL_UART_MspInit+0x184>)
 800135c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001360:	4a49      	ldr	r2, [pc, #292]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001362:	f043 0310 	orr.w	r3, r3, #16
 8001366:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 800136a:	4b47      	ldr	r3, [pc, #284]	; (8001488 <HAL_UART_MspInit+0x184>)
 800136c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001370:	f003 0310 	and.w	r3, r3, #16
 8001374:	617b      	str	r3, [r7, #20]
 8001376:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001378:	4b43      	ldr	r3, [pc, #268]	; (8001488 <HAL_UART_MspInit+0x184>)
 800137a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800137e:	4a42      	ldr	r2, [pc, #264]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001380:	f043 0301 	orr.w	r3, r3, #1
 8001384:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001388:	4b3f      	ldr	r3, [pc, #252]	; (8001488 <HAL_UART_MspInit+0x184>)
 800138a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800138e:	f003 0301 	and.w	r3, r3, #1
 8001392:	613b      	str	r3, [r7, #16]
 8001394:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001396:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800139a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800139e:	2302      	movs	r3, #2
 80013a0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013a4:	2300      	movs	r3, #0
 80013a6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013aa:	2300      	movs	r3, #0
 80013ac:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80013b0:	2307      	movs	r3, #7
 80013b2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013b6:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80013ba:	4619      	mov	r1, r3
 80013bc:	4833      	ldr	r0, [pc, #204]	; (800148c <HAL_UART_MspInit+0x188>)
 80013be:	f001 fd29 	bl	8002e14 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 6, 0);
 80013c2:	2200      	movs	r2, #0
 80013c4:	2106      	movs	r1, #6
 80013c6:	2025      	movs	r0, #37	; 0x25
 80013c8:	f000 fc5b 	bl	8001c82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80013cc:	2025      	movs	r0, #37	; 0x25
 80013ce:	f000 fc72 	bl	8001cb6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80013d2:	e052      	b.n	800147a <HAL_UART_MspInit+0x176>
  else if(huart->Instance==USART2)
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	4a2d      	ldr	r2, [pc, #180]	; (8001490 <HAL_UART_MspInit+0x18c>)
 80013da:	4293      	cmp	r3, r2
 80013dc:	d14d      	bne.n	800147a <HAL_UART_MspInit+0x176>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 80013de:	f04f 0202 	mov.w	r2, #2
 80013e2:	f04f 0300 	mov.w	r3, #0
 80013e6:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 80013ea:	2300      	movs	r3, #0
 80013ec:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013f0:	f107 0318 	add.w	r3, r7, #24
 80013f4:	4618      	mov	r0, r3
 80013f6:	f003 fe73 	bl	80050e0 <HAL_RCCEx_PeriphCLKConfig>
 80013fa:	4603      	mov	r3, r0
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d001      	beq.n	8001404 <HAL_UART_MspInit+0x100>
      Error_Handler();
 8001400:	f7ff fd3e 	bl	8000e80 <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001404:	4b20      	ldr	r3, [pc, #128]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001406:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800140a:	4a1f      	ldr	r2, [pc, #124]	; (8001488 <HAL_UART_MspInit+0x184>)
 800140c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001410:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8001414:	4b1c      	ldr	r3, [pc, #112]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001416:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800141a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800141e:	60fb      	str	r3, [r7, #12]
 8001420:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001422:	4b19      	ldr	r3, [pc, #100]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001424:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001428:	4a17      	ldr	r2, [pc, #92]	; (8001488 <HAL_UART_MspInit+0x184>)
 800142a:	f043 0301 	orr.w	r3, r3, #1
 800142e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001432:	4b15      	ldr	r3, [pc, #84]	; (8001488 <HAL_UART_MspInit+0x184>)
 8001434:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001438:	f003 0301 	and.w	r3, r3, #1
 800143c:	60bb      	str	r3, [r7, #8]
 800143e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001440:	230c      	movs	r3, #12
 8001442:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001446:	2302      	movs	r3, #2
 8001448:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800144c:	2300      	movs	r3, #0
 800144e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001452:	2300      	movs	r3, #0
 8001454:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001458:	2307      	movs	r3, #7
 800145a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800145e:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001462:	4619      	mov	r1, r3
 8001464:	4809      	ldr	r0, [pc, #36]	; (800148c <HAL_UART_MspInit+0x188>)
 8001466:	f001 fcd5 	bl	8002e14 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800146a:	2200      	movs	r2, #0
 800146c:	2100      	movs	r1, #0
 800146e:	2026      	movs	r0, #38	; 0x26
 8001470:	f000 fc07 	bl	8001c82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001474:	2026      	movs	r0, #38	; 0x26
 8001476:	f000 fc1e 	bl	8001cb6 <HAL_NVIC_EnableIRQ>
}
 800147a:	bf00      	nop
 800147c:	37f0      	adds	r7, #240	; 0xf0
 800147e:	46bd      	mov	sp, r7
 8001480:	bd80      	pop	{r7, pc}
 8001482:	bf00      	nop
 8001484:	40011000 	.word	0x40011000
 8001488:	58024400 	.word	0x58024400
 800148c:	58020000 	.word	0x58020000
 8001490:	40004400 	.word	0x40004400

08001494 <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8001494:	b580      	push	{r7, lr}
 8001496:	b0b8      	sub	sp, #224	; 0xe0
 8001498:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800149a:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800149e:	2200      	movs	r2, #0
 80014a0:	601a      	str	r2, [r3, #0]
 80014a2:	605a      	str	r2, [r3, #4]
 80014a4:	609a      	str	r2, [r3, #8]
 80014a6:	60da      	str	r2, [r3, #12]
 80014a8:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 80014aa:	4b51      	ldr	r3, [pc, #324]	; (80015f0 <HAL_FMC_MspInit+0x15c>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	f040 8099 	bne.w	80015e6 <HAL_FMC_MspInit+0x152>
    return;
  }
  FMC_Initialized = 1;
 80014b4:	4b4e      	ldr	r3, [pc, #312]	; (80015f0 <HAL_FMC_MspInit+0x15c>)
 80014b6:	2201      	movs	r2, #1
 80014b8:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80014ba:	f107 0308 	add.w	r3, r7, #8
 80014be:	22c0      	movs	r2, #192	; 0xc0
 80014c0:	2100      	movs	r1, #0
 80014c2:	4618      	mov	r0, r3
 80014c4:	f022 fcfc 	bl	8023ec0 <memset>

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 80014c8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80014cc:	f04f 0300 	mov.w	r3, #0
 80014d0:	e9c7 2302 	strd	r2, r3, [r7, #8]
    PeriphClkInitStruct.FmcClockSelection = RCC_FMCCLKSOURCE_D1HCLK;
 80014d4:	2300      	movs	r3, #0
 80014d6:	653b      	str	r3, [r7, #80]	; 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014d8:	f107 0308 	add.w	r3, r7, #8
 80014dc:	4618      	mov	r0, r3
 80014de:	f003 fdff 	bl	80050e0 <HAL_RCCEx_PeriphCLKConfig>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d001      	beq.n	80014ec <HAL_FMC_MspInit+0x58>
    {
      Error_Handler();
 80014e8:	f7ff fcca 	bl	8000e80 <Error_Handler>
    }

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 80014ec:	4b41      	ldr	r3, [pc, #260]	; (80015f4 <HAL_FMC_MspInit+0x160>)
 80014ee:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80014f2:	4a40      	ldr	r2, [pc, #256]	; (80015f4 <HAL_FMC_MspInit+0x160>)
 80014f4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80014f8:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80014fc:	4b3d      	ldr	r3, [pc, #244]	; (80015f4 <HAL_FMC_MspInit+0x160>)
 80014fe:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001502:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001506:	607b      	str	r3, [r7, #4]
 8001508:	687b      	ldr	r3, [r7, #4]
  PD1   ------> FMC_D3
  PG15   ------> FMC_SDNCAS
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800150a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 800150e:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001512:	2302      	movs	r3, #2
 8001514:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001518:	2300      	movs	r3, #0
 800151a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800151e:	2303      	movs	r3, #3
 8001520:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001524:	230c      	movs	r3, #12
 8001526:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800152a:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800152e:	4619      	mov	r1, r3
 8001530:	4831      	ldr	r0, [pc, #196]	; (80015f8 <HAL_FMC_MspInit+0x164>)
 8001532:	f001 fc6f 	bl	8002e14 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001536:	230d      	movs	r3, #13
 8001538:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800153c:	2302      	movs	r3, #2
 800153e:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001542:	2300      	movs	r3, #0
 8001544:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001548:	2303      	movs	r3, #3
 800154a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800154e:	230c      	movs	r3, #12
 8001550:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001554:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8001558:	4619      	mov	r1, r3
 800155a:	4828      	ldr	r0, [pc, #160]	; (80015fc <HAL_FMC_MspInit+0x168>)
 800155c:	f001 fc5a 	bl	8002e14 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4
 8001560:	f248 1337 	movw	r3, #33079	; 0x8137
 8001564:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
                          |GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001568:	2302      	movs	r3, #2
 800156a:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800156e:	2300      	movs	r3, #0
 8001570:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001574:	2303      	movs	r3, #3
 8001576:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800157a:	230c      	movs	r3, #12
 800157c:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001580:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8001584:	4619      	mov	r1, r3
 8001586:	481e      	ldr	r0, [pc, #120]	; (8001600 <HAL_FMC_MspInit+0x16c>)
 8001588:	f001 fc44 	bl	8002e14 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800158c:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001590:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001594:	2302      	movs	r3, #2
 8001596:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159a:	2300      	movs	r3, #0
 800159c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015a0:	2303      	movs	r3, #3
 80015a2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015a6:	230c      	movs	r3, #12
 80015a8:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015ac:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 80015b0:	4619      	mov	r1, r3
 80015b2:	4814      	ldr	r0, [pc, #80]	; (8001604 <HAL_FMC_MspInit+0x170>)
 80015b4:	f001 fc2e 	bl	8002e14 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80015b8:	f24c 7303 	movw	r3, #50947	; 0xc703
 80015bc:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015c0:	2302      	movs	r3, #2
 80015c2:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c6:	2300      	movs	r3, #0
 80015c8:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015cc:	2303      	movs	r3, #3
 80015ce:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015d2:	230c      	movs	r3, #12
 80015d4:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d8:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 80015dc:	4619      	mov	r1, r3
 80015de:	480a      	ldr	r0, [pc, #40]	; (8001608 <HAL_FMC_MspInit+0x174>)
 80015e0:	f001 fc18 	bl	8002e14 <HAL_GPIO_Init>
 80015e4:	e000      	b.n	80015e8 <HAL_FMC_MspInit+0x154>
    return;
 80015e6:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 80015e8:	37e0      	adds	r7, #224	; 0xe0
 80015ea:	46bd      	mov	sp, r7
 80015ec:	bd80      	pop	{r7, pc}
 80015ee:	bf00      	nop
 80015f0:	2400043c 	.word	0x2400043c
 80015f4:	58024400 	.word	0x58024400
 80015f8:	58021400 	.word	0x58021400
 80015fc:	58020800 	.word	0x58020800
 8001600:	58021800 	.word	0x58021800
 8001604:	58021000 	.word	0x58021000
 8001608:	58020c00 	.word	0x58020c00

0800160c <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800160c:	b580      	push	{r7, lr}
 800160e:	b082      	sub	sp, #8
 8001610:	af00      	add	r7, sp, #0
 8001612:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8001614:	f7ff ff3e 	bl	8001494 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001618:	bf00      	nop
 800161a:	3708      	adds	r7, #8
 800161c:	46bd      	mov	sp, r7
 800161e:	bd80      	pop	{r7, pc}

08001620 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001620:	b480      	push	{r7}
 8001622:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001624:	e7fe      	b.n	8001624 <NMI_Handler+0x4>

08001626 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001626:	b480      	push	{r7}
 8001628:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800162a:	e7fe      	b.n	800162a <HardFault_Handler+0x4>

0800162c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800162c:	b480      	push	{r7}
 800162e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001630:	e7fe      	b.n	8001630 <MemManage_Handler+0x4>

08001632 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001632:	b480      	push	{r7}
 8001634:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001636:	e7fe      	b.n	8001636 <BusFault_Handler+0x4>

08001638 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001638:	b480      	push	{r7}
 800163a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800163c:	e7fe      	b.n	800163c <UsageFault_Handler+0x4>

0800163e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800163e:	b480      	push	{r7}
 8001640:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001642:	bf00      	nop
 8001644:	46bd      	mov	sp, r7
 8001646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800164a:	4770      	bx	lr

0800164c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800164c:	b480      	push	{r7}
 800164e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001650:	bf00      	nop
 8001652:	46bd      	mov	sp, r7
 8001654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001658:	4770      	bx	lr

0800165a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800165a:	b480      	push	{r7}
 800165c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800165e:	bf00      	nop
 8001660:	46bd      	mov	sp, r7
 8001662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001666:	4770      	bx	lr

08001668 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001668:	b580      	push	{r7, lr}
 800166a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800166c:	f000 fa02 	bl	8001a74 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001670:	bf00      	nop
 8001672:	bd80      	pop	{r7, pc}

08001674 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001674:	b580      	push	{r7, lr}
 8001676:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001678:	4802      	ldr	r0, [pc, #8]	; (8001684 <TIM3_IRQHandler+0x10>)
 800167a:	f005 fc4d 	bl	8006f18 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800167e:	bf00      	nop
 8001680:	bd80      	pop	{r7, pc}
 8001682:	bf00      	nop
 8001684:	24000294 	.word	0x24000294

08001688 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800168c:	4802      	ldr	r0, [pc, #8]	; (8001698 <USART1_IRQHandler+0x10>)
 800168e:	f006 fa2f 	bl	8007af0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8001692:	bf00      	nop
 8001694:	bd80      	pop	{r7, pc}
 8001696:	bf00      	nop
 8001698:	240002e0 	.word	0x240002e0

0800169c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 800169c:	b580      	push	{r7, lr}
 800169e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80016a0:	4802      	ldr	r0, [pc, #8]	; (80016ac <USART2_IRQHandler+0x10>)
 80016a2:	f006 fa25 	bl	8007af0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80016a6:	bf00      	nop
 80016a8:	bd80      	pop	{r7, pc}
 80016aa:	bf00      	nop
 80016ac:	24000374 	.word	0x24000374

080016b0 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 80016b0:	b580      	push	{r7, lr}
 80016b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80016b4:	4802      	ldr	r0, [pc, #8]	; (80016c0 <LTDC_IRQHandler+0x10>)
 80016b6:	f001 fe5f 	bl	8003378 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80016ba:	bf00      	nop
 80016bc:	bd80      	pop	{r7, pc}
 80016be:	bf00      	nop
 80016c0:	240001a0 	.word	0x240001a0

080016c4 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80016c8:	4802      	ldr	r0, [pc, #8]	; (80016d4 <DMA2D_IRQHandler+0x10>)
 80016ca:	f001 f9e5 	bl	8002a98 <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 80016ce:	bf00      	nop
 80016d0:	bd80      	pop	{r7, pc}
 80016d2:	bf00      	nop
 80016d4:	24000138 	.word	0x24000138

080016d8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80016d8:	b480      	push	{r7}
 80016da:	af00      	add	r7, sp, #0
  return 1;
 80016dc:	2301      	movs	r3, #1
}
 80016de:	4618      	mov	r0, r3
 80016e0:	46bd      	mov	sp, r7
 80016e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e6:	4770      	bx	lr

080016e8 <_kill>:

int _kill(int pid, int sig)
{
 80016e8:	b580      	push	{r7, lr}
 80016ea:	b082      	sub	sp, #8
 80016ec:	af00      	add	r7, sp, #0
 80016ee:	6078      	str	r0, [r7, #4]
 80016f0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80016f2:	f022 fc87 	bl	8024004 <__errno>
 80016f6:	4603      	mov	r3, r0
 80016f8:	2216      	movs	r2, #22
 80016fa:	601a      	str	r2, [r3, #0]
  return -1;
 80016fc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001700:	4618      	mov	r0, r3
 8001702:	3708      	adds	r7, #8
 8001704:	46bd      	mov	sp, r7
 8001706:	bd80      	pop	{r7, pc}

08001708 <_exit>:

void _exit (int status)
{
 8001708:	b580      	push	{r7, lr}
 800170a:	b082      	sub	sp, #8
 800170c:	af00      	add	r7, sp, #0
 800170e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001710:	f04f 31ff 	mov.w	r1, #4294967295
 8001714:	6878      	ldr	r0, [r7, #4]
 8001716:	f7ff ffe7 	bl	80016e8 <_kill>
  while (1) {}    /* Make sure we hang here */
 800171a:	e7fe      	b.n	800171a <_exit+0x12>

0800171c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800171c:	b580      	push	{r7, lr}
 800171e:	b086      	sub	sp, #24
 8001720:	af00      	add	r7, sp, #0
 8001722:	60f8      	str	r0, [r7, #12]
 8001724:	60b9      	str	r1, [r7, #8]
 8001726:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001728:	2300      	movs	r3, #0
 800172a:	617b      	str	r3, [r7, #20]
 800172c:	e00a      	b.n	8001744 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800172e:	f3af 8000 	nop.w
 8001732:	4601      	mov	r1, r0
 8001734:	68bb      	ldr	r3, [r7, #8]
 8001736:	1c5a      	adds	r2, r3, #1
 8001738:	60ba      	str	r2, [r7, #8]
 800173a:	b2ca      	uxtb	r2, r1
 800173c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800173e:	697b      	ldr	r3, [r7, #20]
 8001740:	3301      	adds	r3, #1
 8001742:	617b      	str	r3, [r7, #20]
 8001744:	697a      	ldr	r2, [r7, #20]
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	429a      	cmp	r2, r3
 800174a:	dbf0      	blt.n	800172e <_read+0x12>
  }

  return len;
 800174c:	687b      	ldr	r3, [r7, #4]
}
 800174e:	4618      	mov	r0, r3
 8001750:	3718      	adds	r7, #24
 8001752:	46bd      	mov	sp, r7
 8001754:	bd80      	pop	{r7, pc}

08001756 <_close>:
  }
  return len;
}

int _close(int file)
{
 8001756:	b480      	push	{r7}
 8001758:	b083      	sub	sp, #12
 800175a:	af00      	add	r7, sp, #0
 800175c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800175e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001762:	4618      	mov	r0, r3
 8001764:	370c      	adds	r7, #12
 8001766:	46bd      	mov	sp, r7
 8001768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800176c:	4770      	bx	lr

0800176e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800176e:	b480      	push	{r7}
 8001770:	b083      	sub	sp, #12
 8001772:	af00      	add	r7, sp, #0
 8001774:	6078      	str	r0, [r7, #4]
 8001776:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001778:	683b      	ldr	r3, [r7, #0]
 800177a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800177e:	605a      	str	r2, [r3, #4]
  return 0;
 8001780:	2300      	movs	r3, #0
}
 8001782:	4618      	mov	r0, r3
 8001784:	370c      	adds	r7, #12
 8001786:	46bd      	mov	sp, r7
 8001788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178c:	4770      	bx	lr

0800178e <_isatty>:

int _isatty(int file)
{
 800178e:	b480      	push	{r7}
 8001790:	b083      	sub	sp, #12
 8001792:	af00      	add	r7, sp, #0
 8001794:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001796:	2301      	movs	r3, #1
}
 8001798:	4618      	mov	r0, r3
 800179a:	370c      	adds	r7, #12
 800179c:	46bd      	mov	sp, r7
 800179e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a2:	4770      	bx	lr

080017a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80017a4:	b480      	push	{r7}
 80017a6:	b085      	sub	sp, #20
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	60f8      	str	r0, [r7, #12]
 80017ac:	60b9      	str	r1, [r7, #8]
 80017ae:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80017b0:	2300      	movs	r3, #0
}
 80017b2:	4618      	mov	r0, r3
 80017b4:	3714      	adds	r7, #20
 80017b6:	46bd      	mov	sp, r7
 80017b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017bc:	4770      	bx	lr
	...

080017c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b086      	sub	sp, #24
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017c8:	4a14      	ldr	r2, [pc, #80]	; (800181c <_sbrk+0x5c>)
 80017ca:	4b15      	ldr	r3, [pc, #84]	; (8001820 <_sbrk+0x60>)
 80017cc:	1ad3      	subs	r3, r2, r3
 80017ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017d0:	697b      	ldr	r3, [r7, #20]
 80017d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017d4:	4b13      	ldr	r3, [pc, #76]	; (8001824 <_sbrk+0x64>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	2b00      	cmp	r3, #0
 80017da:	d102      	bne.n	80017e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017dc:	4b11      	ldr	r3, [pc, #68]	; (8001824 <_sbrk+0x64>)
 80017de:	4a12      	ldr	r2, [pc, #72]	; (8001828 <_sbrk+0x68>)
 80017e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017e2:	4b10      	ldr	r3, [pc, #64]	; (8001824 <_sbrk+0x64>)
 80017e4:	681a      	ldr	r2, [r3, #0]
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	4413      	add	r3, r2
 80017ea:	693a      	ldr	r2, [r7, #16]
 80017ec:	429a      	cmp	r2, r3
 80017ee:	d207      	bcs.n	8001800 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017f0:	f022 fc08 	bl	8024004 <__errno>
 80017f4:	4603      	mov	r3, r0
 80017f6:	220c      	movs	r2, #12
 80017f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017fa:	f04f 33ff 	mov.w	r3, #4294967295
 80017fe:	e009      	b.n	8001814 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001800:	4b08      	ldr	r3, [pc, #32]	; (8001824 <_sbrk+0x64>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001806:	4b07      	ldr	r3, [pc, #28]	; (8001824 <_sbrk+0x64>)
 8001808:	681a      	ldr	r2, [r3, #0]
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	4413      	add	r3, r2
 800180e:	4a05      	ldr	r2, [pc, #20]	; (8001824 <_sbrk+0x64>)
 8001810:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001812:	68fb      	ldr	r3, [r7, #12]
}
 8001814:	4618      	mov	r0, r3
 8001816:	3718      	adds	r7, #24
 8001818:	46bd      	mov	sp, r7
 800181a:	bd80      	pop	{r7, pc}
 800181c:	24080000 	.word	0x24080000
 8001820:	00000400 	.word	0x00000400
 8001824:	24000440 	.word	0x24000440
 8001828:	240022e0 	.word	0x240022e0

0800182c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800182c:	b480      	push	{r7}
 800182e:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8001830:	4b37      	ldr	r3, [pc, #220]	; (8001910 <SystemInit+0xe4>)
 8001832:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001836:	4a36      	ldr	r2, [pc, #216]	; (8001910 <SystemInit+0xe4>)
 8001838:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800183c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001840:	4b34      	ldr	r3, [pc, #208]	; (8001914 <SystemInit+0xe8>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	f003 030f 	and.w	r3, r3, #15
 8001848:	2b06      	cmp	r3, #6
 800184a:	d807      	bhi.n	800185c <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800184c:	4b31      	ldr	r3, [pc, #196]	; (8001914 <SystemInit+0xe8>)
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	f023 030f 	bic.w	r3, r3, #15
 8001854:	4a2f      	ldr	r2, [pc, #188]	; (8001914 <SystemInit+0xe8>)
 8001856:	f043 0307 	orr.w	r3, r3, #7
 800185a:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 800185c:	4b2e      	ldr	r3, [pc, #184]	; (8001918 <SystemInit+0xec>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	4a2d      	ldr	r2, [pc, #180]	; (8001918 <SystemInit+0xec>)
 8001862:	f043 0301 	orr.w	r3, r3, #1
 8001866:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001868:	4b2b      	ldr	r3, [pc, #172]	; (8001918 <SystemInit+0xec>)
 800186a:	2200      	movs	r2, #0
 800186c:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 800186e:	4b2a      	ldr	r3, [pc, #168]	; (8001918 <SystemInit+0xec>)
 8001870:	681a      	ldr	r2, [r3, #0]
 8001872:	4929      	ldr	r1, [pc, #164]	; (8001918 <SystemInit+0xec>)
 8001874:	4b29      	ldr	r3, [pc, #164]	; (800191c <SystemInit+0xf0>)
 8001876:	4013      	ands	r3, r2
 8001878:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800187a:	4b26      	ldr	r3, [pc, #152]	; (8001914 <SystemInit+0xe8>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	f003 0308 	and.w	r3, r3, #8
 8001882:	2b00      	cmp	r3, #0
 8001884:	d007      	beq.n	8001896 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001886:	4b23      	ldr	r3, [pc, #140]	; (8001914 <SystemInit+0xe8>)
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	f023 030f 	bic.w	r3, r3, #15
 800188e:	4a21      	ldr	r2, [pc, #132]	; (8001914 <SystemInit+0xe8>)
 8001890:	f043 0307 	orr.w	r3, r3, #7
 8001894:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8001896:	4b20      	ldr	r3, [pc, #128]	; (8001918 <SystemInit+0xec>)
 8001898:	2200      	movs	r2, #0
 800189a:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 800189c:	4b1e      	ldr	r3, [pc, #120]	; (8001918 <SystemInit+0xec>)
 800189e:	2200      	movs	r2, #0
 80018a0:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80018a2:	4b1d      	ldr	r3, [pc, #116]	; (8001918 <SystemInit+0xec>)
 80018a4:	2200      	movs	r2, #0
 80018a6:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80018a8:	4b1b      	ldr	r3, [pc, #108]	; (8001918 <SystemInit+0xec>)
 80018aa:	4a1d      	ldr	r2, [pc, #116]	; (8001920 <SystemInit+0xf4>)
 80018ac:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80018ae:	4b1a      	ldr	r3, [pc, #104]	; (8001918 <SystemInit+0xec>)
 80018b0:	4a1c      	ldr	r2, [pc, #112]	; (8001924 <SystemInit+0xf8>)
 80018b2:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80018b4:	4b18      	ldr	r3, [pc, #96]	; (8001918 <SystemInit+0xec>)
 80018b6:	4a1c      	ldr	r2, [pc, #112]	; (8001928 <SystemInit+0xfc>)
 80018b8:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80018ba:	4b17      	ldr	r3, [pc, #92]	; (8001918 <SystemInit+0xec>)
 80018bc:	2200      	movs	r2, #0
 80018be:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80018c0:	4b15      	ldr	r3, [pc, #84]	; (8001918 <SystemInit+0xec>)
 80018c2:	4a19      	ldr	r2, [pc, #100]	; (8001928 <SystemInit+0xfc>)
 80018c4:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80018c6:	4b14      	ldr	r3, [pc, #80]	; (8001918 <SystemInit+0xec>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80018cc:	4b12      	ldr	r3, [pc, #72]	; (8001918 <SystemInit+0xec>)
 80018ce:	4a16      	ldr	r2, [pc, #88]	; (8001928 <SystemInit+0xfc>)
 80018d0:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80018d2:	4b11      	ldr	r3, [pc, #68]	; (8001918 <SystemInit+0xec>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80018d8:	4b0f      	ldr	r3, [pc, #60]	; (8001918 <SystemInit+0xec>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	4a0e      	ldr	r2, [pc, #56]	; (8001918 <SystemInit+0xec>)
 80018de:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018e2:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80018e4:	4b0c      	ldr	r3, [pc, #48]	; (8001918 <SystemInit+0xec>)
 80018e6:	2200      	movs	r2, #0
 80018e8:	661a      	str	r2, [r3, #96]	; 0x60

#if (STM32H7_DEV_ID == 0x450UL)
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 80018ea:	4b10      	ldr	r3, [pc, #64]	; (800192c <SystemInit+0x100>)
 80018ec:	681a      	ldr	r2, [r3, #0]
 80018ee:	4b10      	ldr	r3, [pc, #64]	; (8001930 <SystemInit+0x104>)
 80018f0:	4013      	ands	r3, r2
 80018f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80018f6:	d202      	bcs.n	80018fe <SystemInit+0xd2>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 80018f8:	4b0e      	ldr	r3, [pc, #56]	; (8001934 <SystemInit+0x108>)
 80018fa:	2201      	movs	r2, #1
 80018fc:	601a      	str	r2, [r3, #0]
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80018fe:	4b0e      	ldr	r3, [pc, #56]	; (8001938 <SystemInit+0x10c>)
 8001900:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001904:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001906:	bf00      	nop
 8001908:	46bd      	mov	sp, r7
 800190a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800190e:	4770      	bx	lr
 8001910:	e000ed00 	.word	0xe000ed00
 8001914:	52002000 	.word	0x52002000
 8001918:	58024400 	.word	0x58024400
 800191c:	eaf6ed7f 	.word	0xeaf6ed7f
 8001920:	02020200 	.word	0x02020200
 8001924:	01ff0000 	.word	0x01ff0000
 8001928:	01010280 	.word	0x01010280
 800192c:	5c001000 	.word	0x5c001000
 8001930:	ffff0000 	.word	0xffff0000
 8001934:	51008108 	.word	0x51008108
 8001938:	52004000 	.word	0x52004000

0800193c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 800193c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001974 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001940:	f7ff ff74 	bl	800182c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001944:	480c      	ldr	r0, [pc, #48]	; (8001978 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001946:	490d      	ldr	r1, [pc, #52]	; (800197c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001948:	4a0d      	ldr	r2, [pc, #52]	; (8001980 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800194a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800194c:	e002      	b.n	8001954 <LoopCopyDataInit>

0800194e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800194e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001950:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001952:	3304      	adds	r3, #4

08001954 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001954:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001956:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001958:	d3f9      	bcc.n	800194e <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800195a:	4a0a      	ldr	r2, [pc, #40]	; (8001984 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800195c:	4c0a      	ldr	r4, [pc, #40]	; (8001988 <LoopFillZerobss+0x22>)
  movs r3, #0
 800195e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001960:	e001      	b.n	8001966 <LoopFillZerobss>

08001962 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001962:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001964:	3204      	adds	r2, #4

08001966 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001966:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001968:	d3fb      	bcc.n	8001962 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800196a:	f022 fb51 	bl	8024010 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800196e:	f7fe fe85 	bl	800067c <main>
  bx  lr
 8001972:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001974:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8001978:	24000000 	.word	0x24000000
  ldr r1, =_edata
 800197c:	240000f8 	.word	0x240000f8
  ldr r2, =_sidata
 8001980:	0803c730 	.word	0x0803c730
  ldr r2, =_sbss
 8001984:	240000f8 	.word	0x240000f8
  ldr r4, =_ebss
 8001988:	240022e0 	.word	0x240022e0

0800198c <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800198c:	e7fe      	b.n	800198c <ADC3_IRQHandler>
	...

08001990 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001990:	b580      	push	{r7, lr}
 8001992:	b082      	sub	sp, #8
 8001994:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001996:	2003      	movs	r0, #3
 8001998:	f000 f968 	bl	8001c6c <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 800199c:	f003 f9ca 	bl	8004d34 <HAL_RCC_GetSysClockFreq>
 80019a0:	4602      	mov	r2, r0
 80019a2:	4b15      	ldr	r3, [pc, #84]	; (80019f8 <HAL_Init+0x68>)
 80019a4:	699b      	ldr	r3, [r3, #24]
 80019a6:	0a1b      	lsrs	r3, r3, #8
 80019a8:	f003 030f 	and.w	r3, r3, #15
 80019ac:	4913      	ldr	r1, [pc, #76]	; (80019fc <HAL_Init+0x6c>)
 80019ae:	5ccb      	ldrb	r3, [r1, r3]
 80019b0:	f003 031f 	and.w	r3, r3, #31
 80019b4:	fa22 f303 	lsr.w	r3, r2, r3
 80019b8:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80019ba:	4b0f      	ldr	r3, [pc, #60]	; (80019f8 <HAL_Init+0x68>)
 80019bc:	699b      	ldr	r3, [r3, #24]
 80019be:	f003 030f 	and.w	r3, r3, #15
 80019c2:	4a0e      	ldr	r2, [pc, #56]	; (80019fc <HAL_Init+0x6c>)
 80019c4:	5cd3      	ldrb	r3, [r2, r3]
 80019c6:	f003 031f 	and.w	r3, r3, #31
 80019ca:	687a      	ldr	r2, [r7, #4]
 80019cc:	fa22 f303 	lsr.w	r3, r2, r3
 80019d0:	4a0b      	ldr	r2, [pc, #44]	; (8001a00 <HAL_Init+0x70>)
 80019d2:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80019d4:	4a0b      	ldr	r2, [pc, #44]	; (8001a04 <HAL_Init+0x74>)
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80019da:	200f      	movs	r0, #15
 80019dc:	f000 f814 	bl	8001a08 <HAL_InitTick>
 80019e0:	4603      	mov	r3, r0
 80019e2:	2b00      	cmp	r3, #0
 80019e4:	d001      	beq.n	80019ea <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 80019e6:	2301      	movs	r3, #1
 80019e8:	e002      	b.n	80019f0 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80019ea:	f7ff fa4f 	bl	8000e8c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80019ee:	2300      	movs	r3, #0
}
 80019f0:	4618      	mov	r0, r3
 80019f2:	3708      	adds	r7, #8
 80019f4:	46bd      	mov	sp, r7
 80019f6:	bd80      	pop	{r7, pc}
 80019f8:	58024400 	.word	0x58024400
 80019fc:	080253a8 	.word	0x080253a8
 8001a00:	24000008 	.word	0x24000008
 8001a04:	24000004 	.word	0x24000004

08001a08 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	b082      	sub	sp, #8
 8001a0c:	af00      	add	r7, sp, #0
 8001a0e:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8001a10:	4b15      	ldr	r3, [pc, #84]	; (8001a68 <HAL_InitTick+0x60>)
 8001a12:	781b      	ldrb	r3, [r3, #0]
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d101      	bne.n	8001a1c <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8001a18:	2301      	movs	r3, #1
 8001a1a:	e021      	b.n	8001a60 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8001a1c:	4b13      	ldr	r3, [pc, #76]	; (8001a6c <HAL_InitTick+0x64>)
 8001a1e:	681a      	ldr	r2, [r3, #0]
 8001a20:	4b11      	ldr	r3, [pc, #68]	; (8001a68 <HAL_InitTick+0x60>)
 8001a22:	781b      	ldrb	r3, [r3, #0]
 8001a24:	4619      	mov	r1, r3
 8001a26:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a2a:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a2e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a32:	4618      	mov	r0, r3
 8001a34:	f000 f94d 	bl	8001cd2 <HAL_SYSTICK_Config>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	2b00      	cmp	r3, #0
 8001a3c:	d001      	beq.n	8001a42 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8001a3e:	2301      	movs	r3, #1
 8001a40:	e00e      	b.n	8001a60 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	2b0f      	cmp	r3, #15
 8001a46:	d80a      	bhi.n	8001a5e <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001a48:	2200      	movs	r2, #0
 8001a4a:	6879      	ldr	r1, [r7, #4]
 8001a4c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a50:	f000 f917 	bl	8001c82 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001a54:	4a06      	ldr	r2, [pc, #24]	; (8001a70 <HAL_InitTick+0x68>)
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	e000      	b.n	8001a60 <HAL_InitTick+0x58>
    return HAL_ERROR;
 8001a5e:	2301      	movs	r3, #1
}
 8001a60:	4618      	mov	r0, r3
 8001a62:	3708      	adds	r7, #8
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}
 8001a68:	24000010 	.word	0x24000010
 8001a6c:	24000004 	.word	0x24000004
 8001a70:	2400000c 	.word	0x2400000c

08001a74 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001a74:	b480      	push	{r7}
 8001a76:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001a78:	4b06      	ldr	r3, [pc, #24]	; (8001a94 <HAL_IncTick+0x20>)
 8001a7a:	781b      	ldrb	r3, [r3, #0]
 8001a7c:	461a      	mov	r2, r3
 8001a7e:	4b06      	ldr	r3, [pc, #24]	; (8001a98 <HAL_IncTick+0x24>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	4413      	add	r3, r2
 8001a84:	4a04      	ldr	r2, [pc, #16]	; (8001a98 <HAL_IncTick+0x24>)
 8001a86:	6013      	str	r3, [r2, #0]
}
 8001a88:	bf00      	nop
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a90:	4770      	bx	lr
 8001a92:	bf00      	nop
 8001a94:	24000010 	.word	0x24000010
 8001a98:	24000444 	.word	0x24000444

08001a9c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001a9c:	b480      	push	{r7}
 8001a9e:	af00      	add	r7, sp, #0
  return uwTick;
 8001aa0:	4b03      	ldr	r3, [pc, #12]	; (8001ab0 <HAL_GetTick+0x14>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
}
 8001aa4:	4618      	mov	r0, r3
 8001aa6:	46bd      	mov	sp, r7
 8001aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aac:	4770      	bx	lr
 8001aae:	bf00      	nop
 8001ab0:	24000444 	.word	0x24000444

08001ab4 <HAL_GetREVID>:
/**
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
   return((DBGMCU->IDCODE) >> 16);
 8001ab8:	4b03      	ldr	r3, [pc, #12]	; (8001ac8 <HAL_GetREVID+0x14>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	0c1b      	lsrs	r3, r3, #16
}
 8001abe:	4618      	mov	r0, r3
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac6:	4770      	bx	lr
 8001ac8:	5c001000 	.word	0x5c001000

08001acc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001acc:	b480      	push	{r7}
 8001ace:	b085      	sub	sp, #20
 8001ad0:	af00      	add	r7, sp, #0
 8001ad2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	f003 0307 	and.w	r3, r3, #7
 8001ada:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001adc:	4b0b      	ldr	r3, [pc, #44]	; (8001b0c <__NVIC_SetPriorityGrouping+0x40>)
 8001ade:	68db      	ldr	r3, [r3, #12]
 8001ae0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001ae2:	68ba      	ldr	r2, [r7, #8]
 8001ae4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001ae8:	4013      	ands	r3, r2
 8001aea:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001af0:	68bb      	ldr	r3, [r7, #8]
 8001af2:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8001af4:	4b06      	ldr	r3, [pc, #24]	; (8001b10 <__NVIC_SetPriorityGrouping+0x44>)
 8001af6:	4313      	orrs	r3, r2
 8001af8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001afa:	4a04      	ldr	r2, [pc, #16]	; (8001b0c <__NVIC_SetPriorityGrouping+0x40>)
 8001afc:	68bb      	ldr	r3, [r7, #8]
 8001afe:	60d3      	str	r3, [r2, #12]
}
 8001b00:	bf00      	nop
 8001b02:	3714      	adds	r7, #20
 8001b04:	46bd      	mov	sp, r7
 8001b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b0a:	4770      	bx	lr
 8001b0c:	e000ed00 	.word	0xe000ed00
 8001b10:	05fa0000 	.word	0x05fa0000

08001b14 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001b14:	b480      	push	{r7}
 8001b16:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001b18:	4b04      	ldr	r3, [pc, #16]	; (8001b2c <__NVIC_GetPriorityGrouping+0x18>)
 8001b1a:	68db      	ldr	r3, [r3, #12]
 8001b1c:	0a1b      	lsrs	r3, r3, #8
 8001b1e:	f003 0307 	and.w	r3, r3, #7
}
 8001b22:	4618      	mov	r0, r3
 8001b24:	46bd      	mov	sp, r7
 8001b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b2a:	4770      	bx	lr
 8001b2c:	e000ed00 	.word	0xe000ed00

08001b30 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001b30:	b480      	push	{r7}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	4603      	mov	r3, r0
 8001b38:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001b3a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	db0b      	blt.n	8001b5a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b42:	88fb      	ldrh	r3, [r7, #6]
 8001b44:	f003 021f 	and.w	r2, r3, #31
 8001b48:	4907      	ldr	r1, [pc, #28]	; (8001b68 <__NVIC_EnableIRQ+0x38>)
 8001b4a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001b4e:	095b      	lsrs	r3, r3, #5
 8001b50:	2001      	movs	r0, #1
 8001b52:	fa00 f202 	lsl.w	r2, r0, r2
 8001b56:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001b5a:	bf00      	nop
 8001b5c:	370c      	adds	r7, #12
 8001b5e:	46bd      	mov	sp, r7
 8001b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b64:	4770      	bx	lr
 8001b66:	bf00      	nop
 8001b68:	e000e100 	.word	0xe000e100

08001b6c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001b6c:	b480      	push	{r7}
 8001b6e:	b083      	sub	sp, #12
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	4603      	mov	r3, r0
 8001b74:	6039      	str	r1, [r7, #0]
 8001b76:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001b78:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001b7c:	2b00      	cmp	r3, #0
 8001b7e:	db0a      	blt.n	8001b96 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001b80:	683b      	ldr	r3, [r7, #0]
 8001b82:	b2da      	uxtb	r2, r3
 8001b84:	490c      	ldr	r1, [pc, #48]	; (8001bb8 <__NVIC_SetPriority+0x4c>)
 8001b86:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001b8a:	0112      	lsls	r2, r2, #4
 8001b8c:	b2d2      	uxtb	r2, r2
 8001b8e:	440b      	add	r3, r1
 8001b90:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001b94:	e00a      	b.n	8001bac <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001b96:	683b      	ldr	r3, [r7, #0]
 8001b98:	b2da      	uxtb	r2, r3
 8001b9a:	4908      	ldr	r1, [pc, #32]	; (8001bbc <__NVIC_SetPriority+0x50>)
 8001b9c:	88fb      	ldrh	r3, [r7, #6]
 8001b9e:	f003 030f 	and.w	r3, r3, #15
 8001ba2:	3b04      	subs	r3, #4
 8001ba4:	0112      	lsls	r2, r2, #4
 8001ba6:	b2d2      	uxtb	r2, r2
 8001ba8:	440b      	add	r3, r1
 8001baa:	761a      	strb	r2, [r3, #24]
}
 8001bac:	bf00      	nop
 8001bae:	370c      	adds	r7, #12
 8001bb0:	46bd      	mov	sp, r7
 8001bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb6:	4770      	bx	lr
 8001bb8:	e000e100 	.word	0xe000e100
 8001bbc:	e000ed00 	.word	0xe000ed00

08001bc0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001bc0:	b480      	push	{r7}
 8001bc2:	b089      	sub	sp, #36	; 0x24
 8001bc4:	af00      	add	r7, sp, #0
 8001bc6:	60f8      	str	r0, [r7, #12]
 8001bc8:	60b9      	str	r1, [r7, #8]
 8001bca:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	f003 0307 	and.w	r3, r3, #7
 8001bd2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001bd4:	69fb      	ldr	r3, [r7, #28]
 8001bd6:	f1c3 0307 	rsb	r3, r3, #7
 8001bda:	2b04      	cmp	r3, #4
 8001bdc:	bf28      	it	cs
 8001bde:	2304      	movcs	r3, #4
 8001be0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001be2:	69fb      	ldr	r3, [r7, #28]
 8001be4:	3304      	adds	r3, #4
 8001be6:	2b06      	cmp	r3, #6
 8001be8:	d902      	bls.n	8001bf0 <NVIC_EncodePriority+0x30>
 8001bea:	69fb      	ldr	r3, [r7, #28]
 8001bec:	3b03      	subs	r3, #3
 8001bee:	e000      	b.n	8001bf2 <NVIC_EncodePriority+0x32>
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001bf4:	f04f 32ff 	mov.w	r2, #4294967295
 8001bf8:	69bb      	ldr	r3, [r7, #24]
 8001bfa:	fa02 f303 	lsl.w	r3, r2, r3
 8001bfe:	43da      	mvns	r2, r3
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	401a      	ands	r2, r3
 8001c04:	697b      	ldr	r3, [r7, #20]
 8001c06:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001c08:	f04f 31ff 	mov.w	r1, #4294967295
 8001c0c:	697b      	ldr	r3, [r7, #20]
 8001c0e:	fa01 f303 	lsl.w	r3, r1, r3
 8001c12:	43d9      	mvns	r1, r3
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001c18:	4313      	orrs	r3, r2
         );
}
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	3724      	adds	r7, #36	; 0x24
 8001c1e:	46bd      	mov	sp, r7
 8001c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c24:	4770      	bx	lr
	...

08001c28 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b082      	sub	sp, #8
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	3b01      	subs	r3, #1
 8001c34:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001c38:	d301      	bcc.n	8001c3e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001c3a:	2301      	movs	r3, #1
 8001c3c:	e00f      	b.n	8001c5e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001c3e:	4a0a      	ldr	r2, [pc, #40]	; (8001c68 <SysTick_Config+0x40>)
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	3b01      	subs	r3, #1
 8001c44:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001c46:	210f      	movs	r1, #15
 8001c48:	f04f 30ff 	mov.w	r0, #4294967295
 8001c4c:	f7ff ff8e 	bl	8001b6c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001c50:	4b05      	ldr	r3, [pc, #20]	; (8001c68 <SysTick_Config+0x40>)
 8001c52:	2200      	movs	r2, #0
 8001c54:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001c56:	4b04      	ldr	r3, [pc, #16]	; (8001c68 <SysTick_Config+0x40>)
 8001c58:	2207      	movs	r2, #7
 8001c5a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001c5c:	2300      	movs	r3, #0
}
 8001c5e:	4618      	mov	r0, r3
 8001c60:	3708      	adds	r7, #8
 8001c62:	46bd      	mov	sp, r7
 8001c64:	bd80      	pop	{r7, pc}
 8001c66:	bf00      	nop
 8001c68:	e000e010 	.word	0xe000e010

08001c6c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	b082      	sub	sp, #8
 8001c70:	af00      	add	r7, sp, #0
 8001c72:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001c74:	6878      	ldr	r0, [r7, #4]
 8001c76:	f7ff ff29 	bl	8001acc <__NVIC_SetPriorityGrouping>
}
 8001c7a:	bf00      	nop
 8001c7c:	3708      	adds	r7, #8
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	bd80      	pop	{r7, pc}

08001c82 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001c82:	b580      	push	{r7, lr}
 8001c84:	b086      	sub	sp, #24
 8001c86:	af00      	add	r7, sp, #0
 8001c88:	4603      	mov	r3, r0
 8001c8a:	60b9      	str	r1, [r7, #8]
 8001c8c:	607a      	str	r2, [r7, #4]
 8001c8e:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8001c90:	f7ff ff40 	bl	8001b14 <__NVIC_GetPriorityGrouping>
 8001c94:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001c96:	687a      	ldr	r2, [r7, #4]
 8001c98:	68b9      	ldr	r1, [r7, #8]
 8001c9a:	6978      	ldr	r0, [r7, #20]
 8001c9c:	f7ff ff90 	bl	8001bc0 <NVIC_EncodePriority>
 8001ca0:	4602      	mov	r2, r0
 8001ca2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001ca6:	4611      	mov	r1, r2
 8001ca8:	4618      	mov	r0, r3
 8001caa:	f7ff ff5f 	bl	8001b6c <__NVIC_SetPriority>
}
 8001cae:	bf00      	nop
 8001cb0:	3718      	adds	r7, #24
 8001cb2:	46bd      	mov	sp, r7
 8001cb4:	bd80      	pop	{r7, pc}

08001cb6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001cb6:	b580      	push	{r7, lr}
 8001cb8:	b082      	sub	sp, #8
 8001cba:	af00      	add	r7, sp, #0
 8001cbc:	4603      	mov	r3, r0
 8001cbe:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001cc0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	f7ff ff33 	bl	8001b30 <__NVIC_EnableIRQ>
}
 8001cca:	bf00      	nop
 8001ccc:	3708      	adds	r7, #8
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	bd80      	pop	{r7, pc}

08001cd2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001cd2:	b580      	push	{r7, lr}
 8001cd4:	b082      	sub	sp, #8
 8001cd6:	af00      	add	r7, sp, #0
 8001cd8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001cda:	6878      	ldr	r0, [r7, #4]
 8001cdc:	f7ff ffa4 	bl	8001c28 <SysTick_Config>
 8001ce0:	4603      	mov	r3, r0
}
 8001ce2:	4618      	mov	r0, r3
 8001ce4:	3708      	adds	r7, #8
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	bd80      	pop	{r7, pc}
	...

08001cec <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8001cec:	b480      	push	{r7}
 8001cee:	b083      	sub	sp, #12
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	2b04      	cmp	r3, #4
 8001cf8:	d106      	bne.n	8001d08 <HAL_SYSTICK_CLKSourceConfig+0x1c>
  {
    SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 8001cfa:	4b09      	ldr	r3, [pc, #36]	; (8001d20 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	4a08      	ldr	r2, [pc, #32]	; (8001d20 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 8001d00:	f043 0304 	orr.w	r3, r3, #4
 8001d04:	6013      	str	r3, [r2, #0]
  }
  else
  {
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
  }
}
 8001d06:	e005      	b.n	8001d14 <HAL_SYSTICK_CLKSourceConfig+0x28>
    SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 8001d08:	4b05      	ldr	r3, [pc, #20]	; (8001d20 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	4a04      	ldr	r2, [pc, #16]	; (8001d20 <HAL_SYSTICK_CLKSourceConfig+0x34>)
 8001d0e:	f023 0304 	bic.w	r3, r3, #4
 8001d12:	6013      	str	r3, [r2, #0]
}
 8001d14:	bf00      	nop
 8001d16:	370c      	adds	r7, #12
 8001d18:	46bd      	mov	sp, r7
 8001d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d1e:	4770      	bx	lr
 8001d20:	e000e010 	.word	0xe000e010

08001d24 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b082      	sub	sp, #8
 8001d28:	af00      	add	r7, sp, #0
 8001d2a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d101      	bne.n	8001d36 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001d32:	2301      	movs	r3, #1
 8001d34:	e054      	b.n	8001de0 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	7f5b      	ldrb	r3, [r3, #29]
 8001d3a:	b2db      	uxtb	r3, r3
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d105      	bne.n	8001d4c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	2200      	movs	r2, #0
 8001d44:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001d46:	6878      	ldr	r0, [r7, #4]
 8001d48:	f7ff f8ba 	bl	8000ec0 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	2202      	movs	r2, #2
 8001d50:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	791b      	ldrb	r3, [r3, #4]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d10c      	bne.n	8001d74 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	4a22      	ldr	r2, [pc, #136]	; (8001de8 <HAL_CRC_Init+0xc4>)
 8001d60:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	689a      	ldr	r2, [r3, #8]
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	f022 0218 	bic.w	r2, r2, #24
 8001d70:	609a      	str	r2, [r3, #8]
 8001d72:	e00c      	b.n	8001d8e <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8001d74:	687b      	ldr	r3, [r7, #4]
 8001d76:	6899      	ldr	r1, [r3, #8]
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	68db      	ldr	r3, [r3, #12]
 8001d7c:	461a      	mov	r2, r3
 8001d7e:	6878      	ldr	r0, [r7, #4]
 8001d80:	f000 f834 	bl	8001dec <HAL_CRCEx_Polynomial_Set>
 8001d84:	4603      	mov	r3, r0
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	d001      	beq.n	8001d8e <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 8001d8a:	2301      	movs	r3, #1
 8001d8c:	e028      	b.n	8001de0 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	795b      	ldrb	r3, [r3, #5]
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d105      	bne.n	8001da2 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	681b      	ldr	r3, [r3, #0]
 8001d9a:	f04f 32ff 	mov.w	r2, #4294967295
 8001d9e:	611a      	str	r2, [r3, #16]
 8001da0:	e004      	b.n	8001dac <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	687a      	ldr	r2, [r7, #4]
 8001da8:	6912      	ldr	r2, [r2, #16]
 8001daa:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	689b      	ldr	r3, [r3, #8]
 8001db2:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	695a      	ldr	r2, [r3, #20]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	430a      	orrs	r2, r1
 8001dc0:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	689b      	ldr	r3, [r3, #8]
 8001dc8:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	699a      	ldr	r2, [r3, #24]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	430a      	orrs	r2, r1
 8001dd6:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	2201      	movs	r2, #1
 8001ddc:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8001dde:	2300      	movs	r3, #0
}
 8001de0:	4618      	mov	r0, r3
 8001de2:	3708      	adds	r7, #8
 8001de4:	46bd      	mov	sp, r7
 8001de6:	bd80      	pop	{r7, pc}
 8001de8:	04c11db7 	.word	0x04c11db7

08001dec <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8001dec:	b480      	push	{r7}
 8001dee:	b087      	sub	sp, #28
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	60f8      	str	r0, [r7, #12]
 8001df4:	60b9      	str	r1, [r7, #8]
 8001df6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8001df8:	2300      	movs	r3, #0
 8001dfa:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8001dfc:	231f      	movs	r3, #31
 8001dfe:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8001e00:	68bb      	ldr	r3, [r7, #8]
 8001e02:	f003 0301 	and.w	r3, r3, #1
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d102      	bne.n	8001e10 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 8001e0a:	2301      	movs	r3, #1
 8001e0c:	75fb      	strb	r3, [r7, #23]
 8001e0e:	e063      	b.n	8001ed8 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8001e10:	bf00      	nop
 8001e12:	693b      	ldr	r3, [r7, #16]
 8001e14:	1e5a      	subs	r2, r3, #1
 8001e16:	613a      	str	r2, [r7, #16]
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d009      	beq.n	8001e30 <HAL_CRCEx_Polynomial_Set+0x44>
 8001e1c:	693b      	ldr	r3, [r7, #16]
 8001e1e:	f003 031f 	and.w	r3, r3, #31
 8001e22:	68ba      	ldr	r2, [r7, #8]
 8001e24:	fa22 f303 	lsr.w	r3, r2, r3
 8001e28:	f003 0301 	and.w	r3, r3, #1
 8001e2c:	2b00      	cmp	r3, #0
 8001e2e:	d0f0      	beq.n	8001e12 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	2b18      	cmp	r3, #24
 8001e34:	d846      	bhi.n	8001ec4 <HAL_CRCEx_Polynomial_Set+0xd8>
 8001e36:	a201      	add	r2, pc, #4	; (adr r2, 8001e3c <HAL_CRCEx_Polynomial_Set+0x50>)
 8001e38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001e3c:	08001ecb 	.word	0x08001ecb
 8001e40:	08001ec5 	.word	0x08001ec5
 8001e44:	08001ec5 	.word	0x08001ec5
 8001e48:	08001ec5 	.word	0x08001ec5
 8001e4c:	08001ec5 	.word	0x08001ec5
 8001e50:	08001ec5 	.word	0x08001ec5
 8001e54:	08001ec5 	.word	0x08001ec5
 8001e58:	08001ec5 	.word	0x08001ec5
 8001e5c:	08001eb9 	.word	0x08001eb9
 8001e60:	08001ec5 	.word	0x08001ec5
 8001e64:	08001ec5 	.word	0x08001ec5
 8001e68:	08001ec5 	.word	0x08001ec5
 8001e6c:	08001ec5 	.word	0x08001ec5
 8001e70:	08001ec5 	.word	0x08001ec5
 8001e74:	08001ec5 	.word	0x08001ec5
 8001e78:	08001ec5 	.word	0x08001ec5
 8001e7c:	08001ead 	.word	0x08001ead
 8001e80:	08001ec5 	.word	0x08001ec5
 8001e84:	08001ec5 	.word	0x08001ec5
 8001e88:	08001ec5 	.word	0x08001ec5
 8001e8c:	08001ec5 	.word	0x08001ec5
 8001e90:	08001ec5 	.word	0x08001ec5
 8001e94:	08001ec5 	.word	0x08001ec5
 8001e98:	08001ec5 	.word	0x08001ec5
 8001e9c:	08001ea1 	.word	0x08001ea1
    {
          
      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8001ea0:	693b      	ldr	r3, [r7, #16]
 8001ea2:	2b06      	cmp	r3, #6
 8001ea4:	d913      	bls.n	8001ece <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 8001ea6:	2301      	movs	r3, #1
 8001ea8:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8001eaa:	e010      	b.n	8001ece <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8001eac:	693b      	ldr	r3, [r7, #16]
 8001eae:	2b07      	cmp	r3, #7
 8001eb0:	d90f      	bls.n	8001ed2 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8001eb2:	2301      	movs	r3, #1
 8001eb4:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8001eb6:	e00c      	b.n	8001ed2 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 8001eb8:	693b      	ldr	r3, [r7, #16]
 8001eba:	2b0f      	cmp	r3, #15
 8001ebc:	d90b      	bls.n	8001ed6 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8001ebe:	2301      	movs	r3, #1
 8001ec0:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8001ec2:	e008      	b.n	8001ed6 <HAL_CRCEx_Polynomial_Set+0xea>
 
      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8001ec4:	2301      	movs	r3, #1
 8001ec6:	75fb      	strb	r3, [r7, #23]
        break;
 8001ec8:	e006      	b.n	8001ed8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001eca:	bf00      	nop
 8001ecc:	e004      	b.n	8001ed8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001ece:	bf00      	nop
 8001ed0:	e002      	b.n	8001ed8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001ed2:	bf00      	nop
 8001ed4:	e000      	b.n	8001ed8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001ed6:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 8001ed8:	7dfb      	ldrb	r3, [r7, #23]
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d10d      	bne.n	8001efa <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8001ede:	68fb      	ldr	r3, [r7, #12]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	68ba      	ldr	r2, [r7, #8]
 8001ee4:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	689b      	ldr	r3, [r3, #8]
 8001eec:	f023 0118 	bic.w	r1, r3, #24
 8001ef0:	68fb      	ldr	r3, [r7, #12]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	687a      	ldr	r2, [r7, #4]
 8001ef6:	430a      	orrs	r2, r1
 8001ef8:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 8001efa:	7dfb      	ldrb	r3, [r7, #23]
}
 8001efc:	4618      	mov	r0, r3
 8001efe:	371c      	adds	r7, #28
 8001f00:	46bd      	mov	sp, r7
 8001f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f06:	4770      	bx	lr

08001f08 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	b086      	sub	sp, #24
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
 8001f10:	f7ff fdc4 	bl	8001a9c <HAL_GetTick>
 8001f14:	6138      	str	r0, [r7, #16]

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d101      	bne.n	8001f20 <HAL_DMA_Abort+0x18>
  {
    return HAL_ERROR;
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	e2dc      	b.n	80024da <HAL_DMA_Abort+0x5d2>
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001f26:	b2db      	uxtb	r3, r3
 8001f28:	2b02      	cmp	r3, #2
 8001f2a:	d008      	beq.n	8001f3e <HAL_DMA_Abort+0x36>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	2280      	movs	r2, #128	; 0x80
 8001f30:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	2200      	movs	r2, #0
 8001f36:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    return HAL_ERROR;
 8001f3a:	2301      	movs	r3, #1
 8001f3c:	e2cd      	b.n	80024da <HAL_DMA_Abort+0x5d2>
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	4a76      	ldr	r2, [pc, #472]	; (800211c <HAL_DMA_Abort+0x214>)
 8001f44:	4293      	cmp	r3, r2
 8001f46:	d04a      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4a74      	ldr	r2, [pc, #464]	; (8002120 <HAL_DMA_Abort+0x218>)
 8001f4e:	4293      	cmp	r3, r2
 8001f50:	d045      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	4a73      	ldr	r2, [pc, #460]	; (8002124 <HAL_DMA_Abort+0x21c>)
 8001f58:	4293      	cmp	r3, r2
 8001f5a:	d040      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	4a71      	ldr	r2, [pc, #452]	; (8002128 <HAL_DMA_Abort+0x220>)
 8001f62:	4293      	cmp	r3, r2
 8001f64:	d03b      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	4a70      	ldr	r2, [pc, #448]	; (800212c <HAL_DMA_Abort+0x224>)
 8001f6c:	4293      	cmp	r3, r2
 8001f6e:	d036      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	4a6e      	ldr	r2, [pc, #440]	; (8002130 <HAL_DMA_Abort+0x228>)
 8001f76:	4293      	cmp	r3, r2
 8001f78:	d031      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	4a6d      	ldr	r2, [pc, #436]	; (8002134 <HAL_DMA_Abort+0x22c>)
 8001f80:	4293      	cmp	r3, r2
 8001f82:	d02c      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	4a6b      	ldr	r2, [pc, #428]	; (8002138 <HAL_DMA_Abort+0x230>)
 8001f8a:	4293      	cmp	r3, r2
 8001f8c:	d027      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4a6a      	ldr	r2, [pc, #424]	; (800213c <HAL_DMA_Abort+0x234>)
 8001f94:	4293      	cmp	r3, r2
 8001f96:	d022      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	4a68      	ldr	r2, [pc, #416]	; (8002140 <HAL_DMA_Abort+0x238>)
 8001f9e:	4293      	cmp	r3, r2
 8001fa0:	d01d      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	4a67      	ldr	r2, [pc, #412]	; (8002144 <HAL_DMA_Abort+0x23c>)
 8001fa8:	4293      	cmp	r3, r2
 8001faa:	d018      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	4a65      	ldr	r2, [pc, #404]	; (8002148 <HAL_DMA_Abort+0x240>)
 8001fb2:	4293      	cmp	r3, r2
 8001fb4:	d013      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	4a64      	ldr	r2, [pc, #400]	; (800214c <HAL_DMA_Abort+0x244>)
 8001fbc:	4293      	cmp	r3, r2
 8001fbe:	d00e      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	4a62      	ldr	r2, [pc, #392]	; (8002150 <HAL_DMA_Abort+0x248>)
 8001fc6:	4293      	cmp	r3, r2
 8001fc8:	d009      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	4a61      	ldr	r2, [pc, #388]	; (8002154 <HAL_DMA_Abort+0x24c>)
 8001fd0:	4293      	cmp	r3, r2
 8001fd2:	d004      	beq.n	8001fde <HAL_DMA_Abort+0xd6>
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a5f      	ldr	r2, [pc, #380]	; (8002158 <HAL_DMA_Abort+0x250>)
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d101      	bne.n	8001fe2 <HAL_DMA_Abort+0xda>
 8001fde:	2301      	movs	r3, #1
 8001fe0:	e000      	b.n	8001fe4 <HAL_DMA_Abort+0xdc>
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d013      	beq.n	8002010 <HAL_DMA_Abort+0x108>
    {
       /* Disable DMA All Interrupts  */
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	681a      	ldr	r2, [r3, #0]
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	681b      	ldr	r3, [r3, #0]
 8001ff2:	f022 021e 	bic.w	r2, r2, #30
 8001ff6:	601a      	str	r2, [r3, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	695a      	ldr	r2, [r3, #20]
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002006:	615a      	str	r2, [r3, #20]

      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	617b      	str	r3, [r7, #20]
 800200e:	e00a      	b.n	8002026 <HAL_DMA_Abort+0x11e>
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	681a      	ldr	r2, [r3, #0]
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	f022 020e 	bic.w	r2, r2, #14
 800201e:	601a      	str	r2, [r3, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	617b      	str	r3, [r7, #20]
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	4a3c      	ldr	r2, [pc, #240]	; (800211c <HAL_DMA_Abort+0x214>)
 800202c:	4293      	cmp	r3, r2
 800202e:	d072      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	4a3a      	ldr	r2, [pc, #232]	; (8002120 <HAL_DMA_Abort+0x218>)
 8002036:	4293      	cmp	r3, r2
 8002038:	d06d      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	681b      	ldr	r3, [r3, #0]
 800203e:	4a39      	ldr	r2, [pc, #228]	; (8002124 <HAL_DMA_Abort+0x21c>)
 8002040:	4293      	cmp	r3, r2
 8002042:	d068      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	4a37      	ldr	r2, [pc, #220]	; (8002128 <HAL_DMA_Abort+0x220>)
 800204a:	4293      	cmp	r3, r2
 800204c:	d063      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	4a36      	ldr	r2, [pc, #216]	; (800212c <HAL_DMA_Abort+0x224>)
 8002054:	4293      	cmp	r3, r2
 8002056:	d05e      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	4a34      	ldr	r2, [pc, #208]	; (8002130 <HAL_DMA_Abort+0x228>)
 800205e:	4293      	cmp	r3, r2
 8002060:	d059      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	4a33      	ldr	r2, [pc, #204]	; (8002134 <HAL_DMA_Abort+0x22c>)
 8002068:	4293      	cmp	r3, r2
 800206a:	d054      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	4a31      	ldr	r2, [pc, #196]	; (8002138 <HAL_DMA_Abort+0x230>)
 8002072:	4293      	cmp	r3, r2
 8002074:	d04f      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	4a30      	ldr	r2, [pc, #192]	; (800213c <HAL_DMA_Abort+0x234>)
 800207c:	4293      	cmp	r3, r2
 800207e:	d04a      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	4a2e      	ldr	r2, [pc, #184]	; (8002140 <HAL_DMA_Abort+0x238>)
 8002086:	4293      	cmp	r3, r2
 8002088:	d045      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	4a2d      	ldr	r2, [pc, #180]	; (8002144 <HAL_DMA_Abort+0x23c>)
 8002090:	4293      	cmp	r3, r2
 8002092:	d040      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	4a2b      	ldr	r2, [pc, #172]	; (8002148 <HAL_DMA_Abort+0x240>)
 800209a:	4293      	cmp	r3, r2
 800209c:	d03b      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	4a2a      	ldr	r2, [pc, #168]	; (800214c <HAL_DMA_Abort+0x244>)
 80020a4:	4293      	cmp	r3, r2
 80020a6:	d036      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	4a28      	ldr	r2, [pc, #160]	; (8002150 <HAL_DMA_Abort+0x248>)
 80020ae:	4293      	cmp	r3, r2
 80020b0:	d031      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	4a27      	ldr	r2, [pc, #156]	; (8002154 <HAL_DMA_Abort+0x24c>)
 80020b8:	4293      	cmp	r3, r2
 80020ba:	d02c      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	4a25      	ldr	r2, [pc, #148]	; (8002158 <HAL_DMA_Abort+0x250>)
 80020c2:	4293      	cmp	r3, r2
 80020c4:	d027      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	4a24      	ldr	r2, [pc, #144]	; (800215c <HAL_DMA_Abort+0x254>)
 80020cc:	4293      	cmp	r3, r2
 80020ce:	d022      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	4a22      	ldr	r2, [pc, #136]	; (8002160 <HAL_DMA_Abort+0x258>)
 80020d6:	4293      	cmp	r3, r2
 80020d8:	d01d      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	4a21      	ldr	r2, [pc, #132]	; (8002164 <HAL_DMA_Abort+0x25c>)
 80020e0:	4293      	cmp	r3, r2
 80020e2:	d018      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	4a1f      	ldr	r2, [pc, #124]	; (8002168 <HAL_DMA_Abort+0x260>)
 80020ea:	4293      	cmp	r3, r2
 80020ec:	d013      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	4a1e      	ldr	r2, [pc, #120]	; (800216c <HAL_DMA_Abort+0x264>)
 80020f4:	4293      	cmp	r3, r2
 80020f6:	d00e      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	4a1c      	ldr	r2, [pc, #112]	; (8002170 <HAL_DMA_Abort+0x268>)
 80020fe:	4293      	cmp	r3, r2
 8002100:	d009      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	4a1b      	ldr	r2, [pc, #108]	; (8002174 <HAL_DMA_Abort+0x26c>)
 8002108:	4293      	cmp	r3, r2
 800210a:	d004      	beq.n	8002116 <HAL_DMA_Abort+0x20e>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	4a19      	ldr	r2, [pc, #100]	; (8002178 <HAL_DMA_Abort+0x270>)
 8002112:	4293      	cmp	r3, r2
 8002114:	d132      	bne.n	800217c <HAL_DMA_Abort+0x274>
 8002116:	2301      	movs	r3, #1
 8002118:	e031      	b.n	800217e <HAL_DMA_Abort+0x276>
 800211a:	bf00      	nop
 800211c:	40020010 	.word	0x40020010
 8002120:	40020028 	.word	0x40020028
 8002124:	40020040 	.word	0x40020040
 8002128:	40020058 	.word	0x40020058
 800212c:	40020070 	.word	0x40020070
 8002130:	40020088 	.word	0x40020088
 8002134:	400200a0 	.word	0x400200a0
 8002138:	400200b8 	.word	0x400200b8
 800213c:	40020410 	.word	0x40020410
 8002140:	40020428 	.word	0x40020428
 8002144:	40020440 	.word	0x40020440
 8002148:	40020458 	.word	0x40020458
 800214c:	40020470 	.word	0x40020470
 8002150:	40020488 	.word	0x40020488
 8002154:	400204a0 	.word	0x400204a0
 8002158:	400204b8 	.word	0x400204b8
 800215c:	58025408 	.word	0x58025408
 8002160:	5802541c 	.word	0x5802541c
 8002164:	58025430 	.word	0x58025430
 8002168:	58025444 	.word	0x58025444
 800216c:	58025458 	.word	0x58025458
 8002170:	5802546c 	.word	0x5802546c
 8002174:	58025480 	.word	0x58025480
 8002178:	58025494 	.word	0x58025494
 800217c:	2300      	movs	r3, #0
 800217e:	2b00      	cmp	r3, #0
 8002180:	d007      	beq.n	8002192 <HAL_DMA_Abort+0x28a>
    {
      /* disable the DMAMUX sync overrun IT */
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002186:	681a      	ldr	r2, [r3, #0]
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800218c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002190:	601a      	str	r2, [r3, #0]
    }

    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	4a6d      	ldr	r2, [pc, #436]	; (800234c <HAL_DMA_Abort+0x444>)
 8002198:	4293      	cmp	r3, r2
 800219a:	d04a      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	4a6b      	ldr	r2, [pc, #428]	; (8002350 <HAL_DMA_Abort+0x448>)
 80021a2:	4293      	cmp	r3, r2
 80021a4:	d045      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	4a6a      	ldr	r2, [pc, #424]	; (8002354 <HAL_DMA_Abort+0x44c>)
 80021ac:	4293      	cmp	r3, r2
 80021ae:	d040      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	4a68      	ldr	r2, [pc, #416]	; (8002358 <HAL_DMA_Abort+0x450>)
 80021b6:	4293      	cmp	r3, r2
 80021b8:	d03b      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	4a67      	ldr	r2, [pc, #412]	; (800235c <HAL_DMA_Abort+0x454>)
 80021c0:	4293      	cmp	r3, r2
 80021c2:	d036      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	4a65      	ldr	r2, [pc, #404]	; (8002360 <HAL_DMA_Abort+0x458>)
 80021ca:	4293      	cmp	r3, r2
 80021cc:	d031      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	4a64      	ldr	r2, [pc, #400]	; (8002364 <HAL_DMA_Abort+0x45c>)
 80021d4:	4293      	cmp	r3, r2
 80021d6:	d02c      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	4a62      	ldr	r2, [pc, #392]	; (8002368 <HAL_DMA_Abort+0x460>)
 80021de:	4293      	cmp	r3, r2
 80021e0:	d027      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	4a61      	ldr	r2, [pc, #388]	; (800236c <HAL_DMA_Abort+0x464>)
 80021e8:	4293      	cmp	r3, r2
 80021ea:	d022      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	4a5f      	ldr	r2, [pc, #380]	; (8002370 <HAL_DMA_Abort+0x468>)
 80021f2:	4293      	cmp	r3, r2
 80021f4:	d01d      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	4a5e      	ldr	r2, [pc, #376]	; (8002374 <HAL_DMA_Abort+0x46c>)
 80021fc:	4293      	cmp	r3, r2
 80021fe:	d018      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	4a5c      	ldr	r2, [pc, #368]	; (8002378 <HAL_DMA_Abort+0x470>)
 8002206:	4293      	cmp	r3, r2
 8002208:	d013      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	4a5b      	ldr	r2, [pc, #364]	; (800237c <HAL_DMA_Abort+0x474>)
 8002210:	4293      	cmp	r3, r2
 8002212:	d00e      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	4a59      	ldr	r2, [pc, #356]	; (8002380 <HAL_DMA_Abort+0x478>)
 800221a:	4293      	cmp	r3, r2
 800221c:	d009      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	4a58      	ldr	r2, [pc, #352]	; (8002384 <HAL_DMA_Abort+0x47c>)
 8002224:	4293      	cmp	r3, r2
 8002226:	d004      	beq.n	8002232 <HAL_DMA_Abort+0x32a>
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a56      	ldr	r2, [pc, #344]	; (8002388 <HAL_DMA_Abort+0x480>)
 800222e:	4293      	cmp	r3, r2
 8002230:	d108      	bne.n	8002244 <HAL_DMA_Abort+0x33c>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	681a      	ldr	r2, [r3, #0]
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	f022 0201 	bic.w	r2, r2, #1
 8002240:	601a      	str	r2, [r3, #0]
 8002242:	e007      	b.n	8002254 <HAL_DMA_Abort+0x34c>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	681a      	ldr	r2, [r3, #0]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	f022 0201 	bic.w	r2, r2, #1
 8002252:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
 8002254:	e013      	b.n	800227e <HAL_DMA_Abort+0x376>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8002256:	f7ff fc21 	bl	8001a9c <HAL_GetTick>
 800225a:	4602      	mov	r2, r0
 800225c:	693b      	ldr	r3, [r7, #16]
 800225e:	1ad3      	subs	r3, r2, r3
 8002260:	2b05      	cmp	r3, #5
 8002262:	d90c      	bls.n	800227e <HAL_DMA_Abort+0x376>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	2220      	movs	r2, #32
 8002268:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	2203      	movs	r2, #3
 800226e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	2200      	movs	r2, #0
 8002276:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        return HAL_ERROR;
 800227a:	2301      	movs	r3, #1
 800227c:	e12d      	b.n	80024da <HAL_DMA_Abort+0x5d2>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
 800227e:	697b      	ldr	r3, [r7, #20]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	f003 0301 	and.w	r3, r3, #1
 8002286:	2b00      	cmp	r3, #0
 8002288:	d1e5      	bne.n	8002256 <HAL_DMA_Abort+0x34e>
      }
    }

    /* Clear all interrupt flags at correct offset within the register */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	4a2f      	ldr	r2, [pc, #188]	; (800234c <HAL_DMA_Abort+0x444>)
 8002290:	4293      	cmp	r3, r2
 8002292:	d04a      	beq.n	800232a <HAL_DMA_Abort+0x422>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	4a2d      	ldr	r2, [pc, #180]	; (8002350 <HAL_DMA_Abort+0x448>)
 800229a:	4293      	cmp	r3, r2
 800229c:	d045      	beq.n	800232a <HAL_DMA_Abort+0x422>
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	4a2c      	ldr	r2, [pc, #176]	; (8002354 <HAL_DMA_Abort+0x44c>)
 80022a4:	4293      	cmp	r3, r2
 80022a6:	d040      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	4a2a      	ldr	r2, [pc, #168]	; (8002358 <HAL_DMA_Abort+0x450>)
 80022ae:	4293      	cmp	r3, r2
 80022b0:	d03b      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	4a29      	ldr	r2, [pc, #164]	; (800235c <HAL_DMA_Abort+0x454>)
 80022b8:	4293      	cmp	r3, r2
 80022ba:	d036      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	4a27      	ldr	r2, [pc, #156]	; (8002360 <HAL_DMA_Abort+0x458>)
 80022c2:	4293      	cmp	r3, r2
 80022c4:	d031      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	4a26      	ldr	r2, [pc, #152]	; (8002364 <HAL_DMA_Abort+0x45c>)
 80022cc:	4293      	cmp	r3, r2
 80022ce:	d02c      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	4a24      	ldr	r2, [pc, #144]	; (8002368 <HAL_DMA_Abort+0x460>)
 80022d6:	4293      	cmp	r3, r2
 80022d8:	d027      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	4a23      	ldr	r2, [pc, #140]	; (800236c <HAL_DMA_Abort+0x464>)
 80022e0:	4293      	cmp	r3, r2
 80022e2:	d022      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	4a21      	ldr	r2, [pc, #132]	; (8002370 <HAL_DMA_Abort+0x468>)
 80022ea:	4293      	cmp	r3, r2
 80022ec:	d01d      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	4a20      	ldr	r2, [pc, #128]	; (8002374 <HAL_DMA_Abort+0x46c>)
 80022f4:	4293      	cmp	r3, r2
 80022f6:	d018      	beq.n	800232a <HAL_DMA_Abort+0x422>
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	4a1e      	ldr	r2, [pc, #120]	; (8002378 <HAL_DMA_Abort+0x470>)
 80022fe:	4293      	cmp	r3, r2
 8002300:	d013      	beq.n	800232a <HAL_DMA_Abort+0x422>
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	4a1d      	ldr	r2, [pc, #116]	; (800237c <HAL_DMA_Abort+0x474>)
 8002308:	4293      	cmp	r3, r2
 800230a:	d00e      	beq.n	800232a <HAL_DMA_Abort+0x422>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	4a1b      	ldr	r2, [pc, #108]	; (8002380 <HAL_DMA_Abort+0x478>)
 8002312:	4293      	cmp	r3, r2
 8002314:	d009      	beq.n	800232a <HAL_DMA_Abort+0x422>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	4a1a      	ldr	r2, [pc, #104]	; (8002384 <HAL_DMA_Abort+0x47c>)
 800231c:	4293      	cmp	r3, r2
 800231e:	d004      	beq.n	800232a <HAL_DMA_Abort+0x422>
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4a18      	ldr	r2, [pc, #96]	; (8002388 <HAL_DMA_Abort+0x480>)
 8002326:	4293      	cmp	r3, r2
 8002328:	d101      	bne.n	800232e <HAL_DMA_Abort+0x426>
 800232a:	2301      	movs	r3, #1
 800232c:	e000      	b.n	8002330 <HAL_DMA_Abort+0x428>
 800232e:	2300      	movs	r3, #0
 8002330:	2b00      	cmp	r3, #0
 8002332:	d02b      	beq.n	800238c <HAL_DMA_Abort+0x484>
    {
      regs_dma = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002338:	60bb      	str	r3, [r7, #8]
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800233e:	f003 031f 	and.w	r3, r3, #31
 8002342:	223f      	movs	r2, #63	; 0x3f
 8002344:	409a      	lsls	r2, r3
 8002346:	68bb      	ldr	r3, [r7, #8]
 8002348:	609a      	str	r2, [r3, #8]
 800234a:	e02a      	b.n	80023a2 <HAL_DMA_Abort+0x49a>
 800234c:	40020010 	.word	0x40020010
 8002350:	40020028 	.word	0x40020028
 8002354:	40020040 	.word	0x40020040
 8002358:	40020058 	.word	0x40020058
 800235c:	40020070 	.word	0x40020070
 8002360:	40020088 	.word	0x40020088
 8002364:	400200a0 	.word	0x400200a0
 8002368:	400200b8 	.word	0x400200b8
 800236c:	40020410 	.word	0x40020410
 8002370:	40020428 	.word	0x40020428
 8002374:	40020440 	.word	0x40020440
 8002378:	40020458 	.word	0x40020458
 800237c:	40020470 	.word	0x40020470
 8002380:	40020488 	.word	0x40020488
 8002384:	400204a0 	.word	0x400204a0
 8002388:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002390:	60fb      	str	r3, [r7, #12]
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002396:	f003 031f 	and.w	r3, r3, #31
 800239a:	2201      	movs	r2, #1
 800239c:	409a      	lsls	r2, r3
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	605a      	str	r2, [r3, #4]
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	4a4f      	ldr	r2, [pc, #316]	; (80024e4 <HAL_DMA_Abort+0x5dc>)
 80023a8:	4293      	cmp	r3, r2
 80023aa:	d072      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	4a4d      	ldr	r2, [pc, #308]	; (80024e8 <HAL_DMA_Abort+0x5e0>)
 80023b2:	4293      	cmp	r3, r2
 80023b4:	d06d      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	4a4c      	ldr	r2, [pc, #304]	; (80024ec <HAL_DMA_Abort+0x5e4>)
 80023bc:	4293      	cmp	r3, r2
 80023be:	d068      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	4a4a      	ldr	r2, [pc, #296]	; (80024f0 <HAL_DMA_Abort+0x5e8>)
 80023c6:	4293      	cmp	r3, r2
 80023c8:	d063      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	4a49      	ldr	r2, [pc, #292]	; (80024f4 <HAL_DMA_Abort+0x5ec>)
 80023d0:	4293      	cmp	r3, r2
 80023d2:	d05e      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	4a47      	ldr	r2, [pc, #284]	; (80024f8 <HAL_DMA_Abort+0x5f0>)
 80023da:	4293      	cmp	r3, r2
 80023dc:	d059      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4a46      	ldr	r2, [pc, #280]	; (80024fc <HAL_DMA_Abort+0x5f4>)
 80023e4:	4293      	cmp	r3, r2
 80023e6:	d054      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	4a44      	ldr	r2, [pc, #272]	; (8002500 <HAL_DMA_Abort+0x5f8>)
 80023ee:	4293      	cmp	r3, r2
 80023f0:	d04f      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4a43      	ldr	r2, [pc, #268]	; (8002504 <HAL_DMA_Abort+0x5fc>)
 80023f8:	4293      	cmp	r3, r2
 80023fa:	d04a      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	4a41      	ldr	r2, [pc, #260]	; (8002508 <HAL_DMA_Abort+0x600>)
 8002402:	4293      	cmp	r3, r2
 8002404:	d045      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	4a40      	ldr	r2, [pc, #256]	; (800250c <HAL_DMA_Abort+0x604>)
 800240c:	4293      	cmp	r3, r2
 800240e:	d040      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	4a3e      	ldr	r2, [pc, #248]	; (8002510 <HAL_DMA_Abort+0x608>)
 8002416:	4293      	cmp	r3, r2
 8002418:	d03b      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	4a3d      	ldr	r2, [pc, #244]	; (8002514 <HAL_DMA_Abort+0x60c>)
 8002420:	4293      	cmp	r3, r2
 8002422:	d036      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	4a3b      	ldr	r2, [pc, #236]	; (8002518 <HAL_DMA_Abort+0x610>)
 800242a:	4293      	cmp	r3, r2
 800242c:	d031      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	4a3a      	ldr	r2, [pc, #232]	; (800251c <HAL_DMA_Abort+0x614>)
 8002434:	4293      	cmp	r3, r2
 8002436:	d02c      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	4a38      	ldr	r2, [pc, #224]	; (8002520 <HAL_DMA_Abort+0x618>)
 800243e:	4293      	cmp	r3, r2
 8002440:	d027      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	4a37      	ldr	r2, [pc, #220]	; (8002524 <HAL_DMA_Abort+0x61c>)
 8002448:	4293      	cmp	r3, r2
 800244a:	d022      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	4a35      	ldr	r2, [pc, #212]	; (8002528 <HAL_DMA_Abort+0x620>)
 8002452:	4293      	cmp	r3, r2
 8002454:	d01d      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	4a34      	ldr	r2, [pc, #208]	; (800252c <HAL_DMA_Abort+0x624>)
 800245c:	4293      	cmp	r3, r2
 800245e:	d018      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	4a32      	ldr	r2, [pc, #200]	; (8002530 <HAL_DMA_Abort+0x628>)
 8002466:	4293      	cmp	r3, r2
 8002468:	d013      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	4a31      	ldr	r2, [pc, #196]	; (8002534 <HAL_DMA_Abort+0x62c>)
 8002470:	4293      	cmp	r3, r2
 8002472:	d00e      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4a2f      	ldr	r2, [pc, #188]	; (8002538 <HAL_DMA_Abort+0x630>)
 800247a:	4293      	cmp	r3, r2
 800247c:	d009      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	4a2e      	ldr	r2, [pc, #184]	; (800253c <HAL_DMA_Abort+0x634>)
 8002484:	4293      	cmp	r3, r2
 8002486:	d004      	beq.n	8002492 <HAL_DMA_Abort+0x58a>
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	4a2c      	ldr	r2, [pc, #176]	; (8002540 <HAL_DMA_Abort+0x638>)
 800248e:	4293      	cmp	r3, r2
 8002490:	d101      	bne.n	8002496 <HAL_DMA_Abort+0x58e>
 8002492:	2301      	movs	r3, #1
 8002494:	e000      	b.n	8002498 <HAL_DMA_Abort+0x590>
 8002496:	2300      	movs	r3, #0
 8002498:	2b00      	cmp	r3, #0
 800249a:	d015      	beq.n	80024c8 <HAL_DMA_Abort+0x5c0>
    {
      /* Clear the DMAMUX synchro overrun flag */
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80024a0:	687a      	ldr	r2, [r7, #4]
 80024a2:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80024a4:	605a      	str	r2, [r3, #4]

      if(hdma->DMAmuxRequestGen != 0U)
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d00c      	beq.n	80024c8 <HAL_DMA_Abort+0x5c0>
      {
        /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT */
        /* disable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80024b2:	681a      	ldr	r2, [r3, #0]
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80024b8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80024bc:	601a      	str	r2, [r3, #0]

        /* Clear the DMAMUX request generator overrun flag */
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80024c2:	687a      	ldr	r2, [r7, #4]
 80024c4:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80024c6:	605a      	str	r2, [r3, #4]
      }
    }

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	2201      	movs	r2, #1
 80024cc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	2200      	movs	r2, #0
 80024d4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  }

  return HAL_OK;
 80024d8:	2300      	movs	r3, #0
}
 80024da:	4618      	mov	r0, r3
 80024dc:	3718      	adds	r7, #24
 80024de:	46bd      	mov	sp, r7
 80024e0:	bd80      	pop	{r7, pc}
 80024e2:	bf00      	nop
 80024e4:	40020010 	.word	0x40020010
 80024e8:	40020028 	.word	0x40020028
 80024ec:	40020040 	.word	0x40020040
 80024f0:	40020058 	.word	0x40020058
 80024f4:	40020070 	.word	0x40020070
 80024f8:	40020088 	.word	0x40020088
 80024fc:	400200a0 	.word	0x400200a0
 8002500:	400200b8 	.word	0x400200b8
 8002504:	40020410 	.word	0x40020410
 8002508:	40020428 	.word	0x40020428
 800250c:	40020440 	.word	0x40020440
 8002510:	40020458 	.word	0x40020458
 8002514:	40020470 	.word	0x40020470
 8002518:	40020488 	.word	0x40020488
 800251c:	400204a0 	.word	0x400204a0
 8002520:	400204b8 	.word	0x400204b8
 8002524:	58025408 	.word	0x58025408
 8002528:	5802541c 	.word	0x5802541c
 800252c:	58025430 	.word	0x58025430
 8002530:	58025444 	.word	0x58025444
 8002534:	58025458 	.word	0x58025458
 8002538:	5802546c 	.word	0x5802546c
 800253c:	58025480 	.word	0x58025480
 8002540:	58025494 	.word	0x58025494

08002544 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8002544:	b580      	push	{r7, lr}
 8002546:	b084      	sub	sp, #16
 8002548:	af00      	add	r7, sp, #0
 800254a:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2b00      	cmp	r3, #0
 8002550:	d101      	bne.n	8002556 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 8002552:	2301      	movs	r3, #1
 8002554:	e237      	b.n	80029c6 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800255c:	b2db      	uxtb	r3, r3
 800255e:	2b02      	cmp	r3, #2
 8002560:	d004      	beq.n	800256c <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	2280      	movs	r2, #128	; 0x80
 8002566:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8002568:	2301      	movs	r3, #1
 800256a:	e22c      	b.n	80029c6 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	4a5c      	ldr	r2, [pc, #368]	; (80026e4 <HAL_DMA_Abort_IT+0x1a0>)
 8002572:	4293      	cmp	r3, r2
 8002574:	d04a      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	4a5b      	ldr	r2, [pc, #364]	; (80026e8 <HAL_DMA_Abort_IT+0x1a4>)
 800257c:	4293      	cmp	r3, r2
 800257e:	d045      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	4a59      	ldr	r2, [pc, #356]	; (80026ec <HAL_DMA_Abort_IT+0x1a8>)
 8002586:	4293      	cmp	r3, r2
 8002588:	d040      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	4a58      	ldr	r2, [pc, #352]	; (80026f0 <HAL_DMA_Abort_IT+0x1ac>)
 8002590:	4293      	cmp	r3, r2
 8002592:	d03b      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	4a56      	ldr	r2, [pc, #344]	; (80026f4 <HAL_DMA_Abort_IT+0x1b0>)
 800259a:	4293      	cmp	r3, r2
 800259c:	d036      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	4a55      	ldr	r2, [pc, #340]	; (80026f8 <HAL_DMA_Abort_IT+0x1b4>)
 80025a4:	4293      	cmp	r3, r2
 80025a6:	d031      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	4a53      	ldr	r2, [pc, #332]	; (80026fc <HAL_DMA_Abort_IT+0x1b8>)
 80025ae:	4293      	cmp	r3, r2
 80025b0:	d02c      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	4a52      	ldr	r2, [pc, #328]	; (8002700 <HAL_DMA_Abort_IT+0x1bc>)
 80025b8:	4293      	cmp	r3, r2
 80025ba:	d027      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	4a50      	ldr	r2, [pc, #320]	; (8002704 <HAL_DMA_Abort_IT+0x1c0>)
 80025c2:	4293      	cmp	r3, r2
 80025c4:	d022      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	4a4f      	ldr	r2, [pc, #316]	; (8002708 <HAL_DMA_Abort_IT+0x1c4>)
 80025cc:	4293      	cmp	r3, r2
 80025ce:	d01d      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	4a4d      	ldr	r2, [pc, #308]	; (800270c <HAL_DMA_Abort_IT+0x1c8>)
 80025d6:	4293      	cmp	r3, r2
 80025d8:	d018      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	4a4c      	ldr	r2, [pc, #304]	; (8002710 <HAL_DMA_Abort_IT+0x1cc>)
 80025e0:	4293      	cmp	r3, r2
 80025e2:	d013      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	4a4a      	ldr	r2, [pc, #296]	; (8002714 <HAL_DMA_Abort_IT+0x1d0>)
 80025ea:	4293      	cmp	r3, r2
 80025ec:	d00e      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	4a49      	ldr	r2, [pc, #292]	; (8002718 <HAL_DMA_Abort_IT+0x1d4>)
 80025f4:	4293      	cmp	r3, r2
 80025f6:	d009      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	4a47      	ldr	r2, [pc, #284]	; (800271c <HAL_DMA_Abort_IT+0x1d8>)
 80025fe:	4293      	cmp	r3, r2
 8002600:	d004      	beq.n	800260c <HAL_DMA_Abort_IT+0xc8>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	4a46      	ldr	r2, [pc, #280]	; (8002720 <HAL_DMA_Abort_IT+0x1dc>)
 8002608:	4293      	cmp	r3, r2
 800260a:	d101      	bne.n	8002610 <HAL_DMA_Abort_IT+0xcc>
 800260c:	2301      	movs	r3, #1
 800260e:	e000      	b.n	8002612 <HAL_DMA_Abort_IT+0xce>
 8002610:	2300      	movs	r3, #0
 8002612:	2b00      	cmp	r3, #0
 8002614:	f000 8086 	beq.w	8002724 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	2204      	movs	r2, #4
 800261c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	4a2f      	ldr	r2, [pc, #188]	; (80026e4 <HAL_DMA_Abort_IT+0x1a0>)
 8002626:	4293      	cmp	r3, r2
 8002628:	d04a      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	4a2e      	ldr	r2, [pc, #184]	; (80026e8 <HAL_DMA_Abort_IT+0x1a4>)
 8002630:	4293      	cmp	r3, r2
 8002632:	d045      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	4a2c      	ldr	r2, [pc, #176]	; (80026ec <HAL_DMA_Abort_IT+0x1a8>)
 800263a:	4293      	cmp	r3, r2
 800263c:	d040      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	4a2b      	ldr	r2, [pc, #172]	; (80026f0 <HAL_DMA_Abort_IT+0x1ac>)
 8002644:	4293      	cmp	r3, r2
 8002646:	d03b      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4a29      	ldr	r2, [pc, #164]	; (80026f4 <HAL_DMA_Abort_IT+0x1b0>)
 800264e:	4293      	cmp	r3, r2
 8002650:	d036      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	4a28      	ldr	r2, [pc, #160]	; (80026f8 <HAL_DMA_Abort_IT+0x1b4>)
 8002658:	4293      	cmp	r3, r2
 800265a:	d031      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	4a26      	ldr	r2, [pc, #152]	; (80026fc <HAL_DMA_Abort_IT+0x1b8>)
 8002662:	4293      	cmp	r3, r2
 8002664:	d02c      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	4a25      	ldr	r2, [pc, #148]	; (8002700 <HAL_DMA_Abort_IT+0x1bc>)
 800266c:	4293      	cmp	r3, r2
 800266e:	d027      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	4a23      	ldr	r2, [pc, #140]	; (8002704 <HAL_DMA_Abort_IT+0x1c0>)
 8002676:	4293      	cmp	r3, r2
 8002678:	d022      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	4a22      	ldr	r2, [pc, #136]	; (8002708 <HAL_DMA_Abort_IT+0x1c4>)
 8002680:	4293      	cmp	r3, r2
 8002682:	d01d      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4a20      	ldr	r2, [pc, #128]	; (800270c <HAL_DMA_Abort_IT+0x1c8>)
 800268a:	4293      	cmp	r3, r2
 800268c:	d018      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	4a1f      	ldr	r2, [pc, #124]	; (8002710 <HAL_DMA_Abort_IT+0x1cc>)
 8002694:	4293      	cmp	r3, r2
 8002696:	d013      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	4a1d      	ldr	r2, [pc, #116]	; (8002714 <HAL_DMA_Abort_IT+0x1d0>)
 800269e:	4293      	cmp	r3, r2
 80026a0:	d00e      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	4a1c      	ldr	r2, [pc, #112]	; (8002718 <HAL_DMA_Abort_IT+0x1d4>)
 80026a8:	4293      	cmp	r3, r2
 80026aa:	d009      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	4a1a      	ldr	r2, [pc, #104]	; (800271c <HAL_DMA_Abort_IT+0x1d8>)
 80026b2:	4293      	cmp	r3, r2
 80026b4:	d004      	beq.n	80026c0 <HAL_DMA_Abort_IT+0x17c>
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	4a19      	ldr	r2, [pc, #100]	; (8002720 <HAL_DMA_Abort_IT+0x1dc>)
 80026bc:	4293      	cmp	r3, r2
 80026be:	d108      	bne.n	80026d2 <HAL_DMA_Abort_IT+0x18e>
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	681a      	ldr	r2, [r3, #0]
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	f022 0201 	bic.w	r2, r2, #1
 80026ce:	601a      	str	r2, [r3, #0]
 80026d0:	e178      	b.n	80029c4 <HAL_DMA_Abort_IT+0x480>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	681a      	ldr	r2, [r3, #0]
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	f022 0201 	bic.w	r2, r2, #1
 80026e0:	601a      	str	r2, [r3, #0]
 80026e2:	e16f      	b.n	80029c4 <HAL_DMA_Abort_IT+0x480>
 80026e4:	40020010 	.word	0x40020010
 80026e8:	40020028 	.word	0x40020028
 80026ec:	40020040 	.word	0x40020040
 80026f0:	40020058 	.word	0x40020058
 80026f4:	40020070 	.word	0x40020070
 80026f8:	40020088 	.word	0x40020088
 80026fc:	400200a0 	.word	0x400200a0
 8002700:	400200b8 	.word	0x400200b8
 8002704:	40020410 	.word	0x40020410
 8002708:	40020428 	.word	0x40020428
 800270c:	40020440 	.word	0x40020440
 8002710:	40020458 	.word	0x40020458
 8002714:	40020470 	.word	0x40020470
 8002718:	40020488 	.word	0x40020488
 800271c:	400204a0 	.word	0x400204a0
 8002720:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	681a      	ldr	r2, [r3, #0]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	f022 020e 	bic.w	r2, r2, #14
 8002732:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	4a6c      	ldr	r2, [pc, #432]	; (80028ec <HAL_DMA_Abort_IT+0x3a8>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d04a      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	4a6b      	ldr	r2, [pc, #428]	; (80028f0 <HAL_DMA_Abort_IT+0x3ac>)
 8002744:	4293      	cmp	r3, r2
 8002746:	d045      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	4a69      	ldr	r2, [pc, #420]	; (80028f4 <HAL_DMA_Abort_IT+0x3b0>)
 800274e:	4293      	cmp	r3, r2
 8002750:	d040      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4a68      	ldr	r2, [pc, #416]	; (80028f8 <HAL_DMA_Abort_IT+0x3b4>)
 8002758:	4293      	cmp	r3, r2
 800275a:	d03b      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	4a66      	ldr	r2, [pc, #408]	; (80028fc <HAL_DMA_Abort_IT+0x3b8>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d036      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4a65      	ldr	r2, [pc, #404]	; (8002900 <HAL_DMA_Abort_IT+0x3bc>)
 800276c:	4293      	cmp	r3, r2
 800276e:	d031      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	4a63      	ldr	r2, [pc, #396]	; (8002904 <HAL_DMA_Abort_IT+0x3c0>)
 8002776:	4293      	cmp	r3, r2
 8002778:	d02c      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	4a62      	ldr	r2, [pc, #392]	; (8002908 <HAL_DMA_Abort_IT+0x3c4>)
 8002780:	4293      	cmp	r3, r2
 8002782:	d027      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	4a60      	ldr	r2, [pc, #384]	; (800290c <HAL_DMA_Abort_IT+0x3c8>)
 800278a:	4293      	cmp	r3, r2
 800278c:	d022      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	4a5f      	ldr	r2, [pc, #380]	; (8002910 <HAL_DMA_Abort_IT+0x3cc>)
 8002794:	4293      	cmp	r3, r2
 8002796:	d01d      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	681b      	ldr	r3, [r3, #0]
 800279c:	4a5d      	ldr	r2, [pc, #372]	; (8002914 <HAL_DMA_Abort_IT+0x3d0>)
 800279e:	4293      	cmp	r3, r2
 80027a0:	d018      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	4a5c      	ldr	r2, [pc, #368]	; (8002918 <HAL_DMA_Abort_IT+0x3d4>)
 80027a8:	4293      	cmp	r3, r2
 80027aa:	d013      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4a5a      	ldr	r2, [pc, #360]	; (800291c <HAL_DMA_Abort_IT+0x3d8>)
 80027b2:	4293      	cmp	r3, r2
 80027b4:	d00e      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	4a59      	ldr	r2, [pc, #356]	; (8002920 <HAL_DMA_Abort_IT+0x3dc>)
 80027bc:	4293      	cmp	r3, r2
 80027be:	d009      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	4a57      	ldr	r2, [pc, #348]	; (8002924 <HAL_DMA_Abort_IT+0x3e0>)
 80027c6:	4293      	cmp	r3, r2
 80027c8:	d004      	beq.n	80027d4 <HAL_DMA_Abort_IT+0x290>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	4a56      	ldr	r2, [pc, #344]	; (8002928 <HAL_DMA_Abort_IT+0x3e4>)
 80027d0:	4293      	cmp	r3, r2
 80027d2:	d108      	bne.n	80027e6 <HAL_DMA_Abort_IT+0x2a2>
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	681a      	ldr	r2, [r3, #0]
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	f022 0201 	bic.w	r2, r2, #1
 80027e2:	601a      	str	r2, [r3, #0]
 80027e4:	e007      	b.n	80027f6 <HAL_DMA_Abort_IT+0x2b2>
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	681a      	ldr	r2, [r3, #0]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	f022 0201 	bic.w	r2, r2, #1
 80027f4:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	4a3c      	ldr	r2, [pc, #240]	; (80028ec <HAL_DMA_Abort_IT+0x3a8>)
 80027fc:	4293      	cmp	r3, r2
 80027fe:	d072      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	4a3a      	ldr	r2, [pc, #232]	; (80028f0 <HAL_DMA_Abort_IT+0x3ac>)
 8002806:	4293      	cmp	r3, r2
 8002808:	d06d      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	4a39      	ldr	r2, [pc, #228]	; (80028f4 <HAL_DMA_Abort_IT+0x3b0>)
 8002810:	4293      	cmp	r3, r2
 8002812:	d068      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	4a37      	ldr	r2, [pc, #220]	; (80028f8 <HAL_DMA_Abort_IT+0x3b4>)
 800281a:	4293      	cmp	r3, r2
 800281c:	d063      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	4a36      	ldr	r2, [pc, #216]	; (80028fc <HAL_DMA_Abort_IT+0x3b8>)
 8002824:	4293      	cmp	r3, r2
 8002826:	d05e      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	4a34      	ldr	r2, [pc, #208]	; (8002900 <HAL_DMA_Abort_IT+0x3bc>)
 800282e:	4293      	cmp	r3, r2
 8002830:	d059      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	4a33      	ldr	r2, [pc, #204]	; (8002904 <HAL_DMA_Abort_IT+0x3c0>)
 8002838:	4293      	cmp	r3, r2
 800283a:	d054      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4a31      	ldr	r2, [pc, #196]	; (8002908 <HAL_DMA_Abort_IT+0x3c4>)
 8002842:	4293      	cmp	r3, r2
 8002844:	d04f      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	4a30      	ldr	r2, [pc, #192]	; (800290c <HAL_DMA_Abort_IT+0x3c8>)
 800284c:	4293      	cmp	r3, r2
 800284e:	d04a      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	4a2e      	ldr	r2, [pc, #184]	; (8002910 <HAL_DMA_Abort_IT+0x3cc>)
 8002856:	4293      	cmp	r3, r2
 8002858:	d045      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	4a2d      	ldr	r2, [pc, #180]	; (8002914 <HAL_DMA_Abort_IT+0x3d0>)
 8002860:	4293      	cmp	r3, r2
 8002862:	d040      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	4a2b      	ldr	r2, [pc, #172]	; (8002918 <HAL_DMA_Abort_IT+0x3d4>)
 800286a:	4293      	cmp	r3, r2
 800286c:	d03b      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	4a2a      	ldr	r2, [pc, #168]	; (800291c <HAL_DMA_Abort_IT+0x3d8>)
 8002874:	4293      	cmp	r3, r2
 8002876:	d036      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	4a28      	ldr	r2, [pc, #160]	; (8002920 <HAL_DMA_Abort_IT+0x3dc>)
 800287e:	4293      	cmp	r3, r2
 8002880:	d031      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	4a27      	ldr	r2, [pc, #156]	; (8002924 <HAL_DMA_Abort_IT+0x3e0>)
 8002888:	4293      	cmp	r3, r2
 800288a:	d02c      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a25      	ldr	r2, [pc, #148]	; (8002928 <HAL_DMA_Abort_IT+0x3e4>)
 8002892:	4293      	cmp	r3, r2
 8002894:	d027      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4a24      	ldr	r2, [pc, #144]	; (800292c <HAL_DMA_Abort_IT+0x3e8>)
 800289c:	4293      	cmp	r3, r2
 800289e:	d022      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	4a22      	ldr	r2, [pc, #136]	; (8002930 <HAL_DMA_Abort_IT+0x3ec>)
 80028a6:	4293      	cmp	r3, r2
 80028a8:	d01d      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	4a21      	ldr	r2, [pc, #132]	; (8002934 <HAL_DMA_Abort_IT+0x3f0>)
 80028b0:	4293      	cmp	r3, r2
 80028b2:	d018      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	4a1f      	ldr	r2, [pc, #124]	; (8002938 <HAL_DMA_Abort_IT+0x3f4>)
 80028ba:	4293      	cmp	r3, r2
 80028bc:	d013      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	4a1e      	ldr	r2, [pc, #120]	; (800293c <HAL_DMA_Abort_IT+0x3f8>)
 80028c4:	4293      	cmp	r3, r2
 80028c6:	d00e      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4a1c      	ldr	r2, [pc, #112]	; (8002940 <HAL_DMA_Abort_IT+0x3fc>)
 80028ce:	4293      	cmp	r3, r2
 80028d0:	d009      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a1b      	ldr	r2, [pc, #108]	; (8002944 <HAL_DMA_Abort_IT+0x400>)
 80028d8:	4293      	cmp	r3, r2
 80028da:	d004      	beq.n	80028e6 <HAL_DMA_Abort_IT+0x3a2>
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	4a19      	ldr	r2, [pc, #100]	; (8002948 <HAL_DMA_Abort_IT+0x404>)
 80028e2:	4293      	cmp	r3, r2
 80028e4:	d132      	bne.n	800294c <HAL_DMA_Abort_IT+0x408>
 80028e6:	2301      	movs	r3, #1
 80028e8:	e031      	b.n	800294e <HAL_DMA_Abort_IT+0x40a>
 80028ea:	bf00      	nop
 80028ec:	40020010 	.word	0x40020010
 80028f0:	40020028 	.word	0x40020028
 80028f4:	40020040 	.word	0x40020040
 80028f8:	40020058 	.word	0x40020058
 80028fc:	40020070 	.word	0x40020070
 8002900:	40020088 	.word	0x40020088
 8002904:	400200a0 	.word	0x400200a0
 8002908:	400200b8 	.word	0x400200b8
 800290c:	40020410 	.word	0x40020410
 8002910:	40020428 	.word	0x40020428
 8002914:	40020440 	.word	0x40020440
 8002918:	40020458 	.word	0x40020458
 800291c:	40020470 	.word	0x40020470
 8002920:	40020488 	.word	0x40020488
 8002924:	400204a0 	.word	0x400204a0
 8002928:	400204b8 	.word	0x400204b8
 800292c:	58025408 	.word	0x58025408
 8002930:	5802541c 	.word	0x5802541c
 8002934:	58025430 	.word	0x58025430
 8002938:	58025444 	.word	0x58025444
 800293c:	58025458 	.word	0x58025458
 8002940:	5802546c 	.word	0x5802546c
 8002944:	58025480 	.word	0x58025480
 8002948:	58025494 	.word	0x58025494
 800294c:	2300      	movs	r3, #0
 800294e:	2b00      	cmp	r3, #0
 8002950:	d028      	beq.n	80029a4 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002956:	681a      	ldr	r2, [r3, #0]
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800295c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002960:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002966:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800296c:	f003 031f 	and.w	r3, r3, #31
 8002970:	2201      	movs	r2, #1
 8002972:	409a      	lsls	r2, r3
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800297c:	687a      	ldr	r2, [r7, #4]
 800297e:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8002980:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8002986:	2b00      	cmp	r3, #0
 8002988:	d00c      	beq.n	80029a4 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800298e:	681a      	ldr	r2, [r3, #0]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8002994:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002998:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800299e:	687a      	ldr	r2, [r7, #4]
 80029a0:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80029a2:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	2201      	movs	r2, #1
 80029a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	2200      	movs	r2, #0
 80029b0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	d003      	beq.n	80029c4 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80029c0:	6878      	ldr	r0, [r7, #4]
 80029c2:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 80029c4:	2300      	movs	r3, #0
}
 80029c6:	4618      	mov	r0, r3
 80029c8:	3710      	adds	r7, #16
 80029ca:	46bd      	mov	sp, r7
 80029cc:	bd80      	pop	{r7, pc}
 80029ce:	bf00      	nop

080029d0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80029d0:	b580      	push	{r7, lr}
 80029d2:	b082      	sub	sp, #8
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d101      	bne.n	80029e2 <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 80029de:	2301      	movs	r3, #1
 80029e0:	e04f      	b.n	8002a82 <HAL_DMA2D_Init+0xb2>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
 80029e8:	b2db      	uxtb	r3, r3
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d106      	bne.n	80029fc <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	2200      	movs	r2, #0
 80029f2:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80029f6:	6878      	ldr	r0, [r7, #4]
 80029f8:	f7fe fa84 	bl	8000f04 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	2202      	movs	r2, #2
 8002a00:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	681a      	ldr	r2, [r3, #0]
 8002a0a:	4b20      	ldr	r3, [pc, #128]	; (8002a8c <HAL_DMA2D_Init+0xbc>)
 8002a0c:	4013      	ands	r3, r2
 8002a0e:	687a      	ldr	r2, [r7, #4]
 8002a10:	6851      	ldr	r1, [r2, #4]
 8002a12:	687a      	ldr	r2, [r7, #4]
 8002a14:	69d2      	ldr	r2, [r2, #28]
 8002a16:	4311      	orrs	r1, r2
 8002a18:	687a      	ldr	r2, [r7, #4]
 8002a1a:	6812      	ldr	r2, [r2, #0]
 8002a1c:	430b      	orrs	r3, r1
 8002a1e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002a26:	4b1a      	ldr	r3, [pc, #104]	; (8002a90 <HAL_DMA2D_Init+0xc0>)
 8002a28:	4013      	ands	r3, r2
 8002a2a:	687a      	ldr	r2, [r7, #4]
 8002a2c:	6891      	ldr	r1, [r2, #8]
 8002a2e:	687a      	ldr	r2, [r7, #4]
 8002a30:	6992      	ldr	r2, [r2, #24]
 8002a32:	4311      	orrs	r1, r2
 8002a34:	687a      	ldr	r2, [r7, #4]
 8002a36:	6812      	ldr	r2, [r2, #0]
 8002a38:	430b      	orrs	r3, r1
 8002a3a:	6353      	str	r3, [r2, #52]	; 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002a42:	4b14      	ldr	r3, [pc, #80]	; (8002a94 <HAL_DMA2D_Init+0xc4>)
 8002a44:	4013      	ands	r3, r2
 8002a46:	687a      	ldr	r2, [r7, #4]
 8002a48:	68d1      	ldr	r1, [r2, #12]
 8002a4a:	687a      	ldr	r2, [r7, #4]
 8002a4c:	6812      	ldr	r2, [r2, #0]
 8002a4e:	430b      	orrs	r3, r1
 8002a50:	6413      	str	r3, [r2, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a58:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	691b      	ldr	r3, [r3, #16]
 8002a60:	051a      	lsls	r2, r3, #20
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	695b      	ldr	r3, [r3, #20]
 8002a66:	055b      	lsls	r3, r3, #21
 8002a68:	431a      	orrs	r2, r3
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	430a      	orrs	r2, r1
 8002a70:	635a      	str	r2, [r3, #52]	; 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	2200      	movs	r2, #0
 8002a76:	665a      	str	r2, [r3, #100]	; 0x64

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	2201      	movs	r2, #1
 8002a7c:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

  return HAL_OK;
 8002a80:	2300      	movs	r3, #0
}
 8002a82:	4618      	mov	r0, r3
 8002a84:	3708      	adds	r7, #8
 8002a86:	46bd      	mov	sp, r7
 8002a88:	bd80      	pop	{r7, pc}
 8002a8a:	bf00      	nop
 8002a8c:	fff8ffbf 	.word	0xfff8ffbf
 8002a90:	fffffef8 	.word	0xfffffef8
 8002a94:	ffff0000 	.word	0xffff0000

08002a98 <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 8002a98:	b580      	push	{r7, lr}
 8002a9a:	b084      	sub	sp, #16
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	685b      	ldr	r3, [r3, #4]
 8002aa6:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	f003 0301 	and.w	r3, r3, #1
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d026      	beq.n	8002b08 <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8002aba:	68bb      	ldr	r3, [r7, #8]
 8002abc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d021      	beq.n	8002b08 <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	681a      	ldr	r2, [r3, #0]
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002ad2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002ad8:	f043 0201 	orr.w	r2, r3, #1
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	665a      	str	r2, [r3, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	681b      	ldr	r3, [r3, #0]
 8002ae4:	2201      	movs	r2, #1
 8002ae6:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	2204      	movs	r2, #4
 8002aec:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	2200      	movs	r2, #0
 8002af4:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002afc:	2b00      	cmp	r3, #0
 8002afe:	d003      	beq.n	8002b08 <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b04:	6878      	ldr	r0, [r7, #4]
 8002b06:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8002b08:	68fb      	ldr	r3, [r7, #12]
 8002b0a:	f003 0320 	and.w	r3, r3, #32
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d026      	beq.n	8002b60 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8002b12:	68bb      	ldr	r3, [r7, #8]
 8002b14:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d021      	beq.n	8002b60 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	681a      	ldr	r2, [r3, #0]
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002b2a:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	2220      	movs	r2, #32
 8002b32:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002b38:	f043 0202 	orr.w	r2, r3, #2
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	665a      	str	r2, [r3, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	2204      	movs	r2, #4
 8002b44:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d003      	beq.n	8002b60 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b5c:	6878      	ldr	r0, [r7, #4]
 8002b5e:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	f003 0308 	and.w	r3, r3, #8
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d026      	beq.n	8002bb8 <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8002b6a:	68bb      	ldr	r3, [r7, #8]
 8002b6c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d021      	beq.n	8002bb8 <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	681a      	ldr	r2, [r3, #0]
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002b82:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	2208      	movs	r2, #8
 8002b8a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002b90:	f043 0204 	orr.w	r2, r3, #4
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	665a      	str	r2, [r3, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	2204      	movs	r2, #4
 8002b9c:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d003      	beq.n	8002bb8 <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bb4:	6878      	ldr	r0, [r7, #4]
 8002bb6:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8002bb8:	68fb      	ldr	r3, [r7, #12]
 8002bba:	f003 0304 	and.w	r3, r3, #4
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d013      	beq.n	8002bea <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8002bc2:	68bb      	ldr	r3, [r7, #8]
 8002bc4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d00e      	beq.n	8002bea <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	681a      	ldr	r2, [r3, #0]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002bda:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	2204      	movs	r2, #4
 8002be2:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8002be4:	6878      	ldr	r0, [r7, #4]
 8002be6:	f000 f853 	bl	8002c90 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	f003 0302 	and.w	r3, r3, #2
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d024      	beq.n	8002c3e <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8002bf4:	68bb      	ldr	r3, [r7, #8]
 8002bf6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d01f      	beq.n	8002c3e <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	681a      	ldr	r2, [r3, #0]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002c0c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	2202      	movs	r2, #2
 8002c14:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	665a      	str	r2, [r3, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	2201      	movs	r2, #1
 8002c22:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2200      	movs	r2, #0
 8002c2a:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	6a1b      	ldr	r3, [r3, #32]
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d003      	beq.n	8002c3e <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	6a1b      	ldr	r3, [r3, #32]
 8002c3a:	6878      	ldr	r0, [r7, #4]
 8002c3c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8002c3e:	68fb      	ldr	r3, [r7, #12]
 8002c40:	f003 0310 	and.w	r3, r3, #16
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d01f      	beq.n	8002c88 <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8002c48:	68bb      	ldr	r3, [r7, #8]
 8002c4a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d01a      	beq.n	8002c88 <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	681a      	ldr	r2, [r3, #0]
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002c60:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	2210      	movs	r2, #16
 8002c68:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	665a      	str	r2, [r3, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	2201      	movs	r2, #1
 8002c76:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8002c82:	6878      	ldr	r0, [r7, #4]
 8002c84:	f000 f80e 	bl	8002ca4 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8002c88:	bf00      	nop
 8002c8a:	3710      	adds	r7, #16
 8002c8c:	46bd      	mov	sp, r7
 8002c8e:	bd80      	pop	{r7, pc}

08002c90 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8002c90:	b480      	push	{r7}
 8002c92:	b083      	sub	sp, #12
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8002c98:	bf00      	nop
 8002c9a:	370c      	adds	r7, #12
 8002c9c:	46bd      	mov	sp, r7
 8002c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca2:	4770      	bx	lr

08002ca4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8002ca4:	b480      	push	{r7}
 8002ca6:	b083      	sub	sp, #12
 8002ca8:	af00      	add	r7, sp, #0
 8002caa:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8002cac:	bf00      	nop
 8002cae:	370c      	adds	r7, #12
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cb6:	4770      	bx	lr

08002cb8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8002cb8:	b480      	push	{r7}
 8002cba:	b087      	sub	sp, #28
 8002cbc:	af00      	add	r7, sp, #0
 8002cbe:	6078      	str	r0, [r7, #4]
 8002cc0:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	685b      	ldr	r3, [r3, #4]
 8002cc6:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
    }
  }
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));

  if ((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_INPUT_YCBCR))
 8002cca:	683b      	ldr	r3, [r7, #0]
 8002ccc:	2b01      	cmp	r3, #1
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	f893 3060 	ldrb.w	r3, [r3, #96]	; 0x60
 8002cd4:	2b01      	cmp	r3, #1
 8002cd6:	d101      	bne.n	8002cdc <HAL_DMA2D_ConfigLayer+0x24>
 8002cd8:	2302      	movs	r3, #2
 8002cda:	e092      	b.n	8002e02 <HAL_DMA2D_ConfigLayer+0x14a>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	2201      	movs	r2, #1
 8002ce0:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	2202      	movs	r2, #2
 8002ce8:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8002cec:	683a      	ldr	r2, [r7, #0]
 8002cee:	4613      	mov	r3, r2
 8002cf0:	00db      	lsls	r3, r3, #3
 8002cf2:	1a9b      	subs	r3, r3, r2
 8002cf4:	009b      	lsls	r3, r3, #2
 8002cf6:	3328      	adds	r3, #40	; 0x28
 8002cf8:	687a      	ldr	r2, [r7, #4]
 8002cfa:	4413      	add	r3, r2
 8002cfc:	60fb      	str	r3, [r7, #12]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 8002cfe:	68fb      	ldr	r3, [r7, #12]
 8002d00:	685a      	ldr	r2, [r3, #4]
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	689b      	ldr	r3, [r3, #8]
 8002d06:	041b      	lsls	r3, r3, #16
 8002d08:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	691b      	ldr	r3, [r3, #16]
 8002d0e:	051b      	lsls	r3, r3, #20
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 8002d10:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	695b      	ldr	r3, [r3, #20]
 8002d16:	055b      	lsls	r3, r3, #21
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 8002d18:	4313      	orrs	r3, r2
 8002d1a:	613b      	str	r3, [r7, #16]
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
 8002d1c:	4b3c      	ldr	r3, [pc, #240]	; (8002e10 <HAL_DMA2D_ConfigLayer+0x158>)
 8002d1e:	617b      	str	r3, [r7, #20]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	685b      	ldr	r3, [r3, #4]
 8002d24:	2b0a      	cmp	r3, #10
 8002d26:	d003      	beq.n	8002d30 <HAL_DMA2D_ConfigLayer+0x78>
 8002d28:	68fb      	ldr	r3, [r7, #12]
 8002d2a:	685b      	ldr	r3, [r3, #4]
 8002d2c:	2b09      	cmp	r3, #9
 8002d2e:	d107      	bne.n	8002d40 <HAL_DMA2D_ConfigLayer+0x88>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	68db      	ldr	r3, [r3, #12]
 8002d34:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002d38:	693a      	ldr	r2, [r7, #16]
 8002d3a:	4313      	orrs	r3, r2
 8002d3c:	613b      	str	r3, [r7, #16]
 8002d3e:	e005      	b.n	8002d4c <HAL_DMA2D_ConfigLayer+0x94>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	68db      	ldr	r3, [r3, #12]
 8002d44:	061b      	lsls	r3, r3, #24
 8002d46:	693a      	ldr	r2, [r7, #16]
 8002d48:	4313      	orrs	r3, r2
 8002d4a:	613b      	str	r3, [r7, #16]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8002d4c:	683b      	ldr	r3, [r7, #0]
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d120      	bne.n	8002d94 <HAL_DMA2D_ConfigLayer+0xdc>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002d58:	697b      	ldr	r3, [r7, #20]
 8002d5a:	43db      	mvns	r3, r3
 8002d5c:	ea02 0103 	and.w	r1, r2, r3
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	693a      	ldr	r2, [r7, #16]
 8002d66:	430a      	orrs	r2, r1
 8002d68:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	68fa      	ldr	r2, [r7, #12]
 8002d70:	6812      	ldr	r2, [r2, #0]
 8002d72:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	685b      	ldr	r3, [r3, #4]
 8002d78:	2b0a      	cmp	r3, #10
 8002d7a:	d003      	beq.n	8002d84 <HAL_DMA2D_ConfigLayer+0xcc>
 8002d7c:	68fb      	ldr	r3, [r7, #12]
 8002d7e:	685b      	ldr	r3, [r3, #4]
 8002d80:	2b09      	cmp	r3, #9
 8002d82:	d135      	bne.n	8002df0 <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	68da      	ldr	r2, [r3, #12]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8002d90:	629a      	str	r2, [r3, #40]	; 0x28
 8002d92:	e02d      	b.n	8002df0 <HAL_DMA2D_ConfigLayer+0x138>
  }
  /* Configure the foreground DMA2D layer */
  else
  {

    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	685b      	ldr	r3, [r3, #4]
 8002d98:	2b0b      	cmp	r3, #11
 8002d9a:	d109      	bne.n	8002db0 <HAL_DMA2D_ConfigLayer+0xf8>
    {
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	699b      	ldr	r3, [r3, #24]
 8002da0:	049b      	lsls	r3, r3, #18
 8002da2:	693a      	ldr	r2, [r7, #16]
 8002da4:	4313      	orrs	r3, r2
 8002da6:	613b      	str	r3, [r7, #16]
      regMask  |= DMA2D_FGPFCCR_CSS;
 8002da8:	697b      	ldr	r3, [r7, #20]
 8002daa:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8002dae:	617b      	str	r3, [r7, #20]
    }

    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	69da      	ldr	r2, [r3, #28]
 8002db6:	697b      	ldr	r3, [r7, #20]
 8002db8:	43db      	mvns	r3, r3
 8002dba:	ea02 0103 	and.w	r1, r2, r3
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	693a      	ldr	r2, [r7, #16]
 8002dc4:	430a      	orrs	r2, r1
 8002dc6:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	68fa      	ldr	r2, [r7, #12]
 8002dce:	6812      	ldr	r2, [r2, #0]
 8002dd0:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002dd2:	68fb      	ldr	r3, [r7, #12]
 8002dd4:	685b      	ldr	r3, [r3, #4]
 8002dd6:	2b0a      	cmp	r3, #10
 8002dd8:	d003      	beq.n	8002de2 <HAL_DMA2D_ConfigLayer+0x12a>
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	685b      	ldr	r3, [r3, #4]
 8002dde:	2b09      	cmp	r3, #9
 8002de0:	d106      	bne.n	8002df0 <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	68da      	ldr	r2, [r3, #12]
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8002dee:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	2201      	movs	r2, #1
 8002df4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	2200      	movs	r2, #0
 8002dfc:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60

  return HAL_OK;
 8002e00:	2300      	movs	r3, #0
}
 8002e02:	4618      	mov	r0, r3
 8002e04:	371c      	adds	r7, #28
 8002e06:	46bd      	mov	sp, r7
 8002e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e0c:	4770      	bx	lr
 8002e0e:	bf00      	nop
 8002e10:	ff33000f 	.word	0xff33000f

08002e14 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002e14:	b480      	push	{r7}
 8002e16:	b089      	sub	sp, #36	; 0x24
 8002e18:	af00      	add	r7, sp, #0
 8002e1a:	6078      	str	r0, [r7, #4]
 8002e1c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8002e1e:	2300      	movs	r3, #0
 8002e20:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8002e22:	4b89      	ldr	r3, [pc, #548]	; (8003048 <HAL_GPIO_Init+0x234>)
 8002e24:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8002e26:	e194      	b.n	8003152 <HAL_GPIO_Init+0x33e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	681a      	ldr	r2, [r3, #0]
 8002e2c:	2101      	movs	r1, #1
 8002e2e:	69fb      	ldr	r3, [r7, #28]
 8002e30:	fa01 f303 	lsl.w	r3, r1, r3
 8002e34:	4013      	ands	r3, r2
 8002e36:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 8002e38:	693b      	ldr	r3, [r7, #16]
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	f000 8186 	beq.w	800314c <HAL_GPIO_Init+0x338>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002e40:	683b      	ldr	r3, [r7, #0]
 8002e42:	685b      	ldr	r3, [r3, #4]
 8002e44:	f003 0303 	and.w	r3, r3, #3
 8002e48:	2b01      	cmp	r3, #1
 8002e4a:	d005      	beq.n	8002e58 <HAL_GPIO_Init+0x44>
 8002e4c:	683b      	ldr	r3, [r7, #0]
 8002e4e:	685b      	ldr	r3, [r3, #4]
 8002e50:	f003 0303 	and.w	r3, r3, #3
 8002e54:	2b02      	cmp	r3, #2
 8002e56:	d130      	bne.n	8002eba <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	689b      	ldr	r3, [r3, #8]
 8002e5c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8002e5e:	69fb      	ldr	r3, [r7, #28]
 8002e60:	005b      	lsls	r3, r3, #1
 8002e62:	2203      	movs	r2, #3
 8002e64:	fa02 f303 	lsl.w	r3, r2, r3
 8002e68:	43db      	mvns	r3, r3
 8002e6a:	69ba      	ldr	r2, [r7, #24]
 8002e6c:	4013      	ands	r3, r2
 8002e6e:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002e70:	683b      	ldr	r3, [r7, #0]
 8002e72:	68da      	ldr	r2, [r3, #12]
 8002e74:	69fb      	ldr	r3, [r7, #28]
 8002e76:	005b      	lsls	r3, r3, #1
 8002e78:	fa02 f303 	lsl.w	r3, r2, r3
 8002e7c:	69ba      	ldr	r2, [r7, #24]
 8002e7e:	4313      	orrs	r3, r2
 8002e80:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	69ba      	ldr	r2, [r7, #24]
 8002e86:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	685b      	ldr	r3, [r3, #4]
 8002e8c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002e8e:	2201      	movs	r2, #1
 8002e90:	69fb      	ldr	r3, [r7, #28]
 8002e92:	fa02 f303 	lsl.w	r3, r2, r3
 8002e96:	43db      	mvns	r3, r3
 8002e98:	69ba      	ldr	r2, [r7, #24]
 8002e9a:	4013      	ands	r3, r2
 8002e9c:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002e9e:	683b      	ldr	r3, [r7, #0]
 8002ea0:	685b      	ldr	r3, [r3, #4]
 8002ea2:	091b      	lsrs	r3, r3, #4
 8002ea4:	f003 0201 	and.w	r2, r3, #1
 8002ea8:	69fb      	ldr	r3, [r7, #28]
 8002eaa:	fa02 f303 	lsl.w	r3, r2, r3
 8002eae:	69ba      	ldr	r2, [r7, #24]
 8002eb0:	4313      	orrs	r3, r2
 8002eb2:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	69ba      	ldr	r2, [r7, #24]
 8002eb8:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002eba:	683b      	ldr	r3, [r7, #0]
 8002ebc:	685b      	ldr	r3, [r3, #4]
 8002ebe:	f003 0303 	and.w	r3, r3, #3
 8002ec2:	2b03      	cmp	r3, #3
 8002ec4:	d017      	beq.n	8002ef6 <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	68db      	ldr	r3, [r3, #12]
 8002eca:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8002ecc:	69fb      	ldr	r3, [r7, #28]
 8002ece:	005b      	lsls	r3, r3, #1
 8002ed0:	2203      	movs	r2, #3
 8002ed2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed6:	43db      	mvns	r3, r3
 8002ed8:	69ba      	ldr	r2, [r7, #24]
 8002eda:	4013      	ands	r3, r2
 8002edc:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002ede:	683b      	ldr	r3, [r7, #0]
 8002ee0:	689a      	ldr	r2, [r3, #8]
 8002ee2:	69fb      	ldr	r3, [r7, #28]
 8002ee4:	005b      	lsls	r3, r3, #1
 8002ee6:	fa02 f303 	lsl.w	r3, r2, r3
 8002eea:	69ba      	ldr	r2, [r7, #24]
 8002eec:	4313      	orrs	r3, r2
 8002eee:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	69ba      	ldr	r2, [r7, #24]
 8002ef4:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	685b      	ldr	r3, [r3, #4]
 8002efa:	f003 0303 	and.w	r3, r3, #3
 8002efe:	2b02      	cmp	r3, #2
 8002f00:	d123      	bne.n	8002f4a <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002f02:	69fb      	ldr	r3, [r7, #28]
 8002f04:	08da      	lsrs	r2, r3, #3
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	3208      	adds	r2, #8
 8002f0a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002f0e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8002f10:	69fb      	ldr	r3, [r7, #28]
 8002f12:	f003 0307 	and.w	r3, r3, #7
 8002f16:	009b      	lsls	r3, r3, #2
 8002f18:	220f      	movs	r2, #15
 8002f1a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f1e:	43db      	mvns	r3, r3
 8002f20:	69ba      	ldr	r2, [r7, #24]
 8002f22:	4013      	ands	r3, r2
 8002f24:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8002f26:	683b      	ldr	r3, [r7, #0]
 8002f28:	691a      	ldr	r2, [r3, #16]
 8002f2a:	69fb      	ldr	r3, [r7, #28]
 8002f2c:	f003 0307 	and.w	r3, r3, #7
 8002f30:	009b      	lsls	r3, r3, #2
 8002f32:	fa02 f303 	lsl.w	r3, r2, r3
 8002f36:	69ba      	ldr	r2, [r7, #24]
 8002f38:	4313      	orrs	r3, r2
 8002f3a:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8002f3c:	69fb      	ldr	r3, [r7, #28]
 8002f3e:	08da      	lsrs	r2, r3, #3
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	3208      	adds	r2, #8
 8002f44:	69b9      	ldr	r1, [r7, #24]
 8002f46:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002f50:	69fb      	ldr	r3, [r7, #28]
 8002f52:	005b      	lsls	r3, r3, #1
 8002f54:	2203      	movs	r2, #3
 8002f56:	fa02 f303 	lsl.w	r3, r2, r3
 8002f5a:	43db      	mvns	r3, r3
 8002f5c:	69ba      	ldr	r2, [r7, #24]
 8002f5e:	4013      	ands	r3, r2
 8002f60:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002f62:	683b      	ldr	r3, [r7, #0]
 8002f64:	685b      	ldr	r3, [r3, #4]
 8002f66:	f003 0203 	and.w	r2, r3, #3
 8002f6a:	69fb      	ldr	r3, [r7, #28]
 8002f6c:	005b      	lsls	r3, r3, #1
 8002f6e:	fa02 f303 	lsl.w	r3, r2, r3
 8002f72:	69ba      	ldr	r2, [r7, #24]
 8002f74:	4313      	orrs	r3, r2
 8002f76:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	69ba      	ldr	r2, [r7, #24]
 8002f7c:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002f7e:	683b      	ldr	r3, [r7, #0]
 8002f80:	685b      	ldr	r3, [r3, #4]
 8002f82:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	f000 80e0 	beq.w	800314c <HAL_GPIO_Init+0x338>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f8c:	4b2f      	ldr	r3, [pc, #188]	; (800304c <HAL_GPIO_Init+0x238>)
 8002f8e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8002f92:	4a2e      	ldr	r2, [pc, #184]	; (800304c <HAL_GPIO_Init+0x238>)
 8002f94:	f043 0302 	orr.w	r3, r3, #2
 8002f98:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8002f9c:	4b2b      	ldr	r3, [pc, #172]	; (800304c <HAL_GPIO_Init+0x238>)
 8002f9e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8002fa2:	f003 0302 	and.w	r3, r3, #2
 8002fa6:	60fb      	str	r3, [r7, #12]
 8002fa8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8002faa:	4a29      	ldr	r2, [pc, #164]	; (8003050 <HAL_GPIO_Init+0x23c>)
 8002fac:	69fb      	ldr	r3, [r7, #28]
 8002fae:	089b      	lsrs	r3, r3, #2
 8002fb0:	3302      	adds	r3, #2
 8002fb2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002fb6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8002fb8:	69fb      	ldr	r3, [r7, #28]
 8002fba:	f003 0303 	and.w	r3, r3, #3
 8002fbe:	009b      	lsls	r3, r3, #2
 8002fc0:	220f      	movs	r2, #15
 8002fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8002fc6:	43db      	mvns	r3, r3
 8002fc8:	69ba      	ldr	r2, [r7, #24]
 8002fca:	4013      	ands	r3, r2
 8002fcc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	4a20      	ldr	r2, [pc, #128]	; (8003054 <HAL_GPIO_Init+0x240>)
 8002fd2:	4293      	cmp	r3, r2
 8002fd4:	d052      	beq.n	800307c <HAL_GPIO_Init+0x268>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	4a1f      	ldr	r2, [pc, #124]	; (8003058 <HAL_GPIO_Init+0x244>)
 8002fda:	4293      	cmp	r3, r2
 8002fdc:	d031      	beq.n	8003042 <HAL_GPIO_Init+0x22e>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	4a1e      	ldr	r2, [pc, #120]	; (800305c <HAL_GPIO_Init+0x248>)
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	d02b      	beq.n	800303e <HAL_GPIO_Init+0x22a>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	4a1d      	ldr	r2, [pc, #116]	; (8003060 <HAL_GPIO_Init+0x24c>)
 8002fea:	4293      	cmp	r3, r2
 8002fec:	d025      	beq.n	800303a <HAL_GPIO_Init+0x226>
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	4a1c      	ldr	r2, [pc, #112]	; (8003064 <HAL_GPIO_Init+0x250>)
 8002ff2:	4293      	cmp	r3, r2
 8002ff4:	d01f      	beq.n	8003036 <HAL_GPIO_Init+0x222>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	4a1b      	ldr	r2, [pc, #108]	; (8003068 <HAL_GPIO_Init+0x254>)
 8002ffa:	4293      	cmp	r3, r2
 8002ffc:	d019      	beq.n	8003032 <HAL_GPIO_Init+0x21e>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	4a1a      	ldr	r2, [pc, #104]	; (800306c <HAL_GPIO_Init+0x258>)
 8003002:	4293      	cmp	r3, r2
 8003004:	d013      	beq.n	800302e <HAL_GPIO_Init+0x21a>
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	4a19      	ldr	r2, [pc, #100]	; (8003070 <HAL_GPIO_Init+0x25c>)
 800300a:	4293      	cmp	r3, r2
 800300c:	d00d      	beq.n	800302a <HAL_GPIO_Init+0x216>
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	4a18      	ldr	r2, [pc, #96]	; (8003074 <HAL_GPIO_Init+0x260>)
 8003012:	4293      	cmp	r3, r2
 8003014:	d007      	beq.n	8003026 <HAL_GPIO_Init+0x212>
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	4a17      	ldr	r2, [pc, #92]	; (8003078 <HAL_GPIO_Init+0x264>)
 800301a:	4293      	cmp	r3, r2
 800301c:	d101      	bne.n	8003022 <HAL_GPIO_Init+0x20e>
 800301e:	2309      	movs	r3, #9
 8003020:	e02d      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003022:	230a      	movs	r3, #10
 8003024:	e02b      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003026:	2308      	movs	r3, #8
 8003028:	e029      	b.n	800307e <HAL_GPIO_Init+0x26a>
 800302a:	2307      	movs	r3, #7
 800302c:	e027      	b.n	800307e <HAL_GPIO_Init+0x26a>
 800302e:	2306      	movs	r3, #6
 8003030:	e025      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003032:	2305      	movs	r3, #5
 8003034:	e023      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003036:	2304      	movs	r3, #4
 8003038:	e021      	b.n	800307e <HAL_GPIO_Init+0x26a>
 800303a:	2303      	movs	r3, #3
 800303c:	e01f      	b.n	800307e <HAL_GPIO_Init+0x26a>
 800303e:	2302      	movs	r3, #2
 8003040:	e01d      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003042:	2301      	movs	r3, #1
 8003044:	e01b      	b.n	800307e <HAL_GPIO_Init+0x26a>
 8003046:	bf00      	nop
 8003048:	58000080 	.word	0x58000080
 800304c:	58024400 	.word	0x58024400
 8003050:	58000400 	.word	0x58000400
 8003054:	58020000 	.word	0x58020000
 8003058:	58020400 	.word	0x58020400
 800305c:	58020800 	.word	0x58020800
 8003060:	58020c00 	.word	0x58020c00
 8003064:	58021000 	.word	0x58021000
 8003068:	58021400 	.word	0x58021400
 800306c:	58021800 	.word	0x58021800
 8003070:	58021c00 	.word	0x58021c00
 8003074:	58022000 	.word	0x58022000
 8003078:	58022400 	.word	0x58022400
 800307c:	2300      	movs	r3, #0
 800307e:	69fa      	ldr	r2, [r7, #28]
 8003080:	f002 0203 	and.w	r2, r2, #3
 8003084:	0092      	lsls	r2, r2, #2
 8003086:	4093      	lsls	r3, r2
 8003088:	69ba      	ldr	r2, [r7, #24]
 800308a:	4313      	orrs	r3, r2
 800308c:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 800308e:	4938      	ldr	r1, [pc, #224]	; (8003170 <HAL_GPIO_Init+0x35c>)
 8003090:	69fb      	ldr	r3, [r7, #28]
 8003092:	089b      	lsrs	r3, r3, #2
 8003094:	3302      	adds	r3, #2
 8003096:	69ba      	ldr	r2, [r7, #24]
 8003098:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 800309c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80030a4:	693b      	ldr	r3, [r7, #16]
 80030a6:	43db      	mvns	r3, r3
 80030a8:	69ba      	ldr	r2, [r7, #24]
 80030aa:	4013      	ands	r3, r2
 80030ac:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	685b      	ldr	r3, [r3, #4]
 80030b2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d003      	beq.n	80030c2 <HAL_GPIO_Init+0x2ae>
        {
          temp |= iocurrent;
 80030ba:	69ba      	ldr	r2, [r7, #24]
 80030bc:	693b      	ldr	r3, [r7, #16]
 80030be:	4313      	orrs	r3, r2
 80030c0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 80030c2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80030c6:	69bb      	ldr	r3, [r7, #24]
 80030c8:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 80030ca:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80030ce:	685b      	ldr	r3, [r3, #4]
 80030d0:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80030d2:	693b      	ldr	r3, [r7, #16]
 80030d4:	43db      	mvns	r3, r3
 80030d6:	69ba      	ldr	r2, [r7, #24]
 80030d8:	4013      	ands	r3, r2
 80030da:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80030dc:	683b      	ldr	r3, [r7, #0]
 80030de:	685b      	ldr	r3, [r3, #4]
 80030e0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d003      	beq.n	80030f0 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 80030e8:	69ba      	ldr	r2, [r7, #24]
 80030ea:	693b      	ldr	r3, [r7, #16]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 80030f0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80030f4:	69bb      	ldr	r3, [r7, #24]
 80030f6:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 80030f8:	697b      	ldr	r3, [r7, #20]
 80030fa:	685b      	ldr	r3, [r3, #4]
 80030fc:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80030fe:	693b      	ldr	r3, [r7, #16]
 8003100:	43db      	mvns	r3, r3
 8003102:	69ba      	ldr	r2, [r7, #24]
 8003104:	4013      	ands	r3, r2
 8003106:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003108:	683b      	ldr	r3, [r7, #0]
 800310a:	685b      	ldr	r3, [r3, #4]
 800310c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003110:	2b00      	cmp	r3, #0
 8003112:	d003      	beq.n	800311c <HAL_GPIO_Init+0x308>
        {
          temp |= iocurrent;
 8003114:	69ba      	ldr	r2, [r7, #24]
 8003116:	693b      	ldr	r3, [r7, #16]
 8003118:	4313      	orrs	r3, r2
 800311a:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 800311c:	697b      	ldr	r3, [r7, #20]
 800311e:	69ba      	ldr	r2, [r7, #24]
 8003120:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8003122:	697b      	ldr	r3, [r7, #20]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8003128:	693b      	ldr	r3, [r7, #16]
 800312a:	43db      	mvns	r3, r3
 800312c:	69ba      	ldr	r2, [r7, #24]
 800312e:	4013      	ands	r3, r2
 8003130:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003132:	683b      	ldr	r3, [r7, #0]
 8003134:	685b      	ldr	r3, [r3, #4]
 8003136:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800313a:	2b00      	cmp	r3, #0
 800313c:	d003      	beq.n	8003146 <HAL_GPIO_Init+0x332>
        {
          temp |= iocurrent;
 800313e:	69ba      	ldr	r2, [r7, #24]
 8003140:	693b      	ldr	r3, [r7, #16]
 8003142:	4313      	orrs	r3, r2
 8003144:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8003146:	697b      	ldr	r3, [r7, #20]
 8003148:	69ba      	ldr	r2, [r7, #24]
 800314a:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 800314c:	69fb      	ldr	r3, [r7, #28]
 800314e:	3301      	adds	r3, #1
 8003150:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	681a      	ldr	r2, [r3, #0]
 8003156:	69fb      	ldr	r3, [r7, #28]
 8003158:	fa22 f303 	lsr.w	r3, r2, r3
 800315c:	2b00      	cmp	r3, #0
 800315e:	f47f ae63 	bne.w	8002e28 <HAL_GPIO_Init+0x14>
  }
}
 8003162:	bf00      	nop
 8003164:	bf00      	nop
 8003166:	3724      	adds	r7, #36	; 0x24
 8003168:	46bd      	mov	sp, r7
 800316a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800316e:	4770      	bx	lr
 8003170:	58000400 	.word	0x58000400

08003174 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8003174:	b480      	push	{r7}
 8003176:	b085      	sub	sp, #20
 8003178:	af00      	add	r7, sp, #0
 800317a:	6078      	str	r0, [r7, #4]
 800317c:	460b      	mov	r3, r1
 800317e:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	691a      	ldr	r2, [r3, #16]
 8003184:	887b      	ldrh	r3, [r7, #2]
 8003186:	4013      	ands	r3, r2
 8003188:	2b00      	cmp	r3, #0
 800318a:	d002      	beq.n	8003192 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 800318c:	2301      	movs	r3, #1
 800318e:	73fb      	strb	r3, [r7, #15]
 8003190:	e001      	b.n	8003196 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8003192:	2300      	movs	r3, #0
 8003194:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8003196:	7bfb      	ldrb	r3, [r7, #15]
}
 8003198:	4618      	mov	r0, r3
 800319a:	3714      	adds	r7, #20
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr

080031a4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80031a4:	b480      	push	{r7}
 80031a6:	b083      	sub	sp, #12
 80031a8:	af00      	add	r7, sp, #0
 80031aa:	6078      	str	r0, [r7, #4]
 80031ac:	460b      	mov	r3, r1
 80031ae:	807b      	strh	r3, [r7, #2]
 80031b0:	4613      	mov	r3, r2
 80031b2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80031b4:	787b      	ldrb	r3, [r7, #1]
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d003      	beq.n	80031c2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80031ba:	887a      	ldrh	r2, [r7, #2]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 80031c0:	e003      	b.n	80031ca <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80031c2:	887b      	ldrh	r3, [r7, #2]
 80031c4:	041a      	lsls	r2, r3, #16
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	619a      	str	r2, [r3, #24]
}
 80031ca:	bf00      	nop
 80031cc:	370c      	adds	r7, #12
 80031ce:	46bd      	mov	sp, r7
 80031d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d4:	4770      	bx	lr
	...

080031d8 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80031d8:	b580      	push	{r7, lr}
 80031da:	b084      	sub	sp, #16
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d101      	bne.n	80031ea <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80031e6:	2301      	movs	r3, #1
 80031e8:	e0bf      	b.n	800336a <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80031f0:	b2db      	uxtb	r3, r3
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d106      	bne.n	8003204 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	2200      	movs	r2, #0
 80031fa:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 80031fe:	6878      	ldr	r0, [r7, #4]
 8003200:	f7fd fea8 	bl	8000f54 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	2202      	movs	r2, #2
 8003208:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	699a      	ldr	r2, [r3, #24]
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800321a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	6999      	ldr	r1, [r3, #24]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	685a      	ldr	r2, [r3, #4]
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	689b      	ldr	r3, [r3, #8]
 800322a:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003230:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	691b      	ldr	r3, [r3, #16]
 8003236:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	430a      	orrs	r2, r1
 800323e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	6899      	ldr	r1, [r3, #8]
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681a      	ldr	r2, [r3, #0]
 800324a:	4b4a      	ldr	r3, [pc, #296]	; (8003374 <HAL_LTDC_Init+0x19c>)
 800324c:	400b      	ands	r3, r1
 800324e:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	695b      	ldr	r3, [r3, #20]
 8003254:	041b      	lsls	r3, r3, #16
 8003256:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	6899      	ldr	r1, [r3, #8]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	699a      	ldr	r2, [r3, #24]
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	431a      	orrs	r2, r3
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	430a      	orrs	r2, r1
 800326c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	68d9      	ldr	r1, [r3, #12]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681a      	ldr	r2, [r3, #0]
 8003278:	4b3e      	ldr	r3, [pc, #248]	; (8003374 <HAL_LTDC_Init+0x19c>)
 800327a:	400b      	ands	r3, r1
 800327c:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	69db      	ldr	r3, [r3, #28]
 8003282:	041b      	lsls	r3, r3, #16
 8003284:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	68d9      	ldr	r1, [r3, #12]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	6a1a      	ldr	r2, [r3, #32]
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	431a      	orrs	r2, r3
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	430a      	orrs	r2, r1
 800329a:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	6919      	ldr	r1, [r3, #16]
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	681a      	ldr	r2, [r3, #0]
 80032a6:	4b33      	ldr	r3, [pc, #204]	; (8003374 <HAL_LTDC_Init+0x19c>)
 80032a8:	400b      	ands	r3, r1
 80032aa:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032b0:	041b      	lsls	r3, r3, #16
 80032b2:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	6919      	ldr	r1, [r3, #16]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80032be:	68fb      	ldr	r3, [r7, #12]
 80032c0:	431a      	orrs	r2, r3
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	430a      	orrs	r2, r1
 80032c8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	6959      	ldr	r1, [r3, #20]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681a      	ldr	r2, [r3, #0]
 80032d4:	4b27      	ldr	r3, [pc, #156]	; (8003374 <HAL_LTDC_Init+0x19c>)
 80032d6:	400b      	ands	r3, r1
 80032d8:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032de:	041b      	lsls	r3, r3, #16
 80032e0:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	6959      	ldr	r1, [r3, #20]
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	431a      	orrs	r2, r3
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	430a      	orrs	r2, r1
 80032f6:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80032fe:	021b      	lsls	r3, r3, #8
 8003300:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8003308:	041b      	lsls	r3, r3, #16
 800330a:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800331a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003322:	68ba      	ldr	r2, [r7, #8]
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	4313      	orrs	r3, r2
 8003328:	687a      	ldr	r2, [r7, #4]
 800332a:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 800332e:	431a      	orrs	r2, r3
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	430a      	orrs	r2, r1
 8003336:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	f042 0206 	orr.w	r2, r2, #6
 8003346:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	699a      	ldr	r2, [r3, #24]
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	f042 0201 	orr.w	r2, r2, #1
 8003356:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	2200      	movs	r2, #0
 800335c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	2201      	movs	r2, #1
 8003364:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8003368:	2300      	movs	r3, #0
}
 800336a:	4618      	mov	r0, r3
 800336c:	3710      	adds	r7, #16
 800336e:	46bd      	mov	sp, r7
 8003370:	bd80      	pop	{r7, pc}
 8003372:	bf00      	nop
 8003374:	f000f800 	.word	0xf000f800

08003378 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8003378:	b580      	push	{r7, lr}
 800337a:	b084      	sub	sp, #16
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003386:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800338e:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8003390:	68fb      	ldr	r3, [r7, #12]
 8003392:	f003 0304 	and.w	r3, r3, #4
 8003396:	2b00      	cmp	r3, #0
 8003398:	d023      	beq.n	80033e2 <HAL_LTDC_IRQHandler+0x6a>
 800339a:	68bb      	ldr	r3, [r7, #8]
 800339c:	f003 0304 	and.w	r3, r3, #4
 80033a0:	2b00      	cmp	r3, #0
 80033a2:	d01e      	beq.n	80033e2 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	f022 0204 	bic.w	r2, r2, #4
 80033b2:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	2204      	movs	r2, #4
 80033ba:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80033c2:	f043 0201 	orr.w	r2, r3, #1
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	2204      	movs	r2, #4
 80033d0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	2200      	movs	r2, #0
 80033d8:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80033dc:	6878      	ldr	r0, [r7, #4]
 80033de:	f000 f86f 	bl	80034c0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80033e2:	68fb      	ldr	r3, [r7, #12]
 80033e4:	f003 0302 	and.w	r3, r3, #2
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	d023      	beq.n	8003434 <HAL_LTDC_IRQHandler+0xbc>
 80033ec:	68bb      	ldr	r3, [r7, #8]
 80033ee:	f003 0302 	and.w	r3, r3, #2
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d01e      	beq.n	8003434 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	f022 0202 	bic.w	r2, r2, #2
 8003404:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	2202      	movs	r2, #2
 800340c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003414:	f043 0202 	orr.w	r2, r3, #2
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	2204      	movs	r2, #4
 8003422:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2200      	movs	r2, #0
 800342a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800342e:	6878      	ldr	r0, [r7, #4]
 8003430:	f000 f846 	bl	80034c0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	f003 0301 	and.w	r3, r3, #1
 800343a:	2b00      	cmp	r3, #0
 800343c:	d01b      	beq.n	8003476 <HAL_LTDC_IRQHandler+0xfe>
 800343e:	68bb      	ldr	r3, [r7, #8]
 8003440:	f003 0301 	and.w	r3, r3, #1
 8003444:	2b00      	cmp	r3, #0
 8003446:	d016      	beq.n	8003476 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f022 0201 	bic.w	r2, r2, #1
 8003456:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	2201      	movs	r2, #1
 800345e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	2201      	movs	r2, #1
 8003464:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	2200      	movs	r2, #0
 800346c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8003470:	6878      	ldr	r0, [r7, #4]
 8003472:	f00b ff37 	bl	800f2e4 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8003476:	68fb      	ldr	r3, [r7, #12]
 8003478:	f003 0308 	and.w	r3, r3, #8
 800347c:	2b00      	cmp	r3, #0
 800347e:	d01b      	beq.n	80034b8 <HAL_LTDC_IRQHandler+0x140>
 8003480:	68bb      	ldr	r3, [r7, #8]
 8003482:	f003 0308 	and.w	r3, r3, #8
 8003486:	2b00      	cmp	r3, #0
 8003488:	d016      	beq.n	80034b8 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	681b      	ldr	r3, [r3, #0]
 800348e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f022 0208 	bic.w	r2, r2, #8
 8003498:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	2208      	movs	r2, #8
 80034a0:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	2201      	movs	r2, #1
 80034a6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	2200      	movs	r2, #0
 80034ae:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80034b2:	6878      	ldr	r0, [r7, #4]
 80034b4:	f000 f80e 	bl	80034d4 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80034b8:	bf00      	nop
 80034ba:	3710      	adds	r7, #16
 80034bc:	46bd      	mov	sp, r7
 80034be:	bd80      	pop	{r7, pc}

080034c0 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80034c0:	b480      	push	{r7}
 80034c2:	b083      	sub	sp, #12
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80034c8:	bf00      	nop
 80034ca:	370c      	adds	r7, #12
 80034cc:	46bd      	mov	sp, r7
 80034ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d2:	4770      	bx	lr

080034d4 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80034d4:	b480      	push	{r7}
 80034d6:	b083      	sub	sp, #12
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80034dc:	bf00      	nop
 80034de:	370c      	adds	r7, #12
 80034e0:	46bd      	mov	sp, r7
 80034e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034e6:	4770      	bx	lr

080034e8 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80034e8:	b5b0      	push	{r4, r5, r7, lr}
 80034ea:	b084      	sub	sp, #16
 80034ec:	af00      	add	r7, sp, #0
 80034ee:	60f8      	str	r0, [r7, #12]
 80034f0:	60b9      	str	r1, [r7, #8]
 80034f2:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80034fa:	2b01      	cmp	r3, #1
 80034fc:	d101      	bne.n	8003502 <HAL_LTDC_ConfigLayer+0x1a>
 80034fe:	2302      	movs	r3, #2
 8003500:	e02c      	b.n	800355c <HAL_LTDC_ConfigLayer+0x74>
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	2201      	movs	r2, #1
 8003506:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	2202      	movs	r2, #2
 800350e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8003512:	68fa      	ldr	r2, [r7, #12]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	2134      	movs	r1, #52	; 0x34
 8003518:	fb01 f303 	mul.w	r3, r1, r3
 800351c:	4413      	add	r3, r2
 800351e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8003522:	68bb      	ldr	r3, [r7, #8]
 8003524:	4614      	mov	r4, r2
 8003526:	461d      	mov	r5, r3
 8003528:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800352a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800352c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800352e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003530:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003532:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003534:	682b      	ldr	r3, [r5, #0]
 8003536:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8003538:	687a      	ldr	r2, [r7, #4]
 800353a:	68b9      	ldr	r1, [r7, #8]
 800353c:	68f8      	ldr	r0, [r7, #12]
 800353e:	f000 f849 	bl	80035d4 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8003542:	68fb      	ldr	r3, [r7, #12]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	2201      	movs	r2, #1
 8003548:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	2201      	movs	r2, #1
 800354e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	2200      	movs	r2, #0
 8003556:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 800355a:	2300      	movs	r3, #0
}
 800355c:	4618      	mov	r0, r3
 800355e:	3710      	adds	r7, #16
 8003560:	46bd      	mov	sp, r7
 8003562:	bdb0      	pop	{r4, r5, r7, pc}

08003564 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8003564:	b480      	push	{r7}
 8003566:	b083      	sub	sp, #12
 8003568:	af00      	add	r7, sp, #0
 800356a:	6078      	str	r0, [r7, #4]
 800356c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8003574:	2b01      	cmp	r3, #1
 8003576:	d101      	bne.n	800357c <HAL_LTDC_ProgramLineEvent+0x18>
 8003578:	2302      	movs	r3, #2
 800357a:	e023      	b.n	80035c4 <HAL_LTDC_ProgramLineEvent+0x60>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	2201      	movs	r2, #1
 8003580:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2202      	movs	r2, #2
 8003588:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	f022 0201 	bic.w	r2, r2, #1
 800359a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 800359c:	4a0c      	ldr	r2, [pc, #48]	; (80035d0 <HAL_LTDC_ProgramLineEvent+0x6c>)
 800359e:	683b      	ldr	r3, [r7, #0]
 80035a0:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f042 0201 	orr.w	r2, r2, #1
 80035b0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	2201      	movs	r2, #1
 80035b6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	2200      	movs	r2, #0
 80035be:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80035c2:	2300      	movs	r3, #0
}
 80035c4:	4618      	mov	r0, r3
 80035c6:	370c      	adds	r7, #12
 80035c8:	46bd      	mov	sp, r7
 80035ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ce:	4770      	bx	lr
 80035d0:	50001000 	.word	0x50001000

080035d4 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80035d4:	b480      	push	{r7}
 80035d6:	b089      	sub	sp, #36	; 0x24
 80035d8:	af00      	add	r7, sp, #0
 80035da:	60f8      	str	r0, [r7, #12]
 80035dc:	60b9      	str	r1, [r7, #8]
 80035de:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80035e0:	68bb      	ldr	r3, [r7, #8]
 80035e2:	685a      	ldr	r2, [r3, #4]
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	68db      	ldr	r3, [r3, #12]
 80035ea:	0c1b      	lsrs	r3, r3, #16
 80035ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035f0:	4413      	add	r3, r2
 80035f2:	041b      	lsls	r3, r3, #16
 80035f4:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	461a      	mov	r2, r3
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	01db      	lsls	r3, r3, #7
 8003600:	4413      	add	r3, r2
 8003602:	3384      	adds	r3, #132	; 0x84
 8003604:	685b      	ldr	r3, [r3, #4]
 8003606:	68fa      	ldr	r2, [r7, #12]
 8003608:	6812      	ldr	r2, [r2, #0]
 800360a:	4611      	mov	r1, r2
 800360c:	687a      	ldr	r2, [r7, #4]
 800360e:	01d2      	lsls	r2, r2, #7
 8003610:	440a      	add	r2, r1
 8003612:	3284      	adds	r2, #132	; 0x84
 8003614:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8003618:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800361a:	68bb      	ldr	r3, [r7, #8]
 800361c:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800361e:	68fb      	ldr	r3, [r7, #12]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	68db      	ldr	r3, [r3, #12]
 8003624:	0c1b      	lsrs	r3, r3, #16
 8003626:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800362a:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800362c:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	4619      	mov	r1, r3
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	01db      	lsls	r3, r3, #7
 8003638:	440b      	add	r3, r1
 800363a:	3384      	adds	r3, #132	; 0x84
 800363c:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800363e:	69fb      	ldr	r3, [r7, #28]
 8003640:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8003642:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8003644:	68bb      	ldr	r3, [r7, #8]
 8003646:	68da      	ldr	r2, [r3, #12]
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	68db      	ldr	r3, [r3, #12]
 800364e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003652:	4413      	add	r3, r2
 8003654:	041b      	lsls	r3, r3, #16
 8003656:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	461a      	mov	r2, r3
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	01db      	lsls	r3, r3, #7
 8003662:	4413      	add	r3, r2
 8003664:	3384      	adds	r3, #132	; 0x84
 8003666:	689b      	ldr	r3, [r3, #8]
 8003668:	68fa      	ldr	r2, [r7, #12]
 800366a:	6812      	ldr	r2, [r2, #0]
 800366c:	4611      	mov	r1, r2
 800366e:	687a      	ldr	r2, [r7, #4]
 8003670:	01d2      	lsls	r2, r2, #7
 8003672:	440a      	add	r2, r1
 8003674:	3284      	adds	r2, #132	; 0x84
 8003676:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800367a:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800367c:	68bb      	ldr	r3, [r7, #8]
 800367e:	689a      	ldr	r2, [r3, #8]
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	68db      	ldr	r3, [r3, #12]
 8003686:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800368a:	4413      	add	r3, r2
 800368c:	1c5a      	adds	r2, r3, #1
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	4619      	mov	r1, r3
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	01db      	lsls	r3, r3, #7
 8003698:	440b      	add	r3, r1
 800369a:	3384      	adds	r3, #132	; 0x84
 800369c:	4619      	mov	r1, r3
 800369e:	69fb      	ldr	r3, [r7, #28]
 80036a0:	4313      	orrs	r3, r2
 80036a2:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	461a      	mov	r2, r3
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	01db      	lsls	r3, r3, #7
 80036ae:	4413      	add	r3, r2
 80036b0:	3384      	adds	r3, #132	; 0x84
 80036b2:	691b      	ldr	r3, [r3, #16]
 80036b4:	68fa      	ldr	r2, [r7, #12]
 80036b6:	6812      	ldr	r2, [r2, #0]
 80036b8:	4611      	mov	r1, r2
 80036ba:	687a      	ldr	r2, [r7, #4]
 80036bc:	01d2      	lsls	r2, r2, #7
 80036be:	440a      	add	r2, r1
 80036c0:	3284      	adds	r2, #132	; 0x84
 80036c2:	f023 0307 	bic.w	r3, r3, #7
 80036c6:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80036c8:	68fb      	ldr	r3, [r7, #12]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	461a      	mov	r2, r3
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	01db      	lsls	r3, r3, #7
 80036d2:	4413      	add	r3, r2
 80036d4:	3384      	adds	r3, #132	; 0x84
 80036d6:	461a      	mov	r2, r3
 80036d8:	68bb      	ldr	r3, [r7, #8]
 80036da:	691b      	ldr	r3, [r3, #16]
 80036dc:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80036de:	68bb      	ldr	r3, [r7, #8]
 80036e0:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 80036e4:	021b      	lsls	r3, r3, #8
 80036e6:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80036e8:	68bb      	ldr	r3, [r7, #8]
 80036ea:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 80036ee:	041b      	lsls	r3, r3, #16
 80036f0:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80036f2:	68bb      	ldr	r3, [r7, #8]
 80036f4:	699b      	ldr	r3, [r3, #24]
 80036f6:	061b      	lsls	r3, r3, #24
 80036f8:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	461a      	mov	r2, r3
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	01db      	lsls	r3, r3, #7
 8003704:	4413      	add	r3, r2
 8003706:	3384      	adds	r3, #132	; 0x84
 8003708:	699b      	ldr	r3, [r3, #24]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	461a      	mov	r2, r3
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	01db      	lsls	r3, r3, #7
 8003714:	4413      	add	r3, r2
 8003716:	3384      	adds	r3, #132	; 0x84
 8003718:	461a      	mov	r2, r3
 800371a:	2300      	movs	r3, #0
 800371c:	6193      	str	r3, [r2, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800371e:	68bb      	ldr	r3, [r7, #8]
 8003720:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003724:	461a      	mov	r2, r3
 8003726:	69fb      	ldr	r3, [r7, #28]
 8003728:	431a      	orrs	r2, r3
 800372a:	69bb      	ldr	r3, [r7, #24]
 800372c:	431a      	orrs	r2, r3
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4619      	mov	r1, r3
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	01db      	lsls	r3, r3, #7
 8003738:	440b      	add	r3, r1
 800373a:	3384      	adds	r3, #132	; 0x84
 800373c:	4619      	mov	r1, r3
 800373e:	697b      	ldr	r3, [r7, #20]
 8003740:	4313      	orrs	r3, r2
 8003742:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	461a      	mov	r2, r3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	01db      	lsls	r3, r3, #7
 800374e:	4413      	add	r3, r2
 8003750:	3384      	adds	r3, #132	; 0x84
 8003752:	695b      	ldr	r3, [r3, #20]
 8003754:	68fa      	ldr	r2, [r7, #12]
 8003756:	6812      	ldr	r2, [r2, #0]
 8003758:	4611      	mov	r1, r2
 800375a:	687a      	ldr	r2, [r7, #4]
 800375c:	01d2      	lsls	r2, r2, #7
 800375e:	440a      	add	r2, r1
 8003760:	3284      	adds	r2, #132	; 0x84
 8003762:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003766:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	461a      	mov	r2, r3
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	01db      	lsls	r3, r3, #7
 8003772:	4413      	add	r3, r2
 8003774:	3384      	adds	r3, #132	; 0x84
 8003776:	461a      	mov	r2, r3
 8003778:	68bb      	ldr	r3, [r7, #8]
 800377a:	695b      	ldr	r3, [r3, #20]
 800377c:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	461a      	mov	r2, r3
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	01db      	lsls	r3, r3, #7
 8003788:	4413      	add	r3, r2
 800378a:	3384      	adds	r3, #132	; 0x84
 800378c:	69da      	ldr	r2, [r3, #28]
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	4619      	mov	r1, r3
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	01db      	lsls	r3, r3, #7
 8003798:	440b      	add	r3, r1
 800379a:	3384      	adds	r3, #132	; 0x84
 800379c:	4619      	mov	r1, r3
 800379e:	4b58      	ldr	r3, [pc, #352]	; (8003900 <LTDC_SetConfig+0x32c>)
 80037a0:	4013      	ands	r3, r2
 80037a2:	61cb      	str	r3, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80037a4:	68bb      	ldr	r3, [r7, #8]
 80037a6:	69da      	ldr	r2, [r3, #28]
 80037a8:	68bb      	ldr	r3, [r7, #8]
 80037aa:	6a1b      	ldr	r3, [r3, #32]
 80037ac:	68f9      	ldr	r1, [r7, #12]
 80037ae:	6809      	ldr	r1, [r1, #0]
 80037b0:	4608      	mov	r0, r1
 80037b2:	6879      	ldr	r1, [r7, #4]
 80037b4:	01c9      	lsls	r1, r1, #7
 80037b6:	4401      	add	r1, r0
 80037b8:	3184      	adds	r1, #132	; 0x84
 80037ba:	4313      	orrs	r3, r2
 80037bc:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	461a      	mov	r2, r3
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	01db      	lsls	r3, r3, #7
 80037c8:	4413      	add	r3, r2
 80037ca:	3384      	adds	r3, #132	; 0x84
 80037cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	461a      	mov	r2, r3
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	01db      	lsls	r3, r3, #7
 80037d8:	4413      	add	r3, r2
 80037da:	3384      	adds	r3, #132	; 0x84
 80037dc:	461a      	mov	r2, r3
 80037de:	2300      	movs	r3, #0
 80037e0:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	461a      	mov	r2, r3
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	01db      	lsls	r3, r3, #7
 80037ec:	4413      	add	r3, r2
 80037ee:	3384      	adds	r3, #132	; 0x84
 80037f0:	461a      	mov	r2, r3
 80037f2:	68bb      	ldr	r3, [r7, #8]
 80037f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037f6:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80037f8:	68bb      	ldr	r3, [r7, #8]
 80037fa:	691b      	ldr	r3, [r3, #16]
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d102      	bne.n	8003806 <LTDC_SetConfig+0x232>
  {
    tmp = 4U;
 8003800:	2304      	movs	r3, #4
 8003802:	61fb      	str	r3, [r7, #28]
 8003804:	e01b      	b.n	800383e <LTDC_SetConfig+0x26a>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8003806:	68bb      	ldr	r3, [r7, #8]
 8003808:	691b      	ldr	r3, [r3, #16]
 800380a:	2b01      	cmp	r3, #1
 800380c:	d102      	bne.n	8003814 <LTDC_SetConfig+0x240>
  {
    tmp = 3U;
 800380e:	2303      	movs	r3, #3
 8003810:	61fb      	str	r3, [r7, #28]
 8003812:	e014      	b.n	800383e <LTDC_SetConfig+0x26a>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003814:	68bb      	ldr	r3, [r7, #8]
 8003816:	691b      	ldr	r3, [r3, #16]
 8003818:	2b04      	cmp	r3, #4
 800381a:	d00b      	beq.n	8003834 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 800381c:	68bb      	ldr	r3, [r7, #8]
 800381e:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003820:	2b02      	cmp	r3, #2
 8003822:	d007      	beq.n	8003834 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003824:	68bb      	ldr	r3, [r7, #8]
 8003826:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8003828:	2b03      	cmp	r3, #3
 800382a:	d003      	beq.n	8003834 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 800382c:	68bb      	ldr	r3, [r7, #8]
 800382e:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003830:	2b07      	cmp	r3, #7
 8003832:	d102      	bne.n	800383a <LTDC_SetConfig+0x266>
  {
    tmp = 2U;
 8003834:	2302      	movs	r3, #2
 8003836:	61fb      	str	r3, [r7, #28]
 8003838:	e001      	b.n	800383e <LTDC_SetConfig+0x26a>
  }
  else
  {
    tmp = 1U;
 800383a:	2301      	movs	r3, #1
 800383c:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	461a      	mov	r2, r3
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	01db      	lsls	r3, r3, #7
 8003848:	4413      	add	r3, r2
 800384a:	3384      	adds	r3, #132	; 0x84
 800384c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800384e:	68fa      	ldr	r2, [r7, #12]
 8003850:	6812      	ldr	r2, [r2, #0]
 8003852:	4611      	mov	r1, r2
 8003854:	687a      	ldr	r2, [r7, #4]
 8003856:	01d2      	lsls	r2, r2, #7
 8003858:	440a      	add	r2, r1
 800385a:	3284      	adds	r2, #132	; 0x84
 800385c:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8003860:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8003862:	68bb      	ldr	r3, [r7, #8]
 8003864:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003866:	69fa      	ldr	r2, [r7, #28]
 8003868:	fb02 f303 	mul.w	r3, r2, r3
 800386c:	041a      	lsls	r2, r3, #16
 800386e:	68bb      	ldr	r3, [r7, #8]
 8003870:	6859      	ldr	r1, [r3, #4]
 8003872:	68bb      	ldr	r3, [r7, #8]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	1acb      	subs	r3, r1, r3
 8003878:	69f9      	ldr	r1, [r7, #28]
 800387a:	fb01 f303 	mul.w	r3, r1, r3
 800387e:	3307      	adds	r3, #7
 8003880:	68f9      	ldr	r1, [r7, #12]
 8003882:	6809      	ldr	r1, [r1, #0]
 8003884:	4608      	mov	r0, r1
 8003886:	6879      	ldr	r1, [r7, #4]
 8003888:	01c9      	lsls	r1, r1, #7
 800388a:	4401      	add	r1, r0
 800388c:	3184      	adds	r1, #132	; 0x84
 800388e:	4313      	orrs	r3, r2
 8003890:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	461a      	mov	r2, r3
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	01db      	lsls	r3, r3, #7
 800389c:	4413      	add	r3, r2
 800389e:	3384      	adds	r3, #132	; 0x84
 80038a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038a2:	68fb      	ldr	r3, [r7, #12]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	4619      	mov	r1, r3
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	01db      	lsls	r3, r3, #7
 80038ac:	440b      	add	r3, r1
 80038ae:	3384      	adds	r3, #132	; 0x84
 80038b0:	4619      	mov	r1, r3
 80038b2:	4b14      	ldr	r3, [pc, #80]	; (8003904 <LTDC_SetConfig+0x330>)
 80038b4:	4013      	ands	r3, r2
 80038b6:	630b      	str	r3, [r1, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	461a      	mov	r2, r3
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	01db      	lsls	r3, r3, #7
 80038c2:	4413      	add	r3, r2
 80038c4:	3384      	adds	r3, #132	; 0x84
 80038c6:	461a      	mov	r2, r3
 80038c8:	68bb      	ldr	r3, [r7, #8]
 80038ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038cc:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	461a      	mov	r2, r3
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	01db      	lsls	r3, r3, #7
 80038d8:	4413      	add	r3, r2
 80038da:	3384      	adds	r3, #132	; 0x84
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	68fa      	ldr	r2, [r7, #12]
 80038e0:	6812      	ldr	r2, [r2, #0]
 80038e2:	4611      	mov	r1, r2
 80038e4:	687a      	ldr	r2, [r7, #4]
 80038e6:	01d2      	lsls	r2, r2, #7
 80038e8:	440a      	add	r2, r1
 80038ea:	3284      	adds	r2, #132	; 0x84
 80038ec:	f043 0301 	orr.w	r3, r3, #1
 80038f0:	6013      	str	r3, [r2, #0]
}
 80038f2:	bf00      	nop
 80038f4:	3724      	adds	r7, #36	; 0x24
 80038f6:	46bd      	mov	sp, r7
 80038f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038fc:	4770      	bx	lr
 80038fe:	bf00      	nop
 8003900:	fffff8f8 	.word	0xfffff8f8
 8003904:	fffff800 	.word	0xfffff800

08003908 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8003908:	b580      	push	{r7, lr}
 800390a:	b084      	sub	sp, #16
 800390c:	af00      	add	r7, sp, #0
 800390e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8003910:	4b19      	ldr	r3, [pc, #100]	; (8003978 <HAL_PWREx_ConfigSupply+0x70>)
 8003912:	68db      	ldr	r3, [r3, #12]
 8003914:	f003 0304 	and.w	r3, r3, #4
 8003918:	2b04      	cmp	r3, #4
 800391a:	d00a      	beq.n	8003932 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 800391c:	4b16      	ldr	r3, [pc, #88]	; (8003978 <HAL_PWREx_ConfigSupply+0x70>)
 800391e:	68db      	ldr	r3, [r3, #12]
 8003920:	f003 0307 	and.w	r3, r3, #7
 8003924:	687a      	ldr	r2, [r7, #4]
 8003926:	429a      	cmp	r2, r3
 8003928:	d001      	beq.n	800392e <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 800392a:	2301      	movs	r3, #1
 800392c:	e01f      	b.n	800396e <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 800392e:	2300      	movs	r3, #0
 8003930:	e01d      	b.n	800396e <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8003932:	4b11      	ldr	r3, [pc, #68]	; (8003978 <HAL_PWREx_ConfigSupply+0x70>)
 8003934:	68db      	ldr	r3, [r3, #12]
 8003936:	f023 0207 	bic.w	r2, r3, #7
 800393a:	490f      	ldr	r1, [pc, #60]	; (8003978 <HAL_PWREx_ConfigSupply+0x70>)
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	4313      	orrs	r3, r2
 8003940:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 8003942:	f7fe f8ab 	bl	8001a9c <HAL_GetTick>
 8003946:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8003948:	e009      	b.n	800395e <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 800394a:	f7fe f8a7 	bl	8001a9c <HAL_GetTick>
 800394e:	4602      	mov	r2, r0
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	1ad3      	subs	r3, r2, r3
 8003954:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003958:	d901      	bls.n	800395e <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 800395a:	2301      	movs	r3, #1
 800395c:	e007      	b.n	800396e <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 800395e:	4b06      	ldr	r3, [pc, #24]	; (8003978 <HAL_PWREx_ConfigSupply+0x70>)
 8003960:	685b      	ldr	r3, [r3, #4]
 8003962:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003966:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800396a:	d1ee      	bne.n	800394a <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 800396c:	2300      	movs	r3, #0
}
 800396e:	4618      	mov	r0, r3
 8003970:	3710      	adds	r7, #16
 8003972:	46bd      	mov	sp, r7
 8003974:	bd80      	pop	{r7, pc}
 8003976:	bf00      	nop
 8003978:	58024800 	.word	0x58024800

0800397c <HAL_QSPI_Init>:
  *        in the QSPI_InitTypeDef and initialize the associated handle.
  * @param hqspi QSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
{
 800397c:	b580      	push	{r7, lr}
 800397e:	b086      	sub	sp, #24
 8003980:	af02      	add	r7, sp, #8
 8003982:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8003984:	f7fe f88a 	bl	8001a9c <HAL_GetTick>
 8003988:	60f8      	str	r0, [r7, #12]

  /* Check the QSPI handle allocation */
  if(hqspi == NULL)
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	2b00      	cmp	r3, #0
 800398e:	d101      	bne.n	8003994 <HAL_QSPI_Init+0x18>
  {
    return HAL_ERROR;
 8003990:	2301      	movs	r3, #1
 8003992:	e05f      	b.n	8003a54 <HAL_QSPI_Init+0xd8>
  if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
  {
    assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
  }

  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800399a:	b2db      	uxtb	r3, r3
 800399c:	2b00      	cmp	r3, #0
 800399e:	d107      	bne.n	80039b0 <HAL_QSPI_Init+0x34>

    /* Init the low level hardware */
    hqspi->MspInitCallback(hqspi);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_QSPI_MspInit(hqspi);
 80039a0:	6878      	ldr	r0, [r7, #4]
 80039a2:	f7fd fbcd 	bl	8001140 <HAL_QSPI_MspInit>
#endif

    /* Configure the default timeout for the QSPI memory access */
    HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 80039a6:	f241 3188 	movw	r1, #5000	; 0x1388
 80039aa:	6878      	ldr	r0, [r7, #4]
 80039ac:	f000 f9e7 	bl	8003d7e <HAL_QSPI_SetTimeout>
  }

  /* Configure QSPI FIFO Threshold */
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	f423 51f8 	bic.w	r1, r3, #7936	; 0x1f00
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	689b      	ldr	r3, [r3, #8]
 80039be:	3b01      	subs	r3, #1
 80039c0:	021a      	lsls	r2, r3, #8
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	430a      	orrs	r2, r1
 80039c8:	601a      	str	r2, [r3, #0]
             ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));

  /* Wait till BUSY flag reset */
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80039ce:	9300      	str	r3, [sp, #0]
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	2200      	movs	r2, #0
 80039d4:	2120      	movs	r1, #32
 80039d6:	6878      	ldr	r0, [r7, #4]
 80039d8:	f000 f9df 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 80039dc:	4603      	mov	r3, r0
 80039de:	72fb      	strb	r3, [r7, #11]

  if(status == HAL_OK)
 80039e0:	7afb      	ldrb	r3, [r7, #11]
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d135      	bne.n	8003a52 <HAL_QSPI_Init+0xd6>
  {
    /* Configure QSPI Clock Prescaler and Sample Shift */
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	681a      	ldr	r2, [r3, #0]
 80039ec:	4b1b      	ldr	r3, [pc, #108]	; (8003a5c <HAL_QSPI_Init+0xe0>)
 80039ee:	4013      	ands	r3, r2
 80039f0:	687a      	ldr	r2, [r7, #4]
 80039f2:	6852      	ldr	r2, [r2, #4]
 80039f4:	0611      	lsls	r1, r2, #24
 80039f6:	687a      	ldr	r2, [r7, #4]
 80039f8:	68d2      	ldr	r2, [r2, #12]
 80039fa:	4311      	orrs	r1, r2
 80039fc:	687a      	ldr	r2, [r7, #4]
 80039fe:	69d2      	ldr	r2, [r2, #28]
 8003a00:	4311      	orrs	r1, r2
 8003a02:	687a      	ldr	r2, [r7, #4]
 8003a04:	6a12      	ldr	r2, [r2, #32]
 8003a06:	4311      	orrs	r1, r2
 8003a08:	687a      	ldr	r2, [r7, #4]
 8003a0a:	6812      	ldr	r2, [r2, #0]
 8003a0c:	430b      	orrs	r3, r1
 8003a0e:	6013      	str	r3, [r2, #0]
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));

    /* Configure QSPI Flash Size, CS High Time and Clock Mode */
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	685a      	ldr	r2, [r3, #4]
 8003a16:	4b12      	ldr	r3, [pc, #72]	; (8003a60 <HAL_QSPI_Init+0xe4>)
 8003a18:	4013      	ands	r3, r2
 8003a1a:	687a      	ldr	r2, [r7, #4]
 8003a1c:	6912      	ldr	r2, [r2, #16]
 8003a1e:	0411      	lsls	r1, r2, #16
 8003a20:	687a      	ldr	r2, [r7, #4]
 8003a22:	6952      	ldr	r2, [r2, #20]
 8003a24:	4311      	orrs	r1, r2
 8003a26:	687a      	ldr	r2, [r7, #4]
 8003a28:	6992      	ldr	r2, [r2, #24]
 8003a2a:	4311      	orrs	r1, r2
 8003a2c:	687a      	ldr	r2, [r7, #4]
 8003a2e:	6812      	ldr	r2, [r2, #0]
 8003a30:	430b      	orrs	r3, r1
 8003a32:	6053      	str	r3, [r2, #4]
               ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
                hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));

    /* Enable the QSPI peripheral */
    __HAL_QSPI_ENABLE(hqspi);
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	681a      	ldr	r2, [r3, #0]
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	f042 0201 	orr.w	r2, r2, #1
 8003a42:	601a      	str	r2, [r3, #0]

    /* Set QSPI error code to none */
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2200      	movs	r2, #0
 8003a48:	645a      	str	r2, [r3, #68]	; 0x44

    /* Initialize the QSPI state */
    hqspi->State = HAL_QSPI_STATE_READY;
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	2201      	movs	r2, #1
 8003a4e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  }

  /* Return function status */
  return status;
 8003a52:	7afb      	ldrb	r3, [r7, #11]
}
 8003a54:	4618      	mov	r0, r3
 8003a56:	3710      	adds	r7, #16
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}
 8003a5c:	00ffff2f 	.word	0x00ffff2f
 8003a60:	ffe0f8fe 	.word	0xffe0f8fe

08003a64 <HAL_QSPI_Command>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Read or Write Modes
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Command(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t Timeout)
{
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b088      	sub	sp, #32
 8003a68:	af02      	add	r7, sp, #8
 8003a6a:	60f8      	str	r0, [r7, #12]
 8003a6c:	60b9      	str	r1, [r7, #8]
 8003a6e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8003a70:	f7fe f814 	bl	8001a9c <HAL_GetTick>
 8003a74:	6138      	str	r0, [r7, #16]
  assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
  assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
  assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));

  /* Process locked */
  __HAL_LOCK(hqspi);
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003a7c:	b2db      	uxtb	r3, r3
 8003a7e:	2b01      	cmp	r3, #1
 8003a80:	d101      	bne.n	8003a86 <HAL_QSPI_Command+0x22>
 8003a82:	2302      	movs	r3, #2
 8003a84:	e048      	b.n	8003b18 <HAL_QSPI_Command+0xb4>
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	2201      	movs	r2, #1
 8003a8a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003a94:	b2db      	uxtb	r3, r3
 8003a96:	2b01      	cmp	r3, #1
 8003a98:	d137      	bne.n	8003b0a <HAL_QSPI_Command+0xa6>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	2200      	movs	r2, #0
 8003a9e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Update QSPI state */
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	2202      	movs	r2, #2
 8003aa4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Wait till BUSY flag reset */
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	9300      	str	r3, [sp, #0]
 8003aac:	693b      	ldr	r3, [r7, #16]
 8003aae:	2200      	movs	r2, #0
 8003ab0:	2120      	movs	r1, #32
 8003ab2:	68f8      	ldr	r0, [r7, #12]
 8003ab4:	f000 f971 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003ab8:	4603      	mov	r3, r0
 8003aba:	75fb      	strb	r3, [r7, #23]

    if (status == HAL_OK)
 8003abc:	7dfb      	ldrb	r3, [r7, #23]
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d125      	bne.n	8003b0e <HAL_QSPI_Command+0xaa>
    {
      /* Call the configuration function */
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8003ac2:	2200      	movs	r2, #0
 8003ac4:	68b9      	ldr	r1, [r7, #8]
 8003ac6:	68f8      	ldr	r0, [r7, #12]
 8003ac8:	f000 f99e 	bl	8003e08 <QSPI_Config>

      if (cmd->DataMode == QSPI_DATA_NONE)
 8003acc:	68bb      	ldr	r3, [r7, #8]
 8003ace:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d115      	bne.n	8003b00 <HAL_QSPI_Command+0x9c>
      {
        /* When there is no data phase, the transfer start as soon as the configuration is done
        so wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	9300      	str	r3, [sp, #0]
 8003ad8:	693b      	ldr	r3, [r7, #16]
 8003ada:	2201      	movs	r2, #1
 8003adc:	2102      	movs	r1, #2
 8003ade:	68f8      	ldr	r0, [r7, #12]
 8003ae0:	f000 f95b 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003ae4:	4603      	mov	r3, r0
 8003ae6:	75fb      	strb	r3, [r7, #23]

        if (status == HAL_OK)
 8003ae8:	7dfb      	ldrb	r3, [r7, #23]
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d10f      	bne.n	8003b0e <HAL_QSPI_Command+0xaa>
        {
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	2202      	movs	r2, #2
 8003af4:	60da      	str	r2, [r3, #12]

          /* Update QSPI state */
          hqspi->State = HAL_QSPI_STATE_READY;
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	2201      	movs	r2, #1
 8003afa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003afe:	e006      	b.n	8003b0e <HAL_QSPI_Command+0xaa>
        }
      }
      else
      {
        /* Update QSPI state */
        hqspi->State = HAL_QSPI_STATE_READY;
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2201      	movs	r2, #1
 8003b04:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b08:	e001      	b.n	8003b0e <HAL_QSPI_Command+0xaa>
      }
    }
  }
  else
  {
    status = HAL_BUSY;
 8003b0a:	2302      	movs	r3, #2
 8003b0c:	75fb      	strb	r3, [r7, #23]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	2200      	movs	r2, #0
 8003b12:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  /* Return function status */
  return status;
 8003b16:	7dfb      	ldrb	r3, [r7, #23]
}
 8003b18:	4618      	mov	r0, r3
 8003b1a:	3718      	adds	r7, #24
 8003b1c:	46bd      	mov	sp, r7
 8003b1e:	bd80      	pop	{r7, pc}

08003b20 <HAL_QSPI_Transmit>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Write Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Transmit(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
{
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b08a      	sub	sp, #40	; 0x28
 8003b24:	af02      	add	r7, sp, #8
 8003b26:	60f8      	str	r0, [r7, #12]
 8003b28:	60b9      	str	r1, [r7, #8]
 8003b2a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003b2c:	2300      	movs	r3, #0
 8003b2e:	77fb      	strb	r3, [r7, #31]
  uint32_t tickstart = HAL_GetTick();
 8003b30:	f7fd ffb4 	bl	8001a9c <HAL_GetTick>
 8003b34:	61b8      	str	r0, [r7, #24]
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	3320      	adds	r3, #32
 8003b3c:	617b      	str	r3, [r7, #20]

  /* Process locked */
  __HAL_LOCK(hqspi);
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003b44:	b2db      	uxtb	r3, r3
 8003b46:	2b01      	cmp	r3, #1
 8003b48:	d101      	bne.n	8003b4e <HAL_QSPI_Transmit+0x2e>
 8003b4a:	2302      	movs	r3, #2
 8003b4c:	e076      	b.n	8003c3c <HAL_QSPI_Transmit+0x11c>
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	2201      	movs	r2, #1
 8003b52:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 8003b56:	68fb      	ldr	r3, [r7, #12]
 8003b58:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003b5c:	b2db      	uxtb	r3, r3
 8003b5e:	2b01      	cmp	r3, #1
 8003b60:	d165      	bne.n	8003c2e <HAL_QSPI_Transmit+0x10e>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8003b62:	68fb      	ldr	r3, [r7, #12]
 8003b64:	2200      	movs	r2, #0
 8003b66:	645a      	str	r2, [r3, #68]	; 0x44

    if(pData != NULL )
 8003b68:	68bb      	ldr	r3, [r7, #8]
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	d056      	beq.n	8003c1c <HAL_QSPI_Transmit+0xfc>
    {
      /* Update state */
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	2212      	movs	r2, #18
 8003b72:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Configure counters and size of the handle */
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	681b      	ldr	r3, [r3, #0]
 8003b7a:	691b      	ldr	r3, [r3, #16]
 8003b7c:	1c5a      	adds	r2, r3, #1
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	62da      	str	r2, [r3, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	691b      	ldr	r3, [r3, #16]
 8003b88:	1c5a      	adds	r2, r3, #1
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	629a      	str	r2, [r3, #40]	; 0x28
      hqspi->pTxBuffPtr = pData;
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	68ba      	ldr	r2, [r7, #8]
 8003b92:	625a      	str	r2, [r3, #36]	; 0x24

      /* Configure QSPI: CCR register with functional as indirect write */
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	695a      	ldr	r2, [r3, #20]
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8003ba2:	615a      	str	r2, [r3, #20]

      while(hqspi->TxXferCount > 0U)
 8003ba4:	e01b      	b.n	8003bde <HAL_QSPI_Transmit+0xbe>
      {
        /* Wait until FT flag is set to send data */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	9300      	str	r3, [sp, #0]
 8003baa:	69bb      	ldr	r3, [r7, #24]
 8003bac:	2201      	movs	r2, #1
 8003bae:	2104      	movs	r1, #4
 8003bb0:	68f8      	ldr	r0, [r7, #12]
 8003bb2:	f000 f8f2 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	77fb      	strb	r3, [r7, #31]

        if (status != HAL_OK)
 8003bba:	7ffb      	ldrb	r3, [r7, #31]
 8003bbc:	2b00      	cmp	r3, #0
 8003bbe:	d113      	bne.n	8003be8 <HAL_QSPI_Transmit+0xc8>
        {
          break;
        }

        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8003bc0:	68fb      	ldr	r3, [r7, #12]
 8003bc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bc4:	781a      	ldrb	r2, [r3, #0]
 8003bc6:	697b      	ldr	r3, [r7, #20]
 8003bc8:	701a      	strb	r2, [r3, #0]
        hqspi->pTxBuffPtr++;
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bce:	1c5a      	adds	r2, r3, #1
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	625a      	str	r2, [r3, #36]	; 0x24
        hqspi->TxXferCount--;
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bd8:	1e5a      	subs	r2, r3, #1
 8003bda:	68fb      	ldr	r3, [r7, #12]
 8003bdc:	62da      	str	r2, [r3, #44]	; 0x2c
      while(hqspi->TxXferCount > 0U)
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d1df      	bne.n	8003ba6 <HAL_QSPI_Transmit+0x86>
 8003be6:	e000      	b.n	8003bea <HAL_QSPI_Transmit+0xca>
          break;
 8003be8:	bf00      	nop
      }

      if (status == HAL_OK)
 8003bea:	7ffb      	ldrb	r3, [r7, #31]
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d110      	bne.n	8003c12 <HAL_QSPI_Transmit+0xf2>
      {
        /* Wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	9300      	str	r3, [sp, #0]
 8003bf4:	69bb      	ldr	r3, [r7, #24]
 8003bf6:	2201      	movs	r2, #1
 8003bf8:	2102      	movs	r1, #2
 8003bfa:	68f8      	ldr	r0, [r7, #12]
 8003bfc:	f000 f8cd 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003c00:	4603      	mov	r3, r0
 8003c02:	77fb      	strb	r3, [r7, #31]

        if (status == HAL_OK)
 8003c04:	7ffb      	ldrb	r3, [r7, #31]
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d103      	bne.n	8003c12 <HAL_QSPI_Transmit+0xf2>
        {
          /* Clear Transfer Complete bit */
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	2202      	movs	r2, #2
 8003c10:	60da      	str	r2, [r3, #12]

        }
      }

      /* Update QSPI state */
      hqspi->State = HAL_QSPI_STATE_READY;
 8003c12:	68fb      	ldr	r3, [r7, #12]
 8003c14:	2201      	movs	r2, #1
 8003c16:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003c1a:	e00a      	b.n	8003c32 <HAL_QSPI_Transmit+0x112>
    }
    else
    {
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c20:	f043 0208 	orr.w	r2, r3, #8
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	645a      	str	r2, [r3, #68]	; 0x44
      status = HAL_ERROR;
 8003c28:	2301      	movs	r3, #1
 8003c2a:	77fb      	strb	r3, [r7, #31]
 8003c2c:	e001      	b.n	8003c32 <HAL_QSPI_Transmit+0x112>
    }
  }
  else
  {
    status = HAL_BUSY;
 8003c2e:	2302      	movs	r3, #2
 8003c30:	77fb      	strb	r3, [r7, #31]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	2200      	movs	r2, #0
 8003c36:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return status;
 8003c3a:	7ffb      	ldrb	r3, [r7, #31]
}
 8003c3c:	4618      	mov	r0, r3
 8003c3e:	3720      	adds	r7, #32
 8003c40:	46bd      	mov	sp, r7
 8003c42:	bd80      	pop	{r7, pc}

08003c44 <HAL_QSPI_Receive>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Read Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Receive(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
{
 8003c44:	b580      	push	{r7, lr}
 8003c46:	b08a      	sub	sp, #40	; 0x28
 8003c48:	af02      	add	r7, sp, #8
 8003c4a:	60f8      	str	r0, [r7, #12]
 8003c4c:	60b9      	str	r1, [r7, #8]
 8003c4e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003c50:	2300      	movs	r3, #0
 8003c52:	77fb      	strb	r3, [r7, #31]
  uint32_t tickstart = HAL_GetTick();
 8003c54:	f7fd ff22 	bl	8001a9c <HAL_GetTick>
 8003c58:	61b8      	str	r0, [r7, #24]
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	699b      	ldr	r3, [r3, #24]
 8003c60:	617b      	str	r3, [r7, #20]
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	3320      	adds	r3, #32
 8003c68:	613b      	str	r3, [r7, #16]

  /* Process locked */
  __HAL_LOCK(hqspi);
 8003c6a:	68fb      	ldr	r3, [r7, #12]
 8003c6c:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003c70:	b2db      	uxtb	r3, r3
 8003c72:	2b01      	cmp	r3, #1
 8003c74:	d101      	bne.n	8003c7a <HAL_QSPI_Receive+0x36>
 8003c76:	2302      	movs	r3, #2
 8003c78:	e07d      	b.n	8003d76 <HAL_QSPI_Receive+0x132>
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	2201      	movs	r2, #1
 8003c7e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003c88:	b2db      	uxtb	r3, r3
 8003c8a:	2b01      	cmp	r3, #1
 8003c8c:	d16c      	bne.n	8003d68 <HAL_QSPI_Receive+0x124>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	2200      	movs	r2, #0
 8003c92:	645a      	str	r2, [r3, #68]	; 0x44

    if(pData != NULL )
 8003c94:	68bb      	ldr	r3, [r7, #8]
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d05d      	beq.n	8003d56 <HAL_QSPI_Receive+0x112>
    {
      /* Update state */
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	2222      	movs	r2, #34	; 0x22
 8003c9e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Configure counters and size of the handle */
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	691b      	ldr	r3, [r3, #16]
 8003ca8:	1c5a      	adds	r2, r3, #1
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	639a      	str	r2, [r3, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	691b      	ldr	r3, [r3, #16]
 8003cb4:	1c5a      	adds	r2, r3, #1
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	635a      	str	r2, [r3, #52]	; 0x34
      hqspi->pRxBuffPtr = pData;
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	68ba      	ldr	r2, [r7, #8]
 8003cbe:	631a      	str	r2, [r3, #48]	; 0x30

      /* Configure QSPI: CCR register with functional as indirect read */
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	695b      	ldr	r3, [r3, #20]
 8003cc6:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8003cd2:	615a      	str	r2, [r3, #20]

      /* Start the transfer by re-writing the address in AR register */
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	697a      	ldr	r2, [r7, #20]
 8003cda:	619a      	str	r2, [r3, #24]

      while(hqspi->RxXferCount > 0U)
 8003cdc:	e01c      	b.n	8003d18 <HAL_QSPI_Receive+0xd4>
      {
        /* Wait until FT or TC flag is set to read received data */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	9300      	str	r3, [sp, #0]
 8003ce2:	69bb      	ldr	r3, [r7, #24]
 8003ce4:	2201      	movs	r2, #1
 8003ce6:	2106      	movs	r1, #6
 8003ce8:	68f8      	ldr	r0, [r7, #12]
 8003cea:	f000 f856 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003cee:	4603      	mov	r3, r0
 8003cf0:	77fb      	strb	r3, [r7, #31]

        if  (status != HAL_OK)
 8003cf2:	7ffb      	ldrb	r3, [r7, #31]
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d114      	bne.n	8003d22 <HAL_QSPI_Receive+0xde>
        {
          break;
        }

        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cfc:	693a      	ldr	r2, [r7, #16]
 8003cfe:	7812      	ldrb	r2, [r2, #0]
 8003d00:	b2d2      	uxtb	r2, r2
 8003d02:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d08:	1c5a      	adds	r2, r3, #1
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	631a      	str	r2, [r3, #48]	; 0x30
        hqspi->RxXferCount--;
 8003d0e:	68fb      	ldr	r3, [r7, #12]
 8003d10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d12:	1e5a      	subs	r2, r3, #1
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	639a      	str	r2, [r3, #56]	; 0x38
      while(hqspi->RxXferCount > 0U)
 8003d18:	68fb      	ldr	r3, [r7, #12]
 8003d1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d1c:	2b00      	cmp	r3, #0
 8003d1e:	d1de      	bne.n	8003cde <HAL_QSPI_Receive+0x9a>
 8003d20:	e000      	b.n	8003d24 <HAL_QSPI_Receive+0xe0>
          break;
 8003d22:	bf00      	nop
      }

      if (status == HAL_OK)
 8003d24:	7ffb      	ldrb	r3, [r7, #31]
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d110      	bne.n	8003d4c <HAL_QSPI_Receive+0x108>
      {
        /* Wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	9300      	str	r3, [sp, #0]
 8003d2e:	69bb      	ldr	r3, [r7, #24]
 8003d30:	2201      	movs	r2, #1
 8003d32:	2102      	movs	r1, #2
 8003d34:	68f8      	ldr	r0, [r7, #12]
 8003d36:	f000 f830 	bl	8003d9a <QSPI_WaitFlagStateUntilTimeout>
 8003d3a:	4603      	mov	r3, r0
 8003d3c:	77fb      	strb	r3, [r7, #31]

        if  (status == HAL_OK)
 8003d3e:	7ffb      	ldrb	r3, [r7, #31]
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d103      	bne.n	8003d4c <HAL_QSPI_Receive+0x108>
        {
          /* Clear Transfer Complete bit */
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	2202      	movs	r2, #2
 8003d4a:	60da      	str	r2, [r3, #12]

        }
      }

      /* Update QSPI state */
      hqspi->State = HAL_QSPI_STATE_READY;
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	2201      	movs	r2, #1
 8003d50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d54:	e00a      	b.n	8003d6c <HAL_QSPI_Receive+0x128>
    }
    else
    {
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8003d56:	68fb      	ldr	r3, [r7, #12]
 8003d58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d5a:	f043 0208 	orr.w	r2, r3, #8
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	645a      	str	r2, [r3, #68]	; 0x44
      status = HAL_ERROR;
 8003d62:	2301      	movs	r3, #1
 8003d64:	77fb      	strb	r3, [r7, #31]
 8003d66:	e001      	b.n	8003d6c <HAL_QSPI_Receive+0x128>
    }
  }
  else
  {
    status = HAL_BUSY;
 8003d68:	2302      	movs	r3, #2
 8003d6a:	77fb      	strb	r3, [r7, #31]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	2200      	movs	r2, #0
 8003d70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return status;
 8003d74:	7ffb      	ldrb	r3, [r7, #31]
}
 8003d76:	4618      	mov	r0, r3
 8003d78:	3720      	adds	r7, #32
 8003d7a:	46bd      	mov	sp, r7
 8003d7c:	bd80      	pop	{r7, pc}

08003d7e <HAL_QSPI_SetTimeout>:
  * @param  hqspi QSPI handle.
  * @param  Timeout Timeout for the QSPI memory access.
  * @retval None
  */
void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 8003d7e:	b480      	push	{r7}
 8003d80:	b083      	sub	sp, #12
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	6078      	str	r0, [r7, #4]
 8003d86:	6039      	str	r1, [r7, #0]
  hqspi->Timeout = Timeout;
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	683a      	ldr	r2, [r7, #0]
 8003d8c:	649a      	str	r2, [r3, #72]	; 0x48
}
 8003d8e:	bf00      	nop
 8003d90:	370c      	adds	r7, #12
 8003d92:	46bd      	mov	sp, r7
 8003d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d98:	4770      	bx	lr

08003d9a <QSPI_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8003d9a:	b580      	push	{r7, lr}
 8003d9c:	b084      	sub	sp, #16
 8003d9e:	af00      	add	r7, sp, #0
 8003da0:	60f8      	str	r0, [r7, #12]
 8003da2:	60b9      	str	r1, [r7, #8]
 8003da4:	603b      	str	r3, [r7, #0]
 8003da6:	4613      	mov	r3, r2
 8003da8:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8003daa:	e01a      	b.n	8003de2 <QSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003dac:	69bb      	ldr	r3, [r7, #24]
 8003dae:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003db2:	d016      	beq.n	8003de2 <QSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003db4:	f7fd fe72 	bl	8001a9c <HAL_GetTick>
 8003db8:	4602      	mov	r2, r0
 8003dba:	683b      	ldr	r3, [r7, #0]
 8003dbc:	1ad3      	subs	r3, r2, r3
 8003dbe:	69ba      	ldr	r2, [r7, #24]
 8003dc0:	429a      	cmp	r2, r3
 8003dc2:	d302      	bcc.n	8003dca <QSPI_WaitFlagStateUntilTimeout+0x30>
 8003dc4:	69bb      	ldr	r3, [r7, #24]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	d10b      	bne.n	8003de2 <QSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2204      	movs	r2, #4
 8003dce:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003dd6:	f043 0201 	orr.w	r2, r3, #1
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	645a      	str	r2, [r3, #68]	; 0x44

        return HAL_ERROR;
 8003dde:	2301      	movs	r3, #1
 8003de0:	e00e      	b.n	8003e00 <QSPI_WaitFlagStateUntilTimeout+0x66>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	689a      	ldr	r2, [r3, #8]
 8003de8:	68bb      	ldr	r3, [r7, #8]
 8003dea:	4013      	ands	r3, r2
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	bf14      	ite	ne
 8003df0:	2301      	movne	r3, #1
 8003df2:	2300      	moveq	r3, #0
 8003df4:	b2db      	uxtb	r3, r3
 8003df6:	461a      	mov	r2, r3
 8003df8:	79fb      	ldrb	r3, [r7, #7]
 8003dfa:	429a      	cmp	r2, r3
 8003dfc:	d1d6      	bne.n	8003dac <QSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8003dfe:	2300      	movs	r3, #0
}
 8003e00:	4618      	mov	r0, r3
 8003e02:	3710      	adds	r7, #16
 8003e04:	46bd      	mov	sp, r7
 8003e06:	bd80      	pop	{r7, pc}

08003e08 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8003e08:	b480      	push	{r7}
 8003e0a:	b085      	sub	sp, #20
 8003e0c:	af00      	add	r7, sp, #0
 8003e0e:	60f8      	str	r0, [r7, #12]
 8003e10:	60b9      	str	r1, [r7, #8]
 8003e12:	607a      	str	r2, [r7, #4]
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8003e14:	68bb      	ldr	r3, [r7, #8]
 8003e16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d009      	beq.n	8003e30 <QSPI_Config+0x28>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8003e22:	d005      	beq.n	8003e30 <QSPI_Config+0x28>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8003e24:	68bb      	ldr	r3, [r7, #8]
 8003e26:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	3a01      	subs	r2, #1
 8003e2e:	611a      	str	r2, [r3, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8003e30:	68bb      	ldr	r3, [r7, #8]
 8003e32:	699b      	ldr	r3, [r3, #24]
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	f000 80b9 	beq.w	8003fac <QSPI_Config+0x1a4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8003e3a:	68bb      	ldr	r3, [r7, #8]
 8003e3c:	6a1b      	ldr	r3, [r3, #32]
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d05f      	beq.n	8003f02 <QSPI_Config+0xfa>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	68ba      	ldr	r2, [r7, #8]
 8003e48:	6892      	ldr	r2, [r2, #8]
 8003e4a:	61da      	str	r2, [r3, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8003e4c:	68bb      	ldr	r3, [r7, #8]
 8003e4e:	69db      	ldr	r3, [r3, #28]
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d031      	beq.n	8003eb8 <QSPI_Config+0xb0>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8003e54:	68bb      	ldr	r3, [r7, #8]
 8003e56:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003e58:	68bb      	ldr	r3, [r7, #8]
 8003e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e5c:	431a      	orrs	r2, r3
 8003e5e:	68bb      	ldr	r3, [r7, #8]
 8003e60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003e62:	431a      	orrs	r2, r3
 8003e64:	68bb      	ldr	r3, [r7, #8]
 8003e66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e68:	431a      	orrs	r2, r3
 8003e6a:	68bb      	ldr	r3, [r7, #8]
 8003e6c:	695b      	ldr	r3, [r3, #20]
 8003e6e:	049b      	lsls	r3, r3, #18
 8003e70:	431a      	orrs	r2, r3
 8003e72:	68bb      	ldr	r3, [r7, #8]
 8003e74:	691b      	ldr	r3, [r3, #16]
 8003e76:	431a      	orrs	r2, r3
 8003e78:	68bb      	ldr	r3, [r7, #8]
 8003e7a:	6a1b      	ldr	r3, [r3, #32]
 8003e7c:	431a      	orrs	r2, r3
 8003e7e:	68bb      	ldr	r3, [r7, #8]
 8003e80:	68db      	ldr	r3, [r3, #12]
 8003e82:	431a      	orrs	r2, r3
 8003e84:	68bb      	ldr	r3, [r7, #8]
 8003e86:	69db      	ldr	r3, [r3, #28]
 8003e88:	431a      	orrs	r2, r3
 8003e8a:	68bb      	ldr	r3, [r7, #8]
 8003e8c:	699b      	ldr	r3, [r3, #24]
 8003e8e:	431a      	orrs	r2, r3
 8003e90:	68bb      	ldr	r3, [r7, #8]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	ea42 0103 	orr.w	r1, r2, r3
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	687a      	ldr	r2, [r7, #4]
 8003e9e:	430a      	orrs	r2, r1
 8003ea0:	615a      	str	r2, [r3, #20]
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateBytesSize | cmd->AlternateByteMode |
                                         cmd->AddressSize | cmd->AddressMode | cmd->InstructionMode |
                                         cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8003ea8:	f000 812e 	beq.w	8004108 <QSPI_Config+0x300>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	68ba      	ldr	r2, [r7, #8]
 8003eb2:	6852      	ldr	r2, [r2, #4]
 8003eb4:	619a      	str	r2, [r3, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8003eb6:	e127      	b.n	8004108 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8003eb8:	68bb      	ldr	r3, [r7, #8]
 8003eba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003ebc:	68bb      	ldr	r3, [r7, #8]
 8003ebe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ec0:	431a      	orrs	r2, r3
 8003ec2:	68bb      	ldr	r3, [r7, #8]
 8003ec4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003ec6:	431a      	orrs	r2, r3
 8003ec8:	68bb      	ldr	r3, [r7, #8]
 8003eca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ecc:	431a      	orrs	r2, r3
 8003ece:	68bb      	ldr	r3, [r7, #8]
 8003ed0:	695b      	ldr	r3, [r3, #20]
 8003ed2:	049b      	lsls	r3, r3, #18
 8003ed4:	431a      	orrs	r2, r3
 8003ed6:	68bb      	ldr	r3, [r7, #8]
 8003ed8:	691b      	ldr	r3, [r3, #16]
 8003eda:	431a      	orrs	r2, r3
 8003edc:	68bb      	ldr	r3, [r7, #8]
 8003ede:	6a1b      	ldr	r3, [r3, #32]
 8003ee0:	431a      	orrs	r2, r3
 8003ee2:	68bb      	ldr	r3, [r7, #8]
 8003ee4:	69db      	ldr	r3, [r3, #28]
 8003ee6:	431a      	orrs	r2, r3
 8003ee8:	68bb      	ldr	r3, [r7, #8]
 8003eea:	699b      	ldr	r3, [r3, #24]
 8003eec:	431a      	orrs	r2, r3
 8003eee:	68bb      	ldr	r3, [r7, #8]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	ea42 0103 	orr.w	r1, r2, r3
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	687a      	ldr	r2, [r7, #4]
 8003efc:	430a      	orrs	r2, r1
 8003efe:	615a      	str	r2, [r3, #20]
}
 8003f00:	e102      	b.n	8004108 <QSPI_Config+0x300>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8003f02:	68bb      	ldr	r3, [r7, #8]
 8003f04:	69db      	ldr	r3, [r3, #28]
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d02e      	beq.n	8003f68 <QSPI_Config+0x160>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8003f0a:	68bb      	ldr	r3, [r7, #8]
 8003f0c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f0e:	68bb      	ldr	r3, [r7, #8]
 8003f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f12:	431a      	orrs	r2, r3
 8003f14:	68bb      	ldr	r3, [r7, #8]
 8003f16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f18:	431a      	orrs	r2, r3
 8003f1a:	68bb      	ldr	r3, [r7, #8]
 8003f1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f1e:	431a      	orrs	r2, r3
 8003f20:	68bb      	ldr	r3, [r7, #8]
 8003f22:	695b      	ldr	r3, [r3, #20]
 8003f24:	049b      	lsls	r3, r3, #18
 8003f26:	431a      	orrs	r2, r3
 8003f28:	68bb      	ldr	r3, [r7, #8]
 8003f2a:	6a1b      	ldr	r3, [r3, #32]
 8003f2c:	431a      	orrs	r2, r3
 8003f2e:	68bb      	ldr	r3, [r7, #8]
 8003f30:	68db      	ldr	r3, [r3, #12]
 8003f32:	431a      	orrs	r2, r3
 8003f34:	68bb      	ldr	r3, [r7, #8]
 8003f36:	69db      	ldr	r3, [r3, #28]
 8003f38:	431a      	orrs	r2, r3
 8003f3a:	68bb      	ldr	r3, [r7, #8]
 8003f3c:	699b      	ldr	r3, [r3, #24]
 8003f3e:	431a      	orrs	r2, r3
 8003f40:	68bb      	ldr	r3, [r7, #8]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	ea42 0103 	orr.w	r1, r2, r3
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	687a      	ldr	r2, [r7, #4]
 8003f4e:	430a      	orrs	r2, r1
 8003f50:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8003f58:	f000 80d6 	beq.w	8004108 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	68ba      	ldr	r2, [r7, #8]
 8003f62:	6852      	ldr	r2, [r2, #4]
 8003f64:	619a      	str	r2, [r3, #24]
}
 8003f66:	e0cf      	b.n	8004108 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8003f68:	68bb      	ldr	r3, [r7, #8]
 8003f6a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f6c:	68bb      	ldr	r3, [r7, #8]
 8003f6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f70:	431a      	orrs	r2, r3
 8003f72:	68bb      	ldr	r3, [r7, #8]
 8003f74:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f76:	431a      	orrs	r2, r3
 8003f78:	68bb      	ldr	r3, [r7, #8]
 8003f7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f7c:	431a      	orrs	r2, r3
 8003f7e:	68bb      	ldr	r3, [r7, #8]
 8003f80:	695b      	ldr	r3, [r3, #20]
 8003f82:	049b      	lsls	r3, r3, #18
 8003f84:	431a      	orrs	r2, r3
 8003f86:	68bb      	ldr	r3, [r7, #8]
 8003f88:	6a1b      	ldr	r3, [r3, #32]
 8003f8a:	431a      	orrs	r2, r3
 8003f8c:	68bb      	ldr	r3, [r7, #8]
 8003f8e:	69db      	ldr	r3, [r3, #28]
 8003f90:	431a      	orrs	r2, r3
 8003f92:	68bb      	ldr	r3, [r7, #8]
 8003f94:	699b      	ldr	r3, [r3, #24]
 8003f96:	431a      	orrs	r2, r3
 8003f98:	68bb      	ldr	r3, [r7, #8]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	ea42 0103 	orr.w	r1, r2, r3
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	687a      	ldr	r2, [r7, #4]
 8003fa6:	430a      	orrs	r2, r1
 8003fa8:	615a      	str	r2, [r3, #20]
}
 8003faa:	e0ad      	b.n	8004108 <QSPI_Config+0x300>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8003fac:	68bb      	ldr	r3, [r7, #8]
 8003fae:	6a1b      	ldr	r3, [r3, #32]
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d058      	beq.n	8004066 <QSPI_Config+0x25e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	68ba      	ldr	r2, [r7, #8]
 8003fba:	6892      	ldr	r2, [r2, #8]
 8003fbc:	61da      	str	r2, [r3, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8003fbe:	68bb      	ldr	r3, [r7, #8]
 8003fc0:	69db      	ldr	r3, [r3, #28]
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d02d      	beq.n	8004022 <QSPI_Config+0x21a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8003fc6:	68bb      	ldr	r3, [r7, #8]
 8003fc8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fca:	68bb      	ldr	r3, [r7, #8]
 8003fcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fce:	431a      	orrs	r2, r3
 8003fd0:	68bb      	ldr	r3, [r7, #8]
 8003fd2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fd4:	431a      	orrs	r2, r3
 8003fd6:	68bb      	ldr	r3, [r7, #8]
 8003fd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fda:	431a      	orrs	r2, r3
 8003fdc:	68bb      	ldr	r3, [r7, #8]
 8003fde:	695b      	ldr	r3, [r3, #20]
 8003fe0:	049b      	lsls	r3, r3, #18
 8003fe2:	431a      	orrs	r2, r3
 8003fe4:	68bb      	ldr	r3, [r7, #8]
 8003fe6:	691b      	ldr	r3, [r3, #16]
 8003fe8:	431a      	orrs	r2, r3
 8003fea:	68bb      	ldr	r3, [r7, #8]
 8003fec:	6a1b      	ldr	r3, [r3, #32]
 8003fee:	431a      	orrs	r2, r3
 8003ff0:	68bb      	ldr	r3, [r7, #8]
 8003ff2:	68db      	ldr	r3, [r3, #12]
 8003ff4:	431a      	orrs	r2, r3
 8003ff6:	68bb      	ldr	r3, [r7, #8]
 8003ff8:	69db      	ldr	r3, [r3, #28]
 8003ffa:	431a      	orrs	r2, r3
 8003ffc:	68bb      	ldr	r3, [r7, #8]
 8003ffe:	699b      	ldr	r3, [r3, #24]
 8004000:	ea42 0103 	orr.w	r1, r2, r3
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	687a      	ldr	r2, [r7, #4]
 800400a:	430a      	orrs	r2, r1
 800400c:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8004014:	d078      	beq.n	8004108 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8004016:	68fb      	ldr	r3, [r7, #12]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	68ba      	ldr	r2, [r7, #8]
 800401c:	6852      	ldr	r2, [r2, #4]
 800401e:	619a      	str	r2, [r3, #24]
}
 8004020:	e072      	b.n	8004108 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8004022:	68bb      	ldr	r3, [r7, #8]
 8004024:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004026:	68bb      	ldr	r3, [r7, #8]
 8004028:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800402a:	431a      	orrs	r2, r3
 800402c:	68bb      	ldr	r3, [r7, #8]
 800402e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004030:	431a      	orrs	r2, r3
 8004032:	68bb      	ldr	r3, [r7, #8]
 8004034:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004036:	431a      	orrs	r2, r3
 8004038:	68bb      	ldr	r3, [r7, #8]
 800403a:	695b      	ldr	r3, [r3, #20]
 800403c:	049b      	lsls	r3, r3, #18
 800403e:	431a      	orrs	r2, r3
 8004040:	68bb      	ldr	r3, [r7, #8]
 8004042:	691b      	ldr	r3, [r3, #16]
 8004044:	431a      	orrs	r2, r3
 8004046:	68bb      	ldr	r3, [r7, #8]
 8004048:	6a1b      	ldr	r3, [r3, #32]
 800404a:	431a      	orrs	r2, r3
 800404c:	68bb      	ldr	r3, [r7, #8]
 800404e:	69db      	ldr	r3, [r3, #28]
 8004050:	431a      	orrs	r2, r3
 8004052:	68bb      	ldr	r3, [r7, #8]
 8004054:	699b      	ldr	r3, [r3, #24]
 8004056:	ea42 0103 	orr.w	r1, r2, r3
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	687a      	ldr	r2, [r7, #4]
 8004060:	430a      	orrs	r2, r1
 8004062:	615a      	str	r2, [r3, #20]
}
 8004064:	e050      	b.n	8004108 <QSPI_Config+0x300>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8004066:	68bb      	ldr	r3, [r7, #8]
 8004068:	69db      	ldr	r3, [r3, #28]
 800406a:	2b00      	cmp	r3, #0
 800406c:	d02a      	beq.n	80040c4 <QSPI_Config+0x2bc>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800406e:	68bb      	ldr	r3, [r7, #8]
 8004070:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004072:	68bb      	ldr	r3, [r7, #8]
 8004074:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004076:	431a      	orrs	r2, r3
 8004078:	68bb      	ldr	r3, [r7, #8]
 800407a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800407c:	431a      	orrs	r2, r3
 800407e:	68bb      	ldr	r3, [r7, #8]
 8004080:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004082:	431a      	orrs	r2, r3
 8004084:	68bb      	ldr	r3, [r7, #8]
 8004086:	695b      	ldr	r3, [r3, #20]
 8004088:	049b      	lsls	r3, r3, #18
 800408a:	431a      	orrs	r2, r3
 800408c:	68bb      	ldr	r3, [r7, #8]
 800408e:	6a1b      	ldr	r3, [r3, #32]
 8004090:	431a      	orrs	r2, r3
 8004092:	68bb      	ldr	r3, [r7, #8]
 8004094:	68db      	ldr	r3, [r3, #12]
 8004096:	431a      	orrs	r2, r3
 8004098:	68bb      	ldr	r3, [r7, #8]
 800409a:	69db      	ldr	r3, [r3, #28]
 800409c:	431a      	orrs	r2, r3
 800409e:	68bb      	ldr	r3, [r7, #8]
 80040a0:	699b      	ldr	r3, [r3, #24]
 80040a2:	ea42 0103 	orr.w	r1, r2, r3
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	687a      	ldr	r2, [r7, #4]
 80040ac:	430a      	orrs	r2, r1
 80040ae:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 80040b6:	d027      	beq.n	8004108 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	68ba      	ldr	r2, [r7, #8]
 80040be:	6852      	ldr	r2, [r2, #4]
 80040c0:	619a      	str	r2, [r3, #24]
}
 80040c2:	e021      	b.n	8004108 <QSPI_Config+0x300>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80040c4:	68bb      	ldr	r3, [r7, #8]
 80040c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	d01d      	beq.n	8004108 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80040cc:	68bb      	ldr	r3, [r7, #8]
 80040ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80040d0:	68bb      	ldr	r3, [r7, #8]
 80040d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040d4:	431a      	orrs	r2, r3
 80040d6:	68bb      	ldr	r3, [r7, #8]
 80040d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80040da:	431a      	orrs	r2, r3
 80040dc:	68bb      	ldr	r3, [r7, #8]
 80040de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040e0:	431a      	orrs	r2, r3
 80040e2:	68bb      	ldr	r3, [r7, #8]
 80040e4:	695b      	ldr	r3, [r3, #20]
 80040e6:	049b      	lsls	r3, r3, #18
 80040e8:	431a      	orrs	r2, r3
 80040ea:	68bb      	ldr	r3, [r7, #8]
 80040ec:	6a1b      	ldr	r3, [r3, #32]
 80040ee:	431a      	orrs	r2, r3
 80040f0:	68bb      	ldr	r3, [r7, #8]
 80040f2:	69db      	ldr	r3, [r3, #28]
 80040f4:	431a      	orrs	r2, r3
 80040f6:	68bb      	ldr	r3, [r7, #8]
 80040f8:	699b      	ldr	r3, [r3, #24]
 80040fa:	ea42 0103 	orr.w	r1, r2, r3
 80040fe:	68fb      	ldr	r3, [r7, #12]
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	687a      	ldr	r2, [r7, #4]
 8004104:	430a      	orrs	r2, r1
 8004106:	615a      	str	r2, [r3, #20]
}
 8004108:	bf00      	nop
 800410a:	3714      	adds	r7, #20
 800410c:	46bd      	mov	sp, r7
 800410e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004112:	4770      	bx	lr

08004114 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004114:	b580      	push	{r7, lr}
 8004116:	b08c      	sub	sp, #48	; 0x30
 8004118:	af00      	add	r7, sp, #0
 800411a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	2b00      	cmp	r3, #0
 8004120:	d102      	bne.n	8004128 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8004122:	2301      	movs	r3, #1
 8004124:	f000 bc48 	b.w	80049b8 <HAL_RCC_OscConfig+0x8a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	f003 0301 	and.w	r3, r3, #1
 8004130:	2b00      	cmp	r3, #0
 8004132:	f000 8088 	beq.w	8004246 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004136:	4b99      	ldr	r3, [pc, #612]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004138:	691b      	ldr	r3, [r3, #16]
 800413a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800413e:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8004140:	4b96      	ldr	r3, [pc, #600]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004144:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8004146:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004148:	2b10      	cmp	r3, #16
 800414a:	d007      	beq.n	800415c <HAL_RCC_OscConfig+0x48>
 800414c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800414e:	2b18      	cmp	r3, #24
 8004150:	d111      	bne.n	8004176 <HAL_RCC_OscConfig+0x62>
 8004152:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004154:	f003 0303 	and.w	r3, r3, #3
 8004158:	2b02      	cmp	r3, #2
 800415a:	d10c      	bne.n	8004176 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800415c:	4b8f      	ldr	r3, [pc, #572]	; (800439c <HAL_RCC_OscConfig+0x288>)
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004164:	2b00      	cmp	r3, #0
 8004166:	d06d      	beq.n	8004244 <HAL_RCC_OscConfig+0x130>
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	685b      	ldr	r3, [r3, #4]
 800416c:	2b00      	cmp	r3, #0
 800416e:	d169      	bne.n	8004244 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8004170:	2301      	movs	r3, #1
 8004172:	f000 bc21 	b.w	80049b8 <HAL_RCC_OscConfig+0x8a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	685b      	ldr	r3, [r3, #4]
 800417a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800417e:	d106      	bne.n	800418e <HAL_RCC_OscConfig+0x7a>
 8004180:	4b86      	ldr	r3, [pc, #536]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	4a85      	ldr	r2, [pc, #532]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004186:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800418a:	6013      	str	r3, [r2, #0]
 800418c:	e02e      	b.n	80041ec <HAL_RCC_OscConfig+0xd8>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	685b      	ldr	r3, [r3, #4]
 8004192:	2b00      	cmp	r3, #0
 8004194:	d10c      	bne.n	80041b0 <HAL_RCC_OscConfig+0x9c>
 8004196:	4b81      	ldr	r3, [pc, #516]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004198:	681b      	ldr	r3, [r3, #0]
 800419a:	4a80      	ldr	r2, [pc, #512]	; (800439c <HAL_RCC_OscConfig+0x288>)
 800419c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80041a0:	6013      	str	r3, [r2, #0]
 80041a2:	4b7e      	ldr	r3, [pc, #504]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	4a7d      	ldr	r2, [pc, #500]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041a8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80041ac:	6013      	str	r3, [r2, #0]
 80041ae:	e01d      	b.n	80041ec <HAL_RCC_OscConfig+0xd8>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	685b      	ldr	r3, [r3, #4]
 80041b4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80041b8:	d10c      	bne.n	80041d4 <HAL_RCC_OscConfig+0xc0>
 80041ba:	4b78      	ldr	r3, [pc, #480]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	4a77      	ldr	r2, [pc, #476]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80041c4:	6013      	str	r3, [r2, #0]
 80041c6:	4b75      	ldr	r3, [pc, #468]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	4a74      	ldr	r2, [pc, #464]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80041d0:	6013      	str	r3, [r2, #0]
 80041d2:	e00b      	b.n	80041ec <HAL_RCC_OscConfig+0xd8>
 80041d4:	4b71      	ldr	r3, [pc, #452]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	4a70      	ldr	r2, [pc, #448]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041da:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80041de:	6013      	str	r3, [r2, #0]
 80041e0:	4b6e      	ldr	r3, [pc, #440]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	4a6d      	ldr	r2, [pc, #436]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80041e6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80041ea:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	685b      	ldr	r3, [r3, #4]
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	d013      	beq.n	800421c <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80041f4:	f7fd fc52 	bl	8001a9c <HAL_GetTick>
 80041f8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80041fa:	e008      	b.n	800420e <HAL_RCC_OscConfig+0xfa>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80041fc:	f7fd fc4e 	bl	8001a9c <HAL_GetTick>
 8004200:	4602      	mov	r2, r0
 8004202:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004204:	1ad3      	subs	r3, r2, r3
 8004206:	2b64      	cmp	r3, #100	; 0x64
 8004208:	d901      	bls.n	800420e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800420a:	2303      	movs	r3, #3
 800420c:	e3d4      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800420e:	4b63      	ldr	r3, [pc, #396]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004216:	2b00      	cmp	r3, #0
 8004218:	d0f0      	beq.n	80041fc <HAL_RCC_OscConfig+0xe8>
 800421a:	e014      	b.n	8004246 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800421c:	f7fd fc3e 	bl	8001a9c <HAL_GetTick>
 8004220:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8004222:	e008      	b.n	8004236 <HAL_RCC_OscConfig+0x122>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004224:	f7fd fc3a 	bl	8001a9c <HAL_GetTick>
 8004228:	4602      	mov	r2, r0
 800422a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800422c:	1ad3      	subs	r3, r2, r3
 800422e:	2b64      	cmp	r3, #100	; 0x64
 8004230:	d901      	bls.n	8004236 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8004232:	2303      	movs	r3, #3
 8004234:	e3c0      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8004236:	4b59      	ldr	r3, [pc, #356]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800423e:	2b00      	cmp	r3, #0
 8004240:	d1f0      	bne.n	8004224 <HAL_RCC_OscConfig+0x110>
 8004242:	e000      	b.n	8004246 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004244:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	f003 0302 	and.w	r3, r3, #2
 800424e:	2b00      	cmp	r3, #0
 8004250:	f000 80ca 	beq.w	80043e8 <HAL_RCC_OscConfig+0x2d4>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004254:	4b51      	ldr	r3, [pc, #324]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004256:	691b      	ldr	r3, [r3, #16]
 8004258:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800425c:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800425e:	4b4f      	ldr	r3, [pc, #316]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004260:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004262:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8004264:	6a3b      	ldr	r3, [r7, #32]
 8004266:	2b00      	cmp	r3, #0
 8004268:	d007      	beq.n	800427a <HAL_RCC_OscConfig+0x166>
 800426a:	6a3b      	ldr	r3, [r7, #32]
 800426c:	2b18      	cmp	r3, #24
 800426e:	d156      	bne.n	800431e <HAL_RCC_OscConfig+0x20a>
 8004270:	69fb      	ldr	r3, [r7, #28]
 8004272:	f003 0303 	and.w	r3, r3, #3
 8004276:	2b00      	cmp	r3, #0
 8004278:	d151      	bne.n	800431e <HAL_RCC_OscConfig+0x20a>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800427a:	4b48      	ldr	r3, [pc, #288]	; (800439c <HAL_RCC_OscConfig+0x288>)
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	f003 0304 	and.w	r3, r3, #4
 8004282:	2b00      	cmp	r3, #0
 8004284:	d005      	beq.n	8004292 <HAL_RCC_OscConfig+0x17e>
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	68db      	ldr	r3, [r3, #12]
 800428a:	2b00      	cmp	r3, #0
 800428c:	d101      	bne.n	8004292 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 800428e:	2301      	movs	r3, #1
 8004290:	e392      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8004292:	4b42      	ldr	r3, [pc, #264]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	f023 0219 	bic.w	r2, r3, #25
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	68db      	ldr	r3, [r3, #12]
 800429e:	493f      	ldr	r1, [pc, #252]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80042a0:	4313      	orrs	r3, r2
 80042a2:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80042a4:	f7fd fbfa 	bl	8001a9c <HAL_GetTick>
 80042a8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80042aa:	e008      	b.n	80042be <HAL_RCC_OscConfig+0x1aa>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80042ac:	f7fd fbf6 	bl	8001a9c <HAL_GetTick>
 80042b0:	4602      	mov	r2, r0
 80042b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042b4:	1ad3      	subs	r3, r2, r3
 80042b6:	2b02      	cmp	r3, #2
 80042b8:	d901      	bls.n	80042be <HAL_RCC_OscConfig+0x1aa>
          {
            return HAL_TIMEOUT;
 80042ba:	2303      	movs	r3, #3
 80042bc:	e37c      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80042be:	4b37      	ldr	r3, [pc, #220]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	f003 0304 	and.w	r3, r3, #4
 80042c6:	2b00      	cmp	r3, #0
 80042c8:	d0f0      	beq.n	80042ac <HAL_RCC_OscConfig+0x198>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80042ca:	f7fd fbf3 	bl	8001ab4 <HAL_GetREVID>
 80042ce:	4603      	mov	r3, r0
 80042d0:	f241 0203 	movw	r2, #4099	; 0x1003
 80042d4:	4293      	cmp	r3, r2
 80042d6:	d817      	bhi.n	8004308 <HAL_RCC_OscConfig+0x1f4>
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	691b      	ldr	r3, [r3, #16]
 80042dc:	2b40      	cmp	r3, #64	; 0x40
 80042de:	d108      	bne.n	80042f2 <HAL_RCC_OscConfig+0x1de>
 80042e0:	4b2e      	ldr	r3, [pc, #184]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80042e2:	685b      	ldr	r3, [r3, #4]
 80042e4:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 80042e8:	4a2c      	ldr	r2, [pc, #176]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80042ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80042ee:	6053      	str	r3, [r2, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80042f0:	e07a      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80042f2:	4b2a      	ldr	r3, [pc, #168]	; (800439c <HAL_RCC_OscConfig+0x288>)
 80042f4:	685b      	ldr	r3, [r3, #4]
 80042f6:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	691b      	ldr	r3, [r3, #16]
 80042fe:	031b      	lsls	r3, r3, #12
 8004300:	4926      	ldr	r1, [pc, #152]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004302:	4313      	orrs	r3, r2
 8004304:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8004306:	e06f      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004308:	4b24      	ldr	r3, [pc, #144]	; (800439c <HAL_RCC_OscConfig+0x288>)
 800430a:	685b      	ldr	r3, [r3, #4]
 800430c:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	691b      	ldr	r3, [r3, #16]
 8004314:	061b      	lsls	r3, r3, #24
 8004316:	4921      	ldr	r1, [pc, #132]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004318:	4313      	orrs	r3, r2
 800431a:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800431c:	e064      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	68db      	ldr	r3, [r3, #12]
 8004322:	2b00      	cmp	r3, #0
 8004324:	d047      	beq.n	80043b6 <HAL_RCC_OscConfig+0x2a2>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8004326:	4b1d      	ldr	r3, [pc, #116]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	f023 0219 	bic.w	r2, r3, #25
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	68db      	ldr	r3, [r3, #12]
 8004332:	491a      	ldr	r1, [pc, #104]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004334:	4313      	orrs	r3, r2
 8004336:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004338:	f7fd fbb0 	bl	8001a9c <HAL_GetTick>
 800433c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800433e:	e008      	b.n	8004352 <HAL_RCC_OscConfig+0x23e>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004340:	f7fd fbac 	bl	8001a9c <HAL_GetTick>
 8004344:	4602      	mov	r2, r0
 8004346:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004348:	1ad3      	subs	r3, r2, r3
 800434a:	2b02      	cmp	r3, #2
 800434c:	d901      	bls.n	8004352 <HAL_RCC_OscConfig+0x23e>
          {
            return HAL_TIMEOUT;
 800434e:	2303      	movs	r3, #3
 8004350:	e332      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8004352:	4b12      	ldr	r3, [pc, #72]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	f003 0304 	and.w	r3, r3, #4
 800435a:	2b00      	cmp	r3, #0
 800435c:	d0f0      	beq.n	8004340 <HAL_RCC_OscConfig+0x22c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800435e:	f7fd fba9 	bl	8001ab4 <HAL_GetREVID>
 8004362:	4603      	mov	r3, r0
 8004364:	f241 0203 	movw	r2, #4099	; 0x1003
 8004368:	4293      	cmp	r3, r2
 800436a:	d819      	bhi.n	80043a0 <HAL_RCC_OscConfig+0x28c>
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	691b      	ldr	r3, [r3, #16]
 8004370:	2b40      	cmp	r3, #64	; 0x40
 8004372:	d108      	bne.n	8004386 <HAL_RCC_OscConfig+0x272>
 8004374:	4b09      	ldr	r3, [pc, #36]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004376:	685b      	ldr	r3, [r3, #4]
 8004378:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800437c:	4a07      	ldr	r2, [pc, #28]	; (800439c <HAL_RCC_OscConfig+0x288>)
 800437e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004382:	6053      	str	r3, [r2, #4]
 8004384:	e030      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
 8004386:	4b05      	ldr	r3, [pc, #20]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004388:	685b      	ldr	r3, [r3, #4]
 800438a:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	691b      	ldr	r3, [r3, #16]
 8004392:	031b      	lsls	r3, r3, #12
 8004394:	4901      	ldr	r1, [pc, #4]	; (800439c <HAL_RCC_OscConfig+0x288>)
 8004396:	4313      	orrs	r3, r2
 8004398:	604b      	str	r3, [r1, #4]
 800439a:	e025      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
 800439c:	58024400 	.word	0x58024400
 80043a0:	4b9a      	ldr	r3, [pc, #616]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043a2:	685b      	ldr	r3, [r3, #4]
 80043a4:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	691b      	ldr	r3, [r3, #16]
 80043ac:	061b      	lsls	r3, r3, #24
 80043ae:	4997      	ldr	r1, [pc, #604]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043b0:	4313      	orrs	r3, r2
 80043b2:	604b      	str	r3, [r1, #4]
 80043b4:	e018      	b.n	80043e8 <HAL_RCC_OscConfig+0x2d4>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80043b6:	4b95      	ldr	r3, [pc, #596]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	4a94      	ldr	r2, [pc, #592]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043bc:	f023 0301 	bic.w	r3, r3, #1
 80043c0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80043c2:	f7fd fb6b 	bl	8001a9c <HAL_GetTick>
 80043c6:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80043c8:	e008      	b.n	80043dc <HAL_RCC_OscConfig+0x2c8>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80043ca:	f7fd fb67 	bl	8001a9c <HAL_GetTick>
 80043ce:	4602      	mov	r2, r0
 80043d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80043d2:	1ad3      	subs	r3, r2, r3
 80043d4:	2b02      	cmp	r3, #2
 80043d6:	d901      	bls.n	80043dc <HAL_RCC_OscConfig+0x2c8>
          {
            return HAL_TIMEOUT;
 80043d8:	2303      	movs	r3, #3
 80043da:	e2ed      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80043dc:	4b8b      	ldr	r3, [pc, #556]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	f003 0304 	and.w	r3, r3, #4
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d1f0      	bne.n	80043ca <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f003 0310 	and.w	r3, r3, #16
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	f000 80a9 	beq.w	8004548 <HAL_RCC_OscConfig+0x434>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80043f6:	4b85      	ldr	r3, [pc, #532]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80043f8:	691b      	ldr	r3, [r3, #16]
 80043fa:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80043fe:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8004400:	4b82      	ldr	r3, [pc, #520]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004402:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004404:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8004406:	69bb      	ldr	r3, [r7, #24]
 8004408:	2b08      	cmp	r3, #8
 800440a:	d007      	beq.n	800441c <HAL_RCC_OscConfig+0x308>
 800440c:	69bb      	ldr	r3, [r7, #24]
 800440e:	2b18      	cmp	r3, #24
 8004410:	d13a      	bne.n	8004488 <HAL_RCC_OscConfig+0x374>
 8004412:	697b      	ldr	r3, [r7, #20]
 8004414:	f003 0303 	and.w	r3, r3, #3
 8004418:	2b01      	cmp	r3, #1
 800441a:	d135      	bne.n	8004488 <HAL_RCC_OscConfig+0x374>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800441c:	4b7b      	ldr	r3, [pc, #492]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004424:	2b00      	cmp	r3, #0
 8004426:	d005      	beq.n	8004434 <HAL_RCC_OscConfig+0x320>
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	69db      	ldr	r3, [r3, #28]
 800442c:	2b80      	cmp	r3, #128	; 0x80
 800442e:	d001      	beq.n	8004434 <HAL_RCC_OscConfig+0x320>
      {
        return HAL_ERROR;
 8004430:	2301      	movs	r3, #1
 8004432:	e2c1      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8004434:	f7fd fb3e 	bl	8001ab4 <HAL_GetREVID>
 8004438:	4603      	mov	r3, r0
 800443a:	f241 0203 	movw	r2, #4099	; 0x1003
 800443e:	4293      	cmp	r3, r2
 8004440:	d817      	bhi.n	8004472 <HAL_RCC_OscConfig+0x35e>
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	6a1b      	ldr	r3, [r3, #32]
 8004446:	2b20      	cmp	r3, #32
 8004448:	d108      	bne.n	800445c <HAL_RCC_OscConfig+0x348>
 800444a:	4b70      	ldr	r3, [pc, #448]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800444c:	685b      	ldr	r3, [r3, #4]
 800444e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8004452:	4a6e      	ldr	r2, [pc, #440]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004454:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8004458:	6053      	str	r3, [r2, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800445a:	e075      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800445c:	4b6b      	ldr	r3, [pc, #428]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800445e:	685b      	ldr	r3, [r3, #4]
 8004460:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	6a1b      	ldr	r3, [r3, #32]
 8004468:	069b      	lsls	r3, r3, #26
 800446a:	4968      	ldr	r1, [pc, #416]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800446c:	4313      	orrs	r3, r2
 800446e:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8004470:	e06a      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8004472:	4b66      	ldr	r3, [pc, #408]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004474:	68db      	ldr	r3, [r3, #12]
 8004476:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	6a1b      	ldr	r3, [r3, #32]
 800447e:	061b      	lsls	r3, r3, #24
 8004480:	4962      	ldr	r1, [pc, #392]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004482:	4313      	orrs	r3, r2
 8004484:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8004486:	e05f      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	69db      	ldr	r3, [r3, #28]
 800448c:	2b00      	cmp	r3, #0
 800448e:	d042      	beq.n	8004516 <HAL_RCC_OscConfig+0x402>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8004490:	4b5e      	ldr	r3, [pc, #376]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	4a5d      	ldr	r2, [pc, #372]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004496:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800449a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800449c:	f7fd fafe 	bl	8001a9c <HAL_GetTick>
 80044a0:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80044a2:	e008      	b.n	80044b6 <HAL_RCC_OscConfig+0x3a2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 80044a4:	f7fd fafa 	bl	8001a9c <HAL_GetTick>
 80044a8:	4602      	mov	r2, r0
 80044aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80044ac:	1ad3      	subs	r3, r2, r3
 80044ae:	2b02      	cmp	r3, #2
 80044b0:	d901      	bls.n	80044b6 <HAL_RCC_OscConfig+0x3a2>
          {
            return HAL_TIMEOUT;
 80044b2:	2303      	movs	r3, #3
 80044b4:	e280      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80044b6:	4b55      	ldr	r3, [pc, #340]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d0f0      	beq.n	80044a4 <HAL_RCC_OscConfig+0x390>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 80044c2:	f7fd faf7 	bl	8001ab4 <HAL_GetREVID>
 80044c6:	4603      	mov	r3, r0
 80044c8:	f241 0203 	movw	r2, #4099	; 0x1003
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d817      	bhi.n	8004500 <HAL_RCC_OscConfig+0x3ec>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	6a1b      	ldr	r3, [r3, #32]
 80044d4:	2b20      	cmp	r3, #32
 80044d6:	d108      	bne.n	80044ea <HAL_RCC_OscConfig+0x3d6>
 80044d8:	4b4c      	ldr	r3, [pc, #304]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80044da:	685b      	ldr	r3, [r3, #4]
 80044dc:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 80044e0:	4a4a      	ldr	r2, [pc, #296]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80044e2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80044e6:	6053      	str	r3, [r2, #4]
 80044e8:	e02e      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
 80044ea:	4b48      	ldr	r3, [pc, #288]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80044ec:	685b      	ldr	r3, [r3, #4]
 80044ee:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	6a1b      	ldr	r3, [r3, #32]
 80044f6:	069b      	lsls	r3, r3, #26
 80044f8:	4944      	ldr	r1, [pc, #272]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80044fa:	4313      	orrs	r3, r2
 80044fc:	604b      	str	r3, [r1, #4]
 80044fe:	e023      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
 8004500:	4b42      	ldr	r3, [pc, #264]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004502:	68db      	ldr	r3, [r3, #12]
 8004504:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	6a1b      	ldr	r3, [r3, #32]
 800450c:	061b      	lsls	r3, r3, #24
 800450e:	493f      	ldr	r1, [pc, #252]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004510:	4313      	orrs	r3, r2
 8004512:	60cb      	str	r3, [r1, #12]
 8004514:	e018      	b.n	8004548 <HAL_RCC_OscConfig+0x434>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8004516:	4b3d      	ldr	r3, [pc, #244]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	4a3c      	ldr	r2, [pc, #240]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800451c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004520:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004522:	f7fd fabb 	bl	8001a9c <HAL_GetTick>
 8004526:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8004528:	e008      	b.n	800453c <HAL_RCC_OscConfig+0x428>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800452a:	f7fd fab7 	bl	8001a9c <HAL_GetTick>
 800452e:	4602      	mov	r2, r0
 8004530:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004532:	1ad3      	subs	r3, r2, r3
 8004534:	2b02      	cmp	r3, #2
 8004536:	d901      	bls.n	800453c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8004538:	2303      	movs	r3, #3
 800453a:	e23d      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 800453c:	4b33      	ldr	r3, [pc, #204]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004544:	2b00      	cmp	r3, #0
 8004546:	d1f0      	bne.n	800452a <HAL_RCC_OscConfig+0x416>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f003 0308 	and.w	r3, r3, #8
 8004550:	2b00      	cmp	r3, #0
 8004552:	d036      	beq.n	80045c2 <HAL_RCC_OscConfig+0x4ae>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	695b      	ldr	r3, [r3, #20]
 8004558:	2b00      	cmp	r3, #0
 800455a:	d019      	beq.n	8004590 <HAL_RCC_OscConfig+0x47c>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800455c:	4b2b      	ldr	r3, [pc, #172]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 800455e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004560:	4a2a      	ldr	r2, [pc, #168]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004562:	f043 0301 	orr.w	r3, r3, #1
 8004566:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004568:	f7fd fa98 	bl	8001a9c <HAL_GetTick>
 800456c:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 800456e:	e008      	b.n	8004582 <HAL_RCC_OscConfig+0x46e>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004570:	f7fd fa94 	bl	8001a9c <HAL_GetTick>
 8004574:	4602      	mov	r2, r0
 8004576:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004578:	1ad3      	subs	r3, r2, r3
 800457a:	2b02      	cmp	r3, #2
 800457c:	d901      	bls.n	8004582 <HAL_RCC_OscConfig+0x46e>
        {
          return HAL_TIMEOUT;
 800457e:	2303      	movs	r3, #3
 8004580:	e21a      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8004582:	4b22      	ldr	r3, [pc, #136]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004584:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004586:	f003 0302 	and.w	r3, r3, #2
 800458a:	2b00      	cmp	r3, #0
 800458c:	d0f0      	beq.n	8004570 <HAL_RCC_OscConfig+0x45c>
 800458e:	e018      	b.n	80045c2 <HAL_RCC_OscConfig+0x4ae>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004590:	4b1e      	ldr	r3, [pc, #120]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004592:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004594:	4a1d      	ldr	r2, [pc, #116]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 8004596:	f023 0301 	bic.w	r3, r3, #1
 800459a:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800459c:	f7fd fa7e 	bl	8001a9c <HAL_GetTick>
 80045a0:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80045a2:	e008      	b.n	80045b6 <HAL_RCC_OscConfig+0x4a2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80045a4:	f7fd fa7a 	bl	8001a9c <HAL_GetTick>
 80045a8:	4602      	mov	r2, r0
 80045aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80045ac:	1ad3      	subs	r3, r2, r3
 80045ae:	2b02      	cmp	r3, #2
 80045b0:	d901      	bls.n	80045b6 <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 80045b2:	2303      	movs	r3, #3
 80045b4:	e200      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80045b6:	4b15      	ldr	r3, [pc, #84]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80045b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80045ba:	f003 0302 	and.w	r3, r3, #2
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d1f0      	bne.n	80045a4 <HAL_RCC_OscConfig+0x490>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	f003 0320 	and.w	r3, r3, #32
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	d039      	beq.n	8004642 <HAL_RCC_OscConfig+0x52e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	699b      	ldr	r3, [r3, #24]
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d01c      	beq.n	8004610 <HAL_RCC_OscConfig+0x4fc>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 80045d6:	4b0d      	ldr	r3, [pc, #52]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	4a0c      	ldr	r2, [pc, #48]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80045dc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80045e0:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 80045e2:	f7fd fa5b 	bl	8001a9c <HAL_GetTick>
 80045e6:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80045e8:	e008      	b.n	80045fc <HAL_RCC_OscConfig+0x4e8>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80045ea:	f7fd fa57 	bl	8001a9c <HAL_GetTick>
 80045ee:	4602      	mov	r2, r0
 80045f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80045f2:	1ad3      	subs	r3, r2, r3
 80045f4:	2b02      	cmp	r3, #2
 80045f6:	d901      	bls.n	80045fc <HAL_RCC_OscConfig+0x4e8>
        {
          return HAL_TIMEOUT;
 80045f8:	2303      	movs	r3, #3
 80045fa:	e1dd      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80045fc:	4b03      	ldr	r3, [pc, #12]	; (800460c <HAL_RCC_OscConfig+0x4f8>)
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004604:	2b00      	cmp	r3, #0
 8004606:	d0f0      	beq.n	80045ea <HAL_RCC_OscConfig+0x4d6>
 8004608:	e01b      	b.n	8004642 <HAL_RCC_OscConfig+0x52e>
 800460a:	bf00      	nop
 800460c:	58024400 	.word	0x58024400
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8004610:	4b9b      	ldr	r3, [pc, #620]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	4a9a      	ldr	r2, [pc, #616]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004616:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800461a:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 800461c:	f7fd fa3e 	bl	8001a9c <HAL_GetTick>
 8004620:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8004622:	e008      	b.n	8004636 <HAL_RCC_OscConfig+0x522>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004624:	f7fd fa3a 	bl	8001a9c <HAL_GetTick>
 8004628:	4602      	mov	r2, r0
 800462a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800462c:	1ad3      	subs	r3, r2, r3
 800462e:	2b02      	cmp	r3, #2
 8004630:	d901      	bls.n	8004636 <HAL_RCC_OscConfig+0x522>
        {
          return HAL_TIMEOUT;
 8004632:	2303      	movs	r3, #3
 8004634:	e1c0      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8004636:	4b92      	ldr	r3, [pc, #584]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800463e:	2b00      	cmp	r3, #0
 8004640:	d1f0      	bne.n	8004624 <HAL_RCC_OscConfig+0x510>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	f003 0304 	and.w	r3, r3, #4
 800464a:	2b00      	cmp	r3, #0
 800464c:	f000 8081 	beq.w	8004752 <HAL_RCC_OscConfig+0x63e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8004650:	4b8c      	ldr	r3, [pc, #560]	; (8004884 <HAL_RCC_OscConfig+0x770>)
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a8b      	ldr	r2, [pc, #556]	; (8004884 <HAL_RCC_OscConfig+0x770>)
 8004656:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800465a:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 800465c:	f7fd fa1e 	bl	8001a9c <HAL_GetTick>
 8004660:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8004662:	e008      	b.n	8004676 <HAL_RCC_OscConfig+0x562>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004664:	f7fd fa1a 	bl	8001a9c <HAL_GetTick>
 8004668:	4602      	mov	r2, r0
 800466a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800466c:	1ad3      	subs	r3, r2, r3
 800466e:	2b64      	cmp	r3, #100	; 0x64
 8004670:	d901      	bls.n	8004676 <HAL_RCC_OscConfig+0x562>
      {
        return HAL_TIMEOUT;
 8004672:	2303      	movs	r3, #3
 8004674:	e1a0      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8004676:	4b83      	ldr	r3, [pc, #524]	; (8004884 <HAL_RCC_OscConfig+0x770>)
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800467e:	2b00      	cmp	r3, #0
 8004680:	d0f0      	beq.n	8004664 <HAL_RCC_OscConfig+0x550>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	689b      	ldr	r3, [r3, #8]
 8004686:	2b01      	cmp	r3, #1
 8004688:	d106      	bne.n	8004698 <HAL_RCC_OscConfig+0x584>
 800468a:	4b7d      	ldr	r3, [pc, #500]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800468c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800468e:	4a7c      	ldr	r2, [pc, #496]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004690:	f043 0301 	orr.w	r3, r3, #1
 8004694:	6713      	str	r3, [r2, #112]	; 0x70
 8004696:	e02d      	b.n	80046f4 <HAL_RCC_OscConfig+0x5e0>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	689b      	ldr	r3, [r3, #8]
 800469c:	2b00      	cmp	r3, #0
 800469e:	d10c      	bne.n	80046ba <HAL_RCC_OscConfig+0x5a6>
 80046a0:	4b77      	ldr	r3, [pc, #476]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046a4:	4a76      	ldr	r2, [pc, #472]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046a6:	f023 0301 	bic.w	r3, r3, #1
 80046aa:	6713      	str	r3, [r2, #112]	; 0x70
 80046ac:	4b74      	ldr	r3, [pc, #464]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046b0:	4a73      	ldr	r2, [pc, #460]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046b2:	f023 0304 	bic.w	r3, r3, #4
 80046b6:	6713      	str	r3, [r2, #112]	; 0x70
 80046b8:	e01c      	b.n	80046f4 <HAL_RCC_OscConfig+0x5e0>
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	689b      	ldr	r3, [r3, #8]
 80046be:	2b05      	cmp	r3, #5
 80046c0:	d10c      	bne.n	80046dc <HAL_RCC_OscConfig+0x5c8>
 80046c2:	4b6f      	ldr	r3, [pc, #444]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046c6:	4a6e      	ldr	r2, [pc, #440]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046c8:	f043 0304 	orr.w	r3, r3, #4
 80046cc:	6713      	str	r3, [r2, #112]	; 0x70
 80046ce:	4b6c      	ldr	r3, [pc, #432]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046d2:	4a6b      	ldr	r2, [pc, #428]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046d4:	f043 0301 	orr.w	r3, r3, #1
 80046d8:	6713      	str	r3, [r2, #112]	; 0x70
 80046da:	e00b      	b.n	80046f4 <HAL_RCC_OscConfig+0x5e0>
 80046dc:	4b68      	ldr	r3, [pc, #416]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046e0:	4a67      	ldr	r2, [pc, #412]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046e2:	f023 0301 	bic.w	r3, r3, #1
 80046e6:	6713      	str	r3, [r2, #112]	; 0x70
 80046e8:	4b65      	ldr	r3, [pc, #404]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046ec:	4a64      	ldr	r2, [pc, #400]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80046ee:	f023 0304 	bic.w	r3, r3, #4
 80046f2:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	689b      	ldr	r3, [r3, #8]
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d015      	beq.n	8004728 <HAL_RCC_OscConfig+0x614>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80046fc:	f7fd f9ce 	bl	8001a9c <HAL_GetTick>
 8004700:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8004702:	e00a      	b.n	800471a <HAL_RCC_OscConfig+0x606>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004704:	f7fd f9ca 	bl	8001a9c <HAL_GetTick>
 8004708:	4602      	mov	r2, r0
 800470a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800470c:	1ad3      	subs	r3, r2, r3
 800470e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004712:	4293      	cmp	r3, r2
 8004714:	d901      	bls.n	800471a <HAL_RCC_OscConfig+0x606>
        {
          return HAL_TIMEOUT;
 8004716:	2303      	movs	r3, #3
 8004718:	e14e      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800471a:	4b59      	ldr	r3, [pc, #356]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800471c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800471e:	f003 0302 	and.w	r3, r3, #2
 8004722:	2b00      	cmp	r3, #0
 8004724:	d0ee      	beq.n	8004704 <HAL_RCC_OscConfig+0x5f0>
 8004726:	e014      	b.n	8004752 <HAL_RCC_OscConfig+0x63e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004728:	f7fd f9b8 	bl	8001a9c <HAL_GetTick>
 800472c:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800472e:	e00a      	b.n	8004746 <HAL_RCC_OscConfig+0x632>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004730:	f7fd f9b4 	bl	8001a9c <HAL_GetTick>
 8004734:	4602      	mov	r2, r0
 8004736:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004738:	1ad3      	subs	r3, r2, r3
 800473a:	f241 3288 	movw	r2, #5000	; 0x1388
 800473e:	4293      	cmp	r3, r2
 8004740:	d901      	bls.n	8004746 <HAL_RCC_OscConfig+0x632>
        {
          return HAL_TIMEOUT;
 8004742:	2303      	movs	r3, #3
 8004744:	e138      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8004746:	4b4e      	ldr	r3, [pc, #312]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004748:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800474a:	f003 0302 	and.w	r3, r3, #2
 800474e:	2b00      	cmp	r3, #0
 8004750:	d1ee      	bne.n	8004730 <HAL_RCC_OscConfig+0x61c>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004756:	2b00      	cmp	r3, #0
 8004758:	f000 812d 	beq.w	80049b6 <HAL_RCC_OscConfig+0x8a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 800475c:	4b48      	ldr	r3, [pc, #288]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800475e:	691b      	ldr	r3, [r3, #16]
 8004760:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004764:	2b18      	cmp	r3, #24
 8004766:	f000 80bd 	beq.w	80048e4 <HAL_RCC_OscConfig+0x7d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800476e:	2b02      	cmp	r3, #2
 8004770:	f040 809e 	bne.w	80048b0 <HAL_RCC_OscConfig+0x79c>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004774:	4b42      	ldr	r3, [pc, #264]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	4a41      	ldr	r2, [pc, #260]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800477a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800477e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004780:	f7fd f98c 	bl	8001a9c <HAL_GetTick>
 8004784:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8004786:	e008      	b.n	800479a <HAL_RCC_OscConfig+0x686>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004788:	f7fd f988 	bl	8001a9c <HAL_GetTick>
 800478c:	4602      	mov	r2, r0
 800478e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004790:	1ad3      	subs	r3, r2, r3
 8004792:	2b02      	cmp	r3, #2
 8004794:	d901      	bls.n	800479a <HAL_RCC_OscConfig+0x686>
          {
            return HAL_TIMEOUT;
 8004796:	2303      	movs	r3, #3
 8004798:	e10e      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800479a:	4b39      	ldr	r3, [pc, #228]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d1f0      	bne.n	8004788 <HAL_RCC_OscConfig+0x674>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80047a6:	4b36      	ldr	r3, [pc, #216]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80047a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80047aa:	4b37      	ldr	r3, [pc, #220]	; (8004888 <HAL_RCC_OscConfig+0x774>)
 80047ac:	4013      	ands	r3, r2
 80047ae:	687a      	ldr	r2, [r7, #4]
 80047b0:	6a91      	ldr	r1, [r2, #40]	; 0x28
 80047b2:	687a      	ldr	r2, [r7, #4]
 80047b4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80047b6:	0112      	lsls	r2, r2, #4
 80047b8:	430a      	orrs	r2, r1
 80047ba:	4931      	ldr	r1, [pc, #196]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80047bc:	4313      	orrs	r3, r2
 80047be:	628b      	str	r3, [r1, #40]	; 0x28
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047c4:	3b01      	subs	r3, #1
 80047c6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80047ce:	3b01      	subs	r3, #1
 80047d0:	025b      	lsls	r3, r3, #9
 80047d2:	b29b      	uxth	r3, r3
 80047d4:	431a      	orrs	r2, r3
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80047da:	3b01      	subs	r3, #1
 80047dc:	041b      	lsls	r3, r3, #16
 80047de:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 80047e2:	431a      	orrs	r2, r3
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047e8:	3b01      	subs	r3, #1
 80047ea:	061b      	lsls	r3, r3, #24
 80047ec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 80047f0:	4923      	ldr	r1, [pc, #140]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80047f2:	4313      	orrs	r3, r2
 80047f4:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 80047f6:	4b22      	ldr	r3, [pc, #136]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80047f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047fa:	4a21      	ldr	r2, [pc, #132]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 80047fc:	f023 0301 	bic.w	r3, r3, #1
 8004800:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8004802:	4b1f      	ldr	r3, [pc, #124]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004804:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004806:	4b21      	ldr	r3, [pc, #132]	; (800488c <HAL_RCC_OscConfig+0x778>)
 8004808:	4013      	ands	r3, r2
 800480a:	687a      	ldr	r2, [r7, #4]
 800480c:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800480e:	00d2      	lsls	r2, r2, #3
 8004810:	491b      	ldr	r1, [pc, #108]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004812:	4313      	orrs	r3, r2
 8004814:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8004816:	4b1a      	ldr	r3, [pc, #104]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800481a:	f023 020c 	bic.w	r2, r3, #12
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004822:	4917      	ldr	r1, [pc, #92]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004824:	4313      	orrs	r3, r2
 8004826:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8004828:	4b15      	ldr	r3, [pc, #84]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800482a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800482c:	f023 0202 	bic.w	r2, r3, #2
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004834:	4912      	ldr	r1, [pc, #72]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004836:	4313      	orrs	r3, r2
 8004838:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 800483a:	4b11      	ldr	r3, [pc, #68]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800483c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800483e:	4a10      	ldr	r2, [pc, #64]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004840:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004844:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004846:	4b0e      	ldr	r3, [pc, #56]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800484a:	4a0d      	ldr	r2, [pc, #52]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800484c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004850:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8004852:	4b0b      	ldr	r3, [pc, #44]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004854:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004856:	4a0a      	ldr	r2, [pc, #40]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004858:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800485c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 800485e:	4b08      	ldr	r3, [pc, #32]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004860:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004862:	4a07      	ldr	r2, [pc, #28]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004864:	f043 0301 	orr.w	r3, r3, #1
 8004868:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800486a:	4b05      	ldr	r3, [pc, #20]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	4a04      	ldr	r2, [pc, #16]	; (8004880 <HAL_RCC_OscConfig+0x76c>)
 8004870:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004874:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004876:	f7fd f911 	bl	8001a9c <HAL_GetTick>
 800487a:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800487c:	e011      	b.n	80048a2 <HAL_RCC_OscConfig+0x78e>
 800487e:	bf00      	nop
 8004880:	58024400 	.word	0x58024400
 8004884:	58024800 	.word	0x58024800
 8004888:	fffffc0c 	.word	0xfffffc0c
 800488c:	ffff0007 	.word	0xffff0007
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004890:	f7fd f904 	bl	8001a9c <HAL_GetTick>
 8004894:	4602      	mov	r2, r0
 8004896:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004898:	1ad3      	subs	r3, r2, r3
 800489a:	2b02      	cmp	r3, #2
 800489c:	d901      	bls.n	80048a2 <HAL_RCC_OscConfig+0x78e>
          {
            return HAL_TIMEOUT;
 800489e:	2303      	movs	r3, #3
 80048a0:	e08a      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80048a2:	4b47      	ldr	r3, [pc, #284]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d0f0      	beq.n	8004890 <HAL_RCC_OscConfig+0x77c>
 80048ae:	e082      	b.n	80049b6 <HAL_RCC_OscConfig+0x8a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80048b0:	4b43      	ldr	r3, [pc, #268]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	4a42      	ldr	r2, [pc, #264]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048b6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80048ba:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80048bc:	f7fd f8ee 	bl	8001a9c <HAL_GetTick>
 80048c0:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80048c2:	e008      	b.n	80048d6 <HAL_RCC_OscConfig+0x7c2>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80048c4:	f7fd f8ea 	bl	8001a9c <HAL_GetTick>
 80048c8:	4602      	mov	r2, r0
 80048ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80048cc:	1ad3      	subs	r3, r2, r3
 80048ce:	2b02      	cmp	r3, #2
 80048d0:	d901      	bls.n	80048d6 <HAL_RCC_OscConfig+0x7c2>
          {
            return HAL_TIMEOUT;
 80048d2:	2303      	movs	r3, #3
 80048d4:	e070      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80048d6:	4b3a      	ldr	r3, [pc, #232]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d1f0      	bne.n	80048c4 <HAL_RCC_OscConfig+0x7b0>
 80048e2:	e068      	b.n	80049b6 <HAL_RCC_OscConfig+0x8a2>
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 80048e4:	4b36      	ldr	r3, [pc, #216]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80048e8:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 80048ea:	4b35      	ldr	r3, [pc, #212]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80048ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048ee:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048f4:	2b01      	cmp	r3, #1
 80048f6:	d031      	beq.n	800495c <HAL_RCC_OscConfig+0x848>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80048f8:	693b      	ldr	r3, [r7, #16]
 80048fa:	f003 0203 	and.w	r2, r3, #3
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004902:	429a      	cmp	r2, r3
 8004904:	d12a      	bne.n	800495c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8004906:	693b      	ldr	r3, [r7, #16]
 8004908:	091b      	lsrs	r3, r3, #4
 800490a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004912:	429a      	cmp	r2, r3
 8004914:	d122      	bne.n	800495c <HAL_RCC_OscConfig+0x848>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004920:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8004922:	429a      	cmp	r2, r3
 8004924:	d11a      	bne.n	800495c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8004926:	68fb      	ldr	r3, [r7, #12]
 8004928:	0a5b      	lsrs	r3, r3, #9
 800492a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004932:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8004934:	429a      	cmp	r2, r3
 8004936:	d111      	bne.n	800495c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8004938:	68fb      	ldr	r3, [r7, #12]
 800493a:	0c1b      	lsrs	r3, r3, #16
 800493c:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004944:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8004946:	429a      	cmp	r2, r3
 8004948:	d108      	bne.n	800495c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	0e1b      	lsrs	r3, r3, #24
 800494e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004956:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8004958:	429a      	cmp	r2, r3
 800495a:	d001      	beq.n	8004960 <HAL_RCC_OscConfig+0x84c>
      {
        return HAL_ERROR;
 800495c:	2301      	movs	r3, #1
 800495e:	e02b      	b.n	80049b8 <HAL_RCC_OscConfig+0x8a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8004960:	4b17      	ldr	r3, [pc, #92]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 8004962:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004964:	08db      	lsrs	r3, r3, #3
 8004966:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800496a:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004970:	693a      	ldr	r2, [r7, #16]
 8004972:	429a      	cmp	r2, r3
 8004974:	d01f      	beq.n	80049b6 <HAL_RCC_OscConfig+0x8a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 8004976:	4b12      	ldr	r3, [pc, #72]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 8004978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800497a:	4a11      	ldr	r2, [pc, #68]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 800497c:	f023 0301 	bic.w	r3, r3, #1
 8004980:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 8004982:	f7fd f88b 	bl	8001a9c <HAL_GetTick>
 8004986:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8004988:	bf00      	nop
 800498a:	f7fd f887 	bl	8001a9c <HAL_GetTick>
 800498e:	4602      	mov	r2, r0
 8004990:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004992:	4293      	cmp	r3, r2
 8004994:	d0f9      	beq.n	800498a <HAL_RCC_OscConfig+0x876>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8004996:	4b0a      	ldr	r3, [pc, #40]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 8004998:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800499a:	4b0a      	ldr	r3, [pc, #40]	; (80049c4 <HAL_RCC_OscConfig+0x8b0>)
 800499c:	4013      	ands	r3, r2
 800499e:	687a      	ldr	r2, [r7, #4]
 80049a0:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80049a2:	00d2      	lsls	r2, r2, #3
 80049a4:	4906      	ldr	r1, [pc, #24]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80049a6:	4313      	orrs	r3, r2
 80049a8:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 80049aa:	4b05      	ldr	r3, [pc, #20]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80049ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049ae:	4a04      	ldr	r2, [pc, #16]	; (80049c0 <HAL_RCC_OscConfig+0x8ac>)
 80049b0:	f043 0301 	orr.w	r3, r3, #1
 80049b4:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 80049b6:	2300      	movs	r3, #0
}
 80049b8:	4618      	mov	r0, r3
 80049ba:	3730      	adds	r7, #48	; 0x30
 80049bc:	46bd      	mov	sp, r7
 80049be:	bd80      	pop	{r7, pc}
 80049c0:	58024400 	.word	0x58024400
 80049c4:	ffff0007 	.word	0xffff0007

080049c8 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80049c8:	b580      	push	{r7, lr}
 80049ca:	b086      	sub	sp, #24
 80049cc:	af00      	add	r7, sp, #0
 80049ce:	6078      	str	r0, [r7, #4]
 80049d0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	2b00      	cmp	r3, #0
 80049d6:	d101      	bne.n	80049dc <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80049d8:	2301      	movs	r3, #1
 80049da:	e19c      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80049dc:	4b8a      	ldr	r3, [pc, #552]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	f003 030f 	and.w	r3, r3, #15
 80049e4:	683a      	ldr	r2, [r7, #0]
 80049e6:	429a      	cmp	r2, r3
 80049e8:	d910      	bls.n	8004a0c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80049ea:	4b87      	ldr	r3, [pc, #540]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	f023 020f 	bic.w	r2, r3, #15
 80049f2:	4985      	ldr	r1, [pc, #532]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 80049f4:	683b      	ldr	r3, [r7, #0]
 80049f6:	4313      	orrs	r3, r2
 80049f8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80049fa:	4b83      	ldr	r3, [pc, #524]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	f003 030f 	and.w	r3, r3, #15
 8004a02:	683a      	ldr	r2, [r7, #0]
 8004a04:	429a      	cmp	r2, r3
 8004a06:	d001      	beq.n	8004a0c <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8004a08:	2301      	movs	r3, #1
 8004a0a:	e184      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	f003 0304 	and.w	r3, r3, #4
 8004a14:	2b00      	cmp	r3, #0
 8004a16:	d010      	beq.n	8004a3a <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	691a      	ldr	r2, [r3, #16]
 8004a1c:	4b7b      	ldr	r3, [pc, #492]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a1e:	699b      	ldr	r3, [r3, #24]
 8004a20:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004a24:	429a      	cmp	r2, r3
 8004a26:	d908      	bls.n	8004a3a <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8004a28:	4b78      	ldr	r3, [pc, #480]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a2a:	699b      	ldr	r3, [r3, #24]
 8004a2c:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	691b      	ldr	r3, [r3, #16]
 8004a34:	4975      	ldr	r1, [pc, #468]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a36:	4313      	orrs	r3, r2
 8004a38:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	f003 0308 	and.w	r3, r3, #8
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d010      	beq.n	8004a68 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	695a      	ldr	r2, [r3, #20]
 8004a4a:	4b70      	ldr	r3, [pc, #448]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a4c:	69db      	ldr	r3, [r3, #28]
 8004a4e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d908      	bls.n	8004a68 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8004a56:	4b6d      	ldr	r3, [pc, #436]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a58:	69db      	ldr	r3, [r3, #28]
 8004a5a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	695b      	ldr	r3, [r3, #20]
 8004a62:	496a      	ldr	r1, [pc, #424]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a64:	4313      	orrs	r3, r2
 8004a66:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	f003 0310 	and.w	r3, r3, #16
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	d010      	beq.n	8004a96 <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	699a      	ldr	r2, [r3, #24]
 8004a78:	4b64      	ldr	r3, [pc, #400]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a7a:	69db      	ldr	r3, [r3, #28]
 8004a7c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004a80:	429a      	cmp	r2, r3
 8004a82:	d908      	bls.n	8004a96 <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8004a84:	4b61      	ldr	r3, [pc, #388]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a86:	69db      	ldr	r3, [r3, #28]
 8004a88:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	699b      	ldr	r3, [r3, #24]
 8004a90:	495e      	ldr	r1, [pc, #376]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004a92:	4313      	orrs	r3, r2
 8004a94:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	f003 0320 	and.w	r3, r3, #32
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d010      	beq.n	8004ac4 <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	69da      	ldr	r2, [r3, #28]
 8004aa6:	4b59      	ldr	r3, [pc, #356]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004aa8:	6a1b      	ldr	r3, [r3, #32]
 8004aaa:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004aae:	429a      	cmp	r2, r3
 8004ab0:	d908      	bls.n	8004ac4 <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8004ab2:	4b56      	ldr	r3, [pc, #344]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004ab4:	6a1b      	ldr	r3, [r3, #32]
 8004ab6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	69db      	ldr	r3, [r3, #28]
 8004abe:	4953      	ldr	r1, [pc, #332]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004ac0:	4313      	orrs	r3, r2
 8004ac2:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	f003 0302 	and.w	r3, r3, #2
 8004acc:	2b00      	cmp	r3, #0
 8004ace:	d010      	beq.n	8004af2 <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	68da      	ldr	r2, [r3, #12]
 8004ad4:	4b4d      	ldr	r3, [pc, #308]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004ad6:	699b      	ldr	r3, [r3, #24]
 8004ad8:	f003 030f 	and.w	r3, r3, #15
 8004adc:	429a      	cmp	r2, r3
 8004ade:	d908      	bls.n	8004af2 <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004ae0:	4b4a      	ldr	r3, [pc, #296]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004ae2:	699b      	ldr	r3, [r3, #24]
 8004ae4:	f023 020f 	bic.w	r2, r3, #15
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	68db      	ldr	r3, [r3, #12]
 8004aec:	4947      	ldr	r1, [pc, #284]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004aee:	4313      	orrs	r3, r2
 8004af0:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	f003 0301 	and.w	r3, r3, #1
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d055      	beq.n	8004baa <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8004afe:	4b43      	ldr	r3, [pc, #268]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b00:	699b      	ldr	r3, [r3, #24]
 8004b02:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	689b      	ldr	r3, [r3, #8]
 8004b0a:	4940      	ldr	r1, [pc, #256]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b0c:	4313      	orrs	r3, r2
 8004b0e:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	685b      	ldr	r3, [r3, #4]
 8004b14:	2b02      	cmp	r3, #2
 8004b16:	d107      	bne.n	8004b28 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8004b18:	4b3c      	ldr	r3, [pc, #240]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d121      	bne.n	8004b68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8004b24:	2301      	movs	r3, #1
 8004b26:	e0f6      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	685b      	ldr	r3, [r3, #4]
 8004b2c:	2b03      	cmp	r3, #3
 8004b2e:	d107      	bne.n	8004b40 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8004b30:	4b36      	ldr	r3, [pc, #216]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004b38:	2b00      	cmp	r3, #0
 8004b3a:	d115      	bne.n	8004b68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8004b3c:	2301      	movs	r3, #1
 8004b3e:	e0ea      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	685b      	ldr	r3, [r3, #4]
 8004b44:	2b01      	cmp	r3, #1
 8004b46:	d107      	bne.n	8004b58 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8004b48:	4b30      	ldr	r3, [pc, #192]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b50:	2b00      	cmp	r3, #0
 8004b52:	d109      	bne.n	8004b68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8004b54:	2301      	movs	r3, #1
 8004b56:	e0de      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8004b58:	4b2c      	ldr	r3, [pc, #176]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	f003 0304 	and.w	r3, r3, #4
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d101      	bne.n	8004b68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8004b64:	2301      	movs	r3, #1
 8004b66:	e0d6      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8004b68:	4b28      	ldr	r3, [pc, #160]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b6a:	691b      	ldr	r3, [r3, #16]
 8004b6c:	f023 0207 	bic.w	r2, r3, #7
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	685b      	ldr	r3, [r3, #4]
 8004b74:	4925      	ldr	r1, [pc, #148]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b76:	4313      	orrs	r3, r2
 8004b78:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8004b7a:	f7fc ff8f 	bl	8001a9c <HAL_GetTick>
 8004b7e:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004b80:	e00a      	b.n	8004b98 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004b82:	f7fc ff8b 	bl	8001a9c <HAL_GetTick>
 8004b86:	4602      	mov	r2, r0
 8004b88:	697b      	ldr	r3, [r7, #20]
 8004b8a:	1ad3      	subs	r3, r2, r3
 8004b8c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004b90:	4293      	cmp	r3, r2
 8004b92:	d901      	bls.n	8004b98 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 8004b94:	2303      	movs	r3, #3
 8004b96:	e0be      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004b98:	4b1c      	ldr	r3, [pc, #112]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004b9a:	691b      	ldr	r3, [r3, #16]
 8004b9c:	f003 0238 	and.w	r2, r3, #56	; 0x38
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	685b      	ldr	r3, [r3, #4]
 8004ba4:	00db      	lsls	r3, r3, #3
 8004ba6:	429a      	cmp	r2, r3
 8004ba8:	d1eb      	bne.n	8004b82 <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	f003 0302 	and.w	r3, r3, #2
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d010      	beq.n	8004bd8 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	68da      	ldr	r2, [r3, #12]
 8004bba:	4b14      	ldr	r3, [pc, #80]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004bbc:	699b      	ldr	r3, [r3, #24]
 8004bbe:	f003 030f 	and.w	r3, r3, #15
 8004bc2:	429a      	cmp	r2, r3
 8004bc4:	d208      	bcs.n	8004bd8 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004bc6:	4b11      	ldr	r3, [pc, #68]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004bc8:	699b      	ldr	r3, [r3, #24]
 8004bca:	f023 020f 	bic.w	r2, r3, #15
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	68db      	ldr	r3, [r3, #12]
 8004bd2:	490e      	ldr	r1, [pc, #56]	; (8004c0c <HAL_RCC_ClockConfig+0x244>)
 8004bd4:	4313      	orrs	r3, r2
 8004bd6:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8004bd8:	4b0b      	ldr	r3, [pc, #44]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	f003 030f 	and.w	r3, r3, #15
 8004be0:	683a      	ldr	r2, [r7, #0]
 8004be2:	429a      	cmp	r2, r3
 8004be4:	d214      	bcs.n	8004c10 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004be6:	4b08      	ldr	r3, [pc, #32]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 8004be8:	681b      	ldr	r3, [r3, #0]
 8004bea:	f023 020f 	bic.w	r2, r3, #15
 8004bee:	4906      	ldr	r1, [pc, #24]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 8004bf0:	683b      	ldr	r3, [r7, #0]
 8004bf2:	4313      	orrs	r3, r2
 8004bf4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8004bf6:	4b04      	ldr	r3, [pc, #16]	; (8004c08 <HAL_RCC_ClockConfig+0x240>)
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	f003 030f 	and.w	r3, r3, #15
 8004bfe:	683a      	ldr	r2, [r7, #0]
 8004c00:	429a      	cmp	r2, r3
 8004c02:	d005      	beq.n	8004c10 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 8004c04:	2301      	movs	r3, #1
 8004c06:	e086      	b.n	8004d16 <HAL_RCC_ClockConfig+0x34e>
 8004c08:	52002000 	.word	0x52002000
 8004c0c:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	f003 0304 	and.w	r3, r3, #4
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d010      	beq.n	8004c3e <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	691a      	ldr	r2, [r3, #16]
 8004c20:	4b3f      	ldr	r3, [pc, #252]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c22:	699b      	ldr	r3, [r3, #24]
 8004c24:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004c28:	429a      	cmp	r2, r3
 8004c2a:	d208      	bcs.n	8004c3e <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8004c2c:	4b3c      	ldr	r3, [pc, #240]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c2e:	699b      	ldr	r3, [r3, #24]
 8004c30:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	691b      	ldr	r3, [r3, #16]
 8004c38:	4939      	ldr	r1, [pc, #228]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c3a:	4313      	orrs	r3, r2
 8004c3c:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004c3e:	687b      	ldr	r3, [r7, #4]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	f003 0308 	and.w	r3, r3, #8
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d010      	beq.n	8004c6c <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	695a      	ldr	r2, [r3, #20]
 8004c4e:	4b34      	ldr	r3, [pc, #208]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c50:	69db      	ldr	r3, [r3, #28]
 8004c52:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004c56:	429a      	cmp	r2, r3
 8004c58:	d208      	bcs.n	8004c6c <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8004c5a:	4b31      	ldr	r3, [pc, #196]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c5c:	69db      	ldr	r3, [r3, #28]
 8004c5e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	695b      	ldr	r3, [r3, #20]
 8004c66:	492e      	ldr	r1, [pc, #184]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c68:	4313      	orrs	r3, r2
 8004c6a:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	f003 0310 	and.w	r3, r3, #16
 8004c74:	2b00      	cmp	r3, #0
 8004c76:	d010      	beq.n	8004c9a <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	699a      	ldr	r2, [r3, #24]
 8004c7c:	4b28      	ldr	r3, [pc, #160]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c7e:	69db      	ldr	r3, [r3, #28]
 8004c80:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004c84:	429a      	cmp	r2, r3
 8004c86:	d208      	bcs.n	8004c9a <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8004c88:	4b25      	ldr	r3, [pc, #148]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c8a:	69db      	ldr	r3, [r3, #28]
 8004c8c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	699b      	ldr	r3, [r3, #24]
 8004c94:	4922      	ldr	r1, [pc, #136]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004c96:	4313      	orrs	r3, r2
 8004c98:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	f003 0320 	and.w	r3, r3, #32
 8004ca2:	2b00      	cmp	r3, #0
 8004ca4:	d010      	beq.n	8004cc8 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	69da      	ldr	r2, [r3, #28]
 8004caa:	4b1d      	ldr	r3, [pc, #116]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004cac:	6a1b      	ldr	r3, [r3, #32]
 8004cae:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8004cb2:	429a      	cmp	r2, r3
 8004cb4:	d208      	bcs.n	8004cc8 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8004cb6:	4b1a      	ldr	r3, [pc, #104]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004cb8:	6a1b      	ldr	r3, [r3, #32]
 8004cba:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	69db      	ldr	r3, [r3, #28]
 8004cc2:	4917      	ldr	r1, [pc, #92]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004cc4:	4313      	orrs	r3, r2
 8004cc6:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8004cc8:	f000 f834 	bl	8004d34 <HAL_RCC_GetSysClockFreq>
 8004ccc:	4602      	mov	r2, r0
 8004cce:	4b14      	ldr	r3, [pc, #80]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004cd0:	699b      	ldr	r3, [r3, #24]
 8004cd2:	0a1b      	lsrs	r3, r3, #8
 8004cd4:	f003 030f 	and.w	r3, r3, #15
 8004cd8:	4912      	ldr	r1, [pc, #72]	; (8004d24 <HAL_RCC_ClockConfig+0x35c>)
 8004cda:	5ccb      	ldrb	r3, [r1, r3]
 8004cdc:	f003 031f 	and.w	r3, r3, #31
 8004ce0:	fa22 f303 	lsr.w	r3, r2, r3
 8004ce4:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8004ce6:	4b0e      	ldr	r3, [pc, #56]	; (8004d20 <HAL_RCC_ClockConfig+0x358>)
 8004ce8:	699b      	ldr	r3, [r3, #24]
 8004cea:	f003 030f 	and.w	r3, r3, #15
 8004cee:	4a0d      	ldr	r2, [pc, #52]	; (8004d24 <HAL_RCC_ClockConfig+0x35c>)
 8004cf0:	5cd3      	ldrb	r3, [r2, r3]
 8004cf2:	f003 031f 	and.w	r3, r3, #31
 8004cf6:	693a      	ldr	r2, [r7, #16]
 8004cf8:	fa22 f303 	lsr.w	r3, r2, r3
 8004cfc:	4a0a      	ldr	r2, [pc, #40]	; (8004d28 <HAL_RCC_ClockConfig+0x360>)
 8004cfe:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8004d00:	4a0a      	ldr	r2, [pc, #40]	; (8004d2c <HAL_RCC_ClockConfig+0x364>)
 8004d02:	693b      	ldr	r3, [r7, #16]
 8004d04:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 8004d06:	4b0a      	ldr	r3, [pc, #40]	; (8004d30 <HAL_RCC_ClockConfig+0x368>)
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	4618      	mov	r0, r3
 8004d0c:	f7fc fe7c 	bl	8001a08 <HAL_InitTick>
 8004d10:	4603      	mov	r3, r0
 8004d12:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 8004d14:	7bfb      	ldrb	r3, [r7, #15]
}
 8004d16:	4618      	mov	r0, r3
 8004d18:	3718      	adds	r7, #24
 8004d1a:	46bd      	mov	sp, r7
 8004d1c:	bd80      	pop	{r7, pc}
 8004d1e:	bf00      	nop
 8004d20:	58024400 	.word	0x58024400
 8004d24:	080253a8 	.word	0x080253a8
 8004d28:	24000008 	.word	0x24000008
 8004d2c:	24000004 	.word	0x24000004
 8004d30:	2400000c 	.word	0x2400000c

08004d34 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004d34:	b480      	push	{r7}
 8004d36:	b089      	sub	sp, #36	; 0x24
 8004d38:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004d3a:	4bb3      	ldr	r3, [pc, #716]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004d3c:	691b      	ldr	r3, [r3, #16]
 8004d3e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004d42:	2b18      	cmp	r3, #24
 8004d44:	f200 8155 	bhi.w	8004ff2 <HAL_RCC_GetSysClockFreq+0x2be>
 8004d48:	a201      	add	r2, pc, #4	; (adr r2, 8004d50 <HAL_RCC_GetSysClockFreq+0x1c>)
 8004d4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004d4e:	bf00      	nop
 8004d50:	08004db5 	.word	0x08004db5
 8004d54:	08004ff3 	.word	0x08004ff3
 8004d58:	08004ff3 	.word	0x08004ff3
 8004d5c:	08004ff3 	.word	0x08004ff3
 8004d60:	08004ff3 	.word	0x08004ff3
 8004d64:	08004ff3 	.word	0x08004ff3
 8004d68:	08004ff3 	.word	0x08004ff3
 8004d6c:	08004ff3 	.word	0x08004ff3
 8004d70:	08004ddb 	.word	0x08004ddb
 8004d74:	08004ff3 	.word	0x08004ff3
 8004d78:	08004ff3 	.word	0x08004ff3
 8004d7c:	08004ff3 	.word	0x08004ff3
 8004d80:	08004ff3 	.word	0x08004ff3
 8004d84:	08004ff3 	.word	0x08004ff3
 8004d88:	08004ff3 	.word	0x08004ff3
 8004d8c:	08004ff3 	.word	0x08004ff3
 8004d90:	08004de1 	.word	0x08004de1
 8004d94:	08004ff3 	.word	0x08004ff3
 8004d98:	08004ff3 	.word	0x08004ff3
 8004d9c:	08004ff3 	.word	0x08004ff3
 8004da0:	08004ff3 	.word	0x08004ff3
 8004da4:	08004ff3 	.word	0x08004ff3
 8004da8:	08004ff3 	.word	0x08004ff3
 8004dac:	08004ff3 	.word	0x08004ff3
 8004db0:	08004de7 	.word	0x08004de7
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8004db4:	4b94      	ldr	r3, [pc, #592]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	f003 0320 	and.w	r3, r3, #32
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d009      	beq.n	8004dd4 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8004dc0:	4b91      	ldr	r3, [pc, #580]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004dc2:	681b      	ldr	r3, [r3, #0]
 8004dc4:	08db      	lsrs	r3, r3, #3
 8004dc6:	f003 0303 	and.w	r3, r3, #3
 8004dca:	4a90      	ldr	r2, [pc, #576]	; (800500c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004dcc:	fa22 f303 	lsr.w	r3, r2, r3
 8004dd0:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 8004dd2:	e111      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8004dd4:	4b8d      	ldr	r3, [pc, #564]	; (800500c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004dd6:	61bb      	str	r3, [r7, #24]
      break;
 8004dd8:	e10e      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8004dda:	4b8d      	ldr	r3, [pc, #564]	; (8005010 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8004ddc:	61bb      	str	r3, [r7, #24]
      break;
 8004dde:	e10b      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8004de0:	4b8c      	ldr	r3, [pc, #560]	; (8005014 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8004de2:	61bb      	str	r3, [r7, #24]
      break;
 8004de4:	e108      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8004de6:	4b88      	ldr	r3, [pc, #544]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004de8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004dea:	f003 0303 	and.w	r3, r3, #3
 8004dee:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8004df0:	4b85      	ldr	r3, [pc, #532]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004df2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004df4:	091b      	lsrs	r3, r3, #4
 8004df6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004dfa:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8004dfc:	4b82      	ldr	r3, [pc, #520]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e00:	f003 0301 	and.w	r3, r3, #1
 8004e04:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8004e06:	4b80      	ldr	r3, [pc, #512]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004e08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004e0a:	08db      	lsrs	r3, r3, #3
 8004e0c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8004e10:	68fa      	ldr	r2, [r7, #12]
 8004e12:	fb02 f303 	mul.w	r3, r2, r3
 8004e16:	ee07 3a90 	vmov	s15, r3
 8004e1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004e1e:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 8004e22:	693b      	ldr	r3, [r7, #16]
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	f000 80e1 	beq.w	8004fec <HAL_RCC_GetSysClockFreq+0x2b8>
 8004e2a:	697b      	ldr	r3, [r7, #20]
 8004e2c:	2b02      	cmp	r3, #2
 8004e2e:	f000 8083 	beq.w	8004f38 <HAL_RCC_GetSysClockFreq+0x204>
 8004e32:	697b      	ldr	r3, [r7, #20]
 8004e34:	2b02      	cmp	r3, #2
 8004e36:	f200 80a1 	bhi.w	8004f7c <HAL_RCC_GetSysClockFreq+0x248>
 8004e3a:	697b      	ldr	r3, [r7, #20]
 8004e3c:	2b00      	cmp	r3, #0
 8004e3e:	d003      	beq.n	8004e48 <HAL_RCC_GetSysClockFreq+0x114>
 8004e40:	697b      	ldr	r3, [r7, #20]
 8004e42:	2b01      	cmp	r3, #1
 8004e44:	d056      	beq.n	8004ef4 <HAL_RCC_GetSysClockFreq+0x1c0>
 8004e46:	e099      	b.n	8004f7c <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8004e48:	4b6f      	ldr	r3, [pc, #444]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	f003 0320 	and.w	r3, r3, #32
 8004e50:	2b00      	cmp	r3, #0
 8004e52:	d02d      	beq.n	8004eb0 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8004e54:	4b6c      	ldr	r3, [pc, #432]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	08db      	lsrs	r3, r3, #3
 8004e5a:	f003 0303 	and.w	r3, r3, #3
 8004e5e:	4a6b      	ldr	r2, [pc, #428]	; (800500c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004e60:	fa22 f303 	lsr.w	r3, r2, r3
 8004e64:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	ee07 3a90 	vmov	s15, r3
 8004e6c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004e70:	693b      	ldr	r3, [r7, #16]
 8004e72:	ee07 3a90 	vmov	s15, r3
 8004e76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004e7a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004e7e:	4b62      	ldr	r3, [pc, #392]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004e80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e82:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004e86:	ee07 3a90 	vmov	s15, r3
 8004e8a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004e8e:	ed97 6a02 	vldr	s12, [r7, #8]
 8004e92:	eddf 5a61 	vldr	s11, [pc, #388]	; 8005018 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004e96:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004e9a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004e9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004ea2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004ea6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004eaa:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8004eae:	e087      	b.n	8004fc0 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8004eb0:	693b      	ldr	r3, [r7, #16]
 8004eb2:	ee07 3a90 	vmov	s15, r3
 8004eb6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004eba:	eddf 6a58 	vldr	s13, [pc, #352]	; 800501c <HAL_RCC_GetSysClockFreq+0x2e8>
 8004ebe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004ec2:	4b51      	ldr	r3, [pc, #324]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004ec4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ec6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004eca:	ee07 3a90 	vmov	s15, r3
 8004ece:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004ed2:	ed97 6a02 	vldr	s12, [r7, #8]
 8004ed6:	eddf 5a50 	vldr	s11, [pc, #320]	; 8005018 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004eda:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004ede:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004ee2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004ee6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004eea:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004eee:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8004ef2:	e065      	b.n	8004fc0 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8004ef4:	693b      	ldr	r3, [r7, #16]
 8004ef6:	ee07 3a90 	vmov	s15, r3
 8004efa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004efe:	eddf 6a48 	vldr	s13, [pc, #288]	; 8005020 <HAL_RCC_GetSysClockFreq+0x2ec>
 8004f02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004f06:	4b40      	ldr	r3, [pc, #256]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004f0e:	ee07 3a90 	vmov	s15, r3
 8004f12:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004f16:	ed97 6a02 	vldr	s12, [r7, #8]
 8004f1a:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8005018 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004f1e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004f22:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004f26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004f2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004f32:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8004f36:	e043      	b.n	8004fc0 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8004f38:	693b      	ldr	r3, [r7, #16]
 8004f3a:	ee07 3a90 	vmov	s15, r3
 8004f3e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004f42:	eddf 6a38 	vldr	s13, [pc, #224]	; 8005024 <HAL_RCC_GetSysClockFreq+0x2f0>
 8004f46:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004f4a:	4b2f      	ldr	r3, [pc, #188]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004f4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f4e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004f52:	ee07 3a90 	vmov	s15, r3
 8004f56:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004f5a:	ed97 6a02 	vldr	s12, [r7, #8]
 8004f5e:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8005018 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004f62:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004f66:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004f6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004f6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f72:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004f76:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8004f7a:	e021      	b.n	8004fc0 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8004f7c:	693b      	ldr	r3, [r7, #16]
 8004f7e:	ee07 3a90 	vmov	s15, r3
 8004f82:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004f86:	eddf 6a26 	vldr	s13, [pc, #152]	; 8005020 <HAL_RCC_GetSysClockFreq+0x2ec>
 8004f8a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004f8e:	4b1e      	ldr	r3, [pc, #120]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004f90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f92:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004f96:	ee07 3a90 	vmov	s15, r3
 8004f9a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004f9e:	ed97 6a02 	vldr	s12, [r7, #8]
 8004fa2:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8005018 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004fa6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004faa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004fae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8004fb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004fb6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004fba:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8004fbe:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8004fc0:	4b11      	ldr	r3, [pc, #68]	; (8005008 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004fc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fc4:	0a5b      	lsrs	r3, r3, #9
 8004fc6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004fca:	3301      	adds	r3, #1
 8004fcc:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8004fce:	683b      	ldr	r3, [r7, #0]
 8004fd0:	ee07 3a90 	vmov	s15, r3
 8004fd4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8004fd8:	edd7 6a07 	vldr	s13, [r7, #28]
 8004fdc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004fe0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004fe4:	ee17 3a90 	vmov	r3, s15
 8004fe8:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8004fea:	e005      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8004fec:	2300      	movs	r3, #0
 8004fee:	61bb      	str	r3, [r7, #24]
      break;
 8004ff0:	e002      	b.n	8004ff8 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8004ff2:	4b07      	ldr	r3, [pc, #28]	; (8005010 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8004ff4:	61bb      	str	r3, [r7, #24]
      break;
 8004ff6:	bf00      	nop
  }

  return sysclockfreq;
 8004ff8:	69bb      	ldr	r3, [r7, #24]
}
 8004ffa:	4618      	mov	r0, r3
 8004ffc:	3724      	adds	r7, #36	; 0x24
 8004ffe:	46bd      	mov	sp, r7
 8005000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005004:	4770      	bx	lr
 8005006:	bf00      	nop
 8005008:	58024400 	.word	0x58024400
 800500c:	03d09000 	.word	0x03d09000
 8005010:	003d0900 	.word	0x003d0900
 8005014:	017d7840 	.word	0x017d7840
 8005018:	46000000 	.word	0x46000000
 800501c:	4c742400 	.word	0x4c742400
 8005020:	4a742400 	.word	0x4a742400
 8005024:	4bbebc20 	.word	0x4bbebc20

08005028 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005028:	b580      	push	{r7, lr}
 800502a:	b082      	sub	sp, #8
 800502c:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 800502e:	f7ff fe81 	bl	8004d34 <HAL_RCC_GetSysClockFreq>
 8005032:	4602      	mov	r2, r0
 8005034:	4b10      	ldr	r3, [pc, #64]	; (8005078 <HAL_RCC_GetHCLKFreq+0x50>)
 8005036:	699b      	ldr	r3, [r3, #24]
 8005038:	0a1b      	lsrs	r3, r3, #8
 800503a:	f003 030f 	and.w	r3, r3, #15
 800503e:	490f      	ldr	r1, [pc, #60]	; (800507c <HAL_RCC_GetHCLKFreq+0x54>)
 8005040:	5ccb      	ldrb	r3, [r1, r3]
 8005042:	f003 031f 	and.w	r3, r3, #31
 8005046:	fa22 f303 	lsr.w	r3, r2, r3
 800504a:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800504c:	4b0a      	ldr	r3, [pc, #40]	; (8005078 <HAL_RCC_GetHCLKFreq+0x50>)
 800504e:	699b      	ldr	r3, [r3, #24]
 8005050:	f003 030f 	and.w	r3, r3, #15
 8005054:	4a09      	ldr	r2, [pc, #36]	; (800507c <HAL_RCC_GetHCLKFreq+0x54>)
 8005056:	5cd3      	ldrb	r3, [r2, r3]
 8005058:	f003 031f 	and.w	r3, r3, #31
 800505c:	687a      	ldr	r2, [r7, #4]
 800505e:	fa22 f303 	lsr.w	r3, r2, r3
 8005062:	4a07      	ldr	r2, [pc, #28]	; (8005080 <HAL_RCC_GetHCLKFreq+0x58>)
 8005064:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8005066:	4a07      	ldr	r2, [pc, #28]	; (8005084 <HAL_RCC_GetHCLKFreq+0x5c>)
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 800506c:	4b04      	ldr	r3, [pc, #16]	; (8005080 <HAL_RCC_GetHCLKFreq+0x58>)
 800506e:	681b      	ldr	r3, [r3, #0]
}
 8005070:	4618      	mov	r0, r3
 8005072:	3708      	adds	r7, #8
 8005074:	46bd      	mov	sp, r7
 8005076:	bd80      	pop	{r7, pc}
 8005078:	58024400 	.word	0x58024400
 800507c:	080253a8 	.word	0x080253a8
 8005080:	24000008 	.word	0x24000008
 8005084:	24000004 	.word	0x24000004

08005088 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005088:	b580      	push	{r7, lr}
 800508a:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 800508c:	f7ff ffcc 	bl	8005028 <HAL_RCC_GetHCLKFreq>
 8005090:	4602      	mov	r2, r0
 8005092:	4b06      	ldr	r3, [pc, #24]	; (80050ac <HAL_RCC_GetPCLK1Freq+0x24>)
 8005094:	69db      	ldr	r3, [r3, #28]
 8005096:	091b      	lsrs	r3, r3, #4
 8005098:	f003 0307 	and.w	r3, r3, #7
 800509c:	4904      	ldr	r1, [pc, #16]	; (80050b0 <HAL_RCC_GetPCLK1Freq+0x28>)
 800509e:	5ccb      	ldrb	r3, [r1, r3]
 80050a0:	f003 031f 	and.w	r3, r3, #31
 80050a4:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 80050a8:	4618      	mov	r0, r3
 80050aa:	bd80      	pop	{r7, pc}
 80050ac:	58024400 	.word	0x58024400
 80050b0:	080253a8 	.word	0x080253a8

080050b4 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80050b4:	b580      	push	{r7, lr}
 80050b6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 80050b8:	f7ff ffb6 	bl	8005028 <HAL_RCC_GetHCLKFreq>
 80050bc:	4602      	mov	r2, r0
 80050be:	4b06      	ldr	r3, [pc, #24]	; (80050d8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80050c0:	69db      	ldr	r3, [r3, #28]
 80050c2:	0a1b      	lsrs	r3, r3, #8
 80050c4:	f003 0307 	and.w	r3, r3, #7
 80050c8:	4904      	ldr	r1, [pc, #16]	; (80050dc <HAL_RCC_GetPCLK2Freq+0x28>)
 80050ca:	5ccb      	ldrb	r3, [r1, r3]
 80050cc:	f003 031f 	and.w	r3, r3, #31
 80050d0:	fa22 f303 	lsr.w	r3, r2, r3
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 80050d4:	4618      	mov	r0, r3
 80050d6:	bd80      	pop	{r7, pc}
 80050d8:	58024400 	.word	0x58024400
 80050dc:	080253a8 	.word	0x080253a8

080050e0 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80050e0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80050e4:	b0ca      	sub	sp, #296	; 0x128
 80050e6:	af00      	add	r7, sp, #0
 80050e8:	f8c7 0114 	str.w	r0, [r7, #276]	; 0x114
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 80050ec:	2300      	movs	r3, #0
 80050ee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 80050f2:	2300      	movs	r3, #0
 80050f4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80050f8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80050fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005100:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8005104:	2500      	movs	r5, #0
 8005106:	ea54 0305 	orrs.w	r3, r4, r5
 800510a:	d049      	beq.n	80051a0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 800510c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005110:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005112:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8005116:	d02f      	beq.n	8005178 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8005118:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800511c:	d828      	bhi.n	8005170 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800511e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8005122:	d01a      	beq.n	800515a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005124:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8005128:	d822      	bhi.n	8005170 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800512a:	2b00      	cmp	r3, #0
 800512c:	d003      	beq.n	8005136 <HAL_RCCEx_PeriphCLKConfig+0x56>
 800512e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005132:	d007      	beq.n	8005144 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8005134:	e01c      	b.n	8005170 <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005136:	4bb8      	ldr	r3, [pc, #736]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005138:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800513a:	4ab7      	ldr	r2, [pc, #732]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800513c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005140:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8005142:	e01a      	b.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8005144:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005148:	3308      	adds	r3, #8
 800514a:	2102      	movs	r1, #2
 800514c:	4618      	mov	r0, r3
 800514e:	f001 fc8f 	bl	8006a70 <RCCEx_PLL2_Config>
 8005152:	4603      	mov	r3, r0
 8005154:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8005158:	e00f      	b.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800515a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800515e:	3328      	adds	r3, #40	; 0x28
 8005160:	2102      	movs	r1, #2
 8005162:	4618      	mov	r0, r3
 8005164:	f001 fd36 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005168:	4603      	mov	r3, r0
 800516a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 800516e:	e004      	b.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005170:	2301      	movs	r3, #1
 8005172:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005176:	e000      	b.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 8005178:	bf00      	nop
    }

    if (ret == HAL_OK)
 800517a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800517e:	2b00      	cmp	r3, #0
 8005180:	d10a      	bne.n	8005198 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8005182:	4ba5      	ldr	r3, [pc, #660]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005184:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005186:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 800518a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800518e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005190:	4aa1      	ldr	r2, [pc, #644]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005192:	430b      	orrs	r3, r1
 8005194:	6513      	str	r3, [r2, #80]	; 0x50
 8005196:	e003      	b.n	80051a0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005198:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800519c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 80051a0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80051a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051a8:	f402 7880 	and.w	r8, r2, #256	; 0x100
 80051ac:	f04f 0900 	mov.w	r9, #0
 80051b0:	ea58 0309 	orrs.w	r3, r8, r9
 80051b4:	d047      	beq.n	8005246 <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 80051b6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80051ba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80051bc:	2b04      	cmp	r3, #4
 80051be:	d82a      	bhi.n	8005216 <HAL_RCCEx_PeriphCLKConfig+0x136>
 80051c0:	a201      	add	r2, pc, #4	; (adr r2, 80051c8 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 80051c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80051c6:	bf00      	nop
 80051c8:	080051dd 	.word	0x080051dd
 80051cc:	080051eb 	.word	0x080051eb
 80051d0:	08005201 	.word	0x08005201
 80051d4:	0800521f 	.word	0x0800521f
 80051d8:	0800521f 	.word	0x0800521f
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80051dc:	4b8e      	ldr	r3, [pc, #568]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80051de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80051e0:	4a8d      	ldr	r2, [pc, #564]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80051e2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80051e6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80051e8:	e01a      	b.n	8005220 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80051ea:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80051ee:	3308      	adds	r3, #8
 80051f0:	2100      	movs	r1, #0
 80051f2:	4618      	mov	r0, r3
 80051f4:	f001 fc3c 	bl	8006a70 <RCCEx_PLL2_Config>
 80051f8:	4603      	mov	r3, r0
 80051fa:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80051fe:	e00f      	b.n	8005220 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8005200:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005204:	3328      	adds	r3, #40	; 0x28
 8005206:	2100      	movs	r1, #0
 8005208:	4618      	mov	r0, r3
 800520a:	f001 fce3 	bl	8006bd4 <RCCEx_PLL3_Config>
 800520e:	4603      	mov	r3, r0
 8005210:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8005214:	e004      	b.n	8005220 <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005216:	2301      	movs	r3, #1
 8005218:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800521c:	e000      	b.n	8005220 <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 800521e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005220:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005224:	2b00      	cmp	r3, #0
 8005226:	d10a      	bne.n	800523e <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005228:	4b7b      	ldr	r3, [pc, #492]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800522a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800522c:	f023 0107 	bic.w	r1, r3, #7
 8005230:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005234:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005236:	4a78      	ldr	r2, [pc, #480]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005238:	430b      	orrs	r3, r1
 800523a:	6513      	str	r3, [r2, #80]	; 0x50
 800523c:	e003      	b.n	8005246 <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800523e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005242:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

#if defined(SAI3)
  /*---------------------------- SAI2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 8005246:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800524a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800524e:	f402 7a00 	and.w	sl, r2, #512	; 0x200
 8005252:	f04f 0b00 	mov.w	fp, #0
 8005256:	ea5a 030b 	orrs.w	r3, sl, fp
 800525a:	d04c      	beq.n	80052f6 <HAL_RCCEx_PeriphCLKConfig+0x216>
  {
    switch (PeriphClkInit->Sai23ClockSelection)
 800525c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005260:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005262:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005266:	d030      	beq.n	80052ca <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8005268:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800526c:	d829      	bhi.n	80052c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800526e:	2bc0      	cmp	r3, #192	; 0xc0
 8005270:	d02d      	beq.n	80052ce <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8005272:	2bc0      	cmp	r3, #192	; 0xc0
 8005274:	d825      	bhi.n	80052c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8005276:	2b80      	cmp	r3, #128	; 0x80
 8005278:	d018      	beq.n	80052ac <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800527a:	2b80      	cmp	r3, #128	; 0x80
 800527c:	d821      	bhi.n	80052c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800527e:	2b00      	cmp	r3, #0
 8005280:	d002      	beq.n	8005288 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8005282:	2b40      	cmp	r3, #64	; 0x40
 8005284:	d007      	beq.n	8005296 <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8005286:	e01c      	b.n	80052c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
    {
      case RCC_SAI23CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2/3 */
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005288:	4b63      	ldr	r3, [pc, #396]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800528a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800528c:	4a62      	ldr	r2, [pc, #392]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800528e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005292:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 8005294:	e01c      	b.n	80052d0 <HAL_RCCEx_PeriphCLKConfig+0x1f0>

      case RCC_SAI23CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2/3 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005296:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800529a:	3308      	adds	r3, #8
 800529c:	2100      	movs	r1, #0
 800529e:	4618      	mov	r0, r3
 80052a0:	f001 fbe6 	bl	8006a70 <RCCEx_PLL2_Config>
 80052a4:	4603      	mov	r3, r0
 80052a6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 80052aa:	e011      	b.n	80052d0 <HAL_RCCEx_PeriphCLKConfig+0x1f0>

      case RCC_SAI23CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80052ac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80052b0:	3328      	adds	r3, #40	; 0x28
 80052b2:	2100      	movs	r1, #0
 80052b4:	4618      	mov	r0, r3
 80052b6:	f001 fc8d 	bl	8006bd4 <RCCEx_PLL3_Config>
 80052ba:	4603      	mov	r3, r0
 80052bc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 80052c0:	e006      	b.n	80052d0 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        /* HSI, HSE, or CSI oscillator is used as source of SAI2/3 clock */
        /* SAI2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80052c2:	2301      	movs	r3, #1
 80052c4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80052c8:	e002      	b.n	80052d0 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        break;
 80052ca:	bf00      	nop
 80052cc:	e000      	b.n	80052d0 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        break;
 80052ce:	bf00      	nop
    }

    if (ret == HAL_OK)
 80052d0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d10a      	bne.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x20e>
    {
      /* Set the source of SAI2/3 clock*/
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 80052d8:	4b4f      	ldr	r3, [pc, #316]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80052da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80052dc:	f423 71e0 	bic.w	r1, r3, #448	; 0x1c0
 80052e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80052e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80052e6:	4a4c      	ldr	r2, [pc, #304]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80052e8:	430b      	orrs	r3, r1
 80052ea:	6513      	str	r3, [r2, #80]	; 0x50
 80052ec:	e003      	b.n	80052f6 <HAL_RCCEx_PeriphCLKConfig+0x216>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80052ee:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80052f2:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 80052f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80052fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052fe:	f402 6380 	and.w	r3, r2, #1024	; 0x400
 8005302:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8005306:	2300      	movs	r3, #0
 8005308:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 800530c:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	; 0x108
 8005310:	460b      	mov	r3, r1
 8005312:	4313      	orrs	r3, r2
 8005314:	d053      	beq.n	80053be <HAL_RCCEx_PeriphCLKConfig+0x2de>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8005316:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800531a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800531e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005322:	d035      	beq.n	8005390 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8005324:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005328:	d82e      	bhi.n	8005388 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800532a:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800532e:	d031      	beq.n	8005394 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 8005330:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8005334:	d828      	bhi.n	8005388 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8005336:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800533a:	d01a      	beq.n	8005372 <HAL_RCCEx_PeriphCLKConfig+0x292>
 800533c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005340:	d822      	bhi.n	8005388 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8005342:	2b00      	cmp	r3, #0
 8005344:	d003      	beq.n	800534e <HAL_RCCEx_PeriphCLKConfig+0x26e>
 8005346:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800534a:	d007      	beq.n	800535c <HAL_RCCEx_PeriphCLKConfig+0x27c>
 800534c:	e01c      	b.n	8005388 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800534e:	4b32      	ldr	r3, [pc, #200]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005352:	4a31      	ldr	r2, [pc, #196]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005354:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005358:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 800535a:	e01c      	b.n	8005396 <HAL_RCCEx_PeriphCLKConfig+0x2b6>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800535c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005360:	3308      	adds	r3, #8
 8005362:	2100      	movs	r1, #0
 8005364:	4618      	mov	r0, r3
 8005366:	f001 fb83 	bl	8006a70 <RCCEx_PLL2_Config>
 800536a:	4603      	mov	r3, r0
 800536c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8005370:	e011      	b.n	8005396 <HAL_RCCEx_PeriphCLKConfig+0x2b6>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8005372:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005376:	3328      	adds	r3, #40	; 0x28
 8005378:	2100      	movs	r1, #0
 800537a:	4618      	mov	r0, r3
 800537c:	f001 fc2a 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005380:	4603      	mov	r3, r0
 8005382:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8005386:	e006      	b.n	8005396 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8005388:	2301      	movs	r3, #1
 800538a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800538e:	e002      	b.n	8005396 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        break;
 8005390:	bf00      	nop
 8005392:	e000      	b.n	8005396 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        break;
 8005394:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005396:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800539a:	2b00      	cmp	r3, #0
 800539c:	d10b      	bne.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 800539e:	4b1e      	ldr	r3, [pc, #120]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80053a0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053a2:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 80053a6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80053aa:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80053ae:	4a1a      	ldr	r2, [pc, #104]	; (8005418 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80053b0:	430b      	orrs	r3, r1
 80053b2:	6593      	str	r3, [r2, #88]	; 0x58
 80053b4:	e003      	b.n	80053be <HAL_RCCEx_PeriphCLKConfig+0x2de>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80053b6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80053ba:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 80053be:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80053c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053c6:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 80053ca:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 80053ce:	2300      	movs	r3, #0
 80053d0:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 80053d4:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	; 0x100
 80053d8:	460b      	mov	r3, r1
 80053da:	4313      	orrs	r3, r2
 80053dc:	d056      	beq.n	800548c <HAL_RCCEx_PeriphCLKConfig+0x3ac>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 80053de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80053e2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80053e6:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80053ea:	d038      	beq.n	800545e <HAL_RCCEx_PeriphCLKConfig+0x37e>
 80053ec:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80053f0:	d831      	bhi.n	8005456 <HAL_RCCEx_PeriphCLKConfig+0x376>
 80053f2:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80053f6:	d034      	beq.n	8005462 <HAL_RCCEx_PeriphCLKConfig+0x382>
 80053f8:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80053fc:	d82b      	bhi.n	8005456 <HAL_RCCEx_PeriphCLKConfig+0x376>
 80053fe:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005402:	d01d      	beq.n	8005440 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8005404:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005408:	d825      	bhi.n	8005456 <HAL_RCCEx_PeriphCLKConfig+0x376>
 800540a:	2b00      	cmp	r3, #0
 800540c:	d006      	beq.n	800541c <HAL_RCCEx_PeriphCLKConfig+0x33c>
 800540e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005412:	d00a      	beq.n	800542a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8005414:	e01f      	b.n	8005456 <HAL_RCCEx_PeriphCLKConfig+0x376>
 8005416:	bf00      	nop
 8005418:	58024400 	.word	0x58024400
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800541c:	4ba2      	ldr	r3, [pc, #648]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800541e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005420:	4aa1      	ldr	r2, [pc, #644]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005422:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005426:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8005428:	e01c      	b.n	8005464 <HAL_RCCEx_PeriphCLKConfig+0x384>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800542a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800542e:	3308      	adds	r3, #8
 8005430:	2100      	movs	r1, #0
 8005432:	4618      	mov	r0, r3
 8005434:	f001 fb1c 	bl	8006a70 <RCCEx_PLL2_Config>
 8005438:	4603      	mov	r3, r0
 800543a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 800543e:	e011      	b.n	8005464 <HAL_RCCEx_PeriphCLKConfig+0x384>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8005440:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005444:	3328      	adds	r3, #40	; 0x28
 8005446:	2100      	movs	r1, #0
 8005448:	4618      	mov	r0, r3
 800544a:	f001 fbc3 	bl	8006bd4 <RCCEx_PLL3_Config>
 800544e:	4603      	mov	r3, r0
 8005450:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8005454:	e006      	b.n	8005464 <HAL_RCCEx_PeriphCLKConfig+0x384>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8005456:	2301      	movs	r3, #1
 8005458:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800545c:	e002      	b.n	8005464 <HAL_RCCEx_PeriphCLKConfig+0x384>
        break;
 800545e:	bf00      	nop
 8005460:	e000      	b.n	8005464 <HAL_RCCEx_PeriphCLKConfig+0x384>
        break;
 8005462:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005464:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005468:	2b00      	cmp	r3, #0
 800546a:	d10b      	bne.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 800546c:	4b8e      	ldr	r3, [pc, #568]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800546e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005470:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8005474:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005478:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800547c:	4a8a      	ldr	r2, [pc, #552]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800547e:	430b      	orrs	r3, r1
 8005480:	6593      	str	r3, [r2, #88]	; 0x58
 8005482:	e003      	b.n	800548c <HAL_RCCEx_PeriphCLKConfig+0x3ac>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005484:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005488:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif  /*SAI4*/

#if defined(QUADSPI)
  /*---------------------------- QSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 800548c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005494:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 8005498:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800549c:	2300      	movs	r3, #0
 800549e:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80054a2:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 80054a6:	460b      	mov	r3, r1
 80054a8:	4313      	orrs	r3, r2
 80054aa:	d03a      	beq.n	8005522 <HAL_RCCEx_PeriphCLKConfig+0x442>
  {
    switch (PeriphClkInit->QspiClockSelection)
 80054ac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80054b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80054b2:	2b30      	cmp	r3, #48	; 0x30
 80054b4:	d01f      	beq.n	80054f6 <HAL_RCCEx_PeriphCLKConfig+0x416>
 80054b6:	2b30      	cmp	r3, #48	; 0x30
 80054b8:	d819      	bhi.n	80054ee <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80054ba:	2b20      	cmp	r3, #32
 80054bc:	d00c      	beq.n	80054d8 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 80054be:	2b20      	cmp	r3, #32
 80054c0:	d815      	bhi.n	80054ee <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d019      	beq.n	80054fa <HAL_RCCEx_PeriphCLKConfig+0x41a>
 80054c6:	2b10      	cmp	r3, #16
 80054c8:	d111      	bne.n	80054ee <HAL_RCCEx_PeriphCLKConfig+0x40e>
    {
      case RCC_QSPICLKSOURCE_PLL:      /* PLL is used as clock source for QSPI*/
        /* Enable QSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80054ca:	4b77      	ldr	r3, [pc, #476]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80054cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054ce:	4a76      	ldr	r2, [pc, #472]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80054d0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80054d4:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* QSPI clock source configuration done later after clock selection check */
        break;
 80054d6:	e011      	b.n	80054fc <HAL_RCCEx_PeriphCLKConfig+0x41c>

      case RCC_QSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for QSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80054d8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80054dc:	3308      	adds	r3, #8
 80054de:	2102      	movs	r1, #2
 80054e0:	4618      	mov	r0, r3
 80054e2:	f001 fac5 	bl	8006a70 <RCCEx_PLL2_Config>
 80054e6:	4603      	mov	r3, r0
 80054e8:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* QSPI clock source configuration done later after clock selection check */
        break;
 80054ec:	e006      	b.n	80054fc <HAL_RCCEx_PeriphCLKConfig+0x41c>
      case RCC_QSPICLKSOURCE_D1HCLK:
        /* Domain1 HCLK  clock selected as QSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 80054ee:	2301      	movs	r3, #1
 80054f0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80054f4:	e002      	b.n	80054fc <HAL_RCCEx_PeriphCLKConfig+0x41c>
        break;
 80054f6:	bf00      	nop
 80054f8:	e000      	b.n	80054fc <HAL_RCCEx_PeriphCLKConfig+0x41c>
        break;
 80054fa:	bf00      	nop
    }

    if (ret == HAL_OK)
 80054fc:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005500:	2b00      	cmp	r3, #0
 8005502:	d10a      	bne.n	800551a <HAL_RCCEx_PeriphCLKConfig+0x43a>
    {
      /* Set the source of QSPI clock*/
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 8005504:	4b68      	ldr	r3, [pc, #416]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005506:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005508:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 800550c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005510:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005512:	4a65      	ldr	r2, [pc, #404]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005514:	430b      	orrs	r3, r1
 8005516:	64d3      	str	r3, [r2, #76]	; 0x4c
 8005518:	e003      	b.n	8005522 <HAL_RCCEx_PeriphCLKConfig+0x442>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800551a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800551e:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8005522:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005526:	e9d3 2300 	ldrd	r2, r3, [r3]
 800552a:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 800552e:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8005532:	2300      	movs	r3, #0
 8005534:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8005538:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 800553c:	460b      	mov	r3, r1
 800553e:	4313      	orrs	r3, r2
 8005540:	d051      	beq.n	80055e6 <HAL_RCCEx_PeriphCLKConfig+0x506>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8005542:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005546:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005548:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800554c:	d035      	beq.n	80055ba <HAL_RCCEx_PeriphCLKConfig+0x4da>
 800554e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005552:	d82e      	bhi.n	80055b2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8005554:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8005558:	d031      	beq.n	80055be <HAL_RCCEx_PeriphCLKConfig+0x4de>
 800555a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800555e:	d828      	bhi.n	80055b2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8005560:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005564:	d01a      	beq.n	800559c <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8005566:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800556a:	d822      	bhi.n	80055b2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800556c:	2b00      	cmp	r3, #0
 800556e:	d003      	beq.n	8005578 <HAL_RCCEx_PeriphCLKConfig+0x498>
 8005570:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005574:	d007      	beq.n	8005586 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 8005576:	e01c      	b.n	80055b2 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005578:	4b4b      	ldr	r3, [pc, #300]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800557a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800557c:	4a4a      	ldr	r2, [pc, #296]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800557e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005582:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8005584:	e01c      	b.n	80055c0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005586:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800558a:	3308      	adds	r3, #8
 800558c:	2100      	movs	r1, #0
 800558e:	4618      	mov	r0, r3
 8005590:	f001 fa6e 	bl	8006a70 <RCCEx_PLL2_Config>
 8005594:	4603      	mov	r3, r0
 8005596:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 800559a:	e011      	b.n	80055c0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800559c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80055a0:	3328      	adds	r3, #40	; 0x28
 80055a2:	2100      	movs	r1, #0
 80055a4:	4618      	mov	r0, r3
 80055a6:	f001 fb15 	bl	8006bd4 <RCCEx_PLL3_Config>
 80055aa:	4603      	mov	r3, r0
 80055ac:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 80055b0:	e006      	b.n	80055c0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80055b2:	2301      	movs	r3, #1
 80055b4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80055b8:	e002      	b.n	80055c0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        break;
 80055ba:	bf00      	nop
 80055bc:	e000      	b.n	80055c0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        break;
 80055be:	bf00      	nop
    }

    if (ret == HAL_OK)
 80055c0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80055c4:	2b00      	cmp	r3, #0
 80055c6:	d10a      	bne.n	80055de <HAL_RCCEx_PeriphCLKConfig+0x4fe>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 80055c8:	4b37      	ldr	r3, [pc, #220]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80055ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80055cc:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 80055d0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80055d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80055d6:	4a34      	ldr	r2, [pc, #208]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80055d8:	430b      	orrs	r3, r1
 80055da:	6513      	str	r3, [r2, #80]	; 0x50
 80055dc:	e003      	b.n	80055e6 <HAL_RCCEx_PeriphCLKConfig+0x506>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80055de:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80055e2:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 80055e6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80055ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055ee:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 80055f2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80055f6:	2300      	movs	r3, #0
 80055f8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80055fc:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 8005600:	460b      	mov	r3, r1
 8005602:	4313      	orrs	r3, r2
 8005604:	d056      	beq.n	80056b4 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 8005606:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800560a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800560c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005610:	d033      	beq.n	800567a <HAL_RCCEx_PeriphCLKConfig+0x59a>
 8005612:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005616:	d82c      	bhi.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005618:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800561c:	d02f      	beq.n	800567e <HAL_RCCEx_PeriphCLKConfig+0x59e>
 800561e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8005622:	d826      	bhi.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005624:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8005628:	d02b      	beq.n	8005682 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 800562a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800562e:	d820      	bhi.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005630:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8005634:	d012      	beq.n	800565c <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8005636:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800563a:	d81a      	bhi.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x592>
 800563c:	2b00      	cmp	r3, #0
 800563e:	d022      	beq.n	8005686 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8005640:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005644:	d115      	bne.n	8005672 <HAL_RCCEx_PeriphCLKConfig+0x592>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8005646:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800564a:	3308      	adds	r3, #8
 800564c:	2101      	movs	r1, #1
 800564e:	4618      	mov	r0, r3
 8005650:	f001 fa0e 	bl	8006a70 <RCCEx_PLL2_Config>
 8005654:	4603      	mov	r3, r0
 8005656:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 800565a:	e015      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800565c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005660:	3328      	adds	r3, #40	; 0x28
 8005662:	2101      	movs	r1, #1
 8005664:	4618      	mov	r0, r3
 8005666:	f001 fab5 	bl	8006bd4 <RCCEx_PLL3_Config>
 800566a:	4603      	mov	r3, r0
 800566c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8005670:	e00a      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005672:	2301      	movs	r3, #1
 8005674:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005678:	e006      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 800567a:	bf00      	nop
 800567c:	e004      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 800567e:	bf00      	nop
 8005680:	e002      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 8005682:	bf00      	nop
 8005684:	e000      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 8005686:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005688:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800568c:	2b00      	cmp	r3, #0
 800568e:	d10d      	bne.n	80056ac <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8005690:	4b05      	ldr	r3, [pc, #20]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005692:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005694:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 8005698:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800569c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800569e:	4a02      	ldr	r2, [pc, #8]	; (80056a8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80056a0:	430b      	orrs	r3, r1
 80056a2:	6513      	str	r3, [r2, #80]	; 0x50
 80056a4:	e006      	b.n	80056b4 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 80056a6:	bf00      	nop
 80056a8:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 80056ac:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80056b0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 80056b4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80056b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056bc:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 80056c0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80056c4:	2300      	movs	r3, #0
 80056c6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80056ca:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 80056ce:	460b      	mov	r3, r1
 80056d0:	4313      	orrs	r3, r2
 80056d2:	d055      	beq.n	8005780 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 80056d4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80056d8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80056dc:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80056e0:	d033      	beq.n	800574a <HAL_RCCEx_PeriphCLKConfig+0x66a>
 80056e2:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80056e6:	d82c      	bhi.n	8005742 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80056e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80056ec:	d02f      	beq.n	800574e <HAL_RCCEx_PeriphCLKConfig+0x66e>
 80056ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80056f2:	d826      	bhi.n	8005742 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80056f4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80056f8:	d02b      	beq.n	8005752 <HAL_RCCEx_PeriphCLKConfig+0x672>
 80056fa:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80056fe:	d820      	bhi.n	8005742 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8005700:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005704:	d012      	beq.n	800572c <HAL_RCCEx_PeriphCLKConfig+0x64c>
 8005706:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800570a:	d81a      	bhi.n	8005742 <HAL_RCCEx_PeriphCLKConfig+0x662>
 800570c:	2b00      	cmp	r3, #0
 800570e:	d022      	beq.n	8005756 <HAL_RCCEx_PeriphCLKConfig+0x676>
 8005710:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005714:	d115      	bne.n	8005742 <HAL_RCCEx_PeriphCLKConfig+0x662>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8005716:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800571a:	3308      	adds	r3, #8
 800571c:	2101      	movs	r1, #1
 800571e:	4618      	mov	r0, r3
 8005720:	f001 f9a6 	bl	8006a70 <RCCEx_PLL2_Config>
 8005724:	4603      	mov	r3, r0
 8005726:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 800572a:	e015      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800572c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005730:	3328      	adds	r3, #40	; 0x28
 8005732:	2101      	movs	r1, #1
 8005734:	4618      	mov	r0, r3
 8005736:	f001 fa4d 	bl	8006bd4 <RCCEx_PLL3_Config>
 800573a:	4603      	mov	r3, r0
 800573c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 8005740:	e00a      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 8005742:	2301      	movs	r3, #1
 8005744:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005748:	e006      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 800574a:	bf00      	nop
 800574c:	e004      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 800574e:	bf00      	nop
 8005750:	e002      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 8005752:	bf00      	nop
 8005754:	e000      	b.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 8005756:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005758:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800575c:	2b00      	cmp	r3, #0
 800575e:	d10b      	bne.n	8005778 <HAL_RCCEx_PeriphCLKConfig+0x698>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8005760:	4ba3      	ldr	r3, [pc, #652]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005762:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005764:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 8005768:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800576c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8005770:	4a9f      	ldr	r2, [pc, #636]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005772:	430b      	orrs	r3, r1
 8005774:	6593      	str	r3, [r2, #88]	; 0x58
 8005776:	e003      	b.n	8005780 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005778:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800577c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8005780:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005784:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005788:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 800578c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8005790:	2300      	movs	r3, #0
 8005792:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8005796:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800579a:	460b      	mov	r3, r1
 800579c:	4313      	orrs	r3, r2
 800579e:	d037      	beq.n	8005810 <HAL_RCCEx_PeriphCLKConfig+0x730>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 80057a0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80057a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80057a6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80057aa:	d00e      	beq.n	80057ca <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 80057ac:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80057b0:	d816      	bhi.n	80057e0 <HAL_RCCEx_PeriphCLKConfig+0x700>
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d018      	beq.n	80057e8 <HAL_RCCEx_PeriphCLKConfig+0x708>
 80057b6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80057ba:	d111      	bne.n	80057e0 <HAL_RCCEx_PeriphCLKConfig+0x700>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80057bc:	4b8c      	ldr	r3, [pc, #560]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80057be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057c0:	4a8b      	ldr	r2, [pc, #556]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80057c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80057c6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 80057c8:	e00f      	b.n	80057ea <HAL_RCCEx_PeriphCLKConfig+0x70a>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80057ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80057ce:	3308      	adds	r3, #8
 80057d0:	2101      	movs	r1, #1
 80057d2:	4618      	mov	r0, r3
 80057d4:	f001 f94c 	bl	8006a70 <RCCEx_PLL2_Config>
 80057d8:	4603      	mov	r3, r0
 80057da:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 80057de:	e004      	b.n	80057ea <HAL_RCCEx_PeriphCLKConfig+0x70a>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80057e0:	2301      	movs	r3, #1
 80057e2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80057e6:	e000      	b.n	80057ea <HAL_RCCEx_PeriphCLKConfig+0x70a>
        break;
 80057e8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80057ea:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d10a      	bne.n	8005808 <HAL_RCCEx_PeriphCLKConfig+0x728>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 80057f2:	4b7f      	ldr	r3, [pc, #508]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80057f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80057f6:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 80057fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80057fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005800:	4a7b      	ldr	r2, [pc, #492]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005802:	430b      	orrs	r3, r1
 8005804:	6513      	str	r3, [r2, #80]	; 0x50
 8005806:	e003      	b.n	8005810 <HAL_RCCEx_PeriphCLKConfig+0x730>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005808:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800580c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 8005810:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005814:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005818:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 800581c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8005820:	2300      	movs	r3, #0
 8005822:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8005826:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 800582a:	460b      	mov	r3, r1
 800582c:	4313      	orrs	r3, r2
 800582e:	d039      	beq.n	80058a4 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
  {
    switch (PeriphClkInit->FmcClockSelection)
 8005830:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005834:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005836:	2b03      	cmp	r3, #3
 8005838:	d81c      	bhi.n	8005874 <HAL_RCCEx_PeriphCLKConfig+0x794>
 800583a:	a201      	add	r2, pc, #4	; (adr r2, 8005840 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 800583c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005840:	0800587d 	.word	0x0800587d
 8005844:	08005851 	.word	0x08005851
 8005848:	0800585f 	.word	0x0800585f
 800584c:	0800587d 	.word	0x0800587d
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005850:	4b67      	ldr	r3, [pc, #412]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005852:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005854:	4a66      	ldr	r2, [pc, #408]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005856:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800585a:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 800585c:	e00f      	b.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x79e>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800585e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005862:	3308      	adds	r3, #8
 8005864:	2102      	movs	r1, #2
 8005866:	4618      	mov	r0, r3
 8005868:	f001 f902 	bl	8006a70 <RCCEx_PLL2_Config>
 800586c:	4603      	mov	r3, r0
 800586e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* FMC clock source configuration done later after clock selection check */
        break;
 8005872:	e004      	b.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x79e>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8005874:	2301      	movs	r3, #1
 8005876:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800587a:	e000      	b.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x79e>
        break;
 800587c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800587e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005882:	2b00      	cmp	r3, #0
 8005884:	d10a      	bne.n	800589c <HAL_RCCEx_PeriphCLKConfig+0x7bc>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8005886:	4b5a      	ldr	r3, [pc, #360]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005888:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800588a:	f023 0103 	bic.w	r1, r3, #3
 800588e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005892:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005894:	4a56      	ldr	r2, [pc, #344]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005896:	430b      	orrs	r3, r1
 8005898:	64d3      	str	r3, [r2, #76]	; 0x4c
 800589a:	e003      	b.n	80058a4 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800589c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80058a0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80058a4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80058a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058ac:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 80058b0:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80058b4:	2300      	movs	r3, #0
 80058b6:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80058ba:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 80058be:	460b      	mov	r3, r1
 80058c0:	4313      	orrs	r3, r2
 80058c2:	f000 809f 	beq.w	8005a04 <HAL_RCCEx_PeriphCLKConfig+0x924>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80058c6:	4b4b      	ldr	r3, [pc, #300]	; (80059f4 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	4a4a      	ldr	r2, [pc, #296]	; (80059f4 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80058cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80058d0:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80058d2:	f7fc f8e3 	bl	8001a9c <HAL_GetTick>
 80058d6:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80058da:	e00b      	b.n	80058f4 <HAL_RCCEx_PeriphCLKConfig+0x814>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80058dc:	f7fc f8de 	bl	8001a9c <HAL_GetTick>
 80058e0:	4602      	mov	r2, r0
 80058e2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80058e6:	1ad3      	subs	r3, r2, r3
 80058e8:	2b64      	cmp	r3, #100	; 0x64
 80058ea:	d903      	bls.n	80058f4 <HAL_RCCEx_PeriphCLKConfig+0x814>
      {
        ret = HAL_TIMEOUT;
 80058ec:	2303      	movs	r3, #3
 80058ee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80058f2:	e005      	b.n	8005900 <HAL_RCCEx_PeriphCLKConfig+0x820>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80058f4:	4b3f      	ldr	r3, [pc, #252]	; (80059f4 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	d0ed      	beq.n	80058dc <HAL_RCCEx_PeriphCLKConfig+0x7fc>
      }
    }

    if (ret == HAL_OK)
 8005900:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005904:	2b00      	cmp	r3, #0
 8005906:	d179      	bne.n	80059fc <HAL_RCCEx_PeriphCLKConfig+0x91c>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8005908:	4b39      	ldr	r3, [pc, #228]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800590a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800590c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005910:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8005914:	4053      	eors	r3, r2
 8005916:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800591a:	2b00      	cmp	r3, #0
 800591c:	d015      	beq.n	800594a <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800591e:	4b34      	ldr	r3, [pc, #208]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005922:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005926:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 800592a:	4b31      	ldr	r3, [pc, #196]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800592c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800592e:	4a30      	ldr	r2, [pc, #192]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005930:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005934:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8005936:	4b2e      	ldr	r3, [pc, #184]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005938:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800593a:	4a2d      	ldr	r2, [pc, #180]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800593c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005940:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 8005942:	4a2b      	ldr	r2, [pc, #172]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005944:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8005948:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 800594a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800594e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8005952:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005956:	d118      	bne.n	800598a <HAL_RCCEx_PeriphCLKConfig+0x8aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005958:	f7fc f8a0 	bl	8001a9c <HAL_GetTick>
 800595c:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8005960:	e00d      	b.n	800597e <HAL_RCCEx_PeriphCLKConfig+0x89e>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005962:	f7fc f89b 	bl	8001a9c <HAL_GetTick>
 8005966:	4602      	mov	r2, r0
 8005968:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800596c:	1ad2      	subs	r2, r2, r3
 800596e:	f241 3388 	movw	r3, #5000	; 0x1388
 8005972:	429a      	cmp	r2, r3
 8005974:	d903      	bls.n	800597e <HAL_RCCEx_PeriphCLKConfig+0x89e>
          {
            ret = HAL_TIMEOUT;
 8005976:	2303      	movs	r3, #3
 8005978:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
            break;
 800597c:	e005      	b.n	800598a <HAL_RCCEx_PeriphCLKConfig+0x8aa>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800597e:	4b1c      	ldr	r3, [pc, #112]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005980:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005982:	f003 0302 	and.w	r3, r3, #2
 8005986:	2b00      	cmp	r3, #0
 8005988:	d0eb      	beq.n	8005962 <HAL_RCCEx_PeriphCLKConfig+0x882>
          }
        }
      }

      if (ret == HAL_OK)
 800598a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800598e:	2b00      	cmp	r3, #0
 8005990:	d129      	bne.n	80059e6 <HAL_RCCEx_PeriphCLKConfig+0x906>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005992:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005996:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800599a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800599e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80059a2:	d10e      	bne.n	80059c2 <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 80059a4:	4b12      	ldr	r3, [pc, #72]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059a6:	691b      	ldr	r3, [r3, #16]
 80059a8:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 80059ac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80059b0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80059b4:	091a      	lsrs	r2, r3, #4
 80059b6:	4b10      	ldr	r3, [pc, #64]	; (80059f8 <HAL_RCCEx_PeriphCLKConfig+0x918>)
 80059b8:	4013      	ands	r3, r2
 80059ba:	4a0d      	ldr	r2, [pc, #52]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059bc:	430b      	orrs	r3, r1
 80059be:	6113      	str	r3, [r2, #16]
 80059c0:	e005      	b.n	80059ce <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 80059c2:	4b0b      	ldr	r3, [pc, #44]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059c4:	691b      	ldr	r3, [r3, #16]
 80059c6:	4a0a      	ldr	r2, [pc, #40]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059c8:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 80059cc:	6113      	str	r3, [r2, #16]
 80059ce:	4b08      	ldr	r3, [pc, #32]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059d0:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80059d2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80059d6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80059da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80059de:	4a04      	ldr	r2, [pc, #16]	; (80059f0 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80059e0:	430b      	orrs	r3, r1
 80059e2:	6713      	str	r3, [r2, #112]	; 0x70
 80059e4:	e00e      	b.n	8005a04 <HAL_RCCEx_PeriphCLKConfig+0x924>
      }
      else
      {
        /* set overall return value */
        status = ret;
 80059e6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80059ea:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80059ee:	e009      	b.n	8005a04 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80059f0:	58024400 	.word	0x58024400
 80059f4:	58024800 	.word	0x58024800
 80059f8:	00ffffcf 	.word	0x00ffffcf
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 80059fc:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005a00:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8005a04:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005a08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a0c:	f002 0301 	and.w	r3, r2, #1
 8005a10:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005a14:	2300      	movs	r3, #0
 8005a16:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8005a1a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8005a1e:	460b      	mov	r3, r1
 8005a20:	4313      	orrs	r3, r2
 8005a22:	f000 8089 	beq.w	8005b38 <HAL_RCCEx_PeriphCLKConfig+0xa58>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 8005a26:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005a2a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005a2c:	2b28      	cmp	r3, #40	; 0x28
 8005a2e:	d86b      	bhi.n	8005b08 <HAL_RCCEx_PeriphCLKConfig+0xa28>
 8005a30:	a201      	add	r2, pc, #4	; (adr r2, 8005a38 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8005a32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005a36:	bf00      	nop
 8005a38:	08005b11 	.word	0x08005b11
 8005a3c:	08005b09 	.word	0x08005b09
 8005a40:	08005b09 	.word	0x08005b09
 8005a44:	08005b09 	.word	0x08005b09
 8005a48:	08005b09 	.word	0x08005b09
 8005a4c:	08005b09 	.word	0x08005b09
 8005a50:	08005b09 	.word	0x08005b09
 8005a54:	08005b09 	.word	0x08005b09
 8005a58:	08005add 	.word	0x08005add
 8005a5c:	08005b09 	.word	0x08005b09
 8005a60:	08005b09 	.word	0x08005b09
 8005a64:	08005b09 	.word	0x08005b09
 8005a68:	08005b09 	.word	0x08005b09
 8005a6c:	08005b09 	.word	0x08005b09
 8005a70:	08005b09 	.word	0x08005b09
 8005a74:	08005b09 	.word	0x08005b09
 8005a78:	08005af3 	.word	0x08005af3
 8005a7c:	08005b09 	.word	0x08005b09
 8005a80:	08005b09 	.word	0x08005b09
 8005a84:	08005b09 	.word	0x08005b09
 8005a88:	08005b09 	.word	0x08005b09
 8005a8c:	08005b09 	.word	0x08005b09
 8005a90:	08005b09 	.word	0x08005b09
 8005a94:	08005b09 	.word	0x08005b09
 8005a98:	08005b11 	.word	0x08005b11
 8005a9c:	08005b09 	.word	0x08005b09
 8005aa0:	08005b09 	.word	0x08005b09
 8005aa4:	08005b09 	.word	0x08005b09
 8005aa8:	08005b09 	.word	0x08005b09
 8005aac:	08005b09 	.word	0x08005b09
 8005ab0:	08005b09 	.word	0x08005b09
 8005ab4:	08005b09 	.word	0x08005b09
 8005ab8:	08005b11 	.word	0x08005b11
 8005abc:	08005b09 	.word	0x08005b09
 8005ac0:	08005b09 	.word	0x08005b09
 8005ac4:	08005b09 	.word	0x08005b09
 8005ac8:	08005b09 	.word	0x08005b09
 8005acc:	08005b09 	.word	0x08005b09
 8005ad0:	08005b09 	.word	0x08005b09
 8005ad4:	08005b09 	.word	0x08005b09
 8005ad8:	08005b11 	.word	0x08005b11
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8005adc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005ae0:	3308      	adds	r3, #8
 8005ae2:	2101      	movs	r1, #1
 8005ae4:	4618      	mov	r0, r3
 8005ae6:	f000 ffc3 	bl	8006a70 <RCCEx_PLL2_Config>
 8005aea:	4603      	mov	r3, r0
 8005aec:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8005af0:	e00f      	b.n	8005b12 <HAL_RCCEx_PeriphCLKConfig+0xa32>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8005af2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005af6:	3328      	adds	r3, #40	; 0x28
 8005af8:	2101      	movs	r1, #1
 8005afa:	4618      	mov	r0, r3
 8005afc:	f001 f86a 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005b00:	4603      	mov	r3, r0
 8005b02:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8005b06:	e004      	b.n	8005b12 <HAL_RCCEx_PeriphCLKConfig+0xa32>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005b08:	2301      	movs	r3, #1
 8005b0a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005b0e:	e000      	b.n	8005b12 <HAL_RCCEx_PeriphCLKConfig+0xa32>
        break;
 8005b10:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005b12:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d10a      	bne.n	8005b30 <HAL_RCCEx_PeriphCLKConfig+0xa50>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8005b1a:	4bbf      	ldr	r3, [pc, #764]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005b1c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005b1e:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 8005b22:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005b26:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005b28:	4abb      	ldr	r2, [pc, #748]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005b2a:	430b      	orrs	r3, r1
 8005b2c:	6553      	str	r3, [r2, #84]	; 0x54
 8005b2e:	e003      	b.n	8005b38 <HAL_RCCEx_PeriphCLKConfig+0xa58>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005b30:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005b34:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8005b38:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005b3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b40:	f002 0302 	and.w	r3, r2, #2
 8005b44:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8005b48:	2300      	movs	r3, #0
 8005b4a:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8005b4e:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 8005b52:	460b      	mov	r3, r1
 8005b54:	4313      	orrs	r3, r2
 8005b56:	d041      	beq.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0xafc>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 8005b58:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005b5c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005b5e:	2b05      	cmp	r3, #5
 8005b60:	d824      	bhi.n	8005bac <HAL_RCCEx_PeriphCLKConfig+0xacc>
 8005b62:	a201      	add	r2, pc, #4	; (adr r2, 8005b68 <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 8005b64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b68:	08005bb5 	.word	0x08005bb5
 8005b6c:	08005b81 	.word	0x08005b81
 8005b70:	08005b97 	.word	0x08005b97
 8005b74:	08005bb5 	.word	0x08005bb5
 8005b78:	08005bb5 	.word	0x08005bb5
 8005b7c:	08005bb5 	.word	0x08005bb5
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8005b80:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005b84:	3308      	adds	r3, #8
 8005b86:	2101      	movs	r1, #1
 8005b88:	4618      	mov	r0, r3
 8005b8a:	f000 ff71 	bl	8006a70 <RCCEx_PLL2_Config>
 8005b8e:	4603      	mov	r3, r0
 8005b90:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8005b94:	e00f      	b.n	8005bb6 <HAL_RCCEx_PeriphCLKConfig+0xad6>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8005b96:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005b9a:	3328      	adds	r3, #40	; 0x28
 8005b9c:	2101      	movs	r1, #1
 8005b9e:	4618      	mov	r0, r3
 8005ba0:	f001 f818 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005ba4:	4603      	mov	r3, r0
 8005ba6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8005baa:	e004      	b.n	8005bb6 <HAL_RCCEx_PeriphCLKConfig+0xad6>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005bac:	2301      	movs	r3, #1
 8005bae:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005bb2:	e000      	b.n	8005bb6 <HAL_RCCEx_PeriphCLKConfig+0xad6>
        break;
 8005bb4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005bb6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005bba:	2b00      	cmp	r3, #0
 8005bbc:	d10a      	bne.n	8005bd4 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8005bbe:	4b96      	ldr	r3, [pc, #600]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005bc0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005bc2:	f023 0107 	bic.w	r1, r3, #7
 8005bc6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005bca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005bcc:	4a92      	ldr	r2, [pc, #584]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005bce:	430b      	orrs	r3, r1
 8005bd0:	6553      	str	r3, [r2, #84]	; 0x54
 8005bd2:	e003      	b.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0xafc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005bd4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005bd8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8005bdc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005be0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005be4:	f002 0304 	and.w	r3, r2, #4
 8005be8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005bec:	2300      	movs	r3, #0
 8005bee:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005bf2:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 8005bf6:	460b      	mov	r3, r1
 8005bf8:	4313      	orrs	r3, r2
 8005bfa:	d044      	beq.n	8005c86 <HAL_RCCEx_PeriphCLKConfig+0xba6>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8005bfc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005c00:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005c04:	2b05      	cmp	r3, #5
 8005c06:	d825      	bhi.n	8005c54 <HAL_RCCEx_PeriphCLKConfig+0xb74>
 8005c08:	a201      	add	r2, pc, #4	; (adr r2, 8005c10 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 8005c0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005c0e:	bf00      	nop
 8005c10:	08005c5d 	.word	0x08005c5d
 8005c14:	08005c29 	.word	0x08005c29
 8005c18:	08005c3f 	.word	0x08005c3f
 8005c1c:	08005c5d 	.word	0x08005c5d
 8005c20:	08005c5d 	.word	0x08005c5d
 8005c24:	08005c5d 	.word	0x08005c5d
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8005c28:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005c2c:	3308      	adds	r3, #8
 8005c2e:	2101      	movs	r1, #1
 8005c30:	4618      	mov	r0, r3
 8005c32:	f000 ff1d 	bl	8006a70 <RCCEx_PLL2_Config>
 8005c36:	4603      	mov	r3, r0
 8005c38:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8005c3c:	e00f      	b.n	8005c5e <HAL_RCCEx_PeriphCLKConfig+0xb7e>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8005c3e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005c42:	3328      	adds	r3, #40	; 0x28
 8005c44:	2101      	movs	r1, #1
 8005c46:	4618      	mov	r0, r3
 8005c48:	f000 ffc4 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005c4c:	4603      	mov	r3, r0
 8005c4e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8005c52:	e004      	b.n	8005c5e <HAL_RCCEx_PeriphCLKConfig+0xb7e>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005c54:	2301      	movs	r3, #1
 8005c56:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005c5a:	e000      	b.n	8005c5e <HAL_RCCEx_PeriphCLKConfig+0xb7e>
        break;
 8005c5c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005c5e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d10b      	bne.n	8005c7e <HAL_RCCEx_PeriphCLKConfig+0xb9e>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8005c66:	4b6c      	ldr	r3, [pc, #432]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005c68:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005c6a:	f023 0107 	bic.w	r1, r3, #7
 8005c6e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005c72:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005c76:	4a68      	ldr	r2, [pc, #416]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005c78:	430b      	orrs	r3, r1
 8005c7a:	6593      	str	r3, [r2, #88]	; 0x58
 8005c7c:	e003      	b.n	8005c86 <HAL_RCCEx_PeriphCLKConfig+0xba6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005c7e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005c82:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8005c86:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c8e:	f002 0320 	and.w	r3, r2, #32
 8005c92:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8005c96:	2300      	movs	r3, #0
 8005c98:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8005c9c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8005ca0:	460b      	mov	r3, r1
 8005ca2:	4313      	orrs	r3, r2
 8005ca4:	d055      	beq.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0xc72>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 8005ca6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005caa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005cae:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8005cb2:	d033      	beq.n	8005d1c <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 8005cb4:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8005cb8:	d82c      	bhi.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005cba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005cbe:	d02f      	beq.n	8005d20 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 8005cc0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005cc4:	d826      	bhi.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005cc6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8005cca:	d02b      	beq.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0xc44>
 8005ccc:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8005cd0:	d820      	bhi.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005cd2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005cd6:	d012      	beq.n	8005cfe <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 8005cd8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005cdc:	d81a      	bhi.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d022      	beq.n	8005d28 <HAL_RCCEx_PeriphCLKConfig+0xc48>
 8005ce2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005ce6:	d115      	bne.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0xc34>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005ce8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005cec:	3308      	adds	r3, #8
 8005cee:	2100      	movs	r1, #0
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	f000 febd 	bl	8006a70 <RCCEx_PLL2_Config>
 8005cf6:	4603      	mov	r3, r0
 8005cf8:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8005cfc:	e015      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8005cfe:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005d02:	3328      	adds	r3, #40	; 0x28
 8005d04:	2102      	movs	r1, #2
 8005d06:	4618      	mov	r0, r3
 8005d08:	f000 ff64 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005d0c:	4603      	mov	r3, r0
 8005d0e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8005d12:	e00a      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005d14:	2301      	movs	r3, #1
 8005d16:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005d1a:	e006      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8005d1c:	bf00      	nop
 8005d1e:	e004      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8005d20:	bf00      	nop
 8005d22:	e002      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8005d24:	bf00      	nop
 8005d26:	e000      	b.n	8005d2a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8005d28:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005d2a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d10b      	bne.n	8005d4a <HAL_RCCEx_PeriphCLKConfig+0xc6a>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8005d32:	4b39      	ldr	r3, [pc, #228]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005d34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005d36:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 8005d3a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005d3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d42:	4a35      	ldr	r2, [pc, #212]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005d44:	430b      	orrs	r3, r1
 8005d46:	6553      	str	r3, [r2, #84]	; 0x54
 8005d48:	e003      	b.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0xc72>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005d4a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005d4e:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8005d52:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005d56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d5a:	f002 0340 	and.w	r3, r2, #64	; 0x40
 8005d5e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8005d62:	2300      	movs	r3, #0
 8005d64:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8005d68:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8005d6c:	460b      	mov	r3, r1
 8005d6e:	4313      	orrs	r3, r2
 8005d70:	d058      	beq.n	8005e24 <HAL_RCCEx_PeriphCLKConfig+0xd44>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8005d72:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005d76:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8005d7a:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8005d7e:	d033      	beq.n	8005de8 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 8005d80:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8005d84:	d82c      	bhi.n	8005de0 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005d86:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005d8a:	d02f      	beq.n	8005dec <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 8005d8c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005d90:	d826      	bhi.n	8005de0 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005d92:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8005d96:	d02b      	beq.n	8005df0 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 8005d98:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8005d9c:	d820      	bhi.n	8005de0 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005d9e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005da2:	d012      	beq.n	8005dca <HAL_RCCEx_PeriphCLKConfig+0xcea>
 8005da4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005da8:	d81a      	bhi.n	8005de0 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005daa:	2b00      	cmp	r3, #0
 8005dac:	d022      	beq.n	8005df4 <HAL_RCCEx_PeriphCLKConfig+0xd14>
 8005dae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005db2:	d115      	bne.n	8005de0 <HAL_RCCEx_PeriphCLKConfig+0xd00>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005db4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005db8:	3308      	adds	r3, #8
 8005dba:	2100      	movs	r1, #0
 8005dbc:	4618      	mov	r0, r3
 8005dbe:	f000 fe57 	bl	8006a70 <RCCEx_PLL2_Config>
 8005dc2:	4603      	mov	r3, r0
 8005dc4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8005dc8:	e015      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8005dca:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005dce:	3328      	adds	r3, #40	; 0x28
 8005dd0:	2102      	movs	r1, #2
 8005dd2:	4618      	mov	r0, r3
 8005dd4:	f000 fefe 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005dd8:	4603      	mov	r3, r0
 8005dda:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8005dde:	e00a      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005de0:	2301      	movs	r3, #1
 8005de2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005de6:	e006      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8005de8:	bf00      	nop
 8005dea:	e004      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8005dec:	bf00      	nop
 8005dee:	e002      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8005df0:	bf00      	nop
 8005df2:	e000      	b.n	8005df6 <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8005df4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005df6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005dfa:	2b00      	cmp	r3, #0
 8005dfc:	d10e      	bne.n	8005e1c <HAL_RCCEx_PeriphCLKConfig+0xd3c>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8005dfe:	4b06      	ldr	r3, [pc, #24]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005e00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005e02:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 8005e06:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005e0a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8005e0e:	4a02      	ldr	r2, [pc, #8]	; (8005e18 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005e10:	430b      	orrs	r3, r1
 8005e12:	6593      	str	r3, [r2, #88]	; 0x58
 8005e14:	e006      	b.n	8005e24 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8005e16:	bf00      	nop
 8005e18:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005e1c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005e20:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8005e24:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005e28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e2c:	f002 0380 	and.w	r3, r2, #128	; 0x80
 8005e30:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005e34:	2300      	movs	r3, #0
 8005e36:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005e3a:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 8005e3e:	460b      	mov	r3, r1
 8005e40:	4313      	orrs	r3, r2
 8005e42:	d055      	beq.n	8005ef0 <HAL_RCCEx_PeriphCLKConfig+0xe10>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 8005e44:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005e48:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8005e4c:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8005e50:	d033      	beq.n	8005eba <HAL_RCCEx_PeriphCLKConfig+0xdda>
 8005e52:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8005e56:	d82c      	bhi.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005e58:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005e5c:	d02f      	beq.n	8005ebe <HAL_RCCEx_PeriphCLKConfig+0xdde>
 8005e5e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005e62:	d826      	bhi.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005e64:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8005e68:	d02b      	beq.n	8005ec2 <HAL_RCCEx_PeriphCLKConfig+0xde2>
 8005e6a:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8005e6e:	d820      	bhi.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005e70:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005e74:	d012      	beq.n	8005e9c <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 8005e76:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005e7a:	d81a      	bhi.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005e7c:	2b00      	cmp	r3, #0
 8005e7e:	d022      	beq.n	8005ec6 <HAL_RCCEx_PeriphCLKConfig+0xde6>
 8005e80:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005e84:	d115      	bne.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005e86:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005e8a:	3308      	adds	r3, #8
 8005e8c:	2100      	movs	r1, #0
 8005e8e:	4618      	mov	r0, r3
 8005e90:	f000 fdee 	bl	8006a70 <RCCEx_PLL2_Config>
 8005e94:	4603      	mov	r3, r0
 8005e96:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8005e9a:	e015      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8005e9c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005ea0:	3328      	adds	r3, #40	; 0x28
 8005ea2:	2102      	movs	r1, #2
 8005ea4:	4618      	mov	r0, r3
 8005ea6:	f000 fe95 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005eaa:	4603      	mov	r3, r0
 8005eac:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8005eb0:	e00a      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005eb2:	2301      	movs	r3, #1
 8005eb4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8005eb8:	e006      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8005eba:	bf00      	nop
 8005ebc:	e004      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8005ebe:	bf00      	nop
 8005ec0:	e002      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8005ec2:	bf00      	nop
 8005ec4:	e000      	b.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8005ec6:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005ec8:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d10b      	bne.n	8005ee8 <HAL_RCCEx_PeriphCLKConfig+0xe08>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8005ed0:	4ba1      	ldr	r3, [pc, #644]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005ed2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005ed4:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8005ed8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005edc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8005ee0:	4a9d      	ldr	r2, [pc, #628]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005ee2:	430b      	orrs	r3, r1
 8005ee4:	6593      	str	r3, [r2, #88]	; 0x58
 8005ee6:	e003      	b.n	8005ef0 <HAL_RCCEx_PeriphCLKConfig+0xe10>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005ee8:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8005eec:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);

  }
#else
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8005ef0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005ef4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ef8:	f002 0308 	and.w	r3, r2, #8
 8005efc:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8005f00:	2300      	movs	r3, #0
 8005f02:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8005f06:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 8005f0a:	460b      	mov	r3, r1
 8005f0c:	4313      	orrs	r3, r2
 8005f0e:	d01e      	beq.n	8005f4e <HAL_RCCEx_PeriphCLKConfig+0xe6e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C123CLKSOURCE(PeriphClkInit->I2c123ClockSelection));

    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
 8005f10:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f14:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f18:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005f1c:	d10c      	bne.n	8005f38 <HAL_RCCEx_PeriphCLKConfig+0xe58>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8005f1e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f22:	3328      	adds	r3, #40	; 0x28
 8005f24:	2102      	movs	r1, #2
 8005f26:	4618      	mov	r0, r3
 8005f28:	f000 fe54 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005f2c:	4603      	mov	r3, r0
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d002      	beq.n	8005f38 <HAL_RCCEx_PeriphCLKConfig+0xe58>
      {
        status = HAL_ERROR;
 8005f32:	2301      	movs	r3, #1
 8005f34:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
      }
    }

    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8005f38:	4b87      	ldr	r3, [pc, #540]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f3a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005f3c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005f40:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f48:	4a83      	ldr	r2, [pc, #524]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f4a:	430b      	orrs	r3, r1
 8005f4c:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8005f4e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f56:	f002 0310 	and.w	r3, r2, #16
 8005f5a:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8005f5e:	2300      	movs	r3, #0
 8005f60:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005f64:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 8005f68:	460b      	mov	r3, r1
 8005f6a:	4313      	orrs	r3, r2
 8005f6c:	d01e      	beq.n	8005fac <HAL_RCCEx_PeriphCLKConfig+0xecc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8005f6e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f72:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005f76:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005f7a:	d10c      	bne.n	8005f96 <HAL_RCCEx_PeriphCLKConfig+0xeb6>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8005f7c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005f80:	3328      	adds	r3, #40	; 0x28
 8005f82:	2102      	movs	r1, #2
 8005f84:	4618      	mov	r0, r3
 8005f86:	f000 fe25 	bl	8006bd4 <RCCEx_PLL3_Config>
 8005f8a:	4603      	mov	r3, r0
 8005f8c:	2b00      	cmp	r3, #0
 8005f8e:	d002      	beq.n	8005f96 <HAL_RCCEx_PeriphCLKConfig+0xeb6>
      {
        status = HAL_ERROR;
 8005f90:	2301      	movs	r3, #1
 8005f92:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8005f96:	4b70      	ldr	r3, [pc, #448]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f98:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005f9a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005f9e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005fa2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005fa6:	4a6c      	ldr	r2, [pc, #432]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005fa8:	430b      	orrs	r3, r1
 8005faa:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8005fac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005fb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fb4:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8005fb8:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8005fbc:	2300      	movs	r3, #0
 8005fbe:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005fc2:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 8005fc6:	460b      	mov	r3, r1
 8005fc8:	4313      	orrs	r3, r2
 8005fca:	d03e      	beq.n	800604a <HAL_RCCEx_PeriphCLKConfig+0xf6a>
  {
    switch (PeriphClkInit->AdcClockSelection)
 8005fcc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005fd0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005fd4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8005fd8:	d022      	beq.n	8006020 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8005fda:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8005fde:	d81b      	bhi.n	8006018 <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8005fe0:	2b00      	cmp	r3, #0
 8005fe2:	d003      	beq.n	8005fec <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 8005fe4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005fe8:	d00b      	beq.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8005fea:	e015      	b.n	8006018 <HAL_RCCEx_PeriphCLKConfig+0xf38>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8005fec:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8005ff0:	3308      	adds	r3, #8
 8005ff2:	2100      	movs	r1, #0
 8005ff4:	4618      	mov	r0, r3
 8005ff6:	f000 fd3b 	bl	8006a70 <RCCEx_PLL2_Config>
 8005ffa:	4603      	mov	r3, r0
 8005ffc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* ADC clock source configuration done later after clock selection check */
        break;
 8006000:	e00f      	b.n	8006022 <HAL_RCCEx_PeriphCLKConfig+0xf42>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8006002:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006006:	3328      	adds	r3, #40	; 0x28
 8006008:	2102      	movs	r1, #2
 800600a:	4618      	mov	r0, r3
 800600c:	f000 fde2 	bl	8006bd4 <RCCEx_PLL3_Config>
 8006010:	4603      	mov	r3, r0
 8006012:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* ADC clock source configuration done later after clock selection check */
        break;
 8006016:	e004      	b.n	8006022 <HAL_RCCEx_PeriphCLKConfig+0xf42>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8006018:	2301      	movs	r3, #1
 800601a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800601e:	e000      	b.n	8006022 <HAL_RCCEx_PeriphCLKConfig+0xf42>
        break;
 8006020:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006022:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006026:	2b00      	cmp	r3, #0
 8006028:	d10b      	bne.n	8006042 <HAL_RCCEx_PeriphCLKConfig+0xf62>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 800602a:	4b4b      	ldr	r3, [pc, #300]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 800602c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800602e:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8006032:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006036:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800603a:	4a47      	ldr	r2, [pc, #284]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 800603c:	430b      	orrs	r3, r1
 800603e:	6593      	str	r3, [r2, #88]	; 0x58
 8006040:	e003      	b.n	800604a <HAL_RCCEx_PeriphCLKConfig+0xf6a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006042:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006046:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 800604a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800604e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006052:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 8006056:	67bb      	str	r3, [r7, #120]	; 0x78
 8006058:	2300      	movs	r3, #0
 800605a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800605c:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8006060:	460b      	mov	r3, r1
 8006062:	4313      	orrs	r3, r2
 8006064:	d03b      	beq.n	80060de <HAL_RCCEx_PeriphCLKConfig+0xffe>
  {

    switch (PeriphClkInit->UsbClockSelection)
 8006066:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800606a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800606e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8006072:	d01f      	beq.n	80060b4 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 8006074:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8006078:	d818      	bhi.n	80060ac <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 800607a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800607e:	d003      	beq.n	8006088 <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 8006080:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006084:	d007      	beq.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 8006086:	e011      	b.n	80060ac <HAL_RCCEx_PeriphCLKConfig+0xfcc>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006088:	4b33      	ldr	r3, [pc, #204]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 800608a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800608c:	4a32      	ldr	r2, [pc, #200]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 800608e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006092:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8006094:	e00f      	b.n	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xfd6>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8006096:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800609a:	3328      	adds	r3, #40	; 0x28
 800609c:	2101      	movs	r1, #1
 800609e:	4618      	mov	r0, r3
 80060a0:	f000 fd98 	bl	8006bd4 <RCCEx_PLL3_Config>
 80060a4:	4603      	mov	r3, r0
 80060a6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* USB clock source configuration done later after clock selection check */
        break;
 80060aa:	e004      	b.n	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xfd6>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80060ac:	2301      	movs	r3, #1
 80060ae:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80060b2:	e000      	b.n	80060b6 <HAL_RCCEx_PeriphCLKConfig+0xfd6>
        break;
 80060b4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80060b6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d10b      	bne.n	80060d6 <HAL_RCCEx_PeriphCLKConfig+0xff6>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80060be:	4b26      	ldr	r3, [pc, #152]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80060c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80060c2:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 80060c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80060ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060ce:	4a22      	ldr	r2, [pc, #136]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 80060d0:	430b      	orrs	r3, r1
 80060d2:	6553      	str	r3, [r2, #84]	; 0x54
 80060d4:	e003      	b.n	80060de <HAL_RCCEx_PeriphCLKConfig+0xffe>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80060d6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80060da:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 80060de:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80060e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060e6:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 80060ea:	673b      	str	r3, [r7, #112]	; 0x70
 80060ec:	2300      	movs	r3, #0
 80060ee:	677b      	str	r3, [r7, #116]	; 0x74
 80060f0:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 80060f4:	460b      	mov	r3, r1
 80060f6:	4313      	orrs	r3, r2
 80060f8:	d034      	beq.n	8006164 <HAL_RCCEx_PeriphCLKConfig+0x1084>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 80060fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80060fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006100:	2b00      	cmp	r3, #0
 8006102:	d003      	beq.n	800610c <HAL_RCCEx_PeriphCLKConfig+0x102c>
 8006104:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006108:	d007      	beq.n	800611a <HAL_RCCEx_PeriphCLKConfig+0x103a>
 800610a:	e011      	b.n	8006130 <HAL_RCCEx_PeriphCLKConfig+0x1050>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800610c:	4b12      	ldr	r3, [pc, #72]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 800610e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006110:	4a11      	ldr	r2, [pc, #68]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8006112:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006116:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8006118:	e00e      	b.n	8006138 <HAL_RCCEx_PeriphCLKConfig+0x1058>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800611a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800611e:	3308      	adds	r3, #8
 8006120:	2102      	movs	r1, #2
 8006122:	4618      	mov	r0, r3
 8006124:	f000 fca4 	bl	8006a70 <RCCEx_PLL2_Config>
 8006128:	4603      	mov	r3, r0
 800612a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 800612e:	e003      	b.n	8006138 <HAL_RCCEx_PeriphCLKConfig+0x1058>

      default:
        ret = HAL_ERROR;
 8006130:	2301      	movs	r3, #1
 8006132:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8006136:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006138:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800613c:	2b00      	cmp	r3, #0
 800613e:	d10d      	bne.n	800615c <HAL_RCCEx_PeriphCLKConfig+0x107c>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8006140:	4b05      	ldr	r3, [pc, #20]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8006142:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006144:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8006148:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800614c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800614e:	4a02      	ldr	r2, [pc, #8]	; (8006158 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8006150:	430b      	orrs	r3, r1
 8006152:	64d3      	str	r3, [r2, #76]	; 0x4c
 8006154:	e006      	b.n	8006164 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8006156:	bf00      	nop
 8006158:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 800615c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006160:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8006164:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800616c:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8006170:	66bb      	str	r3, [r7, #104]	; 0x68
 8006172:	2300      	movs	r3, #0
 8006174:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006176:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 800617a:	460b      	mov	r3, r1
 800617c:	4313      	orrs	r3, r2
 800617e:	d00c      	beq.n	800619a <HAL_RCCEx_PeriphCLKConfig+0x10ba>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8006180:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006184:	3328      	adds	r3, #40	; 0x28
 8006186:	2102      	movs	r1, #2
 8006188:	4618      	mov	r0, r3
 800618a:	f000 fd23 	bl	8006bd4 <RCCEx_PLL3_Config>
 800618e:	4603      	mov	r3, r0
 8006190:	2b00      	cmp	r3, #0
 8006192:	d002      	beq.n	800619a <HAL_RCCEx_PeriphCLKConfig+0x10ba>
    {
      status = HAL_ERROR;
 8006194:	2301      	movs	r3, #1
 8006196:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 800619a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800619e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061a2:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 80061a6:	663b      	str	r3, [r7, #96]	; 0x60
 80061a8:	2300      	movs	r3, #0
 80061aa:	667b      	str	r3, [r7, #100]	; 0x64
 80061ac:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 80061b0:	460b      	mov	r3, r1
 80061b2:	4313      	orrs	r3, r2
 80061b4:	d038      	beq.n	8006228 <HAL_RCCEx_PeriphCLKConfig+0x1148>
  {

    switch (PeriphClkInit->RngClockSelection)
 80061b6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80061ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80061be:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80061c2:	d018      	beq.n	80061f6 <HAL_RCCEx_PeriphCLKConfig+0x1116>
 80061c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80061c8:	d811      	bhi.n	80061ee <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80061ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80061ce:	d014      	beq.n	80061fa <HAL_RCCEx_PeriphCLKConfig+0x111a>
 80061d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80061d4:	d80b      	bhi.n	80061ee <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d011      	beq.n	80061fe <HAL_RCCEx_PeriphCLKConfig+0x111e>
 80061da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80061de:	d106      	bne.n	80061ee <HAL_RCCEx_PeriphCLKConfig+0x110e>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80061e0:	4bc3      	ldr	r3, [pc, #780]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80061e4:	4ac2      	ldr	r2, [pc, #776]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80061ea:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 80061ec:	e008      	b.n	8006200 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80061ee:	2301      	movs	r3, #1
 80061f0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80061f4:	e004      	b.n	8006200 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80061f6:	bf00      	nop
 80061f8:	e002      	b.n	8006200 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80061fa:	bf00      	nop
 80061fc:	e000      	b.n	8006200 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80061fe:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006200:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006204:	2b00      	cmp	r3, #0
 8006206:	d10b      	bne.n	8006220 <HAL_RCCEx_PeriphCLKConfig+0x1140>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8006208:	4bb9      	ldr	r3, [pc, #740]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800620a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800620c:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8006210:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006214:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006218:	4ab5      	ldr	r2, [pc, #724]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800621a:	430b      	orrs	r3, r1
 800621c:	6553      	str	r3, [r2, #84]	; 0x54
 800621e:	e003      	b.n	8006228 <HAL_RCCEx_PeriphCLKConfig+0x1148>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006220:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006224:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8006228:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800622c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006230:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 8006234:	65bb      	str	r3, [r7, #88]	; 0x58
 8006236:	2300      	movs	r3, #0
 8006238:	65fb      	str	r3, [r7, #92]	; 0x5c
 800623a:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 800623e:	460b      	mov	r3, r1
 8006240:	4313      	orrs	r3, r2
 8006242:	d009      	beq.n	8006258 <HAL_RCCEx_PeriphCLKConfig+0x1178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8006244:	4baa      	ldr	r3, [pc, #680]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006246:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006248:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800624c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006250:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006252:	4aa7      	ldr	r2, [pc, #668]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006254:	430b      	orrs	r3, r1
 8006256:	6513      	str	r3, [r2, #80]	; 0x50
  }
#if defined(HRTIM1)
  /*------------------------------ HRTIM1 clock Configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 8006258:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800625c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006260:	f002 5380 	and.w	r3, r2, #268435456	; 0x10000000
 8006264:	653b      	str	r3, [r7, #80]	; 0x50
 8006266:	2300      	movs	r3, #0
 8006268:	657b      	str	r3, [r7, #84]	; 0x54
 800626a:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 800626e:	460b      	mov	r3, r1
 8006270:	4313      	orrs	r3, r2
 8006272:	d00a      	beq.n	800628a <HAL_RCCEx_PeriphCLKConfig+0x11aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HRTIM1CLKSOURCE(PeriphClkInit->Hrtim1ClockSelection));

    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8006274:	4b9e      	ldr	r3, [pc, #632]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006276:	691b      	ldr	r3, [r3, #16]
 8006278:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 800627c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006280:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8006284:	4a9a      	ldr	r2, [pc, #616]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006286:	430b      	orrs	r3, r1
 8006288:	6113      	str	r3, [r2, #16]
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 800628a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800628e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006292:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 8006296:	64bb      	str	r3, [r7, #72]	; 0x48
 8006298:	2300      	movs	r3, #0
 800629a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800629c:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 80062a0:	460b      	mov	r3, r1
 80062a2:	4313      	orrs	r3, r2
 80062a4:	d009      	beq.n	80062ba <HAL_RCCEx_PeriphCLKConfig+0x11da>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 80062a6:	4b92      	ldr	r3, [pc, #584]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80062aa:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 80062ae:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80062b2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80062b4:	4a8e      	ldr	r2, [pc, #568]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062b6:	430b      	orrs	r3, r1
 80062b8:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 80062ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80062be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062c2:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 80062c6:	643b      	str	r3, [r7, #64]	; 0x40
 80062c8:	2300      	movs	r3, #0
 80062ca:	647b      	str	r3, [r7, #68]	; 0x44
 80062cc:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 80062d0:	460b      	mov	r3, r1
 80062d2:	4313      	orrs	r3, r2
 80062d4:	d00e      	beq.n	80062f4 <HAL_RCCEx_PeriphCLKConfig+0x1214>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80062d6:	4b86      	ldr	r3, [pc, #536]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062d8:	691b      	ldr	r3, [r3, #16]
 80062da:	4a85      	ldr	r2, [pc, #532]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062dc:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80062e0:	6113      	str	r3, [r2, #16]
 80062e2:	4b83      	ldr	r3, [pc, #524]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062e4:	6919      	ldr	r1, [r3, #16]
 80062e6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80062ea:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80062ee:	4a80      	ldr	r2, [pc, #512]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80062f0:	430b      	orrs	r3, r1
 80062f2:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 80062f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80062f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062fc:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 8006300:	63bb      	str	r3, [r7, #56]	; 0x38
 8006302:	2300      	movs	r3, #0
 8006304:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006306:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 800630a:	460b      	mov	r3, r1
 800630c:	4313      	orrs	r3, r2
 800630e:	d009      	beq.n	8006324 <HAL_RCCEx_PeriphCLKConfig+0x1244>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8006310:	4b77      	ldr	r3, [pc, #476]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006312:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006314:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8006318:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800631c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800631e:	4a74      	ldr	r2, [pc, #464]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006320:	430b      	orrs	r3, r1
 8006322:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006324:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006328:	e9d3 2300 	ldrd	r2, r3, [r3]
 800632c:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8006330:	633b      	str	r3, [r7, #48]	; 0x30
 8006332:	2300      	movs	r3, #0
 8006334:	637b      	str	r3, [r7, #52]	; 0x34
 8006336:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 800633a:	460b      	mov	r3, r1
 800633c:	4313      	orrs	r3, r2
 800633e:	d00a      	beq.n	8006356 <HAL_RCCEx_PeriphCLKConfig+0x1276>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006340:	4b6b      	ldr	r3, [pc, #428]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006342:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006344:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 8006348:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800634c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006350:	4a67      	ldr	r2, [pc, #412]	; (80064f0 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006352:	430b      	orrs	r3, r1
 8006354:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8006356:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800635a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635e:	2100      	movs	r1, #0
 8006360:	62b9      	str	r1, [r7, #40]	; 0x28
 8006362:	f003 0301 	and.w	r3, r3, #1
 8006366:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006368:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 800636c:	460b      	mov	r3, r1
 800636e:	4313      	orrs	r3, r2
 8006370:	d011      	beq.n	8006396 <HAL_RCCEx_PeriphCLKConfig+0x12b6>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006372:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006376:	3308      	adds	r3, #8
 8006378:	2100      	movs	r1, #0
 800637a:	4618      	mov	r0, r3
 800637c:	f000 fb78 	bl	8006a70 <RCCEx_PLL2_Config>
 8006380:	4603      	mov	r3, r0
 8006382:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 8006386:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800638a:	2b00      	cmp	r3, #0
 800638c:	d003      	beq.n	8006396 <HAL_RCCEx_PeriphCLKConfig+0x12b6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800638e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006392:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8006396:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800639a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800639e:	2100      	movs	r1, #0
 80063a0:	6239      	str	r1, [r7, #32]
 80063a2:	f003 0302 	and.w	r3, r3, #2
 80063a6:	627b      	str	r3, [r7, #36]	; 0x24
 80063a8:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80063ac:	460b      	mov	r3, r1
 80063ae:	4313      	orrs	r3, r2
 80063b0:	d011      	beq.n	80063d6 <HAL_RCCEx_PeriphCLKConfig+0x12f6>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80063b2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80063b6:	3308      	adds	r3, #8
 80063b8:	2101      	movs	r1, #1
 80063ba:	4618      	mov	r0, r3
 80063bc:	f000 fb58 	bl	8006a70 <RCCEx_PLL2_Config>
 80063c0:	4603      	mov	r3, r0
 80063c2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 80063c6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80063ca:	2b00      	cmp	r3, #0
 80063cc:	d003      	beq.n	80063d6 <HAL_RCCEx_PeriphCLKConfig+0x12f6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80063ce:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80063d2:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 80063d6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80063da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063de:	2100      	movs	r1, #0
 80063e0:	61b9      	str	r1, [r7, #24]
 80063e2:	f003 0304 	and.w	r3, r3, #4
 80063e6:	61fb      	str	r3, [r7, #28]
 80063e8:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 80063ec:	460b      	mov	r3, r1
 80063ee:	4313      	orrs	r3, r2
 80063f0:	d011      	beq.n	8006416 <HAL_RCCEx_PeriphCLKConfig+0x1336>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80063f2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80063f6:	3308      	adds	r3, #8
 80063f8:	2102      	movs	r1, #2
 80063fa:	4618      	mov	r0, r3
 80063fc:	f000 fb38 	bl	8006a70 <RCCEx_PLL2_Config>
 8006400:	4603      	mov	r3, r0
 8006402:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 8006406:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800640a:	2b00      	cmp	r3, #0
 800640c:	d003      	beq.n	8006416 <HAL_RCCEx_PeriphCLKConfig+0x1336>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800640e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006412:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8006416:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800641a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800641e:	2100      	movs	r1, #0
 8006420:	6139      	str	r1, [r7, #16]
 8006422:	f003 0308 	and.w	r3, r3, #8
 8006426:	617b      	str	r3, [r7, #20]
 8006428:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800642c:	460b      	mov	r3, r1
 800642e:	4313      	orrs	r3, r2
 8006430:	d011      	beq.n	8006456 <HAL_RCCEx_PeriphCLKConfig+0x1376>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006432:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006436:	3328      	adds	r3, #40	; 0x28
 8006438:	2100      	movs	r1, #0
 800643a:	4618      	mov	r0, r3
 800643c:	f000 fbca 	bl	8006bd4 <RCCEx_PLL3_Config>
 8006440:	4603      	mov	r3, r0
 8006442:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
  
    if (ret == HAL_OK)
 8006446:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800644a:	2b00      	cmp	r3, #0
 800644c:	d003      	beq.n	8006456 <HAL_RCCEx_PeriphCLKConfig+0x1376>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800644e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006452:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8006456:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800645a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800645e:	2100      	movs	r1, #0
 8006460:	60b9      	str	r1, [r7, #8]
 8006462:	f003 0310 	and.w	r3, r3, #16
 8006466:	60fb      	str	r3, [r7, #12]
 8006468:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 800646c:	460b      	mov	r3, r1
 800646e:	4313      	orrs	r3, r2
 8006470:	d011      	beq.n	8006496 <HAL_RCCEx_PeriphCLKConfig+0x13b6>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8006472:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8006476:	3328      	adds	r3, #40	; 0x28
 8006478:	2101      	movs	r1, #1
 800647a:	4618      	mov	r0, r3
 800647c:	f000 fbaa 	bl	8006bd4 <RCCEx_PLL3_Config>
 8006480:	4603      	mov	r3, r0
 8006482:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 8006486:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800648a:	2b00      	cmp	r3, #0
 800648c:	d003      	beq.n	8006496 <HAL_RCCEx_PeriphCLKConfig+0x13b6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 800648e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8006492:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8006496:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800649a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800649e:	2100      	movs	r1, #0
 80064a0:	6039      	str	r1, [r7, #0]
 80064a2:	f003 0320 	and.w	r3, r3, #32
 80064a6:	607b      	str	r3, [r7, #4]
 80064a8:	e9d7 1200 	ldrd	r1, r2, [r7]
 80064ac:	460b      	mov	r3, r1
 80064ae:	4313      	orrs	r3, r2
 80064b0:	d011      	beq.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x13f6>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80064b2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80064b6:	3328      	adds	r3, #40	; 0x28
 80064b8:	2102      	movs	r1, #2
 80064ba:	4618      	mov	r0, r3
 80064bc:	f000 fb8a 	bl	8006bd4 <RCCEx_PLL3_Config>
 80064c0:	4603      	mov	r3, r0
 80064c2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 80064c6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d003      	beq.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x13f6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80064ce:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80064d2:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    } 
  }

  if (status == HAL_OK)
 80064d6:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 80064da:	2b00      	cmp	r3, #0
 80064dc:	d101      	bne.n	80064e2 <HAL_RCCEx_PeriphCLKConfig+0x1402>
  {
    return HAL_OK;
 80064de:	2300      	movs	r3, #0
 80064e0:	e000      	b.n	80064e4 <HAL_RCCEx_PeriphCLKConfig+0x1404>
  }
  return HAL_ERROR;
 80064e2:	2301      	movs	r3, #1
}
 80064e4:	4618      	mov	r0, r3
 80064e6:	f507 7794 	add.w	r7, r7, #296	; 0x128
 80064ea:	46bd      	mov	sp, r7
 80064ec:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80064f0:	58024400 	.word	0x58024400

080064f4 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 80064f4:	b580      	push	{r7, lr}
 80064f6:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 80064f8:	f7fe fd96 	bl	8005028 <HAL_RCC_GetHCLKFreq>
 80064fc:	4602      	mov	r2, r0
 80064fe:	4b06      	ldr	r3, [pc, #24]	; (8006518 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8006500:	6a1b      	ldr	r3, [r3, #32]
 8006502:	091b      	lsrs	r3, r3, #4
 8006504:	f003 0307 	and.w	r3, r3, #7
 8006508:	4904      	ldr	r1, [pc, #16]	; (800651c <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 800650a:	5ccb      	ldrb	r3, [r1, r3]
 800650c:	f003 031f 	and.w	r3, r3, #31
 8006510:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8006514:	4618      	mov	r0, r3
 8006516:	bd80      	pop	{r7, pc}
 8006518:	58024400 	.word	0x58024400
 800651c:	080253a8 	.word	0x080253a8

08006520 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8006520:	b480      	push	{r7}
 8006522:	b089      	sub	sp, #36	; 0x24
 8006524:	af00      	add	r7, sp, #0
 8006526:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006528:	4ba1      	ldr	r3, [pc, #644]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800652a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800652c:	f003 0303 	and.w	r3, r3, #3
 8006530:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 8006532:	4b9f      	ldr	r3, [pc, #636]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006534:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006536:	0b1b      	lsrs	r3, r3, #12
 8006538:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800653c:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 800653e:	4b9c      	ldr	r3, [pc, #624]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006542:	091b      	lsrs	r3, r3, #4
 8006544:	f003 0301 	and.w	r3, r3, #1
 8006548:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 800654a:	4b99      	ldr	r3, [pc, #612]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800654c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800654e:	08db      	lsrs	r3, r3, #3
 8006550:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006554:	693a      	ldr	r2, [r7, #16]
 8006556:	fb02 f303 	mul.w	r3, r2, r3
 800655a:	ee07 3a90 	vmov	s15, r3
 800655e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006562:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8006566:	697b      	ldr	r3, [r7, #20]
 8006568:	2b00      	cmp	r3, #0
 800656a:	f000 8111 	beq.w	8006790 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 800656e:	69bb      	ldr	r3, [r7, #24]
 8006570:	2b02      	cmp	r3, #2
 8006572:	f000 8083 	beq.w	800667c <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8006576:	69bb      	ldr	r3, [r7, #24]
 8006578:	2b02      	cmp	r3, #2
 800657a:	f200 80a1 	bhi.w	80066c0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800657e:	69bb      	ldr	r3, [r7, #24]
 8006580:	2b00      	cmp	r3, #0
 8006582:	d003      	beq.n	800658c <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8006584:	69bb      	ldr	r3, [r7, #24]
 8006586:	2b01      	cmp	r3, #1
 8006588:	d056      	beq.n	8006638 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 800658a:	e099      	b.n	80066c0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800658c:	4b88      	ldr	r3, [pc, #544]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	f003 0320 	and.w	r3, r3, #32
 8006594:	2b00      	cmp	r3, #0
 8006596:	d02d      	beq.n	80065f4 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006598:	4b85      	ldr	r3, [pc, #532]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800659a:	681b      	ldr	r3, [r3, #0]
 800659c:	08db      	lsrs	r3, r3, #3
 800659e:	f003 0303 	and.w	r3, r3, #3
 80065a2:	4a84      	ldr	r2, [pc, #528]	; (80067b4 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 80065a4:	fa22 f303 	lsr.w	r3, r2, r3
 80065a8:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80065aa:	68bb      	ldr	r3, [r7, #8]
 80065ac:	ee07 3a90 	vmov	s15, r3
 80065b0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80065b4:	697b      	ldr	r3, [r7, #20]
 80065b6:	ee07 3a90 	vmov	s15, r3
 80065ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80065be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80065c2:	4b7b      	ldr	r3, [pc, #492]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80065c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80065c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80065ca:	ee07 3a90 	vmov	s15, r3
 80065ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80065d2:	ed97 6a03 	vldr	s12, [r7, #12]
 80065d6:	eddf 5a78 	vldr	s11, [pc, #480]	; 80067b8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80065da:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80065de:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80065e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80065e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80065ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80065ee:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 80065f2:	e087      	b.n	8006704 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80065f4:	697b      	ldr	r3, [r7, #20]
 80065f6:	ee07 3a90 	vmov	s15, r3
 80065fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80065fe:	eddf 6a6f 	vldr	s13, [pc, #444]	; 80067bc <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8006602:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006606:	4b6a      	ldr	r3, [pc, #424]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006608:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800660a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800660e:	ee07 3a90 	vmov	s15, r3
 8006612:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006616:	ed97 6a03 	vldr	s12, [r7, #12]
 800661a:	eddf 5a67 	vldr	s11, [pc, #412]	; 80067b8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800661e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006622:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006626:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800662a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800662e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006632:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8006636:	e065      	b.n	8006704 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8006638:	697b      	ldr	r3, [r7, #20]
 800663a:	ee07 3a90 	vmov	s15, r3
 800663e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006642:	eddf 6a5f 	vldr	s13, [pc, #380]	; 80067c0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8006646:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800664a:	4b59      	ldr	r3, [pc, #356]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800664c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800664e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006652:	ee07 3a90 	vmov	s15, r3
 8006656:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800665a:	ed97 6a03 	vldr	s12, [r7, #12]
 800665e:	eddf 5a56 	vldr	s11, [pc, #344]	; 80067b8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006662:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006666:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800666a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800666e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006672:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006676:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800667a:	e043      	b.n	8006704 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 800667c:	697b      	ldr	r3, [r7, #20]
 800667e:	ee07 3a90 	vmov	s15, r3
 8006682:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006686:	eddf 6a4f 	vldr	s13, [pc, #316]	; 80067c4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800668a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800668e:	4b48      	ldr	r3, [pc, #288]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006690:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006692:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006696:	ee07 3a90 	vmov	s15, r3
 800669a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800669e:	ed97 6a03 	vldr	s12, [r7, #12]
 80066a2:	eddf 5a45 	vldr	s11, [pc, #276]	; 80067b8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80066a6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80066aa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80066ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80066b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80066b6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80066ba:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80066be:	e021      	b.n	8006704 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80066c0:	697b      	ldr	r3, [r7, #20]
 80066c2:	ee07 3a90 	vmov	s15, r3
 80066c6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80066ca:	eddf 6a3d 	vldr	s13, [pc, #244]	; 80067c0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 80066ce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80066d2:	4b37      	ldr	r3, [pc, #220]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80066d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80066da:	ee07 3a90 	vmov	s15, r3
 80066de:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80066e2:	ed97 6a03 	vldr	s12, [r7, #12]
 80066e6:	eddf 5a34 	vldr	s11, [pc, #208]	; 80067b8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80066ea:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80066ee:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80066f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80066f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80066fa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80066fe:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8006702:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8006704:	4b2a      	ldr	r3, [pc, #168]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006706:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006708:	0a5b      	lsrs	r3, r3, #9
 800670a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800670e:	ee07 3a90 	vmov	s15, r3
 8006712:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006716:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800671a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800671e:	edd7 6a07 	vldr	s13, [r7, #28]
 8006722:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006726:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800672a:	ee17 2a90 	vmov	r2, s15
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8006732:	4b1f      	ldr	r3, [pc, #124]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006734:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006736:	0c1b      	lsrs	r3, r3, #16
 8006738:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800673c:	ee07 3a90 	vmov	s15, r3
 8006740:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006744:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8006748:	ee37 7a87 	vadd.f32	s14, s15, s14
 800674c:	edd7 6a07 	vldr	s13, [r7, #28]
 8006750:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006754:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006758:	ee17 2a90 	vmov	r2, s15
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8006760:	4b13      	ldr	r3, [pc, #76]	; (80067b0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006762:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006764:	0e1b      	lsrs	r3, r3, #24
 8006766:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800676a:	ee07 3a90 	vmov	s15, r3
 800676e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006772:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8006776:	ee37 7a87 	vadd.f32	s14, s15, s14
 800677a:	edd7 6a07 	vldr	s13, [r7, #28]
 800677e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006782:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006786:	ee17 2a90 	vmov	r2, s15
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 800678e:	e008      	b.n	80067a2 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	2200      	movs	r2, #0
 8006794:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	2200      	movs	r2, #0
 800679a:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	2200      	movs	r2, #0
 80067a0:	609a      	str	r2, [r3, #8]
}
 80067a2:	bf00      	nop
 80067a4:	3724      	adds	r7, #36	; 0x24
 80067a6:	46bd      	mov	sp, r7
 80067a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ac:	4770      	bx	lr
 80067ae:	bf00      	nop
 80067b0:	58024400 	.word	0x58024400
 80067b4:	03d09000 	.word	0x03d09000
 80067b8:	46000000 	.word	0x46000000
 80067bc:	4c742400 	.word	0x4c742400
 80067c0:	4a742400 	.word	0x4a742400
 80067c4:	4bbebc20 	.word	0x4bbebc20

080067c8 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 80067c8:	b480      	push	{r7}
 80067ca:	b089      	sub	sp, #36	; 0x24
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80067d0:	4ba1      	ldr	r3, [pc, #644]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80067d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80067d4:	f003 0303 	and.w	r3, r3, #3
 80067d8:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 80067da:	4b9f      	ldr	r3, [pc, #636]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80067dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80067de:	0d1b      	lsrs	r3, r3, #20
 80067e0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80067e4:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 80067e6:	4b9c      	ldr	r3, [pc, #624]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80067e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80067ea:	0a1b      	lsrs	r3, r3, #8
 80067ec:	f003 0301 	and.w	r3, r3, #1
 80067f0:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 80067f2:	4b99      	ldr	r3, [pc, #612]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80067f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067f6:	08db      	lsrs	r3, r3, #3
 80067f8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80067fc:	693a      	ldr	r2, [r7, #16]
 80067fe:	fb02 f303 	mul.w	r3, r2, r3
 8006802:	ee07 3a90 	vmov	s15, r3
 8006806:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800680a:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 800680e:	697b      	ldr	r3, [r7, #20]
 8006810:	2b00      	cmp	r3, #0
 8006812:	f000 8111 	beq.w	8006a38 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 8006816:	69bb      	ldr	r3, [r7, #24]
 8006818:	2b02      	cmp	r3, #2
 800681a:	f000 8083 	beq.w	8006924 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800681e:	69bb      	ldr	r3, [r7, #24]
 8006820:	2b02      	cmp	r3, #2
 8006822:	f200 80a1 	bhi.w	8006968 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8006826:	69bb      	ldr	r3, [r7, #24]
 8006828:	2b00      	cmp	r3, #0
 800682a:	d003      	beq.n	8006834 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800682c:	69bb      	ldr	r3, [r7, #24]
 800682e:	2b01      	cmp	r3, #1
 8006830:	d056      	beq.n	80068e0 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8006832:	e099      	b.n	8006968 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006834:	4b88      	ldr	r3, [pc, #544]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	f003 0320 	and.w	r3, r3, #32
 800683c:	2b00      	cmp	r3, #0
 800683e:	d02d      	beq.n	800689c <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006840:	4b85      	ldr	r3, [pc, #532]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	08db      	lsrs	r3, r3, #3
 8006846:	f003 0303 	and.w	r3, r3, #3
 800684a:	4a84      	ldr	r2, [pc, #528]	; (8006a5c <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800684c:	fa22 f303 	lsr.w	r3, r2, r3
 8006850:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8006852:	68bb      	ldr	r3, [r7, #8]
 8006854:	ee07 3a90 	vmov	s15, r3
 8006858:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800685c:	697b      	ldr	r3, [r7, #20]
 800685e:	ee07 3a90 	vmov	s15, r3
 8006862:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006866:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800686a:	4b7b      	ldr	r3, [pc, #492]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800686c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800686e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006872:	ee07 3a90 	vmov	s15, r3
 8006876:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800687a:	ed97 6a03 	vldr	s12, [r7, #12]
 800687e:	eddf 5a78 	vldr	s11, [pc, #480]	; 8006a60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8006882:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006886:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800688a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800688e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006892:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006896:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800689a:	e087      	b.n	80069ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800689c:	697b      	ldr	r3, [r7, #20]
 800689e:	ee07 3a90 	vmov	s15, r3
 80068a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80068a6:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8006a64 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 80068aa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80068ae:	4b6a      	ldr	r3, [pc, #424]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80068b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80068b6:	ee07 3a90 	vmov	s15, r3
 80068ba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80068be:	ed97 6a03 	vldr	s12, [r7, #12]
 80068c2:	eddf 5a67 	vldr	s11, [pc, #412]	; 8006a60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80068c6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80068ca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80068ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80068d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80068d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80068da:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80068de:	e065      	b.n	80069ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 80068e0:	697b      	ldr	r3, [r7, #20]
 80068e2:	ee07 3a90 	vmov	s15, r3
 80068e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80068ea:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8006a68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 80068ee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80068f2:	4b59      	ldr	r3, [pc, #356]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80068f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80068fa:	ee07 3a90 	vmov	s15, r3
 80068fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006902:	ed97 6a03 	vldr	s12, [r7, #12]
 8006906:	eddf 5a56 	vldr	s11, [pc, #344]	; 8006a60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800690a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800690e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006912:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8006916:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800691a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800691e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8006922:	e043      	b.n	80069ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8006924:	697b      	ldr	r3, [r7, #20]
 8006926:	ee07 3a90 	vmov	s15, r3
 800692a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800692e:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8006a6c <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8006932:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006936:	4b48      	ldr	r3, [pc, #288]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006938:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800693a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800693e:	ee07 3a90 	vmov	s15, r3
 8006942:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006946:	ed97 6a03 	vldr	s12, [r7, #12]
 800694a:	eddf 5a45 	vldr	s11, [pc, #276]	; 8006a60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800694e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006952:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006956:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800695a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800695e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006962:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8006966:	e021      	b.n	80069ac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8006968:	697b      	ldr	r3, [r7, #20]
 800696a:	ee07 3a90 	vmov	s15, r3
 800696e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006972:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8006a68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8006976:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800697a:	4b37      	ldr	r3, [pc, #220]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800697c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800697e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006982:	ee07 3a90 	vmov	s15, r3
 8006986:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800698a:	ed97 6a03 	vldr	s12, [r7, #12]
 800698e:	eddf 5a34 	vldr	s11, [pc, #208]	; 8006a60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8006992:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006996:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800699a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800699e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80069a2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80069a6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80069aa:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 80069ac:	4b2a      	ldr	r3, [pc, #168]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80069ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069b0:	0a5b      	lsrs	r3, r3, #9
 80069b2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80069b6:	ee07 3a90 	vmov	s15, r3
 80069ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80069be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80069c2:	ee37 7a87 	vadd.f32	s14, s15, s14
 80069c6:	edd7 6a07 	vldr	s13, [r7, #28]
 80069ca:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80069ce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80069d2:	ee17 2a90 	vmov	r2, s15
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 80069da:	4b1f      	ldr	r3, [pc, #124]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80069dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069de:	0c1b      	lsrs	r3, r3, #16
 80069e0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80069e4:	ee07 3a90 	vmov	s15, r3
 80069e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80069ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80069f0:	ee37 7a87 	vadd.f32	s14, s15, s14
 80069f4:	edd7 6a07 	vldr	s13, [r7, #28]
 80069f8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80069fc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006a00:	ee17 2a90 	vmov	r2, s15
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 8006a08:	4b13      	ldr	r3, [pc, #76]	; (8006a58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006a0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a0c:	0e1b      	lsrs	r3, r3, #24
 8006a0e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006a12:	ee07 3a90 	vmov	s15, r3
 8006a16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006a1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8006a1e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8006a22:	edd7 6a07 	vldr	s13, [r7, #28]
 8006a26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006a2a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006a2e:	ee17 2a90 	vmov	r2, s15
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 8006a36:	e008      	b.n	8006a4a <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	2200      	movs	r2, #0
 8006a3c:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	2200      	movs	r2, #0
 8006a42:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	2200      	movs	r2, #0
 8006a48:	609a      	str	r2, [r3, #8]
}
 8006a4a:	bf00      	nop
 8006a4c:	3724      	adds	r7, #36	; 0x24
 8006a4e:	46bd      	mov	sp, r7
 8006a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a54:	4770      	bx	lr
 8006a56:	bf00      	nop
 8006a58:	58024400 	.word	0x58024400
 8006a5c:	03d09000 	.word	0x03d09000
 8006a60:	46000000 	.word	0x46000000
 8006a64:	4c742400 	.word	0x4c742400
 8006a68:	4a742400 	.word	0x4a742400
 8006a6c:	4bbebc20 	.word	0x4bbebc20

08006a70 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8006a70:	b580      	push	{r7, lr}
 8006a72:	b084      	sub	sp, #16
 8006a74:	af00      	add	r7, sp, #0
 8006a76:	6078      	str	r0, [r7, #4]
 8006a78:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8006a7a:	2300      	movs	r3, #0
 8006a7c:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006a7e:	4b53      	ldr	r3, [pc, #332]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006a80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006a82:	f003 0303 	and.w	r3, r3, #3
 8006a86:	2b03      	cmp	r3, #3
 8006a88:	d101      	bne.n	8006a8e <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 8006a8a:	2301      	movs	r3, #1
 8006a8c:	e099      	b.n	8006bc2 <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8006a8e:	4b4f      	ldr	r3, [pc, #316]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006a90:	681b      	ldr	r3, [r3, #0]
 8006a92:	4a4e      	ldr	r2, [pc, #312]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006a94:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8006a98:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006a9a:	f7fa ffff 	bl	8001a9c <HAL_GetTick>
 8006a9e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8006aa0:	e008      	b.n	8006ab4 <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8006aa2:	f7fa fffb 	bl	8001a9c <HAL_GetTick>
 8006aa6:	4602      	mov	r2, r0
 8006aa8:	68bb      	ldr	r3, [r7, #8]
 8006aaa:	1ad3      	subs	r3, r2, r3
 8006aac:	2b02      	cmp	r3, #2
 8006aae:	d901      	bls.n	8006ab4 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 8006ab0:	2303      	movs	r3, #3
 8006ab2:	e086      	b.n	8006bc2 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8006ab4:	4b45      	ldr	r3, [pc, #276]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d1f0      	bne.n	8006aa2 <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8006ac0:	4b42      	ldr	r3, [pc, #264]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006ac2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ac4:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	031b      	lsls	r3, r3, #12
 8006ace:	493f      	ldr	r1, [pc, #252]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006ad0:	4313      	orrs	r3, r2
 8006ad2:	628b      	str	r3, [r1, #40]	; 0x28
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	685b      	ldr	r3, [r3, #4]
 8006ad8:	3b01      	subs	r3, #1
 8006ada:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	689b      	ldr	r3, [r3, #8]
 8006ae2:	3b01      	subs	r3, #1
 8006ae4:	025b      	lsls	r3, r3, #9
 8006ae6:	b29b      	uxth	r3, r3
 8006ae8:	431a      	orrs	r2, r3
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	68db      	ldr	r3, [r3, #12]
 8006aee:	3b01      	subs	r3, #1
 8006af0:	041b      	lsls	r3, r3, #16
 8006af2:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8006af6:	431a      	orrs	r2, r3
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	691b      	ldr	r3, [r3, #16]
 8006afc:	3b01      	subs	r3, #1
 8006afe:	061b      	lsls	r3, r3, #24
 8006b00:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8006b04:	4931      	ldr	r1, [pc, #196]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b06:	4313      	orrs	r3, r2
 8006b08:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8006b0a:	4b30      	ldr	r3, [pc, #192]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b0e:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	695b      	ldr	r3, [r3, #20]
 8006b16:	492d      	ldr	r1, [pc, #180]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b18:	4313      	orrs	r3, r2
 8006b1a:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8006b1c:	4b2b      	ldr	r3, [pc, #172]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b20:	f023 0220 	bic.w	r2, r3, #32
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	699b      	ldr	r3, [r3, #24]
 8006b28:	4928      	ldr	r1, [pc, #160]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b2a:	4313      	orrs	r3, r2
 8006b2c:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8006b2e:	4b27      	ldr	r3, [pc, #156]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b32:	4a26      	ldr	r2, [pc, #152]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b34:	f023 0310 	bic.w	r3, r3, #16
 8006b38:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8006b3a:	4b24      	ldr	r3, [pc, #144]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b3c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006b3e:	4b24      	ldr	r3, [pc, #144]	; (8006bd0 <RCCEx_PLL2_Config+0x160>)
 8006b40:	4013      	ands	r3, r2
 8006b42:	687a      	ldr	r2, [r7, #4]
 8006b44:	69d2      	ldr	r2, [r2, #28]
 8006b46:	00d2      	lsls	r2, r2, #3
 8006b48:	4920      	ldr	r1, [pc, #128]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b4a:	4313      	orrs	r3, r2
 8006b4c:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 8006b4e:	4b1f      	ldr	r3, [pc, #124]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b52:	4a1e      	ldr	r2, [pc, #120]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b54:	f043 0310 	orr.w	r3, r3, #16
 8006b58:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 8006b5a:	683b      	ldr	r3, [r7, #0]
 8006b5c:	2b00      	cmp	r3, #0
 8006b5e:	d106      	bne.n	8006b6e <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8006b60:	4b1a      	ldr	r3, [pc, #104]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b64:	4a19      	ldr	r2, [pc, #100]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b66:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8006b6a:	62d3      	str	r3, [r2, #44]	; 0x2c
 8006b6c:	e00f      	b.n	8006b8e <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 8006b6e:	683b      	ldr	r3, [r7, #0]
 8006b70:	2b01      	cmp	r3, #1
 8006b72:	d106      	bne.n	8006b82 <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8006b74:	4b15      	ldr	r3, [pc, #84]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b78:	4a14      	ldr	r2, [pc, #80]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b7a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006b7e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8006b80:	e005      	b.n	8006b8e <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8006b82:	4b12      	ldr	r3, [pc, #72]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b86:	4a11      	ldr	r2, [pc, #68]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b88:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006b8c:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8006b8e:	4b0f      	ldr	r3, [pc, #60]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	4a0e      	ldr	r2, [pc, #56]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006b94:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006b98:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006b9a:	f7fa ff7f 	bl	8001a9c <HAL_GetTick>
 8006b9e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8006ba0:	e008      	b.n	8006bb4 <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8006ba2:	f7fa ff7b 	bl	8001a9c <HAL_GetTick>
 8006ba6:	4602      	mov	r2, r0
 8006ba8:	68bb      	ldr	r3, [r7, #8]
 8006baa:	1ad3      	subs	r3, r2, r3
 8006bac:	2b02      	cmp	r3, #2
 8006bae:	d901      	bls.n	8006bb4 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 8006bb0:	2303      	movs	r3, #3
 8006bb2:	e006      	b.n	8006bc2 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8006bb4:	4b05      	ldr	r3, [pc, #20]	; (8006bcc <RCCEx_PLL2_Config+0x15c>)
 8006bb6:	681b      	ldr	r3, [r3, #0]
 8006bb8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d0f0      	beq.n	8006ba2 <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 8006bc0:	7bfb      	ldrb	r3, [r7, #15]
}
 8006bc2:	4618      	mov	r0, r3
 8006bc4:	3710      	adds	r7, #16
 8006bc6:	46bd      	mov	sp, r7
 8006bc8:	bd80      	pop	{r7, pc}
 8006bca:	bf00      	nop
 8006bcc:	58024400 	.word	0x58024400
 8006bd0:	ffff0007 	.word	0xffff0007

08006bd4 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 8006bd4:	b580      	push	{r7, lr}
 8006bd6:	b084      	sub	sp, #16
 8006bd8:	af00      	add	r7, sp, #0
 8006bda:	6078      	str	r0, [r7, #4]
 8006bdc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8006bde:	2300      	movs	r3, #0
 8006be0:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8006be2:	4b53      	ldr	r3, [pc, #332]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006be4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006be6:	f003 0303 	and.w	r3, r3, #3
 8006bea:	2b03      	cmp	r3, #3
 8006bec:	d101      	bne.n	8006bf2 <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 8006bee:	2301      	movs	r3, #1
 8006bf0:	e099      	b.n	8006d26 <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8006bf2:	4b4f      	ldr	r3, [pc, #316]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	4a4e      	ldr	r2, [pc, #312]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006bf8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006bfc:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006bfe:	f7fa ff4d 	bl	8001a9c <HAL_GetTick>
 8006c02:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8006c04:	e008      	b.n	8006c18 <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8006c06:	f7fa ff49 	bl	8001a9c <HAL_GetTick>
 8006c0a:	4602      	mov	r2, r0
 8006c0c:	68bb      	ldr	r3, [r7, #8]
 8006c0e:	1ad3      	subs	r3, r2, r3
 8006c10:	2b02      	cmp	r3, #2
 8006c12:	d901      	bls.n	8006c18 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 8006c14:	2303      	movs	r3, #3
 8006c16:	e086      	b.n	8006d26 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8006c18:	4b45      	ldr	r3, [pc, #276]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006c20:	2b00      	cmp	r3, #0
 8006c22:	d1f0      	bne.n	8006c06 <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 8006c24:	4b42      	ldr	r3, [pc, #264]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c28:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	051b      	lsls	r3, r3, #20
 8006c32:	493f      	ldr	r1, [pc, #252]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c34:	4313      	orrs	r3, r2
 8006c36:	628b      	str	r3, [r1, #40]	; 0x28
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	685b      	ldr	r3, [r3, #4]
 8006c3c:	3b01      	subs	r3, #1
 8006c3e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	689b      	ldr	r3, [r3, #8]
 8006c46:	3b01      	subs	r3, #1
 8006c48:	025b      	lsls	r3, r3, #9
 8006c4a:	b29b      	uxth	r3, r3
 8006c4c:	431a      	orrs	r2, r3
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	68db      	ldr	r3, [r3, #12]
 8006c52:	3b01      	subs	r3, #1
 8006c54:	041b      	lsls	r3, r3, #16
 8006c56:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8006c5a:	431a      	orrs	r2, r3
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	691b      	ldr	r3, [r3, #16]
 8006c60:	3b01      	subs	r3, #1
 8006c62:	061b      	lsls	r3, r3, #24
 8006c64:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8006c68:	4931      	ldr	r1, [pc, #196]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c6a:	4313      	orrs	r3, r2
 8006c6c:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8006c6e:	4b30      	ldr	r3, [pc, #192]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c72:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	695b      	ldr	r3, [r3, #20]
 8006c7a:	492d      	ldr	r1, [pc, #180]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c7c:	4313      	orrs	r3, r2
 8006c7e:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8006c80:	4b2b      	ldr	r3, [pc, #172]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c84:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	699b      	ldr	r3, [r3, #24]
 8006c8c:	4928      	ldr	r1, [pc, #160]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c8e:	4313      	orrs	r3, r2
 8006c90:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8006c92:	4b27      	ldr	r3, [pc, #156]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c96:	4a26      	ldr	r2, [pc, #152]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006c98:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006c9c:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8006c9e:	4b24      	ldr	r3, [pc, #144]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006ca0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006ca2:	4b24      	ldr	r3, [pc, #144]	; (8006d34 <RCCEx_PLL3_Config+0x160>)
 8006ca4:	4013      	ands	r3, r2
 8006ca6:	687a      	ldr	r2, [r7, #4]
 8006ca8:	69d2      	ldr	r2, [r2, #28]
 8006caa:	00d2      	lsls	r2, r2, #3
 8006cac:	4920      	ldr	r1, [pc, #128]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cae:	4313      	orrs	r3, r2
 8006cb0:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8006cb2:	4b1f      	ldr	r3, [pc, #124]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006cb6:	4a1e      	ldr	r2, [pc, #120]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cb8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006cbc:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 8006cbe:	683b      	ldr	r3, [r7, #0]
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	d106      	bne.n	8006cd2 <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8006cc4:	4b1a      	ldr	r3, [pc, #104]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006cc8:	4a19      	ldr	r2, [pc, #100]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cca:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006cce:	62d3      	str	r3, [r2, #44]	; 0x2c
 8006cd0:	e00f      	b.n	8006cf2 <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 8006cd2:	683b      	ldr	r3, [r7, #0]
 8006cd4:	2b01      	cmp	r3, #1
 8006cd6:	d106      	bne.n	8006ce6 <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 8006cd8:	4b15      	ldr	r3, [pc, #84]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006cdc:	4a14      	ldr	r2, [pc, #80]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cde:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8006ce2:	62d3      	str	r3, [r2, #44]	; 0x2c
 8006ce4:	e005      	b.n	8006cf2 <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8006ce6:	4b12      	ldr	r3, [pc, #72]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006ce8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006cea:	4a11      	ldr	r2, [pc, #68]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8006cf0:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8006cf2:	4b0f      	ldr	r3, [pc, #60]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	4a0e      	ldr	r2, [pc, #56]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006cf8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006cfc:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006cfe:	f7fa fecd 	bl	8001a9c <HAL_GetTick>
 8006d02:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8006d04:	e008      	b.n	8006d18 <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8006d06:	f7fa fec9 	bl	8001a9c <HAL_GetTick>
 8006d0a:	4602      	mov	r2, r0
 8006d0c:	68bb      	ldr	r3, [r7, #8]
 8006d0e:	1ad3      	subs	r3, r2, r3
 8006d10:	2b02      	cmp	r3, #2
 8006d12:	d901      	bls.n	8006d18 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 8006d14:	2303      	movs	r3, #3
 8006d16:	e006      	b.n	8006d26 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8006d18:	4b05      	ldr	r3, [pc, #20]	; (8006d30 <RCCEx_PLL3_Config+0x15c>)
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006d20:	2b00      	cmp	r3, #0
 8006d22:	d0f0      	beq.n	8006d06 <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 8006d24:	7bfb      	ldrb	r3, [r7, #15]
}
 8006d26:	4618      	mov	r0, r3
 8006d28:	3710      	adds	r7, #16
 8006d2a:	46bd      	mov	sp, r7
 8006d2c:	bd80      	pop	{r7, pc}
 8006d2e:	bf00      	nop
 8006d30:	58024400 	.word	0x58024400
 8006d34:	ffff0007 	.word	0xffff0007

08006d38 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006d38:	b580      	push	{r7, lr}
 8006d3a:	b082      	sub	sp, #8
 8006d3c:	af00      	add	r7, sp, #0
 8006d3e:	6078      	str	r0, [r7, #4]
 8006d40:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2b00      	cmp	r3, #0
 8006d46:	d101      	bne.n	8006d4c <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8006d48:	2301      	movs	r3, #1
 8006d4a:	e02b      	b.n	8006da4 <HAL_SDRAM_Init+0x6c>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006d52:	b2db      	uxtb	r3, r3
 8006d54:	2b00      	cmp	r3, #0
 8006d56:	d106      	bne.n	8006d66 <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	2200      	movs	r2, #0
 8006d5c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006d60:	6878      	ldr	r0, [r7, #4]
 8006d62:	f7fa fc53 	bl	800160c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	2202      	movs	r2, #2
 8006d6a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681a      	ldr	r2, [r3, #0]
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	3304      	adds	r3, #4
 8006d76:	4619      	mov	r1, r3
 8006d78:	4610      	mov	r0, r2
 8006d7a:	f003 fb59 	bl	800a430 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	6818      	ldr	r0, [r3, #0]
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	685b      	ldr	r3, [r3, #4]
 8006d86:	461a      	mov	r2, r3
 8006d88:	6839      	ldr	r1, [r7, #0]
 8006d8a:	f003 fbad 	bl	800a4e8 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 8006d8e:	4b07      	ldr	r3, [pc, #28]	; (8006dac <HAL_SDRAM_Init+0x74>)
 8006d90:	681b      	ldr	r3, [r3, #0]
 8006d92:	4a06      	ldr	r2, [pc, #24]	; (8006dac <HAL_SDRAM_Init+0x74>)
 8006d94:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8006d98:	6013      	str	r3, [r2, #0]
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	2201      	movs	r2, #1
 8006d9e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  return HAL_OK;
 8006da2:	2300      	movs	r3, #0
}
 8006da4:	4618      	mov	r0, r3
 8006da6:	3708      	adds	r7, #8
 8006da8:	46bd      	mov	sp, r7
 8006daa:	bd80      	pop	{r7, pc}
 8006dac:	52004000 	.word	0x52004000

08006db0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006db0:	b580      	push	{r7, lr}
 8006db2:	b086      	sub	sp, #24
 8006db4:	af00      	add	r7, sp, #0
 8006db6:	60f8      	str	r0, [r7, #12]
 8006db8:	60b9      	str	r1, [r7, #8]
 8006dba:	607a      	str	r2, [r7, #4]
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006dc2:	75fb      	strb	r3, [r7, #23]

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006dc4:	7dfb      	ldrb	r3, [r7, #23]
 8006dc6:	2b02      	cmp	r3, #2
 8006dc8:	d101      	bne.n	8006dce <HAL_SDRAM_SendCommand+0x1e>
  {
    return HAL_BUSY;
 8006dca:	2302      	movs	r3, #2
 8006dcc:	e021      	b.n	8006e12 <HAL_SDRAM_SendCommand+0x62>
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006dce:	7dfb      	ldrb	r3, [r7, #23]
 8006dd0:	2b01      	cmp	r3, #1
 8006dd2:	d002      	beq.n	8006dda <HAL_SDRAM_SendCommand+0x2a>
 8006dd4:	7dfb      	ldrb	r3, [r7, #23]
 8006dd6:	2b05      	cmp	r3, #5
 8006dd8:	d118      	bne.n	8006e0c <HAL_SDRAM_SendCommand+0x5c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	2202      	movs	r2, #2
 8006dde:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006de2:	68fb      	ldr	r3, [r7, #12]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	687a      	ldr	r2, [r7, #4]
 8006de8:	68b9      	ldr	r1, [r7, #8]
 8006dea:	4618      	mov	r0, r3
 8006dec:	f003 fbe6 	bl	800a5bc <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006df0:	68bb      	ldr	r3, [r7, #8]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	2b02      	cmp	r3, #2
 8006df6:	d104      	bne.n	8006e02 <HAL_SDRAM_SendCommand+0x52>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006df8:	68fb      	ldr	r3, [r7, #12]
 8006dfa:	2205      	movs	r2, #5
 8006dfc:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e00:	e006      	b.n	8006e10 <HAL_SDRAM_SendCommand+0x60>
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006e02:	68fb      	ldr	r3, [r7, #12]
 8006e04:	2201      	movs	r2, #1
 8006e06:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e0a:	e001      	b.n	8006e10 <HAL_SDRAM_SendCommand+0x60>
    }
  }
  else
  {
    return HAL_ERROR;
 8006e0c:	2301      	movs	r3, #1
 8006e0e:	e000      	b.n	8006e12 <HAL_SDRAM_SendCommand+0x62>
  }

  return HAL_OK;
 8006e10:	2300      	movs	r3, #0
}
 8006e12:	4618      	mov	r0, r3
 8006e14:	3718      	adds	r7, #24
 8006e16:	46bd      	mov	sp, r7
 8006e18:	bd80      	pop	{r7, pc}

08006e1a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006e1a:	b580      	push	{r7, lr}
 8006e1c:	b082      	sub	sp, #8
 8006e1e:	af00      	add	r7, sp, #0
 8006e20:	6078      	str	r0, [r7, #4]
 8006e22:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006e2a:	b2db      	uxtb	r3, r3
 8006e2c:	2b02      	cmp	r3, #2
 8006e2e:	d101      	bne.n	8006e34 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8006e30:	2302      	movs	r3, #2
 8006e32:	e016      	b.n	8006e62 <HAL_SDRAM_ProgramRefreshRate+0x48>
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006e3a:	b2db      	uxtb	r3, r3
 8006e3c:	2b01      	cmp	r3, #1
 8006e3e:	d10f      	bne.n	8006e60 <HAL_SDRAM_ProgramRefreshRate+0x46>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	2202      	movs	r2, #2
 8006e44:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	6839      	ldr	r1, [r7, #0]
 8006e4e:	4618      	mov	r0, r3
 8006e50:	f003 fbd8 	bl	800a604 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e54:	687b      	ldr	r3, [r7, #4]
 8006e56:	2201      	movs	r2, #1
 8006e58:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006e5c:	2300      	movs	r3, #0
 8006e5e:	e000      	b.n	8006e62 <HAL_SDRAM_ProgramRefreshRate+0x48>
    return HAL_ERROR;
 8006e60:	2301      	movs	r3, #1
}
 8006e62:	4618      	mov	r0, r3
 8006e64:	3708      	adds	r7, #8
 8006e66:	46bd      	mov	sp, r7
 8006e68:	bd80      	pop	{r7, pc}

08006e6a <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006e6a:	b580      	push	{r7, lr}
 8006e6c:	b082      	sub	sp, #8
 8006e6e:	af00      	add	r7, sp, #0
 8006e70:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006e72:	687b      	ldr	r3, [r7, #4]
 8006e74:	2b00      	cmp	r3, #0
 8006e76:	d101      	bne.n	8006e7c <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006e78:	2301      	movs	r3, #1
 8006e7a:	e049      	b.n	8006f10 <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006e82:	b2db      	uxtb	r3, r3
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d106      	bne.n	8006e96 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	2200      	movs	r2, #0
 8006e8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006e90:	6878      	ldr	r0, [r7, #4]
 8006e92:	f7fa fa0f 	bl	80012b4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	2202      	movs	r2, #2
 8006e9a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	681a      	ldr	r2, [r3, #0]
 8006ea2:	687b      	ldr	r3, [r7, #4]
 8006ea4:	3304      	adds	r3, #4
 8006ea6:	4619      	mov	r1, r3
 8006ea8:	4610      	mov	r0, r2
 8006eaa:	f000 fa7f 	bl	80073ac <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006eae:	687b      	ldr	r3, [r7, #4]
 8006eb0:	2201      	movs	r2, #1
 8006eb2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	2201      	movs	r2, #1
 8006eba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	2201      	movs	r2, #1
 8006ec2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	2201      	movs	r2, #1
 8006eca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	2201      	movs	r2, #1
 8006ed2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	2201      	movs	r2, #1
 8006eda:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	2201      	movs	r2, #1
 8006ee2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	2201      	movs	r2, #1
 8006eea:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	2201      	movs	r2, #1
 8006ef2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	2201      	movs	r2, #1
 8006efa:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	2201      	movs	r2, #1
 8006f02:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	2201      	movs	r2, #1
 8006f0a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006f0e:	2300      	movs	r3, #0
}
 8006f10:	4618      	mov	r0, r3
 8006f12:	3708      	adds	r7, #8
 8006f14:	46bd      	mov	sp, r7
 8006f16:	bd80      	pop	{r7, pc}

08006f18 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006f18:	b580      	push	{r7, lr}
 8006f1a:	b082      	sub	sp, #8
 8006f1c:	af00      	add	r7, sp, #0
 8006f1e:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	691b      	ldr	r3, [r3, #16]
 8006f26:	f003 0302 	and.w	r3, r3, #2
 8006f2a:	2b02      	cmp	r3, #2
 8006f2c:	d122      	bne.n	8006f74 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	681b      	ldr	r3, [r3, #0]
 8006f32:	68db      	ldr	r3, [r3, #12]
 8006f34:	f003 0302 	and.w	r3, r3, #2
 8006f38:	2b02      	cmp	r3, #2
 8006f3a:	d11b      	bne.n	8006f74 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f06f 0202 	mvn.w	r2, #2
 8006f44:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	2201      	movs	r2, #1
 8006f4a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	699b      	ldr	r3, [r3, #24]
 8006f52:	f003 0303 	and.w	r3, r3, #3
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	d003      	beq.n	8006f62 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006f5a:	6878      	ldr	r0, [r7, #4]
 8006f5c:	f000 fa08 	bl	8007370 <HAL_TIM_IC_CaptureCallback>
 8006f60:	e005      	b.n	8006f6e <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006f62:	6878      	ldr	r0, [r7, #4]
 8006f64:	f000 f9fa 	bl	800735c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006f68:	6878      	ldr	r0, [r7, #4]
 8006f6a:	f000 fa0b 	bl	8007384 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	2200      	movs	r2, #0
 8006f72:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	691b      	ldr	r3, [r3, #16]
 8006f7a:	f003 0304 	and.w	r3, r3, #4
 8006f7e:	2b04      	cmp	r3, #4
 8006f80:	d122      	bne.n	8006fc8 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	681b      	ldr	r3, [r3, #0]
 8006f86:	68db      	ldr	r3, [r3, #12]
 8006f88:	f003 0304 	and.w	r3, r3, #4
 8006f8c:	2b04      	cmp	r3, #4
 8006f8e:	d11b      	bne.n	8006fc8 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	681b      	ldr	r3, [r3, #0]
 8006f94:	f06f 0204 	mvn.w	r2, #4
 8006f98:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	2202      	movs	r2, #2
 8006f9e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	699b      	ldr	r3, [r3, #24]
 8006fa6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006faa:	2b00      	cmp	r3, #0
 8006fac:	d003      	beq.n	8006fb6 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006fae:	6878      	ldr	r0, [r7, #4]
 8006fb0:	f000 f9de 	bl	8007370 <HAL_TIM_IC_CaptureCallback>
 8006fb4:	e005      	b.n	8006fc2 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006fb6:	6878      	ldr	r0, [r7, #4]
 8006fb8:	f000 f9d0 	bl	800735c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006fbc:	6878      	ldr	r0, [r7, #4]
 8006fbe:	f000 f9e1 	bl	8007384 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	2200      	movs	r2, #0
 8006fc6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	691b      	ldr	r3, [r3, #16]
 8006fce:	f003 0308 	and.w	r3, r3, #8
 8006fd2:	2b08      	cmp	r3, #8
 8006fd4:	d122      	bne.n	800701c <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	68db      	ldr	r3, [r3, #12]
 8006fdc:	f003 0308 	and.w	r3, r3, #8
 8006fe0:	2b08      	cmp	r3, #8
 8006fe2:	d11b      	bne.n	800701c <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	681b      	ldr	r3, [r3, #0]
 8006fe8:	f06f 0208 	mvn.w	r2, #8
 8006fec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	2204      	movs	r2, #4
 8006ff2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	69db      	ldr	r3, [r3, #28]
 8006ffa:	f003 0303 	and.w	r3, r3, #3
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d003      	beq.n	800700a <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007002:	6878      	ldr	r0, [r7, #4]
 8007004:	f000 f9b4 	bl	8007370 <HAL_TIM_IC_CaptureCallback>
 8007008:	e005      	b.n	8007016 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800700a:	6878      	ldr	r0, [r7, #4]
 800700c:	f000 f9a6 	bl	800735c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007010:	6878      	ldr	r0, [r7, #4]
 8007012:	f000 f9b7 	bl	8007384 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	2200      	movs	r2, #0
 800701a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	691b      	ldr	r3, [r3, #16]
 8007022:	f003 0310 	and.w	r3, r3, #16
 8007026:	2b10      	cmp	r3, #16
 8007028:	d122      	bne.n	8007070 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	681b      	ldr	r3, [r3, #0]
 800702e:	68db      	ldr	r3, [r3, #12]
 8007030:	f003 0310 	and.w	r3, r3, #16
 8007034:	2b10      	cmp	r3, #16
 8007036:	d11b      	bne.n	8007070 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	681b      	ldr	r3, [r3, #0]
 800703c:	f06f 0210 	mvn.w	r2, #16
 8007040:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	2208      	movs	r2, #8
 8007046:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	69db      	ldr	r3, [r3, #28]
 800704e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007052:	2b00      	cmp	r3, #0
 8007054:	d003      	beq.n	800705e <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007056:	6878      	ldr	r0, [r7, #4]
 8007058:	f000 f98a 	bl	8007370 <HAL_TIM_IC_CaptureCallback>
 800705c:	e005      	b.n	800706a <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800705e:	6878      	ldr	r0, [r7, #4]
 8007060:	f000 f97c 	bl	800735c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007064:	6878      	ldr	r0, [r7, #4]
 8007066:	f000 f98d 	bl	8007384 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	2200      	movs	r2, #0
 800706e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	691b      	ldr	r3, [r3, #16]
 8007076:	f003 0301 	and.w	r3, r3, #1
 800707a:	2b01      	cmp	r3, #1
 800707c:	d10e      	bne.n	800709c <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	68db      	ldr	r3, [r3, #12]
 8007084:	f003 0301 	and.w	r3, r3, #1
 8007088:	2b01      	cmp	r3, #1
 800708a:	d107      	bne.n	800709c <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	f06f 0201 	mvn.w	r2, #1
 8007094:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007096:	6878      	ldr	r0, [r7, #4]
 8007098:	f000 f956 	bl	8007348 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	691b      	ldr	r3, [r3, #16]
 80070a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80070a6:	2b80      	cmp	r3, #128	; 0x80
 80070a8:	d10e      	bne.n	80070c8 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	68db      	ldr	r3, [r3, #12]
 80070b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80070b4:	2b80      	cmp	r3, #128	; 0x80
 80070b6:	d107      	bne.n	80070c8 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	681b      	ldr	r3, [r3, #0]
 80070bc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80070c0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80070c2:	6878      	ldr	r0, [r7, #4]
 80070c4:	f000 fb42 	bl	800774c <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	681b      	ldr	r3, [r3, #0]
 80070cc:	691b      	ldr	r3, [r3, #16]
 80070ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80070d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80070d6:	d10e      	bne.n	80070f6 <HAL_TIM_IRQHandler+0x1de>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	68db      	ldr	r3, [r3, #12]
 80070de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80070e2:	2b80      	cmp	r3, #128	; 0x80
 80070e4:	d107      	bne.n	80070f6 <HAL_TIM_IRQHandler+0x1de>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	681b      	ldr	r3, [r3, #0]
 80070ea:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80070ee:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 80070f0:	6878      	ldr	r0, [r7, #4]
 80070f2:	f000 fb35 	bl	8007760 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	681b      	ldr	r3, [r3, #0]
 80070fa:	691b      	ldr	r3, [r3, #16]
 80070fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007100:	2b40      	cmp	r3, #64	; 0x40
 8007102:	d10e      	bne.n	8007122 <HAL_TIM_IRQHandler+0x20a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	68db      	ldr	r3, [r3, #12]
 800710a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800710e:	2b40      	cmp	r3, #64	; 0x40
 8007110:	d107      	bne.n	8007122 <HAL_TIM_IRQHandler+0x20a>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800711a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800711c:	6878      	ldr	r0, [r7, #4]
 800711e:	f000 f93b 	bl	8007398 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	691b      	ldr	r3, [r3, #16]
 8007128:	f003 0320 	and.w	r3, r3, #32
 800712c:	2b20      	cmp	r3, #32
 800712e:	d10e      	bne.n	800714e <HAL_TIM_IRQHandler+0x236>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	68db      	ldr	r3, [r3, #12]
 8007136:	f003 0320 	and.w	r3, r3, #32
 800713a:	2b20      	cmp	r3, #32
 800713c:	d107      	bne.n	800714e <HAL_TIM_IRQHandler+0x236>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	f06f 0220 	mvn.w	r2, #32
 8007146:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007148:	6878      	ldr	r0, [r7, #4]
 800714a:	f000 faf5 	bl	8007738 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800714e:	bf00      	nop
 8007150:	3708      	adds	r7, #8
 8007152:	46bd      	mov	sp, r7
 8007154:	bd80      	pop	{r7, pc}
	...

08007158 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8007158:	b580      	push	{r7, lr}
 800715a:	b084      	sub	sp, #16
 800715c:	af00      	add	r7, sp, #0
 800715e:	6078      	str	r0, [r7, #4]
 8007160:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8007162:	2300      	movs	r3, #0
 8007164:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800716c:	2b01      	cmp	r3, #1
 800716e:	d101      	bne.n	8007174 <HAL_TIM_ConfigClockSource+0x1c>
 8007170:	2302      	movs	r3, #2
 8007172:	e0dc      	b.n	800732e <HAL_TIM_ConfigClockSource+0x1d6>
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	2201      	movs	r2, #1
 8007178:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	2202      	movs	r2, #2
 8007180:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	681b      	ldr	r3, [r3, #0]
 8007188:	689b      	ldr	r3, [r3, #8]
 800718a:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800718c:	68ba      	ldr	r2, [r7, #8]
 800718e:	4b6a      	ldr	r3, [pc, #424]	; (8007338 <HAL_TIM_ConfigClockSource+0x1e0>)
 8007190:	4013      	ands	r3, r2
 8007192:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007194:	68bb      	ldr	r3, [r7, #8]
 8007196:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800719a:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	68ba      	ldr	r2, [r7, #8]
 80071a2:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80071a4:	683b      	ldr	r3, [r7, #0]
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4a64      	ldr	r2, [pc, #400]	; (800733c <HAL_TIM_ConfigClockSource+0x1e4>)
 80071aa:	4293      	cmp	r3, r2
 80071ac:	f000 80a9 	beq.w	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 80071b0:	4a62      	ldr	r2, [pc, #392]	; (800733c <HAL_TIM_ConfigClockSource+0x1e4>)
 80071b2:	4293      	cmp	r3, r2
 80071b4:	f200 80ae 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 80071b8:	4a61      	ldr	r2, [pc, #388]	; (8007340 <HAL_TIM_ConfigClockSource+0x1e8>)
 80071ba:	4293      	cmp	r3, r2
 80071bc:	f000 80a1 	beq.w	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 80071c0:	4a5f      	ldr	r2, [pc, #380]	; (8007340 <HAL_TIM_ConfigClockSource+0x1e8>)
 80071c2:	4293      	cmp	r3, r2
 80071c4:	f200 80a6 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 80071c8:	4a5e      	ldr	r2, [pc, #376]	; (8007344 <HAL_TIM_ConfigClockSource+0x1ec>)
 80071ca:	4293      	cmp	r3, r2
 80071cc:	f000 8099 	beq.w	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 80071d0:	4a5c      	ldr	r2, [pc, #368]	; (8007344 <HAL_TIM_ConfigClockSource+0x1ec>)
 80071d2:	4293      	cmp	r3, r2
 80071d4:	f200 809e 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 80071d8:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 80071dc:	f000 8091 	beq.w	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 80071e0:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 80071e4:	f200 8096 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 80071e8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80071ec:	f000 8089 	beq.w	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 80071f0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80071f4:	f200 808e 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 80071f8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80071fc:	d03e      	beq.n	800727c <HAL_TIM_ConfigClockSource+0x124>
 80071fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007202:	f200 8087 	bhi.w	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 8007206:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800720a:	f000 8086 	beq.w	800731a <HAL_TIM_ConfigClockSource+0x1c2>
 800720e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007212:	d87f      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 8007214:	2b70      	cmp	r3, #112	; 0x70
 8007216:	d01a      	beq.n	800724e <HAL_TIM_ConfigClockSource+0xf6>
 8007218:	2b70      	cmp	r3, #112	; 0x70
 800721a:	d87b      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 800721c:	2b60      	cmp	r3, #96	; 0x60
 800721e:	d050      	beq.n	80072c2 <HAL_TIM_ConfigClockSource+0x16a>
 8007220:	2b60      	cmp	r3, #96	; 0x60
 8007222:	d877      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 8007224:	2b50      	cmp	r3, #80	; 0x50
 8007226:	d03c      	beq.n	80072a2 <HAL_TIM_ConfigClockSource+0x14a>
 8007228:	2b50      	cmp	r3, #80	; 0x50
 800722a:	d873      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 800722c:	2b40      	cmp	r3, #64	; 0x40
 800722e:	d058      	beq.n	80072e2 <HAL_TIM_ConfigClockSource+0x18a>
 8007230:	2b40      	cmp	r3, #64	; 0x40
 8007232:	d86f      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 8007234:	2b30      	cmp	r3, #48	; 0x30
 8007236:	d064      	beq.n	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 8007238:	2b30      	cmp	r3, #48	; 0x30
 800723a:	d86b      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 800723c:	2b20      	cmp	r3, #32
 800723e:	d060      	beq.n	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 8007240:	2b20      	cmp	r3, #32
 8007242:	d867      	bhi.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
 8007244:	2b00      	cmp	r3, #0
 8007246:	d05c      	beq.n	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 8007248:	2b10      	cmp	r3, #16
 800724a:	d05a      	beq.n	8007302 <HAL_TIM_ConfigClockSource+0x1aa>
 800724c:	e062      	b.n	8007314 <HAL_TIM_ConfigClockSource+0x1bc>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007252:	683b      	ldr	r3, [r7, #0]
 8007254:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8007256:	683b      	ldr	r3, [r7, #0]
 8007258:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800725a:	683b      	ldr	r3, [r7, #0]
 800725c:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800725e:	f000 f9bd 	bl	80075dc <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	681b      	ldr	r3, [r3, #0]
 8007266:	689b      	ldr	r3, [r3, #8]
 8007268:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800726a:	68bb      	ldr	r3, [r7, #8]
 800726c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8007270:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	681b      	ldr	r3, [r3, #0]
 8007276:	68ba      	ldr	r2, [r7, #8]
 8007278:	609a      	str	r2, [r3, #8]
      break;
 800727a:	e04f      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007280:	683b      	ldr	r3, [r7, #0]
 8007282:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8007284:	683b      	ldr	r3, [r7, #0]
 8007286:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007288:	683b      	ldr	r3, [r7, #0]
 800728a:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800728c:	f000 f9a6 	bl	80075dc <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	681b      	ldr	r3, [r3, #0]
 8007294:	689a      	ldr	r2, [r3, #8]
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	681b      	ldr	r3, [r3, #0]
 800729a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800729e:	609a      	str	r2, [r3, #8]
      break;
 80072a0:	e03c      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80072a6:	683b      	ldr	r3, [r7, #0]
 80072a8:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80072aa:	683b      	ldr	r3, [r7, #0]
 80072ac:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80072ae:	461a      	mov	r2, r3
 80072b0:	f000 f916 	bl	80074e0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	681b      	ldr	r3, [r3, #0]
 80072b8:	2150      	movs	r1, #80	; 0x50
 80072ba:	4618      	mov	r0, r3
 80072bc:	f000 f970 	bl	80075a0 <TIM_ITRx_SetConfig>
      break;
 80072c0:	e02c      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80072c6:	683b      	ldr	r3, [r7, #0]
 80072c8:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80072ca:	683b      	ldr	r3, [r7, #0]
 80072cc:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80072ce:	461a      	mov	r2, r3
 80072d0:	f000 f935 	bl	800753e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	2160      	movs	r1, #96	; 0x60
 80072da:	4618      	mov	r0, r3
 80072dc:	f000 f960 	bl	80075a0 <TIM_ITRx_SetConfig>
      break;
 80072e0:	e01c      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80072e6:	683b      	ldr	r3, [r7, #0]
 80072e8:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80072ea:	683b      	ldr	r3, [r7, #0]
 80072ec:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80072ee:	461a      	mov	r2, r3
 80072f0:	f000 f8f6 	bl	80074e0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	2140      	movs	r1, #64	; 0x40
 80072fa:	4618      	mov	r0, r3
 80072fc:	f000 f950 	bl	80075a0 <TIM_ITRx_SetConfig>
      break;
 8007300:	e00c      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>
    case TIM_CLOCKSOURCE_ITR8:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	681a      	ldr	r2, [r3, #0]
 8007306:	683b      	ldr	r3, [r7, #0]
 8007308:	681b      	ldr	r3, [r3, #0]
 800730a:	4619      	mov	r1, r3
 800730c:	4610      	mov	r0, r2
 800730e:	f000 f947 	bl	80075a0 <TIM_ITRx_SetConfig>
      break;
 8007312:	e003      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>
    }

    default:
      status = HAL_ERROR;
 8007314:	2301      	movs	r3, #1
 8007316:	73fb      	strb	r3, [r7, #15]
      break;
 8007318:	e000      	b.n	800731c <HAL_TIM_ConfigClockSource+0x1c4>
      break;
 800731a:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	2201      	movs	r2, #1
 8007320:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007324:	687b      	ldr	r3, [r7, #4]
 8007326:	2200      	movs	r2, #0
 8007328:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800732c:	7bfb      	ldrb	r3, [r7, #15]
}
 800732e:	4618      	mov	r0, r3
 8007330:	3710      	adds	r7, #16
 8007332:	46bd      	mov	sp, r7
 8007334:	bd80      	pop	{r7, pc}
 8007336:	bf00      	nop
 8007338:	ffceff88 	.word	0xffceff88
 800733c:	00100040 	.word	0x00100040
 8007340:	00100030 	.word	0x00100030
 8007344:	00100020 	.word	0x00100020

08007348 <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007348:	b480      	push	{r7}
 800734a:	b083      	sub	sp, #12
 800734c:	af00      	add	r7, sp, #0
 800734e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
}
 8007350:	bf00      	nop
 8007352:	370c      	adds	r7, #12
 8007354:	46bd      	mov	sp, r7
 8007356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800735a:	4770      	bx	lr

0800735c <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800735c:	b480      	push	{r7}
 800735e:	b083      	sub	sp, #12
 8007360:	af00      	add	r7, sp, #0
 8007362:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8007364:	bf00      	nop
 8007366:	370c      	adds	r7, #12
 8007368:	46bd      	mov	sp, r7
 800736a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800736e:	4770      	bx	lr

08007370 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007370:	b480      	push	{r7}
 8007372:	b083      	sub	sp, #12
 8007374:	af00      	add	r7, sp, #0
 8007376:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8007378:	bf00      	nop
 800737a:	370c      	adds	r7, #12
 800737c:	46bd      	mov	sp, r7
 800737e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007382:	4770      	bx	lr

08007384 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8007384:	b480      	push	{r7}
 8007386:	b083      	sub	sp, #12
 8007388:	af00      	add	r7, sp, #0
 800738a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800738c:	bf00      	nop
 800738e:	370c      	adds	r7, #12
 8007390:	46bd      	mov	sp, r7
 8007392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007396:	4770      	bx	lr

08007398 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8007398:	b480      	push	{r7}
 800739a:	b083      	sub	sp, #12
 800739c:	af00      	add	r7, sp, #0
 800739e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80073a0:	bf00      	nop
 80073a2:	370c      	adds	r7, #12
 80073a4:	46bd      	mov	sp, r7
 80073a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073aa:	4770      	bx	lr

080073ac <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80073ac:	b480      	push	{r7}
 80073ae:	b085      	sub	sp, #20
 80073b0:	af00      	add	r7, sp, #0
 80073b2:	6078      	str	r0, [r7, #4]
 80073b4:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	4a40      	ldr	r2, [pc, #256]	; (80074c0 <TIM_Base_SetConfig+0x114>)
 80073c0:	4293      	cmp	r3, r2
 80073c2:	d013      	beq.n	80073ec <TIM_Base_SetConfig+0x40>
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80073ca:	d00f      	beq.n	80073ec <TIM_Base_SetConfig+0x40>
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	4a3d      	ldr	r2, [pc, #244]	; (80074c4 <TIM_Base_SetConfig+0x118>)
 80073d0:	4293      	cmp	r3, r2
 80073d2:	d00b      	beq.n	80073ec <TIM_Base_SetConfig+0x40>
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	4a3c      	ldr	r2, [pc, #240]	; (80074c8 <TIM_Base_SetConfig+0x11c>)
 80073d8:	4293      	cmp	r3, r2
 80073da:	d007      	beq.n	80073ec <TIM_Base_SetConfig+0x40>
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	4a3b      	ldr	r2, [pc, #236]	; (80074cc <TIM_Base_SetConfig+0x120>)
 80073e0:	4293      	cmp	r3, r2
 80073e2:	d003      	beq.n	80073ec <TIM_Base_SetConfig+0x40>
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	4a3a      	ldr	r2, [pc, #232]	; (80074d0 <TIM_Base_SetConfig+0x124>)
 80073e8:	4293      	cmp	r3, r2
 80073ea:	d108      	bne.n	80073fe <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80073ec:	68fb      	ldr	r3, [r7, #12]
 80073ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073f2:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80073f4:	683b      	ldr	r3, [r7, #0]
 80073f6:	685b      	ldr	r3, [r3, #4]
 80073f8:	68fa      	ldr	r2, [r7, #12]
 80073fa:	4313      	orrs	r3, r2
 80073fc:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	4a2f      	ldr	r2, [pc, #188]	; (80074c0 <TIM_Base_SetConfig+0x114>)
 8007402:	4293      	cmp	r3, r2
 8007404:	d01f      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800740c:	d01b      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	4a2c      	ldr	r2, [pc, #176]	; (80074c4 <TIM_Base_SetConfig+0x118>)
 8007412:	4293      	cmp	r3, r2
 8007414:	d017      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	4a2b      	ldr	r2, [pc, #172]	; (80074c8 <TIM_Base_SetConfig+0x11c>)
 800741a:	4293      	cmp	r3, r2
 800741c:	d013      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	4a2a      	ldr	r2, [pc, #168]	; (80074cc <TIM_Base_SetConfig+0x120>)
 8007422:	4293      	cmp	r3, r2
 8007424:	d00f      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	4a29      	ldr	r2, [pc, #164]	; (80074d0 <TIM_Base_SetConfig+0x124>)
 800742a:	4293      	cmp	r3, r2
 800742c:	d00b      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 800742e:	687b      	ldr	r3, [r7, #4]
 8007430:	4a28      	ldr	r2, [pc, #160]	; (80074d4 <TIM_Base_SetConfig+0x128>)
 8007432:	4293      	cmp	r3, r2
 8007434:	d007      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	4a27      	ldr	r2, [pc, #156]	; (80074d8 <TIM_Base_SetConfig+0x12c>)
 800743a:	4293      	cmp	r3, r2
 800743c:	d003      	beq.n	8007446 <TIM_Base_SetConfig+0x9a>
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	4a26      	ldr	r2, [pc, #152]	; (80074dc <TIM_Base_SetConfig+0x130>)
 8007442:	4293      	cmp	r3, r2
 8007444:	d108      	bne.n	8007458 <TIM_Base_SetConfig+0xac>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007446:	68fb      	ldr	r3, [r7, #12]
 8007448:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800744c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800744e:	683b      	ldr	r3, [r7, #0]
 8007450:	68db      	ldr	r3, [r3, #12]
 8007452:	68fa      	ldr	r2, [r7, #12]
 8007454:	4313      	orrs	r3, r2
 8007456:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800745e:	683b      	ldr	r3, [r7, #0]
 8007460:	695b      	ldr	r3, [r3, #20]
 8007462:	4313      	orrs	r3, r2
 8007464:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	68fa      	ldr	r2, [r7, #12]
 800746a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800746c:	683b      	ldr	r3, [r7, #0]
 800746e:	689a      	ldr	r2, [r3, #8]
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007474:	683b      	ldr	r3, [r7, #0]
 8007476:	681a      	ldr	r2, [r3, #0]
 8007478:	687b      	ldr	r3, [r7, #4]
 800747a:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	4a10      	ldr	r2, [pc, #64]	; (80074c0 <TIM_Base_SetConfig+0x114>)
 8007480:	4293      	cmp	r3, r2
 8007482:	d00f      	beq.n	80074a4 <TIM_Base_SetConfig+0xf8>
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	4a12      	ldr	r2, [pc, #72]	; (80074d0 <TIM_Base_SetConfig+0x124>)
 8007488:	4293      	cmp	r3, r2
 800748a:	d00b      	beq.n	80074a4 <TIM_Base_SetConfig+0xf8>
 800748c:	687b      	ldr	r3, [r7, #4]
 800748e:	4a11      	ldr	r2, [pc, #68]	; (80074d4 <TIM_Base_SetConfig+0x128>)
 8007490:	4293      	cmp	r3, r2
 8007492:	d007      	beq.n	80074a4 <TIM_Base_SetConfig+0xf8>
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	4a10      	ldr	r2, [pc, #64]	; (80074d8 <TIM_Base_SetConfig+0x12c>)
 8007498:	4293      	cmp	r3, r2
 800749a:	d003      	beq.n	80074a4 <TIM_Base_SetConfig+0xf8>
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	4a0f      	ldr	r2, [pc, #60]	; (80074dc <TIM_Base_SetConfig+0x130>)
 80074a0:	4293      	cmp	r3, r2
 80074a2:	d103      	bne.n	80074ac <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80074a4:	683b      	ldr	r3, [r7, #0]
 80074a6:	691a      	ldr	r2, [r3, #16]
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	2201      	movs	r2, #1
 80074b0:	615a      	str	r2, [r3, #20]
}
 80074b2:	bf00      	nop
 80074b4:	3714      	adds	r7, #20
 80074b6:	46bd      	mov	sp, r7
 80074b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074bc:	4770      	bx	lr
 80074be:	bf00      	nop
 80074c0:	40010000 	.word	0x40010000
 80074c4:	40000400 	.word	0x40000400
 80074c8:	40000800 	.word	0x40000800
 80074cc:	40000c00 	.word	0x40000c00
 80074d0:	40010400 	.word	0x40010400
 80074d4:	40014000 	.word	0x40014000
 80074d8:	40014400 	.word	0x40014400
 80074dc:	40014800 	.word	0x40014800

080074e0 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80074e0:	b480      	push	{r7}
 80074e2:	b087      	sub	sp, #28
 80074e4:	af00      	add	r7, sp, #0
 80074e6:	60f8      	str	r0, [r7, #12]
 80074e8:	60b9      	str	r1, [r7, #8]
 80074ea:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	6a1b      	ldr	r3, [r3, #32]
 80074f0:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80074f2:	68fb      	ldr	r3, [r7, #12]
 80074f4:	6a1b      	ldr	r3, [r3, #32]
 80074f6:	f023 0201 	bic.w	r2, r3, #1
 80074fa:	68fb      	ldr	r3, [r7, #12]
 80074fc:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	699b      	ldr	r3, [r3, #24]
 8007502:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007504:	693b      	ldr	r3, [r7, #16]
 8007506:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800750a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	011b      	lsls	r3, r3, #4
 8007510:	693a      	ldr	r2, [r7, #16]
 8007512:	4313      	orrs	r3, r2
 8007514:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007516:	697b      	ldr	r3, [r7, #20]
 8007518:	f023 030a 	bic.w	r3, r3, #10
 800751c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800751e:	697a      	ldr	r2, [r7, #20]
 8007520:	68bb      	ldr	r3, [r7, #8]
 8007522:	4313      	orrs	r3, r2
 8007524:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	693a      	ldr	r2, [r7, #16]
 800752a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	697a      	ldr	r2, [r7, #20]
 8007530:	621a      	str	r2, [r3, #32]
}
 8007532:	bf00      	nop
 8007534:	371c      	adds	r7, #28
 8007536:	46bd      	mov	sp, r7
 8007538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800753c:	4770      	bx	lr

0800753e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800753e:	b480      	push	{r7}
 8007540:	b087      	sub	sp, #28
 8007542:	af00      	add	r7, sp, #0
 8007544:	60f8      	str	r0, [r7, #12]
 8007546:	60b9      	str	r1, [r7, #8]
 8007548:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800754a:	68fb      	ldr	r3, [r7, #12]
 800754c:	6a1b      	ldr	r3, [r3, #32]
 800754e:	f023 0210 	bic.w	r2, r3, #16
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007556:	68fb      	ldr	r3, [r7, #12]
 8007558:	699b      	ldr	r3, [r3, #24]
 800755a:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 800755c:	68fb      	ldr	r3, [r7, #12]
 800755e:	6a1b      	ldr	r3, [r3, #32]
 8007560:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007562:	697b      	ldr	r3, [r7, #20]
 8007564:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007568:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	031b      	lsls	r3, r3, #12
 800756e:	697a      	ldr	r2, [r7, #20]
 8007570:	4313      	orrs	r3, r2
 8007572:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007574:	693b      	ldr	r3, [r7, #16]
 8007576:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800757a:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 800757c:	68bb      	ldr	r3, [r7, #8]
 800757e:	011b      	lsls	r3, r3, #4
 8007580:	693a      	ldr	r2, [r7, #16]
 8007582:	4313      	orrs	r3, r2
 8007584:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	697a      	ldr	r2, [r7, #20]
 800758a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	693a      	ldr	r2, [r7, #16]
 8007590:	621a      	str	r2, [r3, #32]
}
 8007592:	bf00      	nop
 8007594:	371c      	adds	r7, #28
 8007596:	46bd      	mov	sp, r7
 8007598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759c:	4770      	bx	lr
	...

080075a0 <TIM_ITRx_SetConfig>:
  *       (*)  Value not defined in all devices.
  *
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 80075a0:	b480      	push	{r7}
 80075a2:	b085      	sub	sp, #20
 80075a4:	af00      	add	r7, sp, #0
 80075a6:	6078      	str	r0, [r7, #4]
 80075a8:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	689b      	ldr	r3, [r3, #8]
 80075ae:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 80075b0:	68fa      	ldr	r2, [r7, #12]
 80075b2:	4b09      	ldr	r3, [pc, #36]	; (80075d8 <TIM_ITRx_SetConfig+0x38>)
 80075b4:	4013      	ands	r3, r2
 80075b6:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80075b8:	683a      	ldr	r2, [r7, #0]
 80075ba:	68fb      	ldr	r3, [r7, #12]
 80075bc:	4313      	orrs	r3, r2
 80075be:	f043 0307 	orr.w	r3, r3, #7
 80075c2:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	68fa      	ldr	r2, [r7, #12]
 80075c8:	609a      	str	r2, [r3, #8]
}
 80075ca:	bf00      	nop
 80075cc:	3714      	adds	r7, #20
 80075ce:	46bd      	mov	sp, r7
 80075d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d4:	4770      	bx	lr
 80075d6:	bf00      	nop
 80075d8:	ffcfff8f 	.word	0xffcfff8f

080075dc <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80075dc:	b480      	push	{r7}
 80075de:	b087      	sub	sp, #28
 80075e0:	af00      	add	r7, sp, #0
 80075e2:	60f8      	str	r0, [r7, #12]
 80075e4:	60b9      	str	r1, [r7, #8]
 80075e6:	607a      	str	r2, [r7, #4]
 80075e8:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80075ea:	68fb      	ldr	r3, [r7, #12]
 80075ec:	689b      	ldr	r3, [r3, #8]
 80075ee:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80075f0:	697b      	ldr	r3, [r7, #20]
 80075f2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80075f6:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80075f8:	683b      	ldr	r3, [r7, #0]
 80075fa:	021a      	lsls	r2, r3, #8
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	431a      	orrs	r2, r3
 8007600:	68bb      	ldr	r3, [r7, #8]
 8007602:	4313      	orrs	r3, r2
 8007604:	697a      	ldr	r2, [r7, #20]
 8007606:	4313      	orrs	r3, r2
 8007608:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800760a:	68fb      	ldr	r3, [r7, #12]
 800760c:	697a      	ldr	r2, [r7, #20]
 800760e:	609a      	str	r2, [r3, #8]
}
 8007610:	bf00      	nop
 8007612:	371c      	adds	r7, #28
 8007614:	46bd      	mov	sp, r7
 8007616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800761a:	4770      	bx	lr

0800761c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800761c:	b480      	push	{r7}
 800761e:	b085      	sub	sp, #20
 8007620:	af00      	add	r7, sp, #0
 8007622:	6078      	str	r0, [r7, #4]
 8007624:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800762c:	2b01      	cmp	r3, #1
 800762e:	d101      	bne.n	8007634 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007630:	2302      	movs	r3, #2
 8007632:	e06d      	b.n	8007710 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	2201      	movs	r2, #1
 8007638:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	2202      	movs	r2, #2
 8007640:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007644:	687b      	ldr	r3, [r7, #4]
 8007646:	681b      	ldr	r3, [r3, #0]
 8007648:	685b      	ldr	r3, [r3, #4]
 800764a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	689b      	ldr	r3, [r3, #8]
 8007652:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	4a30      	ldr	r2, [pc, #192]	; (800771c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800765a:	4293      	cmp	r3, r2
 800765c:	d004      	beq.n	8007668 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	4a2f      	ldr	r2, [pc, #188]	; (8007720 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007664:	4293      	cmp	r3, r2
 8007666:	d108      	bne.n	800767a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800766e:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8007670:	683b      	ldr	r3, [r7, #0]
 8007672:	685b      	ldr	r3, [r3, #4]
 8007674:	68fa      	ldr	r2, [r7, #12]
 8007676:	4313      	orrs	r3, r2
 8007678:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800767a:	68fb      	ldr	r3, [r7, #12]
 800767c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007680:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007682:	683b      	ldr	r3, [r7, #0]
 8007684:	681b      	ldr	r3, [r3, #0]
 8007686:	68fa      	ldr	r2, [r7, #12]
 8007688:	4313      	orrs	r3, r2
 800768a:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	68fa      	ldr	r2, [r7, #12]
 8007692:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	681b      	ldr	r3, [r3, #0]
 8007698:	4a20      	ldr	r2, [pc, #128]	; (800771c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800769a:	4293      	cmp	r3, r2
 800769c:	d022      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80076a6:	d01d      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	4a1d      	ldr	r2, [pc, #116]	; (8007724 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 80076ae:	4293      	cmp	r3, r2
 80076b0:	d018      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	681b      	ldr	r3, [r3, #0]
 80076b6:	4a1c      	ldr	r2, [pc, #112]	; (8007728 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 80076b8:	4293      	cmp	r3, r2
 80076ba:	d013      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	4a1a      	ldr	r2, [pc, #104]	; (800772c <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 80076c2:	4293      	cmp	r3, r2
 80076c4:	d00e      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	4a15      	ldr	r2, [pc, #84]	; (8007720 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80076cc:	4293      	cmp	r3, r2
 80076ce:	d009      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	681b      	ldr	r3, [r3, #0]
 80076d4:	4a16      	ldr	r2, [pc, #88]	; (8007730 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80076d6:	4293      	cmp	r3, r2
 80076d8:	d004      	beq.n	80076e4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	4a15      	ldr	r2, [pc, #84]	; (8007734 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80076e0:	4293      	cmp	r3, r2
 80076e2:	d10c      	bne.n	80076fe <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80076e4:	68bb      	ldr	r3, [r7, #8]
 80076e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80076ea:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80076ec:	683b      	ldr	r3, [r7, #0]
 80076ee:	689b      	ldr	r3, [r3, #8]
 80076f0:	68ba      	ldr	r2, [r7, #8]
 80076f2:	4313      	orrs	r3, r2
 80076f4:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	68ba      	ldr	r2, [r7, #8]
 80076fc:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	2201      	movs	r2, #1
 8007702:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	2200      	movs	r2, #0
 800770a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800770e:	2300      	movs	r3, #0
}
 8007710:	4618      	mov	r0, r3
 8007712:	3714      	adds	r7, #20
 8007714:	46bd      	mov	sp, r7
 8007716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800771a:	4770      	bx	lr
 800771c:	40010000 	.word	0x40010000
 8007720:	40010400 	.word	0x40010400
 8007724:	40000400 	.word	0x40000400
 8007728:	40000800 	.word	0x40000800
 800772c:	40000c00 	.word	0x40000c00
 8007730:	40001800 	.word	0x40001800
 8007734:	40014000 	.word	0x40014000

08007738 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007738:	b480      	push	{r7}
 800773a:	b083      	sub	sp, #12
 800773c:	af00      	add	r7, sp, #0
 800773e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007740:	bf00      	nop
 8007742:	370c      	adds	r7, #12
 8007744:	46bd      	mov	sp, r7
 8007746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800774a:	4770      	bx	lr

0800774c <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 800774c:	b480      	push	{r7}
 800774e:	b083      	sub	sp, #12
 8007750:	af00      	add	r7, sp, #0
 8007752:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007754:	bf00      	nop
 8007756:	370c      	adds	r7, #12
 8007758:	46bd      	mov	sp, r7
 800775a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775e:	4770      	bx	lr

08007760 <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 8007760:	b480      	push	{r7}
 8007762:	b083      	sub	sp, #12
 8007764:	af00      	add	r7, sp, #0
 8007766:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 8007768:	bf00      	nop
 800776a:	370c      	adds	r7, #12
 800776c:	46bd      	mov	sp, r7
 800776e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007772:	4770      	bx	lr

08007774 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8007774:	b580      	push	{r7, lr}
 8007776:	b082      	sub	sp, #8
 8007778:	af00      	add	r7, sp, #0
 800777a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	2b00      	cmp	r3, #0
 8007780:	d101      	bne.n	8007786 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8007782:	2301      	movs	r3, #1
 8007784:	e042      	b.n	800780c <HAL_UART_Init+0x98>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800778c:	2b00      	cmp	r3, #0
 800778e:	d106      	bne.n	800779e <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	2200      	movs	r2, #0
 8007794:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8007798:	6878      	ldr	r0, [r7, #4]
 800779a:	f7f9 fdb3 	bl	8001304 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	2224      	movs	r2, #36	; 0x24
 80077a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  __HAL_UART_DISABLE(huart);
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	681b      	ldr	r3, [r3, #0]
 80077aa:	681a      	ldr	r2, [r3, #0]
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	681b      	ldr	r3, [r3, #0]
 80077b0:	f022 0201 	bic.w	r2, r2, #1
 80077b4:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 80077b6:	6878      	ldr	r0, [r7, #4]
 80077b8:	f000 fd74 	bl	80082a4 <UART_SetConfig>
 80077bc:	4603      	mov	r3, r0
 80077be:	2b01      	cmp	r3, #1
 80077c0:	d101      	bne.n	80077c6 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 80077c2:	2301      	movs	r3, #1
 80077c4:	e022      	b.n	800780c <HAL_UART_Init+0x98>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80077ca:	2b00      	cmp	r3, #0
 80077cc:	d002      	beq.n	80077d4 <HAL_UART_Init+0x60>
  {
    UART_AdvFeatureConfig(huart);
 80077ce:	6878      	ldr	r0, [r7, #4]
 80077d0:	f001 fad0 	bl	8008d74 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80077d4:	687b      	ldr	r3, [r7, #4]
 80077d6:	681b      	ldr	r3, [r3, #0]
 80077d8:	685a      	ldr	r2, [r3, #4]
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	681b      	ldr	r3, [r3, #0]
 80077de:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80077e2:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80077e4:	687b      	ldr	r3, [r7, #4]
 80077e6:	681b      	ldr	r3, [r3, #0]
 80077e8:	689a      	ldr	r2, [r3, #8]
 80077ea:	687b      	ldr	r3, [r7, #4]
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80077f2:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	681a      	ldr	r2, [r3, #0]
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	f042 0201 	orr.w	r2, r2, #1
 8007802:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8007804:	6878      	ldr	r0, [r7, #4]
 8007806:	f001 fb57 	bl	8008eb8 <UART_CheckIdleState>
 800780a:	4603      	mov	r3, r0
}
 800780c:	4618      	mov	r0, r3
 800780e:	3708      	adds	r7, #8
 8007810:	46bd      	mov	sp, r7
 8007812:	bd80      	pop	{r7, pc}

08007814 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007814:	b580      	push	{r7, lr}
 8007816:	b08a      	sub	sp, #40	; 0x28
 8007818:	af02      	add	r7, sp, #8
 800781a:	60f8      	str	r0, [r7, #12]
 800781c:	60b9      	str	r1, [r7, #8]
 800781e:	603b      	str	r3, [r7, #0]
 8007820:	4613      	mov	r3, r2
 8007822:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800782a:	2b20      	cmp	r3, #32
 800782c:	d17b      	bne.n	8007926 <HAL_UART_Transmit+0x112>
  {
    if ((pData == NULL) || (Size == 0U))
 800782e:	68bb      	ldr	r3, [r7, #8]
 8007830:	2b00      	cmp	r3, #0
 8007832:	d002      	beq.n	800783a <HAL_UART_Transmit+0x26>
 8007834:	88fb      	ldrh	r3, [r7, #6]
 8007836:	2b00      	cmp	r3, #0
 8007838:	d101      	bne.n	800783e <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 800783a:	2301      	movs	r3, #1
 800783c:	e074      	b.n	8007928 <HAL_UART_Transmit+0x114>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800783e:	68fb      	ldr	r3, [r7, #12]
 8007840:	2200      	movs	r2, #0
 8007842:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	2221      	movs	r2, #33	; 0x21
 800784a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800784e:	f7fa f925 	bl	8001a9c <HAL_GetTick>
 8007852:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8007854:	68fb      	ldr	r3, [r7, #12]
 8007856:	88fa      	ldrh	r2, [r7, #6]
 8007858:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
    huart->TxXferCount = Size;
 800785c:	68fb      	ldr	r3, [r7, #12]
 800785e:	88fa      	ldrh	r2, [r7, #6]
 8007860:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	689b      	ldr	r3, [r3, #8]
 8007868:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800786c:	d108      	bne.n	8007880 <HAL_UART_Transmit+0x6c>
 800786e:	68fb      	ldr	r3, [r7, #12]
 8007870:	691b      	ldr	r3, [r3, #16]
 8007872:	2b00      	cmp	r3, #0
 8007874:	d104      	bne.n	8007880 <HAL_UART_Transmit+0x6c>
    {
      pdata8bits  = NULL;
 8007876:	2300      	movs	r3, #0
 8007878:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 800787a:	68bb      	ldr	r3, [r7, #8]
 800787c:	61bb      	str	r3, [r7, #24]
 800787e:	e003      	b.n	8007888 <HAL_UART_Transmit+0x74>
    }
    else
    {
      pdata8bits  = pData;
 8007880:	68bb      	ldr	r3, [r7, #8]
 8007882:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8007884:	2300      	movs	r3, #0
 8007886:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8007888:	e030      	b.n	80078ec <HAL_UART_Transmit+0xd8>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800788a:	683b      	ldr	r3, [r7, #0]
 800788c:	9300      	str	r3, [sp, #0]
 800788e:	697b      	ldr	r3, [r7, #20]
 8007890:	2200      	movs	r2, #0
 8007892:	2180      	movs	r1, #128	; 0x80
 8007894:	68f8      	ldr	r0, [r7, #12]
 8007896:	f001 fbb9 	bl	800900c <UART_WaitOnFlagUntilTimeout>
 800789a:	4603      	mov	r3, r0
 800789c:	2b00      	cmp	r3, #0
 800789e:	d005      	beq.n	80078ac <HAL_UART_Transmit+0x98>
      {

        huart->gState = HAL_UART_STATE_READY;
 80078a0:	68fb      	ldr	r3, [r7, #12]
 80078a2:	2220      	movs	r2, #32
 80078a4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

        return HAL_TIMEOUT;
 80078a8:	2303      	movs	r3, #3
 80078aa:	e03d      	b.n	8007928 <HAL_UART_Transmit+0x114>
      }
      if (pdata8bits == NULL)
 80078ac:	69fb      	ldr	r3, [r7, #28]
 80078ae:	2b00      	cmp	r3, #0
 80078b0:	d10b      	bne.n	80078ca <HAL_UART_Transmit+0xb6>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80078b2:	69bb      	ldr	r3, [r7, #24]
 80078b4:	881b      	ldrh	r3, [r3, #0]
 80078b6:	461a      	mov	r2, r3
 80078b8:	68fb      	ldr	r3, [r7, #12]
 80078ba:	681b      	ldr	r3, [r3, #0]
 80078bc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80078c0:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 80078c2:	69bb      	ldr	r3, [r7, #24]
 80078c4:	3302      	adds	r3, #2
 80078c6:	61bb      	str	r3, [r7, #24]
 80078c8:	e007      	b.n	80078da <HAL_UART_Transmit+0xc6>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80078ca:	69fb      	ldr	r3, [r7, #28]
 80078cc:	781a      	ldrb	r2, [r3, #0]
 80078ce:	68fb      	ldr	r3, [r7, #12]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 80078d4:	69fb      	ldr	r3, [r7, #28]
 80078d6:	3301      	adds	r3, #1
 80078d8:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80078da:	68fb      	ldr	r3, [r7, #12]
 80078dc:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80078e0:	b29b      	uxth	r3, r3
 80078e2:	3b01      	subs	r3, #1
 80078e4:	b29a      	uxth	r2, r3
 80078e6:	68fb      	ldr	r3, [r7, #12]
 80078e8:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    while (huart->TxXferCount > 0U)
 80078ec:	68fb      	ldr	r3, [r7, #12]
 80078ee:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80078f2:	b29b      	uxth	r3, r3
 80078f4:	2b00      	cmp	r3, #0
 80078f6:	d1c8      	bne.n	800788a <HAL_UART_Transmit+0x76>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80078f8:	683b      	ldr	r3, [r7, #0]
 80078fa:	9300      	str	r3, [sp, #0]
 80078fc:	697b      	ldr	r3, [r7, #20]
 80078fe:	2200      	movs	r2, #0
 8007900:	2140      	movs	r1, #64	; 0x40
 8007902:	68f8      	ldr	r0, [r7, #12]
 8007904:	f001 fb82 	bl	800900c <UART_WaitOnFlagUntilTimeout>
 8007908:	4603      	mov	r3, r0
 800790a:	2b00      	cmp	r3, #0
 800790c:	d005      	beq.n	800791a <HAL_UART_Transmit+0x106>
    {
      huart->gState = HAL_UART_STATE_READY;
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	2220      	movs	r2, #32
 8007912:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

      return HAL_TIMEOUT;
 8007916:	2303      	movs	r3, #3
 8007918:	e006      	b.n	8007928 <HAL_UART_Transmit+0x114>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800791a:	68fb      	ldr	r3, [r7, #12]
 800791c:	2220      	movs	r2, #32
 800791e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

    return HAL_OK;
 8007922:	2300      	movs	r3, #0
 8007924:	e000      	b.n	8007928 <HAL_UART_Transmit+0x114>
  }
  else
  {
    return HAL_BUSY;
 8007926:	2302      	movs	r3, #2
  }
}
 8007928:	4618      	mov	r0, r3
 800792a:	3720      	adds	r7, #32
 800792c:	46bd      	mov	sp, r7
 800792e:	bd80      	pop	{r7, pc}

08007930 <HAL_UART_Transmit_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be sent.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size)
{
 8007930:	b480      	push	{r7}
 8007932:	b091      	sub	sp, #68	; 0x44
 8007934:	af00      	add	r7, sp, #0
 8007936:	60f8      	str	r0, [r7, #12]
 8007938:	60b9      	str	r1, [r7, #8]
 800793a:	4613      	mov	r3, r2
 800793c:	80fb      	strh	r3, [r7, #6]
  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800793e:	68fb      	ldr	r3, [r7, #12]
 8007940:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007944:	2b20      	cmp	r3, #32
 8007946:	d178      	bne.n	8007a3a <HAL_UART_Transmit_IT+0x10a>
  {
    if ((pData == NULL) || (Size == 0U))
 8007948:	68bb      	ldr	r3, [r7, #8]
 800794a:	2b00      	cmp	r3, #0
 800794c:	d002      	beq.n	8007954 <HAL_UART_Transmit_IT+0x24>
 800794e:	88fb      	ldrh	r3, [r7, #6]
 8007950:	2b00      	cmp	r3, #0
 8007952:	d101      	bne.n	8007958 <HAL_UART_Transmit_IT+0x28>
    {
      return HAL_ERROR;
 8007954:	2301      	movs	r3, #1
 8007956:	e071      	b.n	8007a3c <HAL_UART_Transmit_IT+0x10c>
    }

    huart->pTxBuffPtr  = pData;
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	68ba      	ldr	r2, [r7, #8]
 800795c:	651a      	str	r2, [r3, #80]	; 0x50
    huart->TxXferSize  = Size;
 800795e:	68fb      	ldr	r3, [r7, #12]
 8007960:	88fa      	ldrh	r2, [r7, #6]
 8007962:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
    huart->TxXferCount = Size;
 8007966:	68fb      	ldr	r3, [r7, #12]
 8007968:	88fa      	ldrh	r2, [r7, #6]
 800796a:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    huart->TxISR       = NULL;
 800796e:	68fb      	ldr	r3, [r7, #12]
 8007970:	2200      	movs	r2, #0
 8007972:	679a      	str	r2, [r3, #120]	; 0x78

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	2200      	movs	r2, #0
 8007978:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800797c:	68fb      	ldr	r3, [r7, #12]
 800797e:	2221      	movs	r2, #33	; 0x21
 8007980:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

    /* Configure Tx interrupt processing */
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 8007984:	68fb      	ldr	r3, [r7, #12]
 8007986:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007988:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800798c:	d12a      	bne.n	80079e4 <HAL_UART_Transmit_IT+0xb4>
    {
      /* Set the Tx ISR function pointer according to the data word length */
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800798e:	68fb      	ldr	r3, [r7, #12]
 8007990:	689b      	ldr	r3, [r3, #8]
 8007992:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007996:	d107      	bne.n	80079a8 <HAL_UART_Transmit_IT+0x78>
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	691b      	ldr	r3, [r3, #16]
 800799c:	2b00      	cmp	r3, #0
 800799e:	d103      	bne.n	80079a8 <HAL_UART_Transmit_IT+0x78>
      {
        huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	4a29      	ldr	r2, [pc, #164]	; (8007a48 <HAL_UART_Transmit_IT+0x118>)
 80079a4:	679a      	str	r2, [r3, #120]	; 0x78
 80079a6:	e002      	b.n	80079ae <HAL_UART_Transmit_IT+0x7e>
      }
      else
      {
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	4a28      	ldr	r2, [pc, #160]	; (8007a4c <HAL_UART_Transmit_IT+0x11c>)
 80079ac:	679a      	str	r2, [r3, #120]	; 0x78
      }

      /* Enable the TX FIFO threshold interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	3308      	adds	r3, #8
 80079b4:	62bb      	str	r3, [r7, #40]	; 0x28
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80079b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80079b8:	e853 3f00 	ldrex	r3, [r3]
 80079bc:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 80079be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80079c0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80079c4:	63bb      	str	r3, [r7, #56]	; 0x38
 80079c6:	68fb      	ldr	r3, [r7, #12]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	3308      	adds	r3, #8
 80079cc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80079ce:	637a      	str	r2, [r7, #52]	; 0x34
 80079d0:	633b      	str	r3, [r7, #48]	; 0x30
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80079d2:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80079d4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80079d6:	e841 2300 	strex	r3, r2, [r1]
 80079da:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 80079dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80079de:	2b00      	cmp	r3, #0
 80079e0:	d1e5      	bne.n	80079ae <HAL_UART_Transmit_IT+0x7e>
 80079e2:	e028      	b.n	8007a36 <HAL_UART_Transmit_IT+0x106>
    }
    else
    {
      /* Set the Tx ISR function pointer according to the data word length */
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80079e4:	68fb      	ldr	r3, [r7, #12]
 80079e6:	689b      	ldr	r3, [r3, #8]
 80079e8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80079ec:	d107      	bne.n	80079fe <HAL_UART_Transmit_IT+0xce>
 80079ee:	68fb      	ldr	r3, [r7, #12]
 80079f0:	691b      	ldr	r3, [r3, #16]
 80079f2:	2b00      	cmp	r3, #0
 80079f4:	d103      	bne.n	80079fe <HAL_UART_Transmit_IT+0xce>
      {
        huart->TxISR = UART_TxISR_16BIT;
 80079f6:	68fb      	ldr	r3, [r7, #12]
 80079f8:	4a15      	ldr	r2, [pc, #84]	; (8007a50 <HAL_UART_Transmit_IT+0x120>)
 80079fa:	679a      	str	r2, [r3, #120]	; 0x78
 80079fc:	e002      	b.n	8007a04 <HAL_UART_Transmit_IT+0xd4>
      }
      else
      {
        huart->TxISR = UART_TxISR_8BIT;
 80079fe:	68fb      	ldr	r3, [r7, #12]
 8007a00:	4a14      	ldr	r2, [pc, #80]	; (8007a54 <HAL_UART_Transmit_IT+0x124>)
 8007a02:	679a      	str	r2, [r3, #120]	; 0x78
      }

      /* Enable the Transmit Data Register Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 8007a04:	68fb      	ldr	r3, [r7, #12]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007a0a:	697b      	ldr	r3, [r7, #20]
 8007a0c:	e853 3f00 	ldrex	r3, [r3]
 8007a10:	613b      	str	r3, [r7, #16]
   return(result);
 8007a12:	693b      	ldr	r3, [r7, #16]
 8007a14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007a18:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	461a      	mov	r2, r3
 8007a20:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007a22:	623b      	str	r3, [r7, #32]
 8007a24:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007a26:	69f9      	ldr	r1, [r7, #28]
 8007a28:	6a3a      	ldr	r2, [r7, #32]
 8007a2a:	e841 2300 	strex	r3, r2, [r1]
 8007a2e:	61bb      	str	r3, [r7, #24]
   return(result);
 8007a30:	69bb      	ldr	r3, [r7, #24]
 8007a32:	2b00      	cmp	r3, #0
 8007a34:	d1e6      	bne.n	8007a04 <HAL_UART_Transmit_IT+0xd4>
    }

    return HAL_OK;
 8007a36:	2300      	movs	r3, #0
 8007a38:	e000      	b.n	8007a3c <HAL_UART_Transmit_IT+0x10c>
  }
  else
  {
    return HAL_BUSY;
 8007a3a:	2302      	movs	r3, #2
  }
}
 8007a3c:	4618      	mov	r0, r3
 8007a3e:	3744      	adds	r7, #68	; 0x44
 8007a40:	46bd      	mov	sp, r7
 8007a42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a46:	4770      	bx	lr
 8007a48:	08009673 	.word	0x08009673
 8007a4c:	08009593 	.word	0x08009593
 8007a50:	080094d1 	.word	0x080094d1
 8007a54:	08009419 	.word	0x08009419

08007a58 <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8007a58:	b580      	push	{r7, lr}
 8007a5a:	b08a      	sub	sp, #40	; 0x28
 8007a5c:	af00      	add	r7, sp, #0
 8007a5e:	60f8      	str	r0, [r7, #12]
 8007a60:	60b9      	str	r1, [r7, #8]
 8007a62:	4613      	mov	r3, r2
 8007a64:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8007a66:	68fb      	ldr	r3, [r7, #12]
 8007a68:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007a6c:	2b20      	cmp	r3, #32
 8007a6e:	d137      	bne.n	8007ae0 <HAL_UART_Receive_IT+0x88>
  {
    if ((pData == NULL) || (Size == 0U))
 8007a70:	68bb      	ldr	r3, [r7, #8]
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	d002      	beq.n	8007a7c <HAL_UART_Receive_IT+0x24>
 8007a76:	88fb      	ldrh	r3, [r7, #6]
 8007a78:	2b00      	cmp	r3, #0
 8007a7a:	d101      	bne.n	8007a80 <HAL_UART_Receive_IT+0x28>
    {
      return HAL_ERROR;
 8007a7c:	2301      	movs	r3, #1
 8007a7e:	e030      	b.n	8007ae2 <HAL_UART_Receive_IT+0x8a>
    }

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007a80:	68fb      	ldr	r3, [r7, #12]
 8007a82:	2200      	movs	r2, #0
 8007a84:	66da      	str	r2, [r3, #108]	; 0x6c

    if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	681b      	ldr	r3, [r3, #0]
 8007a8a:	4a18      	ldr	r2, [pc, #96]	; (8007aec <HAL_UART_Receive_IT+0x94>)
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d01f      	beq.n	8007ad0 <HAL_UART_Receive_IT+0x78>
    {
      /* Check that USART RTOEN bit is set */
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8007a90:	68fb      	ldr	r3, [r7, #12]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	685b      	ldr	r3, [r3, #4]
 8007a96:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8007a9a:	2b00      	cmp	r3, #0
 8007a9c:	d018      	beq.n	8007ad0 <HAL_UART_Receive_IT+0x78>
      {
        /* Enable the UART Receiver Timeout Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8007a9e:	68fb      	ldr	r3, [r7, #12]
 8007aa0:	681b      	ldr	r3, [r3, #0]
 8007aa2:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007aa4:	697b      	ldr	r3, [r7, #20]
 8007aa6:	e853 3f00 	ldrex	r3, [r3]
 8007aaa:	613b      	str	r3, [r7, #16]
   return(result);
 8007aac:	693b      	ldr	r3, [r7, #16]
 8007aae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8007ab2:	627b      	str	r3, [r7, #36]	; 0x24
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	681b      	ldr	r3, [r3, #0]
 8007ab8:	461a      	mov	r2, r3
 8007aba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007abc:	623b      	str	r3, [r7, #32]
 8007abe:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007ac0:	69f9      	ldr	r1, [r7, #28]
 8007ac2:	6a3a      	ldr	r2, [r7, #32]
 8007ac4:	e841 2300 	strex	r3, r2, [r1]
 8007ac8:	61bb      	str	r3, [r7, #24]
   return(result);
 8007aca:	69bb      	ldr	r3, [r7, #24]
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	d1e6      	bne.n	8007a9e <HAL_UART_Receive_IT+0x46>
      }
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 8007ad0:	88fb      	ldrh	r3, [r7, #6]
 8007ad2:	461a      	mov	r2, r3
 8007ad4:	68b9      	ldr	r1, [r7, #8]
 8007ad6:	68f8      	ldr	r0, [r7, #12]
 8007ad8:	f001 fb00 	bl	80090dc <UART_Start_Receive_IT>
 8007adc:	4603      	mov	r3, r0
 8007ade:	e000      	b.n	8007ae2 <HAL_UART_Receive_IT+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8007ae0:	2302      	movs	r3, #2
  }
}
 8007ae2:	4618      	mov	r0, r3
 8007ae4:	3728      	adds	r7, #40	; 0x28
 8007ae6:	46bd      	mov	sp, r7
 8007ae8:	bd80      	pop	{r7, pc}
 8007aea:	bf00      	nop
 8007aec:	58000c00 	.word	0x58000c00

08007af0 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8007af0:	b580      	push	{r7, lr}
 8007af2:	b0ba      	sub	sp, #232	; 0xe8
 8007af4:	af00      	add	r7, sp, #0
 8007af6:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	681b      	ldr	r3, [r3, #0]
 8007afc:	69db      	ldr	r3, [r3, #28]
 8007afe:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	689b      	ldr	r3, [r3, #8]
 8007b12:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 8007b16:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8007b1a:	f640 030f 	movw	r3, #2063	; 0x80f
 8007b1e:	4013      	ands	r3, r2
 8007b20:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  if (errorflags == 0U)
 8007b24:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8007b28:	2b00      	cmp	r3, #0
 8007b2a:	d11b      	bne.n	8007b64 <HAL_UART_IRQHandler+0x74>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 8007b2c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007b30:	f003 0320 	and.w	r3, r3, #32
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	d015      	beq.n	8007b64 <HAL_UART_IRQHandler+0x74>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 8007b38:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007b3c:	f003 0320 	and.w	r3, r3, #32
 8007b40:	2b00      	cmp	r3, #0
 8007b42:	d105      	bne.n	8007b50 <HAL_UART_IRQHandler+0x60>
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8007b44:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007b48:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	d009      	beq.n	8007b64 <HAL_UART_IRQHandler+0x74>
    {
      if (huart->RxISR != NULL)
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	f000 8377 	beq.w	8008248 <HAL_UART_IRQHandler+0x758>
      {
        huart->RxISR(huart);
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007b5e:	6878      	ldr	r0, [r7, #4]
 8007b60:	4798      	blx	r3
      }
      return;
 8007b62:	e371      	b.n	8008248 <HAL_UART_IRQHandler+0x758>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 8007b64:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8007b68:	2b00      	cmp	r3, #0
 8007b6a:	f000 8123 	beq.w	8007db4 <HAL_UART_IRQHandler+0x2c4>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 8007b6e:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 8007b72:	4b8d      	ldr	r3, [pc, #564]	; (8007da8 <HAL_UART_IRQHandler+0x2b8>)
 8007b74:	4013      	ands	r3, r2
 8007b76:	2b00      	cmp	r3, #0
 8007b78:	d106      	bne.n	8007b88 <HAL_UART_IRQHandler+0x98>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 8007b7a:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8007b7e:	4b8b      	ldr	r3, [pc, #556]	; (8007dac <HAL_UART_IRQHandler+0x2bc>)
 8007b80:	4013      	ands	r3, r2
 8007b82:	2b00      	cmp	r3, #0
 8007b84:	f000 8116 	beq.w	8007db4 <HAL_UART_IRQHandler+0x2c4>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8007b88:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007b8c:	f003 0301 	and.w	r3, r3, #1
 8007b90:	2b00      	cmp	r3, #0
 8007b92:	d011      	beq.n	8007bb8 <HAL_UART_IRQHandler+0xc8>
 8007b94:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007b98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b9c:	2b00      	cmp	r3, #0
 8007b9e:	d00b      	beq.n	8007bb8 <HAL_UART_IRQHandler+0xc8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	2201      	movs	r2, #1
 8007ba6:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007bae:	f043 0201 	orr.w	r2, r3, #1
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8007bb8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007bbc:	f003 0302 	and.w	r3, r3, #2
 8007bc0:	2b00      	cmp	r3, #0
 8007bc2:	d011      	beq.n	8007be8 <HAL_UART_IRQHandler+0xf8>
 8007bc4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007bc8:	f003 0301 	and.w	r3, r3, #1
 8007bcc:	2b00      	cmp	r3, #0
 8007bce:	d00b      	beq.n	8007be8 <HAL_UART_IRQHandler+0xf8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	2202      	movs	r2, #2
 8007bd6:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007bde:	f043 0204 	orr.w	r2, r3, #4
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8007be8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007bec:	f003 0304 	and.w	r3, r3, #4
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	d011      	beq.n	8007c18 <HAL_UART_IRQHandler+0x128>
 8007bf4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007bf8:	f003 0301 	and.w	r3, r3, #1
 8007bfc:	2b00      	cmp	r3, #0
 8007bfe:	d00b      	beq.n	8007c18 <HAL_UART_IRQHandler+0x128>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	2204      	movs	r2, #4
 8007c06:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c0e:	f043 0202 	orr.w	r2, r3, #2
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 8007c18:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007c1c:	f003 0308 	and.w	r3, r3, #8
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d017      	beq.n	8007c54 <HAL_UART_IRQHandler+0x164>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 8007c24:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007c28:	f003 0320 	and.w	r3, r3, #32
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d105      	bne.n	8007c3c <HAL_UART_IRQHandler+0x14c>
            ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 8007c30:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 8007c34:	4b5c      	ldr	r3, [pc, #368]	; (8007da8 <HAL_UART_IRQHandler+0x2b8>)
 8007c36:	4013      	ands	r3, r2
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	d00b      	beq.n	8007c54 <HAL_UART_IRQHandler+0x164>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	2208      	movs	r2, #8
 8007c42:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c4a:	f043 0208 	orr.w	r2, r3, #8
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8007c54:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007c58:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007c5c:	2b00      	cmp	r3, #0
 8007c5e:	d012      	beq.n	8007c86 <HAL_UART_IRQHandler+0x196>
 8007c60:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007c64:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8007c68:	2b00      	cmp	r3, #0
 8007c6a:	d00c      	beq.n	8007c86 <HAL_UART_IRQHandler+0x196>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8007c6c:	687b      	ldr	r3, [r7, #4]
 8007c6e:	681b      	ldr	r3, [r3, #0]
 8007c70:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8007c74:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c7c:	f043 0220 	orr.w	r2, r3, #32
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007c8c:	2b00      	cmp	r3, #0
 8007c8e:	f000 82dd 	beq.w	800824c <HAL_UART_IRQHandler+0x75c>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 8007c92:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007c96:	f003 0320 	and.w	r3, r3, #32
 8007c9a:	2b00      	cmp	r3, #0
 8007c9c:	d013      	beq.n	8007cc6 <HAL_UART_IRQHandler+0x1d6>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 8007c9e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007ca2:	f003 0320 	and.w	r3, r3, #32
 8007ca6:	2b00      	cmp	r3, #0
 8007ca8:	d105      	bne.n	8007cb6 <HAL_UART_IRQHandler+0x1c6>
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8007caa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007cae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007cb2:	2b00      	cmp	r3, #0
 8007cb4:	d007      	beq.n	8007cc6 <HAL_UART_IRQHandler+0x1d6>
      {
        if (huart->RxISR != NULL)
 8007cb6:	687b      	ldr	r3, [r7, #4]
 8007cb8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007cba:	2b00      	cmp	r3, #0
 8007cbc:	d003      	beq.n	8007cc6 <HAL_UART_IRQHandler+0x1d6>
        {
          huart->RxISR(huart);
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007cc2:	6878      	ldr	r0, [r7, #4]
 8007cc4:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007ccc:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	689b      	ldr	r3, [r3, #8]
 8007cd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007cda:	2b40      	cmp	r3, #64	; 0x40
 8007cdc:	d005      	beq.n	8007cea <HAL_UART_IRQHandler+0x1fa>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8007cde:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007ce2:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8007ce6:	2b00      	cmp	r3, #0
 8007ce8:	d054      	beq.n	8007d94 <HAL_UART_IRQHandler+0x2a4>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8007cea:	6878      	ldr	r0, [r7, #4]
 8007cec:	f001 fb18 	bl	8009320 <UART_EndRxTransfer>

        /* Abort the UART DMA Rx channel if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	689b      	ldr	r3, [r3, #8]
 8007cf6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007cfa:	2b40      	cmp	r3, #64	; 0x40
 8007cfc:	d146      	bne.n	8007d8c <HAL_UART_IRQHandler+0x29c>
        {
          /* Disable the UART DMA Rx request if enabled */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007cfe:	687b      	ldr	r3, [r7, #4]
 8007d00:	681b      	ldr	r3, [r3, #0]
 8007d02:	3308      	adds	r3, #8
 8007d04:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007d08:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8007d0c:	e853 3f00 	ldrex	r3, [r3]
 8007d10:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
   return(result);
 8007d14:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8007d18:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007d1c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	3308      	adds	r3, #8
 8007d26:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8007d2a:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8007d2e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007d32:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8007d36:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8007d3a:	e841 2300 	strex	r3, r2, [r1]
 8007d3e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   return(result);
 8007d42:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	d1d9      	bne.n	8007cfe <HAL_UART_IRQHandler+0x20e>

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d017      	beq.n	8007d84 <HAL_UART_IRQHandler+0x294>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007d5a:	4a15      	ldr	r2, [pc, #84]	; (8007db0 <HAL_UART_IRQHandler+0x2c0>)
 8007d5c:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007d64:	4618      	mov	r0, r3
 8007d66:	f7fa fbed 	bl	8002544 <HAL_DMA_Abort_IT>
 8007d6a:	4603      	mov	r3, r0
 8007d6c:	2b00      	cmp	r3, #0
 8007d6e:	d019      	beq.n	8007da4 <HAL_UART_IRQHandler+0x2b4>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007d76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007d78:	687a      	ldr	r2, [r7, #4]
 8007d7a:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8007d7e:	4610      	mov	r0, r2
 8007d80:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007d82:	e00f      	b.n	8007da4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8007d84:	6878      	ldr	r0, [r7, #4]
 8007d86:	f000 fa77 	bl	8008278 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007d8a:	e00b      	b.n	8007da4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8007d8c:	6878      	ldr	r0, [r7, #4]
 8007d8e:	f000 fa73 	bl	8008278 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007d92:	e007      	b.n	8007da4 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8007d94:	6878      	ldr	r0, [r7, #4]
 8007d96:	f000 fa6f 	bl	8008278 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007d9a:	687b      	ldr	r3, [r7, #4]
 8007d9c:	2200      	movs	r2, #0
 8007d9e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
      }
    }
    return;
 8007da2:	e253      	b.n	800824c <HAL_UART_IRQHandler+0x75c>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007da4:	bf00      	nop
    return;
 8007da6:	e251      	b.n	800824c <HAL_UART_IRQHandler+0x75c>
 8007da8:	10000001 	.word	0x10000001
 8007dac:	04000120 	.word	0x04000120
 8007db0:	080093ed 	.word	0x080093ed

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007db8:	2b01      	cmp	r3, #1
 8007dba:	f040 81e7 	bne.w	800818c <HAL_UART_IRQHandler+0x69c>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8007dbe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007dc2:	f003 0310 	and.w	r3, r3, #16
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	f000 81e0 	beq.w	800818c <HAL_UART_IRQHandler+0x69c>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8007dcc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007dd0:	f003 0310 	and.w	r3, r3, #16
 8007dd4:	2b00      	cmp	r3, #0
 8007dd6:	f000 81d9 	beq.w	800818c <HAL_UART_IRQHandler+0x69c>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	681b      	ldr	r3, [r3, #0]
 8007dde:	2210      	movs	r2, #16
 8007de0:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	681b      	ldr	r3, [r3, #0]
 8007de6:	689b      	ldr	r3, [r3, #8]
 8007de8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007dec:	2b40      	cmp	r3, #64	; 0x40
 8007dee:	f040 8151 	bne.w	8008094 <HAL_UART_IRQHandler+0x5a4>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8007df2:	687b      	ldr	r3, [r7, #4]
 8007df4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007df8:	681b      	ldr	r3, [r3, #0]
 8007dfa:	4a96      	ldr	r2, [pc, #600]	; (8008054 <HAL_UART_IRQHandler+0x564>)
 8007dfc:	4293      	cmp	r3, r2
 8007dfe:	d068      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e06:	681b      	ldr	r3, [r3, #0]
 8007e08:	4a93      	ldr	r2, [pc, #588]	; (8008058 <HAL_UART_IRQHandler+0x568>)
 8007e0a:	4293      	cmp	r3, r2
 8007e0c:	d061      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	4a91      	ldr	r2, [pc, #580]	; (800805c <HAL_UART_IRQHandler+0x56c>)
 8007e18:	4293      	cmp	r3, r2
 8007e1a:	d05a      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e1c:	687b      	ldr	r3, [r7, #4]
 8007e1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e22:	681b      	ldr	r3, [r3, #0]
 8007e24:	4a8e      	ldr	r2, [pc, #568]	; (8008060 <HAL_UART_IRQHandler+0x570>)
 8007e26:	4293      	cmp	r3, r2
 8007e28:	d053      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	4a8c      	ldr	r2, [pc, #560]	; (8008064 <HAL_UART_IRQHandler+0x574>)
 8007e34:	4293      	cmp	r3, r2
 8007e36:	d04c      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e3e:	681b      	ldr	r3, [r3, #0]
 8007e40:	4a89      	ldr	r2, [pc, #548]	; (8008068 <HAL_UART_IRQHandler+0x578>)
 8007e42:	4293      	cmp	r3, r2
 8007e44:	d045      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	4a87      	ldr	r2, [pc, #540]	; (800806c <HAL_UART_IRQHandler+0x57c>)
 8007e50:	4293      	cmp	r3, r2
 8007e52:	d03e      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e5a:	681b      	ldr	r3, [r3, #0]
 8007e5c:	4a84      	ldr	r2, [pc, #528]	; (8008070 <HAL_UART_IRQHandler+0x580>)
 8007e5e:	4293      	cmp	r3, r2
 8007e60:	d037      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e68:	681b      	ldr	r3, [r3, #0]
 8007e6a:	4a82      	ldr	r2, [pc, #520]	; (8008074 <HAL_UART_IRQHandler+0x584>)
 8007e6c:	4293      	cmp	r3, r2
 8007e6e:	d030      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e76:	681b      	ldr	r3, [r3, #0]
 8007e78:	4a7f      	ldr	r2, [pc, #508]	; (8008078 <HAL_UART_IRQHandler+0x588>)
 8007e7a:	4293      	cmp	r3, r2
 8007e7c:	d029      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	4a7d      	ldr	r2, [pc, #500]	; (800807c <HAL_UART_IRQHandler+0x58c>)
 8007e88:	4293      	cmp	r3, r2
 8007e8a:	d022      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007e92:	681b      	ldr	r3, [r3, #0]
 8007e94:	4a7a      	ldr	r2, [pc, #488]	; (8008080 <HAL_UART_IRQHandler+0x590>)
 8007e96:	4293      	cmp	r3, r2
 8007e98:	d01b      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007e9a:	687b      	ldr	r3, [r7, #4]
 8007e9c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	4a78      	ldr	r2, [pc, #480]	; (8008084 <HAL_UART_IRQHandler+0x594>)
 8007ea4:	4293      	cmp	r3, r2
 8007ea6:	d014      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	4a75      	ldr	r2, [pc, #468]	; (8008088 <HAL_UART_IRQHandler+0x598>)
 8007eb2:	4293      	cmp	r3, r2
 8007eb4:	d00d      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007ebc:	681b      	ldr	r3, [r3, #0]
 8007ebe:	4a73      	ldr	r2, [pc, #460]	; (800808c <HAL_UART_IRQHandler+0x59c>)
 8007ec0:	4293      	cmp	r3, r2
 8007ec2:	d006      	beq.n	8007ed2 <HAL_UART_IRQHandler+0x3e2>
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	4a70      	ldr	r2, [pc, #448]	; (8008090 <HAL_UART_IRQHandler+0x5a0>)
 8007ece:	4293      	cmp	r3, r2
 8007ed0:	d106      	bne.n	8007ee0 <HAL_UART_IRQHandler+0x3f0>
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007ed8:	681b      	ldr	r3, [r3, #0]
 8007eda:	685b      	ldr	r3, [r3, #4]
 8007edc:	b29b      	uxth	r3, r3
 8007ede:	e005      	b.n	8007eec <HAL_UART_IRQHandler+0x3fc>
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007ee6:	681b      	ldr	r3, [r3, #0]
 8007ee8:	685b      	ldr	r3, [r3, #4]
 8007eea:	b29b      	uxth	r3, r3
 8007eec:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
      if ((nb_remaining_rx_data > 0U)
 8007ef0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	f000 81ab 	beq.w	8008250 <HAL_UART_IRQHandler+0x760>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007f00:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8007f04:	429a      	cmp	r2, r3
 8007f06:	f080 81a3 	bcs.w	8008250 <HAL_UART_IRQHandler+0x760>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8007f10:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007f1a:	69db      	ldr	r3, [r3, #28]
 8007f1c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007f20:	f000 8087 	beq.w	8008032 <HAL_UART_IRQHandler+0x542>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	681b      	ldr	r3, [r3, #0]
 8007f28:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007f2c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8007f30:	e853 3f00 	ldrex	r3, [r3]
 8007f34:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
   return(result);
 8007f38:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8007f3c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007f40:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	461a      	mov	r2, r3
 8007f4a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8007f4e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8007f52:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f56:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8007f5a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8007f5e:	e841 2300 	strex	r3, r2, [r1]
 8007f62:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   return(result);
 8007f66:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8007f6a:	2b00      	cmp	r3, #0
 8007f6c:	d1da      	bne.n	8007f24 <HAL_UART_IRQHandler+0x434>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	3308      	adds	r3, #8
 8007f74:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007f76:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8007f78:	e853 3f00 	ldrex	r3, [r3]
 8007f7c:	673b      	str	r3, [r7, #112]	; 0x70
   return(result);
 8007f7e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007f80:	f023 0301 	bic.w	r3, r3, #1
 8007f84:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	681b      	ldr	r3, [r3, #0]
 8007f8c:	3308      	adds	r3, #8
 8007f8e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8007f92:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8007f96:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007f98:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8007f9a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8007f9e:	e841 2300 	strex	r3, r2, [r1]
 8007fa2:	67bb      	str	r3, [r7, #120]	; 0x78
   return(result);
 8007fa4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8007fa6:	2b00      	cmp	r3, #0
 8007fa8:	d1e1      	bne.n	8007f6e <HAL_UART_IRQHandler+0x47e>

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	3308      	adds	r3, #8
 8007fb0:	663b      	str	r3, [r7, #96]	; 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007fb2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8007fb4:	e853 3f00 	ldrex	r3, [r3]
 8007fb8:	65fb      	str	r3, [r7, #92]	; 0x5c
   return(result);
 8007fba:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8007fbc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007fc0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	3308      	adds	r3, #8
 8007fca:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8007fce:	66fa      	str	r2, [r7, #108]	; 0x6c
 8007fd0:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007fd2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8007fd4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8007fd6:	e841 2300 	strex	r3, r2, [r1]
 8007fda:	667b      	str	r3, [r7, #100]	; 0x64
   return(result);
 8007fdc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8007fde:	2b00      	cmp	r3, #0
 8007fe0:	d1e3      	bne.n	8007faa <HAL_UART_IRQHandler+0x4ba>

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 8007fe2:	687b      	ldr	r3, [r7, #4]
 8007fe4:	2220      	movs	r2, #32
 8007fe6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	2200      	movs	r2, #0
 8007fee:	66da      	str	r2, [r3, #108]	; 0x6c

          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	681b      	ldr	r3, [r3, #0]
 8007ff4:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007ff6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007ff8:	e853 3f00 	ldrex	r3, [r3]
 8007ffc:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 8007ffe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008000:	f023 0310 	bic.w	r3, r3, #16
 8008004:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	461a      	mov	r2, r3
 800800e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008012:	65bb      	str	r3, [r7, #88]	; 0x58
 8008014:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008016:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8008018:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800801a:	e841 2300 	strex	r3, r2, [r1]
 800801e:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 8008020:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008022:	2b00      	cmp	r3, #0
 8008024:	d1e4      	bne.n	8007ff0 <HAL_UART_IRQHandler+0x500>

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8008026:	687b      	ldr	r3, [r7, #4]
 8008028:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800802c:	4618      	mov	r0, r3
 800802e:	f7f9 ff6b 	bl	8001f08 <HAL_DMA_Abort>
        }

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	2202      	movs	r2, #2
 8008036:	671a      	str	r2, [r3, #112]	; 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800803e:	687b      	ldr	r3, [r7, #4]
 8008040:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8008044:	b29b      	uxth	r3, r3
 8008046:	1ad3      	subs	r3, r2, r3
 8008048:	b29b      	uxth	r3, r3
 800804a:	4619      	mov	r1, r3
 800804c:	6878      	ldr	r0, [r7, #4]
 800804e:	f000 f91d 	bl	800828c <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8008052:	e0fd      	b.n	8008250 <HAL_UART_IRQHandler+0x760>
 8008054:	40020010 	.word	0x40020010
 8008058:	40020028 	.word	0x40020028
 800805c:	40020040 	.word	0x40020040
 8008060:	40020058 	.word	0x40020058
 8008064:	40020070 	.word	0x40020070
 8008068:	40020088 	.word	0x40020088
 800806c:	400200a0 	.word	0x400200a0
 8008070:	400200b8 	.word	0x400200b8
 8008074:	40020410 	.word	0x40020410
 8008078:	40020428 	.word	0x40020428
 800807c:	40020440 	.word	0x40020440
 8008080:	40020458 	.word	0x40020458
 8008084:	40020470 	.word	0x40020470
 8008088:	40020488 	.word	0x40020488
 800808c:	400204a0 	.word	0x400204a0
 8008090:	400204b8 	.word	0x400204b8
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80080a0:	b29b      	uxth	r3, r3
 80080a2:	1ad3      	subs	r3, r2, r3
 80080a4:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
      if ((huart->RxXferCount > 0U)
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80080ae:	b29b      	uxth	r3, r3
 80080b0:	2b00      	cmp	r3, #0
 80080b2:	f000 80cf 	beq.w	8008254 <HAL_UART_IRQHandler+0x764>
          && (nb_rx_data > 0U))
 80080b6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80080ba:	2b00      	cmp	r3, #0
 80080bc:	f000 80ca 	beq.w	8008254 <HAL_UART_IRQHandler+0x764>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	681b      	ldr	r3, [r3, #0]
 80080c4:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80080c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80080c8:	e853 3f00 	ldrex	r3, [r3]
 80080cc:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 80080ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80080d0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80080d4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	681b      	ldr	r3, [r3, #0]
 80080dc:	461a      	mov	r2, r3
 80080de:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80080e2:	647b      	str	r3, [r7, #68]	; 0x44
 80080e4:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80080e6:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80080e8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80080ea:	e841 2300 	strex	r3, r2, [r1]
 80080ee:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 80080f0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80080f2:	2b00      	cmp	r3, #0
 80080f4:	d1e4      	bne.n	80080c0 <HAL_UART_IRQHandler+0x5d0>

        /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 80080f6:	687b      	ldr	r3, [r7, #4]
 80080f8:	681b      	ldr	r3, [r3, #0]
 80080fa:	3308      	adds	r3, #8
 80080fc:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80080fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008100:	e853 3f00 	ldrex	r3, [r3]
 8008104:	623b      	str	r3, [r7, #32]
   return(result);
 8008106:	6a3a      	ldr	r2, [r7, #32]
 8008108:	4b55      	ldr	r3, [pc, #340]	; (8008260 <HAL_UART_IRQHandler+0x770>)
 800810a:	4013      	ands	r3, r2
 800810c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	3308      	adds	r3, #8
 8008116:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800811a:	633a      	str	r2, [r7, #48]	; 0x30
 800811c:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800811e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8008120:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008122:	e841 2300 	strex	r3, r2, [r1]
 8008126:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 8008128:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800812a:	2b00      	cmp	r3, #0
 800812c:	d1e3      	bne.n	80080f6 <HAL_UART_IRQHandler+0x606>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	2220      	movs	r2, #32
 8008132:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	2200      	movs	r2, #0
 800813a:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	2200      	movs	r2, #0
 8008140:	675a      	str	r2, [r3, #116]	; 0x74

        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008148:	693b      	ldr	r3, [r7, #16]
 800814a:	e853 3f00 	ldrex	r3, [r3]
 800814e:	60fb      	str	r3, [r7, #12]
   return(result);
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	f023 0310 	bic.w	r3, r3, #16
 8008156:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	461a      	mov	r2, r3
 8008160:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8008164:	61fb      	str	r3, [r7, #28]
 8008166:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008168:	69b9      	ldr	r1, [r7, #24]
 800816a:	69fa      	ldr	r2, [r7, #28]
 800816c:	e841 2300 	strex	r3, r2, [r1]
 8008170:	617b      	str	r3, [r7, #20]
   return(result);
 8008172:	697b      	ldr	r3, [r7, #20]
 8008174:	2b00      	cmp	r3, #0
 8008176:	d1e4      	bne.n	8008142 <HAL_UART_IRQHandler+0x652>

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	2202      	movs	r2, #2
 800817c:	671a      	str	r2, [r3, #112]	; 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800817e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8008182:	4619      	mov	r1, r3
 8008184:	6878      	ldr	r0, [r7, #4]
 8008186:	f000 f881 	bl	800828c <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 800818a:	e063      	b.n	8008254 <HAL_UART_IRQHandler+0x764>
    }
  }

  /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 800818c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008190:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008194:	2b00      	cmp	r3, #0
 8008196:	d00e      	beq.n	80081b6 <HAL_UART_IRQHandler+0x6c6>
 8008198:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800819c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80081a0:	2b00      	cmp	r3, #0
 80081a2:	d008      	beq.n	80081b6 <HAL_UART_IRQHandler+0x6c6>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80081ac:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Wakeup Callback */
    huart->WakeupCallback(huart);
#else
    /* Call legacy weak Wakeup Callback */
    HAL_UARTEx_WakeupCallback(huart);
 80081ae:	6878      	ldr	r0, [r7, #4]
 80081b0:	f002 f81c 	bl	800a1ec <HAL_UARTEx_WakeupCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 80081b4:	e051      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
  }

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 80081b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80081ba:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80081be:	2b00      	cmp	r3, #0
 80081c0:	d014      	beq.n	80081ec <HAL_UART_IRQHandler+0x6fc>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 80081c2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80081c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80081ca:	2b00      	cmp	r3, #0
 80081cc:	d105      	bne.n	80081da <HAL_UART_IRQHandler+0x6ea>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 80081ce:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80081d2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80081d6:	2b00      	cmp	r3, #0
 80081d8:	d008      	beq.n	80081ec <HAL_UART_IRQHandler+0x6fc>
  {
    if (huart->TxISR != NULL)
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80081de:	2b00      	cmp	r3, #0
 80081e0:	d03a      	beq.n	8008258 <HAL_UART_IRQHandler+0x768>
    {
      huart->TxISR(huart);
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80081e6:	6878      	ldr	r0, [r7, #4]
 80081e8:	4798      	blx	r3
    }
    return;
 80081ea:	e035      	b.n	8008258 <HAL_UART_IRQHandler+0x768>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 80081ec:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80081f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d009      	beq.n	800820c <HAL_UART_IRQHandler+0x71c>
 80081f8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80081fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008200:	2b00      	cmp	r3, #0
 8008202:	d003      	beq.n	800820c <HAL_UART_IRQHandler+0x71c>
  {
    UART_EndTransmit_IT(huart);
 8008204:	6878      	ldr	r0, [r7, #4]
 8008206:	f001 faa9 	bl	800975c <UART_EndTransmit_IT>
    return;
 800820a:	e026      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
  }

  /* UART TX Fifo Empty occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 800820c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008210:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8008214:	2b00      	cmp	r3, #0
 8008216:	d009      	beq.n	800822c <HAL_UART_IRQHandler+0x73c>
 8008218:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800821c:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8008220:	2b00      	cmp	r3, #0
 8008222:	d003      	beq.n	800822c <HAL_UART_IRQHandler+0x73c>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Tx Fifo Empty Callback */
    huart->TxFifoEmptyCallback(huart);
#else
    /* Call legacy weak Tx Fifo Empty Callback */
    HAL_UARTEx_TxFifoEmptyCallback(huart);
 8008224:	6878      	ldr	r0, [r7, #4]
 8008226:	f001 fff5 	bl	800a214 <HAL_UARTEx_TxFifoEmptyCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800822a:	e016      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
  }

  /* UART RX Fifo Full occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 800822c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008230:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008234:	2b00      	cmp	r3, #0
 8008236:	d010      	beq.n	800825a <HAL_UART_IRQHandler+0x76a>
 8008238:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800823c:	2b00      	cmp	r3, #0
 800823e:	da0c      	bge.n	800825a <HAL_UART_IRQHandler+0x76a>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Rx Fifo Full Callback */
    huart->RxFifoFullCallback(huart);
#else
    /* Call legacy weak Rx Fifo Full Callback */
    HAL_UARTEx_RxFifoFullCallback(huart);
 8008240:	6878      	ldr	r0, [r7, #4]
 8008242:	f001 ffdd 	bl	800a200 <HAL_UARTEx_RxFifoFullCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 8008246:	e008      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
      return;
 8008248:	bf00      	nop
 800824a:	e006      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
    return;
 800824c:	bf00      	nop
 800824e:	e004      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
      return;
 8008250:	bf00      	nop
 8008252:	e002      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
      return;
 8008254:	bf00      	nop
 8008256:	e000      	b.n	800825a <HAL_UART_IRQHandler+0x76a>
    return;
 8008258:	bf00      	nop
  }
}
 800825a:	37e8      	adds	r7, #232	; 0xe8
 800825c:	46bd      	mov	sp, r7
 800825e:	bd80      	pop	{r7, pc}
 8008260:	effffffe 	.word	0xeffffffe

08008264 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8008264:	b480      	push	{r7}
 8008266:	b083      	sub	sp, #12
 8008268:	af00      	add	r7, sp, #0
 800826a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 800826c:	bf00      	nop
 800826e:	370c      	adds	r7, #12
 8008270:	46bd      	mov	sp, r7
 8008272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008276:	4770      	bx	lr

08008278 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8008278:	b480      	push	{r7}
 800827a:	b083      	sub	sp, #12
 800827c:	af00      	add	r7, sp, #0
 800827e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8008280:	bf00      	nop
 8008282:	370c      	adds	r7, #12
 8008284:	46bd      	mov	sp, r7
 8008286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800828a:	4770      	bx	lr

0800828c <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800828c:	b480      	push	{r7}
 800828e:	b083      	sub	sp, #12
 8008290:	af00      	add	r7, sp, #0
 8008292:	6078      	str	r0, [r7, #4]
 8008294:	460b      	mov	r3, r1
 8008296:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 8008298:	bf00      	nop
 800829a:	370c      	adds	r7, #12
 800829c:	46bd      	mov	sp, r7
 800829e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082a2:	4770      	bx	lr

080082a4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80082a4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80082a8:	b092      	sub	sp, #72	; 0x48
 80082aa:	af00      	add	r7, sp, #0
 80082ac:	6178      	str	r0, [r7, #20]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80082ae:	2300      	movs	r3, #0
 80082b0:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80082b4:	697b      	ldr	r3, [r7, #20]
 80082b6:	689a      	ldr	r2, [r3, #8]
 80082b8:	697b      	ldr	r3, [r7, #20]
 80082ba:	691b      	ldr	r3, [r3, #16]
 80082bc:	431a      	orrs	r2, r3
 80082be:	697b      	ldr	r3, [r7, #20]
 80082c0:	695b      	ldr	r3, [r3, #20]
 80082c2:	431a      	orrs	r2, r3
 80082c4:	697b      	ldr	r3, [r7, #20]
 80082c6:	69db      	ldr	r3, [r3, #28]
 80082c8:	4313      	orrs	r3, r2
 80082ca:	647b      	str	r3, [r7, #68]	; 0x44
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80082cc:	697b      	ldr	r3, [r7, #20]
 80082ce:	681b      	ldr	r3, [r3, #0]
 80082d0:	681a      	ldr	r2, [r3, #0]
 80082d2:	4bbe      	ldr	r3, [pc, #760]	; (80085cc <UART_SetConfig+0x328>)
 80082d4:	4013      	ands	r3, r2
 80082d6:	697a      	ldr	r2, [r7, #20]
 80082d8:	6812      	ldr	r2, [r2, #0]
 80082da:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80082dc:	430b      	orrs	r3, r1
 80082de:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80082e0:	697b      	ldr	r3, [r7, #20]
 80082e2:	681b      	ldr	r3, [r3, #0]
 80082e4:	685b      	ldr	r3, [r3, #4]
 80082e6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80082ea:	697b      	ldr	r3, [r7, #20]
 80082ec:	68da      	ldr	r2, [r3, #12]
 80082ee:	697b      	ldr	r3, [r7, #20]
 80082f0:	681b      	ldr	r3, [r3, #0]
 80082f2:	430a      	orrs	r2, r1
 80082f4:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80082f6:	697b      	ldr	r3, [r7, #20]
 80082f8:	699b      	ldr	r3, [r3, #24]
 80082fa:	647b      	str	r3, [r7, #68]	; 0x44

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 80082fc:	697b      	ldr	r3, [r7, #20]
 80082fe:	681b      	ldr	r3, [r3, #0]
 8008300:	4ab3      	ldr	r2, [pc, #716]	; (80085d0 <UART_SetConfig+0x32c>)
 8008302:	4293      	cmp	r3, r2
 8008304:	d004      	beq.n	8008310 <UART_SetConfig+0x6c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 8008306:	697b      	ldr	r3, [r7, #20]
 8008308:	6a1b      	ldr	r3, [r3, #32]
 800830a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800830c:	4313      	orrs	r3, r2
 800830e:	647b      	str	r3, [r7, #68]	; 0x44
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8008310:	697b      	ldr	r3, [r7, #20]
 8008312:	681b      	ldr	r3, [r3, #0]
 8008314:	689a      	ldr	r2, [r3, #8]
 8008316:	4baf      	ldr	r3, [pc, #700]	; (80085d4 <UART_SetConfig+0x330>)
 8008318:	4013      	ands	r3, r2
 800831a:	697a      	ldr	r2, [r7, #20]
 800831c:	6812      	ldr	r2, [r2, #0]
 800831e:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8008320:	430b      	orrs	r3, r1
 8008322:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 8008324:	697b      	ldr	r3, [r7, #20]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800832a:	f023 010f 	bic.w	r1, r3, #15
 800832e:	697b      	ldr	r3, [r7, #20]
 8008330:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008332:	697b      	ldr	r3, [r7, #20]
 8008334:	681b      	ldr	r3, [r3, #0]
 8008336:	430a      	orrs	r2, r1
 8008338:	62da      	str	r2, [r3, #44]	; 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800833a:	697b      	ldr	r3, [r7, #20]
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	4aa6      	ldr	r2, [pc, #664]	; (80085d8 <UART_SetConfig+0x334>)
 8008340:	4293      	cmp	r3, r2
 8008342:	d177      	bne.n	8008434 <UART_SetConfig+0x190>
 8008344:	4ba5      	ldr	r3, [pc, #660]	; (80085dc <UART_SetConfig+0x338>)
 8008346:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008348:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800834c:	2b28      	cmp	r3, #40	; 0x28
 800834e:	d86d      	bhi.n	800842c <UART_SetConfig+0x188>
 8008350:	a201      	add	r2, pc, #4	; (adr r2, 8008358 <UART_SetConfig+0xb4>)
 8008352:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008356:	bf00      	nop
 8008358:	080083fd 	.word	0x080083fd
 800835c:	0800842d 	.word	0x0800842d
 8008360:	0800842d 	.word	0x0800842d
 8008364:	0800842d 	.word	0x0800842d
 8008368:	0800842d 	.word	0x0800842d
 800836c:	0800842d 	.word	0x0800842d
 8008370:	0800842d 	.word	0x0800842d
 8008374:	0800842d 	.word	0x0800842d
 8008378:	08008405 	.word	0x08008405
 800837c:	0800842d 	.word	0x0800842d
 8008380:	0800842d 	.word	0x0800842d
 8008384:	0800842d 	.word	0x0800842d
 8008388:	0800842d 	.word	0x0800842d
 800838c:	0800842d 	.word	0x0800842d
 8008390:	0800842d 	.word	0x0800842d
 8008394:	0800842d 	.word	0x0800842d
 8008398:	0800840d 	.word	0x0800840d
 800839c:	0800842d 	.word	0x0800842d
 80083a0:	0800842d 	.word	0x0800842d
 80083a4:	0800842d 	.word	0x0800842d
 80083a8:	0800842d 	.word	0x0800842d
 80083ac:	0800842d 	.word	0x0800842d
 80083b0:	0800842d 	.word	0x0800842d
 80083b4:	0800842d 	.word	0x0800842d
 80083b8:	08008415 	.word	0x08008415
 80083bc:	0800842d 	.word	0x0800842d
 80083c0:	0800842d 	.word	0x0800842d
 80083c4:	0800842d 	.word	0x0800842d
 80083c8:	0800842d 	.word	0x0800842d
 80083cc:	0800842d 	.word	0x0800842d
 80083d0:	0800842d 	.word	0x0800842d
 80083d4:	0800842d 	.word	0x0800842d
 80083d8:	0800841d 	.word	0x0800841d
 80083dc:	0800842d 	.word	0x0800842d
 80083e0:	0800842d 	.word	0x0800842d
 80083e4:	0800842d 	.word	0x0800842d
 80083e8:	0800842d 	.word	0x0800842d
 80083ec:	0800842d 	.word	0x0800842d
 80083f0:	0800842d 	.word	0x0800842d
 80083f4:	0800842d 	.word	0x0800842d
 80083f8:	08008425 	.word	0x08008425
 80083fc:	2301      	movs	r3, #1
 80083fe:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008402:	e222      	b.n	800884a <UART_SetConfig+0x5a6>
 8008404:	2304      	movs	r3, #4
 8008406:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800840a:	e21e      	b.n	800884a <UART_SetConfig+0x5a6>
 800840c:	2308      	movs	r3, #8
 800840e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008412:	e21a      	b.n	800884a <UART_SetConfig+0x5a6>
 8008414:	2310      	movs	r3, #16
 8008416:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800841a:	e216      	b.n	800884a <UART_SetConfig+0x5a6>
 800841c:	2320      	movs	r3, #32
 800841e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008422:	e212      	b.n	800884a <UART_SetConfig+0x5a6>
 8008424:	2340      	movs	r3, #64	; 0x40
 8008426:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800842a:	e20e      	b.n	800884a <UART_SetConfig+0x5a6>
 800842c:	2380      	movs	r3, #128	; 0x80
 800842e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008432:	e20a      	b.n	800884a <UART_SetConfig+0x5a6>
 8008434:	697b      	ldr	r3, [r7, #20]
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	4a69      	ldr	r2, [pc, #420]	; (80085e0 <UART_SetConfig+0x33c>)
 800843a:	4293      	cmp	r3, r2
 800843c:	d130      	bne.n	80084a0 <UART_SetConfig+0x1fc>
 800843e:	4b67      	ldr	r3, [pc, #412]	; (80085dc <UART_SetConfig+0x338>)
 8008440:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008442:	f003 0307 	and.w	r3, r3, #7
 8008446:	2b05      	cmp	r3, #5
 8008448:	d826      	bhi.n	8008498 <UART_SetConfig+0x1f4>
 800844a:	a201      	add	r2, pc, #4	; (adr r2, 8008450 <UART_SetConfig+0x1ac>)
 800844c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008450:	08008469 	.word	0x08008469
 8008454:	08008471 	.word	0x08008471
 8008458:	08008479 	.word	0x08008479
 800845c:	08008481 	.word	0x08008481
 8008460:	08008489 	.word	0x08008489
 8008464:	08008491 	.word	0x08008491
 8008468:	2300      	movs	r3, #0
 800846a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800846e:	e1ec      	b.n	800884a <UART_SetConfig+0x5a6>
 8008470:	2304      	movs	r3, #4
 8008472:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008476:	e1e8      	b.n	800884a <UART_SetConfig+0x5a6>
 8008478:	2308      	movs	r3, #8
 800847a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800847e:	e1e4      	b.n	800884a <UART_SetConfig+0x5a6>
 8008480:	2310      	movs	r3, #16
 8008482:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008486:	e1e0      	b.n	800884a <UART_SetConfig+0x5a6>
 8008488:	2320      	movs	r3, #32
 800848a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800848e:	e1dc      	b.n	800884a <UART_SetConfig+0x5a6>
 8008490:	2340      	movs	r3, #64	; 0x40
 8008492:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008496:	e1d8      	b.n	800884a <UART_SetConfig+0x5a6>
 8008498:	2380      	movs	r3, #128	; 0x80
 800849a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800849e:	e1d4      	b.n	800884a <UART_SetConfig+0x5a6>
 80084a0:	697b      	ldr	r3, [r7, #20]
 80084a2:	681b      	ldr	r3, [r3, #0]
 80084a4:	4a4f      	ldr	r2, [pc, #316]	; (80085e4 <UART_SetConfig+0x340>)
 80084a6:	4293      	cmp	r3, r2
 80084a8:	d130      	bne.n	800850c <UART_SetConfig+0x268>
 80084aa:	4b4c      	ldr	r3, [pc, #304]	; (80085dc <UART_SetConfig+0x338>)
 80084ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80084ae:	f003 0307 	and.w	r3, r3, #7
 80084b2:	2b05      	cmp	r3, #5
 80084b4:	d826      	bhi.n	8008504 <UART_SetConfig+0x260>
 80084b6:	a201      	add	r2, pc, #4	; (adr r2, 80084bc <UART_SetConfig+0x218>)
 80084b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80084bc:	080084d5 	.word	0x080084d5
 80084c0:	080084dd 	.word	0x080084dd
 80084c4:	080084e5 	.word	0x080084e5
 80084c8:	080084ed 	.word	0x080084ed
 80084cc:	080084f5 	.word	0x080084f5
 80084d0:	080084fd 	.word	0x080084fd
 80084d4:	2300      	movs	r3, #0
 80084d6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80084da:	e1b6      	b.n	800884a <UART_SetConfig+0x5a6>
 80084dc:	2304      	movs	r3, #4
 80084de:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80084e2:	e1b2      	b.n	800884a <UART_SetConfig+0x5a6>
 80084e4:	2308      	movs	r3, #8
 80084e6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80084ea:	e1ae      	b.n	800884a <UART_SetConfig+0x5a6>
 80084ec:	2310      	movs	r3, #16
 80084ee:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80084f2:	e1aa      	b.n	800884a <UART_SetConfig+0x5a6>
 80084f4:	2320      	movs	r3, #32
 80084f6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80084fa:	e1a6      	b.n	800884a <UART_SetConfig+0x5a6>
 80084fc:	2340      	movs	r3, #64	; 0x40
 80084fe:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008502:	e1a2      	b.n	800884a <UART_SetConfig+0x5a6>
 8008504:	2380      	movs	r3, #128	; 0x80
 8008506:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800850a:	e19e      	b.n	800884a <UART_SetConfig+0x5a6>
 800850c:	697b      	ldr	r3, [r7, #20]
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	4a35      	ldr	r2, [pc, #212]	; (80085e8 <UART_SetConfig+0x344>)
 8008512:	4293      	cmp	r3, r2
 8008514:	d130      	bne.n	8008578 <UART_SetConfig+0x2d4>
 8008516:	4b31      	ldr	r3, [pc, #196]	; (80085dc <UART_SetConfig+0x338>)
 8008518:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800851a:	f003 0307 	and.w	r3, r3, #7
 800851e:	2b05      	cmp	r3, #5
 8008520:	d826      	bhi.n	8008570 <UART_SetConfig+0x2cc>
 8008522:	a201      	add	r2, pc, #4	; (adr r2, 8008528 <UART_SetConfig+0x284>)
 8008524:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008528:	08008541 	.word	0x08008541
 800852c:	08008549 	.word	0x08008549
 8008530:	08008551 	.word	0x08008551
 8008534:	08008559 	.word	0x08008559
 8008538:	08008561 	.word	0x08008561
 800853c:	08008569 	.word	0x08008569
 8008540:	2300      	movs	r3, #0
 8008542:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008546:	e180      	b.n	800884a <UART_SetConfig+0x5a6>
 8008548:	2304      	movs	r3, #4
 800854a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800854e:	e17c      	b.n	800884a <UART_SetConfig+0x5a6>
 8008550:	2308      	movs	r3, #8
 8008552:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008556:	e178      	b.n	800884a <UART_SetConfig+0x5a6>
 8008558:	2310      	movs	r3, #16
 800855a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800855e:	e174      	b.n	800884a <UART_SetConfig+0x5a6>
 8008560:	2320      	movs	r3, #32
 8008562:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008566:	e170      	b.n	800884a <UART_SetConfig+0x5a6>
 8008568:	2340      	movs	r3, #64	; 0x40
 800856a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800856e:	e16c      	b.n	800884a <UART_SetConfig+0x5a6>
 8008570:	2380      	movs	r3, #128	; 0x80
 8008572:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008576:	e168      	b.n	800884a <UART_SetConfig+0x5a6>
 8008578:	697b      	ldr	r3, [r7, #20]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	4a1b      	ldr	r2, [pc, #108]	; (80085ec <UART_SetConfig+0x348>)
 800857e:	4293      	cmp	r3, r2
 8008580:	d142      	bne.n	8008608 <UART_SetConfig+0x364>
 8008582:	4b16      	ldr	r3, [pc, #88]	; (80085dc <UART_SetConfig+0x338>)
 8008584:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008586:	f003 0307 	and.w	r3, r3, #7
 800858a:	2b05      	cmp	r3, #5
 800858c:	d838      	bhi.n	8008600 <UART_SetConfig+0x35c>
 800858e:	a201      	add	r2, pc, #4	; (adr r2, 8008594 <UART_SetConfig+0x2f0>)
 8008590:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008594:	080085ad 	.word	0x080085ad
 8008598:	080085b5 	.word	0x080085b5
 800859c:	080085bd 	.word	0x080085bd
 80085a0:	080085c5 	.word	0x080085c5
 80085a4:	080085f1 	.word	0x080085f1
 80085a8:	080085f9 	.word	0x080085f9
 80085ac:	2300      	movs	r3, #0
 80085ae:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085b2:	e14a      	b.n	800884a <UART_SetConfig+0x5a6>
 80085b4:	2304      	movs	r3, #4
 80085b6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085ba:	e146      	b.n	800884a <UART_SetConfig+0x5a6>
 80085bc:	2308      	movs	r3, #8
 80085be:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085c2:	e142      	b.n	800884a <UART_SetConfig+0x5a6>
 80085c4:	2310      	movs	r3, #16
 80085c6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085ca:	e13e      	b.n	800884a <UART_SetConfig+0x5a6>
 80085cc:	cfff69f3 	.word	0xcfff69f3
 80085d0:	58000c00 	.word	0x58000c00
 80085d4:	11fff4ff 	.word	0x11fff4ff
 80085d8:	40011000 	.word	0x40011000
 80085dc:	58024400 	.word	0x58024400
 80085e0:	40004400 	.word	0x40004400
 80085e4:	40004800 	.word	0x40004800
 80085e8:	40004c00 	.word	0x40004c00
 80085ec:	40005000 	.word	0x40005000
 80085f0:	2320      	movs	r3, #32
 80085f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085f6:	e128      	b.n	800884a <UART_SetConfig+0x5a6>
 80085f8:	2340      	movs	r3, #64	; 0x40
 80085fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80085fe:	e124      	b.n	800884a <UART_SetConfig+0x5a6>
 8008600:	2380      	movs	r3, #128	; 0x80
 8008602:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008606:	e120      	b.n	800884a <UART_SetConfig+0x5a6>
 8008608:	697b      	ldr	r3, [r7, #20]
 800860a:	681b      	ldr	r3, [r3, #0]
 800860c:	4acb      	ldr	r2, [pc, #812]	; (800893c <UART_SetConfig+0x698>)
 800860e:	4293      	cmp	r3, r2
 8008610:	d176      	bne.n	8008700 <UART_SetConfig+0x45c>
 8008612:	4bcb      	ldr	r3, [pc, #812]	; (8008940 <UART_SetConfig+0x69c>)
 8008614:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008616:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800861a:	2b28      	cmp	r3, #40	; 0x28
 800861c:	d86c      	bhi.n	80086f8 <UART_SetConfig+0x454>
 800861e:	a201      	add	r2, pc, #4	; (adr r2, 8008624 <UART_SetConfig+0x380>)
 8008620:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008624:	080086c9 	.word	0x080086c9
 8008628:	080086f9 	.word	0x080086f9
 800862c:	080086f9 	.word	0x080086f9
 8008630:	080086f9 	.word	0x080086f9
 8008634:	080086f9 	.word	0x080086f9
 8008638:	080086f9 	.word	0x080086f9
 800863c:	080086f9 	.word	0x080086f9
 8008640:	080086f9 	.word	0x080086f9
 8008644:	080086d1 	.word	0x080086d1
 8008648:	080086f9 	.word	0x080086f9
 800864c:	080086f9 	.word	0x080086f9
 8008650:	080086f9 	.word	0x080086f9
 8008654:	080086f9 	.word	0x080086f9
 8008658:	080086f9 	.word	0x080086f9
 800865c:	080086f9 	.word	0x080086f9
 8008660:	080086f9 	.word	0x080086f9
 8008664:	080086d9 	.word	0x080086d9
 8008668:	080086f9 	.word	0x080086f9
 800866c:	080086f9 	.word	0x080086f9
 8008670:	080086f9 	.word	0x080086f9
 8008674:	080086f9 	.word	0x080086f9
 8008678:	080086f9 	.word	0x080086f9
 800867c:	080086f9 	.word	0x080086f9
 8008680:	080086f9 	.word	0x080086f9
 8008684:	080086e1 	.word	0x080086e1
 8008688:	080086f9 	.word	0x080086f9
 800868c:	080086f9 	.word	0x080086f9
 8008690:	080086f9 	.word	0x080086f9
 8008694:	080086f9 	.word	0x080086f9
 8008698:	080086f9 	.word	0x080086f9
 800869c:	080086f9 	.word	0x080086f9
 80086a0:	080086f9 	.word	0x080086f9
 80086a4:	080086e9 	.word	0x080086e9
 80086a8:	080086f9 	.word	0x080086f9
 80086ac:	080086f9 	.word	0x080086f9
 80086b0:	080086f9 	.word	0x080086f9
 80086b4:	080086f9 	.word	0x080086f9
 80086b8:	080086f9 	.word	0x080086f9
 80086bc:	080086f9 	.word	0x080086f9
 80086c0:	080086f9 	.word	0x080086f9
 80086c4:	080086f1 	.word	0x080086f1
 80086c8:	2301      	movs	r3, #1
 80086ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086ce:	e0bc      	b.n	800884a <UART_SetConfig+0x5a6>
 80086d0:	2304      	movs	r3, #4
 80086d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086d6:	e0b8      	b.n	800884a <UART_SetConfig+0x5a6>
 80086d8:	2308      	movs	r3, #8
 80086da:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086de:	e0b4      	b.n	800884a <UART_SetConfig+0x5a6>
 80086e0:	2310      	movs	r3, #16
 80086e2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086e6:	e0b0      	b.n	800884a <UART_SetConfig+0x5a6>
 80086e8:	2320      	movs	r3, #32
 80086ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086ee:	e0ac      	b.n	800884a <UART_SetConfig+0x5a6>
 80086f0:	2340      	movs	r3, #64	; 0x40
 80086f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086f6:	e0a8      	b.n	800884a <UART_SetConfig+0x5a6>
 80086f8:	2380      	movs	r3, #128	; 0x80
 80086fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80086fe:	e0a4      	b.n	800884a <UART_SetConfig+0x5a6>
 8008700:	697b      	ldr	r3, [r7, #20]
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	4a8f      	ldr	r2, [pc, #572]	; (8008944 <UART_SetConfig+0x6a0>)
 8008706:	4293      	cmp	r3, r2
 8008708:	d130      	bne.n	800876c <UART_SetConfig+0x4c8>
 800870a:	4b8d      	ldr	r3, [pc, #564]	; (8008940 <UART_SetConfig+0x69c>)
 800870c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800870e:	f003 0307 	and.w	r3, r3, #7
 8008712:	2b05      	cmp	r3, #5
 8008714:	d826      	bhi.n	8008764 <UART_SetConfig+0x4c0>
 8008716:	a201      	add	r2, pc, #4	; (adr r2, 800871c <UART_SetConfig+0x478>)
 8008718:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800871c:	08008735 	.word	0x08008735
 8008720:	0800873d 	.word	0x0800873d
 8008724:	08008745 	.word	0x08008745
 8008728:	0800874d 	.word	0x0800874d
 800872c:	08008755 	.word	0x08008755
 8008730:	0800875d 	.word	0x0800875d
 8008734:	2300      	movs	r3, #0
 8008736:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800873a:	e086      	b.n	800884a <UART_SetConfig+0x5a6>
 800873c:	2304      	movs	r3, #4
 800873e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008742:	e082      	b.n	800884a <UART_SetConfig+0x5a6>
 8008744:	2308      	movs	r3, #8
 8008746:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800874a:	e07e      	b.n	800884a <UART_SetConfig+0x5a6>
 800874c:	2310      	movs	r3, #16
 800874e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008752:	e07a      	b.n	800884a <UART_SetConfig+0x5a6>
 8008754:	2320      	movs	r3, #32
 8008756:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800875a:	e076      	b.n	800884a <UART_SetConfig+0x5a6>
 800875c:	2340      	movs	r3, #64	; 0x40
 800875e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008762:	e072      	b.n	800884a <UART_SetConfig+0x5a6>
 8008764:	2380      	movs	r3, #128	; 0x80
 8008766:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800876a:	e06e      	b.n	800884a <UART_SetConfig+0x5a6>
 800876c:	697b      	ldr	r3, [r7, #20]
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	4a75      	ldr	r2, [pc, #468]	; (8008948 <UART_SetConfig+0x6a4>)
 8008772:	4293      	cmp	r3, r2
 8008774:	d130      	bne.n	80087d8 <UART_SetConfig+0x534>
 8008776:	4b72      	ldr	r3, [pc, #456]	; (8008940 <UART_SetConfig+0x69c>)
 8008778:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800877a:	f003 0307 	and.w	r3, r3, #7
 800877e:	2b05      	cmp	r3, #5
 8008780:	d826      	bhi.n	80087d0 <UART_SetConfig+0x52c>
 8008782:	a201      	add	r2, pc, #4	; (adr r2, 8008788 <UART_SetConfig+0x4e4>)
 8008784:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008788:	080087a1 	.word	0x080087a1
 800878c:	080087a9 	.word	0x080087a9
 8008790:	080087b1 	.word	0x080087b1
 8008794:	080087b9 	.word	0x080087b9
 8008798:	080087c1 	.word	0x080087c1
 800879c:	080087c9 	.word	0x080087c9
 80087a0:	2300      	movs	r3, #0
 80087a2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087a6:	e050      	b.n	800884a <UART_SetConfig+0x5a6>
 80087a8:	2304      	movs	r3, #4
 80087aa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087ae:	e04c      	b.n	800884a <UART_SetConfig+0x5a6>
 80087b0:	2308      	movs	r3, #8
 80087b2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087b6:	e048      	b.n	800884a <UART_SetConfig+0x5a6>
 80087b8:	2310      	movs	r3, #16
 80087ba:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087be:	e044      	b.n	800884a <UART_SetConfig+0x5a6>
 80087c0:	2320      	movs	r3, #32
 80087c2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087c6:	e040      	b.n	800884a <UART_SetConfig+0x5a6>
 80087c8:	2340      	movs	r3, #64	; 0x40
 80087ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087ce:	e03c      	b.n	800884a <UART_SetConfig+0x5a6>
 80087d0:	2380      	movs	r3, #128	; 0x80
 80087d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80087d6:	e038      	b.n	800884a <UART_SetConfig+0x5a6>
 80087d8:	697b      	ldr	r3, [r7, #20]
 80087da:	681b      	ldr	r3, [r3, #0]
 80087dc:	4a5b      	ldr	r2, [pc, #364]	; (800894c <UART_SetConfig+0x6a8>)
 80087de:	4293      	cmp	r3, r2
 80087e0:	d130      	bne.n	8008844 <UART_SetConfig+0x5a0>
 80087e2:	4b57      	ldr	r3, [pc, #348]	; (8008940 <UART_SetConfig+0x69c>)
 80087e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80087e6:	f003 0307 	and.w	r3, r3, #7
 80087ea:	2b05      	cmp	r3, #5
 80087ec:	d826      	bhi.n	800883c <UART_SetConfig+0x598>
 80087ee:	a201      	add	r2, pc, #4	; (adr r2, 80087f4 <UART_SetConfig+0x550>)
 80087f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80087f4:	0800880d 	.word	0x0800880d
 80087f8:	08008815 	.word	0x08008815
 80087fc:	0800881d 	.word	0x0800881d
 8008800:	08008825 	.word	0x08008825
 8008804:	0800882d 	.word	0x0800882d
 8008808:	08008835 	.word	0x08008835
 800880c:	2302      	movs	r3, #2
 800880e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008812:	e01a      	b.n	800884a <UART_SetConfig+0x5a6>
 8008814:	2304      	movs	r3, #4
 8008816:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800881a:	e016      	b.n	800884a <UART_SetConfig+0x5a6>
 800881c:	2308      	movs	r3, #8
 800881e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008822:	e012      	b.n	800884a <UART_SetConfig+0x5a6>
 8008824:	2310      	movs	r3, #16
 8008826:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800882a:	e00e      	b.n	800884a <UART_SetConfig+0x5a6>
 800882c:	2320      	movs	r3, #32
 800882e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008832:	e00a      	b.n	800884a <UART_SetConfig+0x5a6>
 8008834:	2340      	movs	r3, #64	; 0x40
 8008836:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800883a:	e006      	b.n	800884a <UART_SetConfig+0x5a6>
 800883c:	2380      	movs	r3, #128	; 0x80
 800883e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8008842:	e002      	b.n	800884a <UART_SetConfig+0x5a6>
 8008844:	2380      	movs	r3, #128	; 0x80
 8008846:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 800884a:	697b      	ldr	r3, [r7, #20]
 800884c:	681b      	ldr	r3, [r3, #0]
 800884e:	4a3f      	ldr	r2, [pc, #252]	; (800894c <UART_SetConfig+0x6a8>)
 8008850:	4293      	cmp	r3, r2
 8008852:	f040 80f8 	bne.w	8008a46 <UART_SetConfig+0x7a2>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 8008856:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800885a:	2b20      	cmp	r3, #32
 800885c:	dc46      	bgt.n	80088ec <UART_SetConfig+0x648>
 800885e:	2b02      	cmp	r3, #2
 8008860:	f2c0 8082 	blt.w	8008968 <UART_SetConfig+0x6c4>
 8008864:	3b02      	subs	r3, #2
 8008866:	2b1e      	cmp	r3, #30
 8008868:	d87e      	bhi.n	8008968 <UART_SetConfig+0x6c4>
 800886a:	a201      	add	r2, pc, #4	; (adr r2, 8008870 <UART_SetConfig+0x5cc>)
 800886c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008870:	080088f3 	.word	0x080088f3
 8008874:	08008969 	.word	0x08008969
 8008878:	080088fb 	.word	0x080088fb
 800887c:	08008969 	.word	0x08008969
 8008880:	08008969 	.word	0x08008969
 8008884:	08008969 	.word	0x08008969
 8008888:	0800890b 	.word	0x0800890b
 800888c:	08008969 	.word	0x08008969
 8008890:	08008969 	.word	0x08008969
 8008894:	08008969 	.word	0x08008969
 8008898:	08008969 	.word	0x08008969
 800889c:	08008969 	.word	0x08008969
 80088a0:	08008969 	.word	0x08008969
 80088a4:	08008969 	.word	0x08008969
 80088a8:	0800891b 	.word	0x0800891b
 80088ac:	08008969 	.word	0x08008969
 80088b0:	08008969 	.word	0x08008969
 80088b4:	08008969 	.word	0x08008969
 80088b8:	08008969 	.word	0x08008969
 80088bc:	08008969 	.word	0x08008969
 80088c0:	08008969 	.word	0x08008969
 80088c4:	08008969 	.word	0x08008969
 80088c8:	08008969 	.word	0x08008969
 80088cc:	08008969 	.word	0x08008969
 80088d0:	08008969 	.word	0x08008969
 80088d4:	08008969 	.word	0x08008969
 80088d8:	08008969 	.word	0x08008969
 80088dc:	08008969 	.word	0x08008969
 80088e0:	08008969 	.word	0x08008969
 80088e4:	08008969 	.word	0x08008969
 80088e8:	0800895b 	.word	0x0800895b
 80088ec:	2b40      	cmp	r3, #64	; 0x40
 80088ee:	d037      	beq.n	8008960 <UART_SetConfig+0x6bc>
 80088f0:	e03a      	b.n	8008968 <UART_SetConfig+0x6c4>
    {
      case UART_CLOCKSOURCE_D3PCLK1:
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
 80088f2:	f7fd fdff 	bl	80064f4 <HAL_RCCEx_GetD3PCLK1Freq>
 80088f6:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 80088f8:	e03c      	b.n	8008974 <UART_SetConfig+0x6d0>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80088fa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80088fe:	4618      	mov	r0, r3
 8008900:	f7fd fe0e 	bl	8006520 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 8008904:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008906:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008908:	e034      	b.n	8008974 <UART_SetConfig+0x6d0>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800890a:	f107 0318 	add.w	r3, r7, #24
 800890e:	4618      	mov	r0, r3
 8008910:	f7fd ff5a 	bl	80067c8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 8008914:	69fb      	ldr	r3, [r7, #28]
 8008916:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008918:	e02c      	b.n	8008974 <UART_SetConfig+0x6d0>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800891a:	4b09      	ldr	r3, [pc, #36]	; (8008940 <UART_SetConfig+0x69c>)
 800891c:	681b      	ldr	r3, [r3, #0]
 800891e:	f003 0320 	and.w	r3, r3, #32
 8008922:	2b00      	cmp	r3, #0
 8008924:	d016      	beq.n	8008954 <UART_SetConfig+0x6b0>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 8008926:	4b06      	ldr	r3, [pc, #24]	; (8008940 <UART_SetConfig+0x69c>)
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	08db      	lsrs	r3, r3, #3
 800892c:	f003 0303 	and.w	r3, r3, #3
 8008930:	4a07      	ldr	r2, [pc, #28]	; (8008950 <UART_SetConfig+0x6ac>)
 8008932:	fa22 f303 	lsr.w	r3, r2, r3
 8008936:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8008938:	e01c      	b.n	8008974 <UART_SetConfig+0x6d0>
 800893a:	bf00      	nop
 800893c:	40011400 	.word	0x40011400
 8008940:	58024400 	.word	0x58024400
 8008944:	40007800 	.word	0x40007800
 8008948:	40007c00 	.word	0x40007c00
 800894c:	58000c00 	.word	0x58000c00
 8008950:	03d09000 	.word	0x03d09000
          pclk = (uint32_t) HSI_VALUE;
 8008954:	4b9d      	ldr	r3, [pc, #628]	; (8008bcc <UART_SetConfig+0x928>)
 8008956:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008958:	e00c      	b.n	8008974 <UART_SetConfig+0x6d0>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 800895a:	4b9d      	ldr	r3, [pc, #628]	; (8008bd0 <UART_SetConfig+0x92c>)
 800895c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800895e:	e009      	b.n	8008974 <UART_SetConfig+0x6d0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8008960:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8008964:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008966:	e005      	b.n	8008974 <UART_SetConfig+0x6d0>
      default:
        pclk = 0U;
 8008968:	2300      	movs	r3, #0
 800896a:	63fb      	str	r3, [r7, #60]	; 0x3c
        ret = HAL_ERROR;
 800896c:	2301      	movs	r3, #1
 800896e:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
        break;
 8008972:	bf00      	nop
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 8008974:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008976:	2b00      	cmp	r3, #0
 8008978:	f000 81de 	beq.w	8008d38 <UART_SetConfig+0xa94>
    {
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 800897c:	697b      	ldr	r3, [r7, #20]
 800897e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008980:	4a94      	ldr	r2, [pc, #592]	; (8008bd4 <UART_SetConfig+0x930>)
 8008982:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008986:	461a      	mov	r2, r3
 8008988:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800898a:	fbb3 f3f2 	udiv	r3, r3, r2
 800898e:	633b      	str	r3, [r7, #48]	; 0x30

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8008990:	697b      	ldr	r3, [r7, #20]
 8008992:	685a      	ldr	r2, [r3, #4]
 8008994:	4613      	mov	r3, r2
 8008996:	005b      	lsls	r3, r3, #1
 8008998:	4413      	add	r3, r2
 800899a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800899c:	429a      	cmp	r2, r3
 800899e:	d305      	bcc.n	80089ac <UART_SetConfig+0x708>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 80089a0:	697b      	ldr	r3, [r7, #20]
 80089a2:	685b      	ldr	r3, [r3, #4]
 80089a4:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 80089a6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80089a8:	429a      	cmp	r2, r3
 80089aa:	d903      	bls.n	80089b4 <UART_SetConfig+0x710>
      {
        ret = HAL_ERROR;
 80089ac:	2301      	movs	r3, #1
 80089ae:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 80089b2:	e1c1      	b.n	8008d38 <UART_SetConfig+0xa94>
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 80089b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80089b6:	2200      	movs	r2, #0
 80089b8:	60bb      	str	r3, [r7, #8]
 80089ba:	60fa      	str	r2, [r7, #12]
 80089bc:	697b      	ldr	r3, [r7, #20]
 80089be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80089c0:	4a84      	ldr	r2, [pc, #528]	; (8008bd4 <UART_SetConfig+0x930>)
 80089c2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80089c6:	b29b      	uxth	r3, r3
 80089c8:	2200      	movs	r2, #0
 80089ca:	603b      	str	r3, [r7, #0]
 80089cc:	607a      	str	r2, [r7, #4]
 80089ce:	e9d7 2300 	ldrd	r2, r3, [r7]
 80089d2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80089d6:	f7f7 fcd3 	bl	8000380 <__aeabi_uldivmod>
 80089da:	4602      	mov	r2, r0
 80089dc:	460b      	mov	r3, r1
 80089de:	4610      	mov	r0, r2
 80089e0:	4619      	mov	r1, r3
 80089e2:	f04f 0200 	mov.w	r2, #0
 80089e6:	f04f 0300 	mov.w	r3, #0
 80089ea:	020b      	lsls	r3, r1, #8
 80089ec:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80089f0:	0202      	lsls	r2, r0, #8
 80089f2:	6979      	ldr	r1, [r7, #20]
 80089f4:	6849      	ldr	r1, [r1, #4]
 80089f6:	0849      	lsrs	r1, r1, #1
 80089f8:	2000      	movs	r0, #0
 80089fa:	460c      	mov	r4, r1
 80089fc:	4605      	mov	r5, r0
 80089fe:	eb12 0804 	adds.w	r8, r2, r4
 8008a02:	eb43 0905 	adc.w	r9, r3, r5
 8008a06:	697b      	ldr	r3, [r7, #20]
 8008a08:	685b      	ldr	r3, [r3, #4]
 8008a0a:	2200      	movs	r2, #0
 8008a0c:	469a      	mov	sl, r3
 8008a0e:	4693      	mov	fp, r2
 8008a10:	4652      	mov	r2, sl
 8008a12:	465b      	mov	r3, fp
 8008a14:	4640      	mov	r0, r8
 8008a16:	4649      	mov	r1, r9
 8008a18:	f7f7 fcb2 	bl	8000380 <__aeabi_uldivmod>
 8008a1c:	4602      	mov	r2, r0
 8008a1e:	460b      	mov	r3, r1
 8008a20:	4613      	mov	r3, r2
 8008a22:	63bb      	str	r3, [r7, #56]	; 0x38
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8008a24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008a26:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008a2a:	d308      	bcc.n	8008a3e <UART_SetConfig+0x79a>
 8008a2c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008a2e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008a32:	d204      	bcs.n	8008a3e <UART_SetConfig+0x79a>
        {
          huart->Instance->BRR = usartdiv;
 8008a34:	697b      	ldr	r3, [r7, #20]
 8008a36:	681b      	ldr	r3, [r3, #0]
 8008a38:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8008a3a:	60da      	str	r2, [r3, #12]
 8008a3c:	e17c      	b.n	8008d38 <UART_SetConfig+0xa94>
        }
        else
        {
          ret = HAL_ERROR;
 8008a3e:	2301      	movs	r3, #1
 8008a40:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8008a44:	e178      	b.n	8008d38 <UART_SetConfig+0xa94>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008a46:	697b      	ldr	r3, [r7, #20]
 8008a48:	69db      	ldr	r3, [r3, #28]
 8008a4a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008a4e:	f040 80c5 	bne.w	8008bdc <UART_SetConfig+0x938>
  {
    switch (clocksource)
 8008a52:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8008a56:	2b20      	cmp	r3, #32
 8008a58:	dc48      	bgt.n	8008aec <UART_SetConfig+0x848>
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	db7b      	blt.n	8008b56 <UART_SetConfig+0x8b2>
 8008a5e:	2b20      	cmp	r3, #32
 8008a60:	d879      	bhi.n	8008b56 <UART_SetConfig+0x8b2>
 8008a62:	a201      	add	r2, pc, #4	; (adr r2, 8008a68 <UART_SetConfig+0x7c4>)
 8008a64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008a68:	08008af3 	.word	0x08008af3
 8008a6c:	08008afb 	.word	0x08008afb
 8008a70:	08008b57 	.word	0x08008b57
 8008a74:	08008b57 	.word	0x08008b57
 8008a78:	08008b03 	.word	0x08008b03
 8008a7c:	08008b57 	.word	0x08008b57
 8008a80:	08008b57 	.word	0x08008b57
 8008a84:	08008b57 	.word	0x08008b57
 8008a88:	08008b13 	.word	0x08008b13
 8008a8c:	08008b57 	.word	0x08008b57
 8008a90:	08008b57 	.word	0x08008b57
 8008a94:	08008b57 	.word	0x08008b57
 8008a98:	08008b57 	.word	0x08008b57
 8008a9c:	08008b57 	.word	0x08008b57
 8008aa0:	08008b57 	.word	0x08008b57
 8008aa4:	08008b57 	.word	0x08008b57
 8008aa8:	08008b23 	.word	0x08008b23
 8008aac:	08008b57 	.word	0x08008b57
 8008ab0:	08008b57 	.word	0x08008b57
 8008ab4:	08008b57 	.word	0x08008b57
 8008ab8:	08008b57 	.word	0x08008b57
 8008abc:	08008b57 	.word	0x08008b57
 8008ac0:	08008b57 	.word	0x08008b57
 8008ac4:	08008b57 	.word	0x08008b57
 8008ac8:	08008b57 	.word	0x08008b57
 8008acc:	08008b57 	.word	0x08008b57
 8008ad0:	08008b57 	.word	0x08008b57
 8008ad4:	08008b57 	.word	0x08008b57
 8008ad8:	08008b57 	.word	0x08008b57
 8008adc:	08008b57 	.word	0x08008b57
 8008ae0:	08008b57 	.word	0x08008b57
 8008ae4:	08008b57 	.word	0x08008b57
 8008ae8:	08008b49 	.word	0x08008b49
 8008aec:	2b40      	cmp	r3, #64	; 0x40
 8008aee:	d02e      	beq.n	8008b4e <UART_SetConfig+0x8aa>
 8008af0:	e031      	b.n	8008b56 <UART_SetConfig+0x8b2>
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8008af2:	f7fc fac9 	bl	8005088 <HAL_RCC_GetPCLK1Freq>
 8008af6:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8008af8:	e033      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8008afa:	f7fc fadb 	bl	80050b4 <HAL_RCC_GetPCLK2Freq>
 8008afe:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8008b00:	e02f      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008b02:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008b06:	4618      	mov	r0, r3
 8008b08:	f7fd fd0a 	bl	8006520 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 8008b0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008b0e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008b10:	e027      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008b12:	f107 0318 	add.w	r3, r7, #24
 8008b16:	4618      	mov	r0, r3
 8008b18:	f7fd fe56 	bl	80067c8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 8008b1c:	69fb      	ldr	r3, [r7, #28]
 8008b1e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008b20:	e01f      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008b22:	4b2d      	ldr	r3, [pc, #180]	; (8008bd8 <UART_SetConfig+0x934>)
 8008b24:	681b      	ldr	r3, [r3, #0]
 8008b26:	f003 0320 	and.w	r3, r3, #32
 8008b2a:	2b00      	cmp	r3, #0
 8008b2c:	d009      	beq.n	8008b42 <UART_SetConfig+0x89e>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 8008b2e:	4b2a      	ldr	r3, [pc, #168]	; (8008bd8 <UART_SetConfig+0x934>)
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	08db      	lsrs	r3, r3, #3
 8008b34:	f003 0303 	and.w	r3, r3, #3
 8008b38:	4a24      	ldr	r2, [pc, #144]	; (8008bcc <UART_SetConfig+0x928>)
 8008b3a:	fa22 f303 	lsr.w	r3, r2, r3
 8008b3e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8008b40:	e00f      	b.n	8008b62 <UART_SetConfig+0x8be>
          pclk = (uint32_t) HSI_VALUE;
 8008b42:	4b22      	ldr	r3, [pc, #136]	; (8008bcc <UART_SetConfig+0x928>)
 8008b44:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008b46:	e00c      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 8008b48:	4b21      	ldr	r3, [pc, #132]	; (8008bd0 <UART_SetConfig+0x92c>)
 8008b4a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008b4c:	e009      	b.n	8008b62 <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8008b4e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8008b52:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008b54:	e005      	b.n	8008b62 <UART_SetConfig+0x8be>
      default:
        pclk = 0U;
 8008b56:	2300      	movs	r3, #0
 8008b58:	63fb      	str	r3, [r7, #60]	; 0x3c
        ret = HAL_ERROR;
 8008b5a:	2301      	movs	r3, #1
 8008b5c:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
        break;
 8008b60:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8008b62:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008b64:	2b00      	cmp	r3, #0
 8008b66:	f000 80e7 	beq.w	8008d38 <UART_SetConfig+0xa94>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8008b6a:	697b      	ldr	r3, [r7, #20]
 8008b6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b6e:	4a19      	ldr	r2, [pc, #100]	; (8008bd4 <UART_SetConfig+0x930>)
 8008b70:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008b74:	461a      	mov	r2, r3
 8008b76:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008b78:	fbb3 f3f2 	udiv	r3, r3, r2
 8008b7c:	005a      	lsls	r2, r3, #1
 8008b7e:	697b      	ldr	r3, [r7, #20]
 8008b80:	685b      	ldr	r3, [r3, #4]
 8008b82:	085b      	lsrs	r3, r3, #1
 8008b84:	441a      	add	r2, r3
 8008b86:	697b      	ldr	r3, [r7, #20]
 8008b88:	685b      	ldr	r3, [r3, #4]
 8008b8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8008b8e:	63bb      	str	r3, [r7, #56]	; 0x38
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8008b90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008b92:	2b0f      	cmp	r3, #15
 8008b94:	d916      	bls.n	8008bc4 <UART_SetConfig+0x920>
 8008b96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008b98:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008b9c:	d212      	bcs.n	8008bc4 <UART_SetConfig+0x920>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8008b9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008ba0:	b29b      	uxth	r3, r3
 8008ba2:	f023 030f 	bic.w	r3, r3, #15
 8008ba6:	86fb      	strh	r3, [r7, #54]	; 0x36
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8008ba8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008baa:	085b      	lsrs	r3, r3, #1
 8008bac:	b29b      	uxth	r3, r3
 8008bae:	f003 0307 	and.w	r3, r3, #7
 8008bb2:	b29a      	uxth	r2, r3
 8008bb4:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 8008bb6:	4313      	orrs	r3, r2
 8008bb8:	86fb      	strh	r3, [r7, #54]	; 0x36
        huart->Instance->BRR = brrtemp;
 8008bba:	697b      	ldr	r3, [r7, #20]
 8008bbc:	681b      	ldr	r3, [r3, #0]
 8008bbe:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 8008bc0:	60da      	str	r2, [r3, #12]
 8008bc2:	e0b9      	b.n	8008d38 <UART_SetConfig+0xa94>
      }
      else
      {
        ret = HAL_ERROR;
 8008bc4:	2301      	movs	r3, #1
 8008bc6:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8008bca:	e0b5      	b.n	8008d38 <UART_SetConfig+0xa94>
 8008bcc:	03d09000 	.word	0x03d09000
 8008bd0:	003d0900 	.word	0x003d0900
 8008bd4:	080253b8 	.word	0x080253b8
 8008bd8:	58024400 	.word	0x58024400
      }
    }
  }
  else
  {
    switch (clocksource)
 8008bdc:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8008be0:	2b20      	cmp	r3, #32
 8008be2:	dc49      	bgt.n	8008c78 <UART_SetConfig+0x9d4>
 8008be4:	2b00      	cmp	r3, #0
 8008be6:	db7c      	blt.n	8008ce2 <UART_SetConfig+0xa3e>
 8008be8:	2b20      	cmp	r3, #32
 8008bea:	d87a      	bhi.n	8008ce2 <UART_SetConfig+0xa3e>
 8008bec:	a201      	add	r2, pc, #4	; (adr r2, 8008bf4 <UART_SetConfig+0x950>)
 8008bee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008bf2:	bf00      	nop
 8008bf4:	08008c7f 	.word	0x08008c7f
 8008bf8:	08008c87 	.word	0x08008c87
 8008bfc:	08008ce3 	.word	0x08008ce3
 8008c00:	08008ce3 	.word	0x08008ce3
 8008c04:	08008c8f 	.word	0x08008c8f
 8008c08:	08008ce3 	.word	0x08008ce3
 8008c0c:	08008ce3 	.word	0x08008ce3
 8008c10:	08008ce3 	.word	0x08008ce3
 8008c14:	08008c9f 	.word	0x08008c9f
 8008c18:	08008ce3 	.word	0x08008ce3
 8008c1c:	08008ce3 	.word	0x08008ce3
 8008c20:	08008ce3 	.word	0x08008ce3
 8008c24:	08008ce3 	.word	0x08008ce3
 8008c28:	08008ce3 	.word	0x08008ce3
 8008c2c:	08008ce3 	.word	0x08008ce3
 8008c30:	08008ce3 	.word	0x08008ce3
 8008c34:	08008caf 	.word	0x08008caf
 8008c38:	08008ce3 	.word	0x08008ce3
 8008c3c:	08008ce3 	.word	0x08008ce3
 8008c40:	08008ce3 	.word	0x08008ce3
 8008c44:	08008ce3 	.word	0x08008ce3
 8008c48:	08008ce3 	.word	0x08008ce3
 8008c4c:	08008ce3 	.word	0x08008ce3
 8008c50:	08008ce3 	.word	0x08008ce3
 8008c54:	08008ce3 	.word	0x08008ce3
 8008c58:	08008ce3 	.word	0x08008ce3
 8008c5c:	08008ce3 	.word	0x08008ce3
 8008c60:	08008ce3 	.word	0x08008ce3
 8008c64:	08008ce3 	.word	0x08008ce3
 8008c68:	08008ce3 	.word	0x08008ce3
 8008c6c:	08008ce3 	.word	0x08008ce3
 8008c70:	08008ce3 	.word	0x08008ce3
 8008c74:	08008cd5 	.word	0x08008cd5
 8008c78:	2b40      	cmp	r3, #64	; 0x40
 8008c7a:	d02e      	beq.n	8008cda <UART_SetConfig+0xa36>
 8008c7c:	e031      	b.n	8008ce2 <UART_SetConfig+0xa3e>
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8008c7e:	f7fc fa03 	bl	8005088 <HAL_RCC_GetPCLK1Freq>
 8008c82:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8008c84:	e033      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8008c86:	f7fc fa15 	bl	80050b4 <HAL_RCC_GetPCLK2Freq>
 8008c8a:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8008c8c:	e02f      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008c8e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008c92:	4618      	mov	r0, r3
 8008c94:	f7fd fc44 	bl	8006520 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 8008c98:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c9a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008c9c:	e027      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008c9e:	f107 0318 	add.w	r3, r7, #24
 8008ca2:	4618      	mov	r0, r3
 8008ca4:	f7fd fd90 	bl	80067c8 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 8008ca8:	69fb      	ldr	r3, [r7, #28]
 8008caa:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008cac:	e01f      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008cae:	4b2d      	ldr	r3, [pc, #180]	; (8008d64 <UART_SetConfig+0xac0>)
 8008cb0:	681b      	ldr	r3, [r3, #0]
 8008cb2:	f003 0320 	and.w	r3, r3, #32
 8008cb6:	2b00      	cmp	r3, #0
 8008cb8:	d009      	beq.n	8008cce <UART_SetConfig+0xa2a>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 8008cba:	4b2a      	ldr	r3, [pc, #168]	; (8008d64 <UART_SetConfig+0xac0>)
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	08db      	lsrs	r3, r3, #3
 8008cc0:	f003 0303 	and.w	r3, r3, #3
 8008cc4:	4a28      	ldr	r2, [pc, #160]	; (8008d68 <UART_SetConfig+0xac4>)
 8008cc6:	fa22 f303 	lsr.w	r3, r2, r3
 8008cca:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8008ccc:	e00f      	b.n	8008cee <UART_SetConfig+0xa4a>
          pclk = (uint32_t) HSI_VALUE;
 8008cce:	4b26      	ldr	r3, [pc, #152]	; (8008d68 <UART_SetConfig+0xac4>)
 8008cd0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008cd2:	e00c      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 8008cd4:	4b25      	ldr	r3, [pc, #148]	; (8008d6c <UART_SetConfig+0xac8>)
 8008cd6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008cd8:	e009      	b.n	8008cee <UART_SetConfig+0xa4a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8008cda:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8008cde:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008ce0:	e005      	b.n	8008cee <UART_SetConfig+0xa4a>
      default:
        pclk = 0U;
 8008ce2:	2300      	movs	r3, #0
 8008ce4:	63fb      	str	r3, [r7, #60]	; 0x3c
        ret = HAL_ERROR;
 8008ce6:	2301      	movs	r3, #1
 8008ce8:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
        break;
 8008cec:	bf00      	nop
    }

    if (pclk != 0U)
 8008cee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008cf0:	2b00      	cmp	r3, #0
 8008cf2:	d021      	beq.n	8008d38 <UART_SetConfig+0xa94>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8008cf4:	697b      	ldr	r3, [r7, #20]
 8008cf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008cf8:	4a1d      	ldr	r2, [pc, #116]	; (8008d70 <UART_SetConfig+0xacc>)
 8008cfa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8008cfe:	461a      	mov	r2, r3
 8008d00:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008d02:	fbb3 f2f2 	udiv	r2, r3, r2
 8008d06:	697b      	ldr	r3, [r7, #20]
 8008d08:	685b      	ldr	r3, [r3, #4]
 8008d0a:	085b      	lsrs	r3, r3, #1
 8008d0c:	441a      	add	r2, r3
 8008d0e:	697b      	ldr	r3, [r7, #20]
 8008d10:	685b      	ldr	r3, [r3, #4]
 8008d12:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d16:	63bb      	str	r3, [r7, #56]	; 0x38
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8008d18:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008d1a:	2b0f      	cmp	r3, #15
 8008d1c:	d909      	bls.n	8008d32 <UART_SetConfig+0xa8e>
 8008d1e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008d20:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008d24:	d205      	bcs.n	8008d32 <UART_SetConfig+0xa8e>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 8008d26:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008d28:	b29a      	uxth	r2, r3
 8008d2a:	697b      	ldr	r3, [r7, #20]
 8008d2c:	681b      	ldr	r3, [r3, #0]
 8008d2e:	60da      	str	r2, [r3, #12]
 8008d30:	e002      	b.n	8008d38 <UART_SetConfig+0xa94>
      }
      else
      {
        ret = HAL_ERROR;
 8008d32:	2301      	movs	r3, #1
 8008d34:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
      }
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
 8008d38:	697b      	ldr	r3, [r7, #20]
 8008d3a:	2201      	movs	r2, #1
 8008d3c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  huart->NbRxDataToProcess = 1;
 8008d40:	697b      	ldr	r3, [r7, #20]
 8008d42:	2201      	movs	r2, #1
 8008d44:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8008d48:	697b      	ldr	r3, [r7, #20]
 8008d4a:	2200      	movs	r2, #0
 8008d4c:	675a      	str	r2, [r3, #116]	; 0x74
  huart->TxISR = NULL;
 8008d4e:	697b      	ldr	r3, [r7, #20]
 8008d50:	2200      	movs	r2, #0
 8008d52:	679a      	str	r2, [r3, #120]	; 0x78

  return ret;
 8008d54:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
}
 8008d58:	4618      	mov	r0, r3
 8008d5a:	3748      	adds	r7, #72	; 0x48
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008d62:	bf00      	nop
 8008d64:	58024400 	.word	0x58024400
 8008d68:	03d09000 	.word	0x03d09000
 8008d6c:	003d0900 	.word	0x003d0900
 8008d70:	080253b8 	.word	0x080253b8

08008d74 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8008d74:	b480      	push	{r7}
 8008d76:	b083      	sub	sp, #12
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008d80:	f003 0301 	and.w	r3, r3, #1
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d00a      	beq.n	8008d9e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8008d88:	687b      	ldr	r3, [r7, #4]
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	685b      	ldr	r3, [r3, #4]
 8008d8e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8008d92:	687b      	ldr	r3, [r7, #4]
 8008d94:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	681b      	ldr	r3, [r3, #0]
 8008d9a:	430a      	orrs	r2, r1
 8008d9c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008da2:	f003 0302 	and.w	r3, r3, #2
 8008da6:	2b00      	cmp	r3, #0
 8008da8:	d00a      	beq.n	8008dc0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	681b      	ldr	r3, [r3, #0]
 8008dae:	685b      	ldr	r3, [r3, #4]
 8008db0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	681b      	ldr	r3, [r3, #0]
 8008dbc:	430a      	orrs	r2, r1
 8008dbe:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008dc4:	f003 0304 	and.w	r3, r3, #4
 8008dc8:	2b00      	cmp	r3, #0
 8008dca:	d00a      	beq.n	8008de2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	685b      	ldr	r3, [r3, #4]
 8008dd2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	430a      	orrs	r2, r1
 8008de0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008de6:	f003 0308 	and.w	r3, r3, #8
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d00a      	beq.n	8008e04 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8008dee:	687b      	ldr	r3, [r7, #4]
 8008df0:	681b      	ldr	r3, [r3, #0]
 8008df2:	685b      	ldr	r3, [r3, #4]
 8008df4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	430a      	orrs	r2, r1
 8008e02:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e08:	f003 0310 	and.w	r3, r3, #16
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d00a      	beq.n	8008e26 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	681b      	ldr	r3, [r3, #0]
 8008e14:	689b      	ldr	r3, [r3, #8]
 8008e16:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8008e1e:	687b      	ldr	r3, [r7, #4]
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	430a      	orrs	r2, r1
 8008e24:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e2a:	f003 0320 	and.w	r3, r3, #32
 8008e2e:	2b00      	cmp	r3, #0
 8008e30:	d00a      	beq.n	8008e48 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8008e32:	687b      	ldr	r3, [r7, #4]
 8008e34:	681b      	ldr	r3, [r3, #0]
 8008e36:	689b      	ldr	r3, [r3, #8]
 8008e38:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	681b      	ldr	r3, [r3, #0]
 8008e44:	430a      	orrs	r2, r1
 8008e46:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d01a      	beq.n	8008e8a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	681b      	ldr	r3, [r3, #0]
 8008e58:	685b      	ldr	r3, [r3, #4]
 8008e5a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	681b      	ldr	r3, [r3, #0]
 8008e66:	430a      	orrs	r2, r1
 8008e68:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008e6e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008e72:	d10a      	bne.n	8008e8a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	681b      	ldr	r3, [r3, #0]
 8008e78:	685b      	ldr	r3, [r3, #4]
 8008e7a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	430a      	orrs	r2, r1
 8008e88:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8008e8a:	687b      	ldr	r3, [r7, #4]
 8008e8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e8e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	d00a      	beq.n	8008eac <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8008e96:	687b      	ldr	r3, [r7, #4]
 8008e98:	681b      	ldr	r3, [r3, #0]
 8008e9a:	685b      	ldr	r3, [r3, #4]
 8008e9c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8008ea4:	687b      	ldr	r3, [r7, #4]
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	430a      	orrs	r2, r1
 8008eaa:	605a      	str	r2, [r3, #4]
  }
}
 8008eac:	bf00      	nop
 8008eae:	370c      	adds	r7, #12
 8008eb0:	46bd      	mov	sp, r7
 8008eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eb6:	4770      	bx	lr

08008eb8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8008eb8:	b580      	push	{r7, lr}
 8008eba:	b098      	sub	sp, #96	; 0x60
 8008ebc:	af02      	add	r7, sp, #8
 8008ebe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008ec0:	687b      	ldr	r3, [r7, #4]
 8008ec2:	2200      	movs	r2, #0
 8008ec4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8008ec8:	f7f8 fde8 	bl	8001a9c <HAL_GetTick>
 8008ecc:	6578      	str	r0, [r7, #84]	; 0x54

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	681b      	ldr	r3, [r3, #0]
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	f003 0308 	and.w	r3, r3, #8
 8008ed8:	2b08      	cmp	r3, #8
 8008eda:	d12f      	bne.n	8008f3c <UART_CheckIdleState+0x84>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8008edc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008ee0:	9300      	str	r3, [sp, #0]
 8008ee2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8008ee4:	2200      	movs	r2, #0
 8008ee6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8008eea:	6878      	ldr	r0, [r7, #4]
 8008eec:	f000 f88e 	bl	800900c <UART_WaitOnFlagUntilTimeout>
 8008ef0:	4603      	mov	r3, r0
 8008ef2:	2b00      	cmp	r3, #0
 8008ef4:	d022      	beq.n	8008f3c <UART_CheckIdleState+0x84>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 8008ef6:	687b      	ldr	r3, [r7, #4]
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008efc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008efe:	e853 3f00 	ldrex	r3, [r3]
 8008f02:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 8008f04:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008f06:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008f0a:	653b      	str	r3, [r7, #80]	; 0x50
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	461a      	mov	r2, r3
 8008f12:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008f14:	647b      	str	r3, [r7, #68]	; 0x44
 8008f16:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008f18:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8008f1a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8008f1c:	e841 2300 	strex	r3, r2, [r1]
 8008f20:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 8008f22:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008f24:	2b00      	cmp	r3, #0
 8008f26:	d1e6      	bne.n	8008ef6 <UART_CheckIdleState+0x3e>

      huart->gState = HAL_UART_STATE_READY;
 8008f28:	687b      	ldr	r3, [r7, #4]
 8008f2a:	2220      	movs	r2, #32
 8008f2c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

      __HAL_UNLOCK(huart);
 8008f30:	687b      	ldr	r3, [r7, #4]
 8008f32:	2200      	movs	r2, #0
 8008f34:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 8008f38:	2303      	movs	r3, #3
 8008f3a:	e063      	b.n	8009004 <UART_CheckIdleState+0x14c>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8008f3c:	687b      	ldr	r3, [r7, #4]
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	f003 0304 	and.w	r3, r3, #4
 8008f46:	2b04      	cmp	r3, #4
 8008f48:	d149      	bne.n	8008fde <UART_CheckIdleState+0x126>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8008f4a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008f4e:	9300      	str	r3, [sp, #0]
 8008f50:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8008f52:	2200      	movs	r2, #0
 8008f54:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8008f58:	6878      	ldr	r0, [r7, #4]
 8008f5a:	f000 f857 	bl	800900c <UART_WaitOnFlagUntilTimeout>
 8008f5e:	4603      	mov	r3, r0
 8008f60:	2b00      	cmp	r3, #0
 8008f62:	d03c      	beq.n	8008fde <UART_CheckIdleState+0x126>
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008f6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f6c:	e853 3f00 	ldrex	r3, [r3]
 8008f70:	623b      	str	r3, [r7, #32]
   return(result);
 8008f72:	6a3b      	ldr	r3, [r7, #32]
 8008f74:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8008f78:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	681b      	ldr	r3, [r3, #0]
 8008f7e:	461a      	mov	r2, r3
 8008f80:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008f82:	633b      	str	r3, [r7, #48]	; 0x30
 8008f84:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008f86:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8008f88:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008f8a:	e841 2300 	strex	r3, r2, [r1]
 8008f8e:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 8008f90:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f92:	2b00      	cmp	r3, #0
 8008f94:	d1e6      	bne.n	8008f64 <UART_CheckIdleState+0xac>
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	681b      	ldr	r3, [r3, #0]
 8008f9a:	3308      	adds	r3, #8
 8008f9c:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008f9e:	693b      	ldr	r3, [r7, #16]
 8008fa0:	e853 3f00 	ldrex	r3, [r3]
 8008fa4:	60fb      	str	r3, [r7, #12]
   return(result);
 8008fa6:	68fb      	ldr	r3, [r7, #12]
 8008fa8:	f023 0301 	bic.w	r3, r3, #1
 8008fac:	64bb      	str	r3, [r7, #72]	; 0x48
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	681b      	ldr	r3, [r3, #0]
 8008fb2:	3308      	adds	r3, #8
 8008fb4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8008fb6:	61fa      	str	r2, [r7, #28]
 8008fb8:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008fba:	69b9      	ldr	r1, [r7, #24]
 8008fbc:	69fa      	ldr	r2, [r7, #28]
 8008fbe:	e841 2300 	strex	r3, r2, [r1]
 8008fc2:	617b      	str	r3, [r7, #20]
   return(result);
 8008fc4:	697b      	ldr	r3, [r7, #20]
 8008fc6:	2b00      	cmp	r3, #0
 8008fc8:	d1e5      	bne.n	8008f96 <UART_CheckIdleState+0xde>

      huart->RxState = HAL_UART_STATE_READY;
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	2220      	movs	r2, #32
 8008fce:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      __HAL_UNLOCK(huart);
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	2200      	movs	r2, #0
 8008fd6:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 8008fda:	2303      	movs	r3, #3
 8008fdc:	e012      	b.n	8009004 <UART_CheckIdleState+0x14c>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	2220      	movs	r2, #32
 8008fe2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  huart->RxState = HAL_UART_STATE_READY;
 8008fe6:	687b      	ldr	r3, [r7, #4]
 8008fe8:	2220      	movs	r2, #32
 8008fea:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	2200      	movs	r2, #0
 8008ff2:	66da      	str	r2, [r3, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8008ff4:	687b      	ldr	r3, [r7, #4]
 8008ff6:	2200      	movs	r2, #0
 8008ff8:	671a      	str	r2, [r3, #112]	; 0x70

  __HAL_UNLOCK(huart);
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	2200      	movs	r2, #0
 8008ffe:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 8009002:	2300      	movs	r3, #0
}
 8009004:	4618      	mov	r0, r3
 8009006:	3758      	adds	r7, #88	; 0x58
 8009008:	46bd      	mov	sp, r7
 800900a:	bd80      	pop	{r7, pc}

0800900c <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800900c:	b580      	push	{r7, lr}
 800900e:	b084      	sub	sp, #16
 8009010:	af00      	add	r7, sp, #0
 8009012:	60f8      	str	r0, [r7, #12]
 8009014:	60b9      	str	r1, [r7, #8]
 8009016:	603b      	str	r3, [r7, #0]
 8009018:	4613      	mov	r3, r2
 800901a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800901c:	e049      	b.n	80090b2 <UART_WaitOnFlagUntilTimeout+0xa6>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800901e:	69bb      	ldr	r3, [r7, #24]
 8009020:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009024:	d045      	beq.n	80090b2 <UART_WaitOnFlagUntilTimeout+0xa6>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009026:	f7f8 fd39 	bl	8001a9c <HAL_GetTick>
 800902a:	4602      	mov	r2, r0
 800902c:	683b      	ldr	r3, [r7, #0]
 800902e:	1ad3      	subs	r3, r2, r3
 8009030:	69ba      	ldr	r2, [r7, #24]
 8009032:	429a      	cmp	r2, r3
 8009034:	d302      	bcc.n	800903c <UART_WaitOnFlagUntilTimeout+0x30>
 8009036:	69bb      	ldr	r3, [r7, #24]
 8009038:	2b00      	cmp	r3, #0
 800903a:	d101      	bne.n	8009040 <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800903c:	2303      	movs	r3, #3
 800903e:	e048      	b.n	80090d2 <UART_WaitOnFlagUntilTimeout+0xc6>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009040:	68fb      	ldr	r3, [r7, #12]
 8009042:	681b      	ldr	r3, [r3, #0]
 8009044:	681b      	ldr	r3, [r3, #0]
 8009046:	f003 0304 	and.w	r3, r3, #4
 800904a:	2b00      	cmp	r3, #0
 800904c:	d031      	beq.n	80090b2 <UART_WaitOnFlagUntilTimeout+0xa6>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800904e:	68fb      	ldr	r3, [r7, #12]
 8009050:	681b      	ldr	r3, [r3, #0]
 8009052:	69db      	ldr	r3, [r3, #28]
 8009054:	f003 0308 	and.w	r3, r3, #8
 8009058:	2b08      	cmp	r3, #8
 800905a:	d110      	bne.n	800907e <UART_WaitOnFlagUntilTimeout+0x72>
        {
           /* Clear Overrun Error flag*/
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800905c:	68fb      	ldr	r3, [r7, #12]
 800905e:	681b      	ldr	r3, [r3, #0]
 8009060:	2208      	movs	r2, #8
 8009062:	621a      	str	r2, [r3, #32]

           /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts if ongoing */
           UART_EndRxTransfer(huart);
 8009064:	68f8      	ldr	r0, [r7, #12]
 8009066:	f000 f95b 	bl	8009320 <UART_EndRxTransfer>

           huart->ErrorCode = HAL_UART_ERROR_ORE;
 800906a:	68fb      	ldr	r3, [r7, #12]
 800906c:	2208      	movs	r2, #8
 800906e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

           /* Process Unlocked */
           __HAL_UNLOCK(huart);
 8009072:	68fb      	ldr	r3, [r7, #12]
 8009074:	2200      	movs	r2, #0
 8009076:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

           return HAL_ERROR;
 800907a:	2301      	movs	r3, #1
 800907c:	e029      	b.n	80090d2 <UART_WaitOnFlagUntilTimeout+0xc6>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800907e:	68fb      	ldr	r3, [r7, #12]
 8009080:	681b      	ldr	r3, [r3, #0]
 8009082:	69db      	ldr	r3, [r3, #28]
 8009084:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009088:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800908c:	d111      	bne.n	80090b2 <UART_WaitOnFlagUntilTimeout+0xa6>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800908e:	68fb      	ldr	r3, [r7, #12]
 8009090:	681b      	ldr	r3, [r3, #0]
 8009092:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8009096:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8009098:	68f8      	ldr	r0, [r7, #12]
 800909a:	f000 f941 	bl	8009320 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800909e:	68fb      	ldr	r3, [r7, #12]
 80090a0:	2220      	movs	r2, #32
 80090a2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80090a6:	68fb      	ldr	r3, [r7, #12]
 80090a8:	2200      	movs	r2, #0
 80090aa:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

          return HAL_TIMEOUT;
 80090ae:	2303      	movs	r3, #3
 80090b0:	e00f      	b.n	80090d2 <UART_WaitOnFlagUntilTimeout+0xc6>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80090b2:	68fb      	ldr	r3, [r7, #12]
 80090b4:	681b      	ldr	r3, [r3, #0]
 80090b6:	69da      	ldr	r2, [r3, #28]
 80090b8:	68bb      	ldr	r3, [r7, #8]
 80090ba:	4013      	ands	r3, r2
 80090bc:	68ba      	ldr	r2, [r7, #8]
 80090be:	429a      	cmp	r2, r3
 80090c0:	bf0c      	ite	eq
 80090c2:	2301      	moveq	r3, #1
 80090c4:	2300      	movne	r3, #0
 80090c6:	b2db      	uxtb	r3, r3
 80090c8:	461a      	mov	r2, r3
 80090ca:	79fb      	ldrb	r3, [r7, #7]
 80090cc:	429a      	cmp	r2, r3
 80090ce:	d0a6      	beq.n	800901e <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80090d0:	2300      	movs	r3, #0
}
 80090d2:	4618      	mov	r0, r3
 80090d4:	3710      	adds	r7, #16
 80090d6:	46bd      	mov	sp, r7
 80090d8:	bd80      	pop	{r7, pc}
	...

080090dc <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 80090dc:	b480      	push	{r7}
 80090de:	b0a3      	sub	sp, #140	; 0x8c
 80090e0:	af00      	add	r7, sp, #0
 80090e2:	60f8      	str	r0, [r7, #12]
 80090e4:	60b9      	str	r1, [r7, #8]
 80090e6:	4613      	mov	r3, r2
 80090e8:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 80090ea:	68fb      	ldr	r3, [r7, #12]
 80090ec:	68ba      	ldr	r2, [r7, #8]
 80090ee:	659a      	str	r2, [r3, #88]	; 0x58
  huart->RxXferSize  = Size;
 80090f0:	68fb      	ldr	r3, [r7, #12]
 80090f2:	88fa      	ldrh	r2, [r7, #6]
 80090f4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
  huart->RxXferCount = Size;
 80090f8:	68fb      	ldr	r3, [r7, #12]
 80090fa:	88fa      	ldrh	r2, [r7, #6]
 80090fc:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
  huart->RxISR       = NULL;
 8009100:	68fb      	ldr	r3, [r7, #12]
 8009102:	2200      	movs	r2, #0
 8009104:	675a      	str	r2, [r3, #116]	; 0x74

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 8009106:	68fb      	ldr	r3, [r7, #12]
 8009108:	689b      	ldr	r3, [r3, #8]
 800910a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800910e:	d10e      	bne.n	800912e <UART_Start_Receive_IT+0x52>
 8009110:	68fb      	ldr	r3, [r7, #12]
 8009112:	691b      	ldr	r3, [r3, #16]
 8009114:	2b00      	cmp	r3, #0
 8009116:	d105      	bne.n	8009124 <UART_Start_Receive_IT+0x48>
 8009118:	68fb      	ldr	r3, [r7, #12]
 800911a:	f240 12ff 	movw	r2, #511	; 0x1ff
 800911e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8009122:	e02d      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 8009124:	68fb      	ldr	r3, [r7, #12]
 8009126:	22ff      	movs	r2, #255	; 0xff
 8009128:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800912c:	e028      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 800912e:	68fb      	ldr	r3, [r7, #12]
 8009130:	689b      	ldr	r3, [r3, #8]
 8009132:	2b00      	cmp	r3, #0
 8009134:	d10d      	bne.n	8009152 <UART_Start_Receive_IT+0x76>
 8009136:	68fb      	ldr	r3, [r7, #12]
 8009138:	691b      	ldr	r3, [r3, #16]
 800913a:	2b00      	cmp	r3, #0
 800913c:	d104      	bne.n	8009148 <UART_Start_Receive_IT+0x6c>
 800913e:	68fb      	ldr	r3, [r7, #12]
 8009140:	22ff      	movs	r2, #255	; 0xff
 8009142:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8009146:	e01b      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 8009148:	68fb      	ldr	r3, [r7, #12]
 800914a:	227f      	movs	r2, #127	; 0x7f
 800914c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8009150:	e016      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 8009152:	68fb      	ldr	r3, [r7, #12]
 8009154:	689b      	ldr	r3, [r3, #8]
 8009156:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800915a:	d10d      	bne.n	8009178 <UART_Start_Receive_IT+0x9c>
 800915c:	68fb      	ldr	r3, [r7, #12]
 800915e:	691b      	ldr	r3, [r3, #16]
 8009160:	2b00      	cmp	r3, #0
 8009162:	d104      	bne.n	800916e <UART_Start_Receive_IT+0x92>
 8009164:	68fb      	ldr	r3, [r7, #12]
 8009166:	227f      	movs	r2, #127	; 0x7f
 8009168:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800916c:	e008      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 800916e:	68fb      	ldr	r3, [r7, #12]
 8009170:	223f      	movs	r2, #63	; 0x3f
 8009172:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8009176:	e003      	b.n	8009180 <UART_Start_Receive_IT+0xa4>
 8009178:	68fb      	ldr	r3, [r7, #12]
 800917a:	2200      	movs	r2, #0
 800917c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009180:	68fb      	ldr	r3, [r7, #12]
 8009182:	2200      	movs	r2, #0
 8009184:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8009188:	68fb      	ldr	r3, [r7, #12]
 800918a:	2222      	movs	r2, #34	; 0x22
 800918c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009190:	68fb      	ldr	r3, [r7, #12]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	3308      	adds	r3, #8
 8009196:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009198:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800919a:	e853 3f00 	ldrex	r3, [r3]
 800919e:	663b      	str	r3, [r7, #96]	; 0x60
   return(result);
 80091a0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80091a2:	f043 0301 	orr.w	r3, r3, #1
 80091a6:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	681b      	ldr	r3, [r3, #0]
 80091ae:	3308      	adds	r3, #8
 80091b0:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80091b4:	673a      	str	r2, [r7, #112]	; 0x70
 80091b6:	66fb      	str	r3, [r7, #108]	; 0x6c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80091b8:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 80091ba:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 80091bc:	e841 2300 	strex	r3, r2, [r1]
 80091c0:	66bb      	str	r3, [r7, #104]	; 0x68
   return(result);
 80091c2:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80091c4:	2b00      	cmp	r3, #0
 80091c6:	d1e3      	bne.n	8009190 <UART_Start_Receive_IT+0xb4>

  /* Configure Rx interrupt processing */
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 80091c8:	68fb      	ldr	r3, [r7, #12]
 80091ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80091cc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80091d0:	d14f      	bne.n	8009272 <UART_Start_Receive_IT+0x196>
 80091d2:	68fb      	ldr	r3, [r7, #12]
 80091d4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 80091d8:	88fa      	ldrh	r2, [r7, #6]
 80091da:	429a      	cmp	r2, r3
 80091dc:	d349      	bcc.n	8009272 <UART_Start_Receive_IT+0x196>
  {
    /* Set the Rx ISR function pointer according to the data word length */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80091de:	68fb      	ldr	r3, [r7, #12]
 80091e0:	689b      	ldr	r3, [r3, #8]
 80091e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80091e6:	d107      	bne.n	80091f8 <UART_Start_Receive_IT+0x11c>
 80091e8:	68fb      	ldr	r3, [r7, #12]
 80091ea:	691b      	ldr	r3, [r3, #16]
 80091ec:	2b00      	cmp	r3, #0
 80091ee:	d103      	bne.n	80091f8 <UART_Start_Receive_IT+0x11c>
    {
      huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 80091f0:	68fb      	ldr	r3, [r7, #12]
 80091f2:	4a47      	ldr	r2, [pc, #284]	; (8009310 <UART_Start_Receive_IT+0x234>)
 80091f4:	675a      	str	r2, [r3, #116]	; 0x74
 80091f6:	e002      	b.n	80091fe <UART_Start_Receive_IT+0x122>
    }
    else
    {
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 80091f8:	68fb      	ldr	r3, [r7, #12]
 80091fa:	4a46      	ldr	r2, [pc, #280]	; (8009314 <UART_Start_Receive_IT+0x238>)
 80091fc:	675a      	str	r2, [r3, #116]	; 0x74
    }

    /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
    if (huart->Init.Parity != UART_PARITY_NONE)
 80091fe:	68fb      	ldr	r3, [r7, #12]
 8009200:	691b      	ldr	r3, [r3, #16]
 8009202:	2b00      	cmp	r3, #0
 8009204:	d01a      	beq.n	800923c <UART_Start_Receive_IT+0x160>
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009206:	68fb      	ldr	r3, [r7, #12]
 8009208:	681b      	ldr	r3, [r3, #0]
 800920a:	653b      	str	r3, [r7, #80]	; 0x50
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800920c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800920e:	e853 3f00 	ldrex	r3, [r3]
 8009212:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 8009214:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009216:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800921a:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800921e:	68fb      	ldr	r3, [r7, #12]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	461a      	mov	r2, r3
 8009224:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8009228:	65fb      	str	r3, [r7, #92]	; 0x5c
 800922a:	65ba      	str	r2, [r7, #88]	; 0x58
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800922c:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800922e:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8009230:	e841 2300 	strex	r3, r2, [r1]
 8009234:	657b      	str	r3, [r7, #84]	; 0x54
   return(result);
 8009236:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009238:	2b00      	cmp	r3, #0
 800923a:	d1e4      	bne.n	8009206 <UART_Start_Receive_IT+0x12a>
    }
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800923c:	68fb      	ldr	r3, [r7, #12]
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	3308      	adds	r3, #8
 8009242:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009244:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009246:	e853 3f00 	ldrex	r3, [r3]
 800924a:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800924c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800924e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009252:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009254:	68fb      	ldr	r3, [r7, #12]
 8009256:	681b      	ldr	r3, [r3, #0]
 8009258:	3308      	adds	r3, #8
 800925a:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800925c:	64ba      	str	r2, [r7, #72]	; 0x48
 800925e:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009260:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8009262:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009264:	e841 2300 	strex	r3, r2, [r1]
 8009268:	643b      	str	r3, [r7, #64]	; 0x40
   return(result);
 800926a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800926c:	2b00      	cmp	r3, #0
 800926e:	d1e5      	bne.n	800923c <UART_Start_Receive_IT+0x160>
 8009270:	e046      	b.n	8009300 <UART_Start_Receive_IT+0x224>
  }
  else
  {
    /* Set the Rx ISR function pointer according to the data word length */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	689b      	ldr	r3, [r3, #8]
 8009276:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800927a:	d107      	bne.n	800928c <UART_Start_Receive_IT+0x1b0>
 800927c:	68fb      	ldr	r3, [r7, #12]
 800927e:	691b      	ldr	r3, [r3, #16]
 8009280:	2b00      	cmp	r3, #0
 8009282:	d103      	bne.n	800928c <UART_Start_Receive_IT+0x1b0>
    {
      huart->RxISR = UART_RxISR_16BIT;
 8009284:	68fb      	ldr	r3, [r7, #12]
 8009286:	4a24      	ldr	r2, [pc, #144]	; (8009318 <UART_Start_Receive_IT+0x23c>)
 8009288:	675a      	str	r2, [r3, #116]	; 0x74
 800928a:	e002      	b.n	8009292 <UART_Start_Receive_IT+0x1b6>
    }
    else
    {
      huart->RxISR = UART_RxISR_8BIT;
 800928c:	68fb      	ldr	r3, [r7, #12]
 800928e:	4a23      	ldr	r2, [pc, #140]	; (800931c <UART_Start_Receive_IT+0x240>)
 8009290:	675a      	str	r2, [r3, #116]	; 0x74
    }

    /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
    if (huart->Init.Parity != UART_PARITY_NONE)
 8009292:	68fb      	ldr	r3, [r7, #12]
 8009294:	691b      	ldr	r3, [r3, #16]
 8009296:	2b00      	cmp	r3, #0
 8009298:	d019      	beq.n	80092ce <UART_Start_Receive_IT+0x1f2>
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 800929a:	68fb      	ldr	r3, [r7, #12]
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80092a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80092a2:	e853 3f00 	ldrex	r3, [r3]
 80092a6:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 80092a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092aa:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 80092ae:	677b      	str	r3, [r7, #116]	; 0x74
 80092b0:	68fb      	ldr	r3, [r7, #12]
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	461a      	mov	r2, r3
 80092b6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80092b8:	637b      	str	r3, [r7, #52]	; 0x34
 80092ba:	633a      	str	r2, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80092bc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80092be:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80092c0:	e841 2300 	strex	r3, r2, [r1]
 80092c4:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 80092c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80092c8:	2b00      	cmp	r3, #0
 80092ca:	d1e6      	bne.n	800929a <UART_Start_Receive_IT+0x1be>
 80092cc:	e018      	b.n	8009300 <UART_Start_Receive_IT+0x224>
    }
    else
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 80092ce:	68fb      	ldr	r3, [r7, #12]
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80092d4:	697b      	ldr	r3, [r7, #20]
 80092d6:	e853 3f00 	ldrex	r3, [r3]
 80092da:	613b      	str	r3, [r7, #16]
   return(result);
 80092dc:	693b      	ldr	r3, [r7, #16]
 80092de:	f043 0320 	orr.w	r3, r3, #32
 80092e2:	67bb      	str	r3, [r7, #120]	; 0x78
 80092e4:	68fb      	ldr	r3, [r7, #12]
 80092e6:	681b      	ldr	r3, [r3, #0]
 80092e8:	461a      	mov	r2, r3
 80092ea:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80092ec:	623b      	str	r3, [r7, #32]
 80092ee:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80092f0:	69f9      	ldr	r1, [r7, #28]
 80092f2:	6a3a      	ldr	r2, [r7, #32]
 80092f4:	e841 2300 	strex	r3, r2, [r1]
 80092f8:	61bb      	str	r3, [r7, #24]
   return(result);
 80092fa:	69bb      	ldr	r3, [r7, #24]
 80092fc:	2b00      	cmp	r3, #0
 80092fe:	d1e6      	bne.n	80092ce <UART_Start_Receive_IT+0x1f2>
    }
  }
  return HAL_OK;
 8009300:	2300      	movs	r3, #0
}
 8009302:	4618      	mov	r0, r3
 8009304:	378c      	adds	r7, #140	; 0x8c
 8009306:	46bd      	mov	sp, r7
 8009308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800930c:	4770      	bx	lr
 800930e:	bf00      	nop
 8009310:	08009e85 	.word	0x08009e85
 8009314:	08009b25 	.word	0x08009b25
 8009318:	0800996d 	.word	0x0800996d
 800931c:	080097b5 	.word	0x080097b5

08009320 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8009320:	b480      	push	{r7}
 8009322:	b095      	sub	sp, #84	; 0x54
 8009324:	af00      	add	r7, sp, #0
 8009326:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	681b      	ldr	r3, [r3, #0]
 800932c:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800932e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009330:	e853 3f00 	ldrex	r3, [r3]
 8009334:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 8009336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009338:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800933c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800933e:	687b      	ldr	r3, [r7, #4]
 8009340:	681b      	ldr	r3, [r3, #0]
 8009342:	461a      	mov	r2, r3
 8009344:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009346:	643b      	str	r3, [r7, #64]	; 0x40
 8009348:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800934a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800934c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800934e:	e841 2300 	strex	r3, r2, [r1]
 8009352:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8009354:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009356:	2b00      	cmp	r3, #0
 8009358:	d1e6      	bne.n	8009328 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	681b      	ldr	r3, [r3, #0]
 800935e:	3308      	adds	r3, #8
 8009360:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009362:	6a3b      	ldr	r3, [r7, #32]
 8009364:	e853 3f00 	ldrex	r3, [r3]
 8009368:	61fb      	str	r3, [r7, #28]
   return(result);
 800936a:	69fa      	ldr	r2, [r7, #28]
 800936c:	4b1e      	ldr	r3, [pc, #120]	; (80093e8 <UART_EndRxTransfer+0xc8>)
 800936e:	4013      	ands	r3, r2
 8009370:	64bb      	str	r3, [r7, #72]	; 0x48
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	681b      	ldr	r3, [r3, #0]
 8009376:	3308      	adds	r3, #8
 8009378:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800937a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800937c:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800937e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009380:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009382:	e841 2300 	strex	r3, r2, [r1]
 8009386:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8009388:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800938a:	2b00      	cmp	r3, #0
 800938c:	d1e5      	bne.n	800935a <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800938e:	687b      	ldr	r3, [r7, #4]
 8009390:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009392:	2b01      	cmp	r3, #1
 8009394:	d118      	bne.n	80093c8 <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	681b      	ldr	r3, [r3, #0]
 800939a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800939c:	68fb      	ldr	r3, [r7, #12]
 800939e:	e853 3f00 	ldrex	r3, [r3]
 80093a2:	60bb      	str	r3, [r7, #8]
   return(result);
 80093a4:	68bb      	ldr	r3, [r7, #8]
 80093a6:	f023 0310 	bic.w	r3, r3, #16
 80093aa:	647b      	str	r3, [r7, #68]	; 0x44
 80093ac:	687b      	ldr	r3, [r7, #4]
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	461a      	mov	r2, r3
 80093b2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80093b4:	61bb      	str	r3, [r7, #24]
 80093b6:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80093b8:	6979      	ldr	r1, [r7, #20]
 80093ba:	69ba      	ldr	r2, [r7, #24]
 80093bc:	e841 2300 	strex	r3, r2, [r1]
 80093c0:	613b      	str	r3, [r7, #16]
   return(result);
 80093c2:	693b      	ldr	r3, [r7, #16]
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d1e6      	bne.n	8009396 <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80093c8:	687b      	ldr	r3, [r7, #4]
 80093ca:	2220      	movs	r2, #32
 80093cc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	2200      	movs	r2, #0
 80093d4:	66da      	str	r2, [r3, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80093d6:	687b      	ldr	r3, [r7, #4]
 80093d8:	2200      	movs	r2, #0
 80093da:	675a      	str	r2, [r3, #116]	; 0x74
}
 80093dc:	bf00      	nop
 80093de:	3754      	adds	r7, #84	; 0x54
 80093e0:	46bd      	mov	sp, r7
 80093e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093e6:	4770      	bx	lr
 80093e8:	effffffe 	.word	0xeffffffe

080093ec <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80093ec:	b580      	push	{r7, lr}
 80093ee:	b084      	sub	sp, #16
 80093f0:	af00      	add	r7, sp, #0
 80093f2:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80093f8:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 80093fa:	68fb      	ldr	r3, [r7, #12]
 80093fc:	2200      	movs	r2, #0
 80093fe:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
  huart->TxXferCount = 0U;
 8009402:	68fb      	ldr	r3, [r7, #12]
 8009404:	2200      	movs	r2, #0
 8009406:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800940a:	68f8      	ldr	r0, [r7, #12]
 800940c:	f7fe ff34 	bl	8008278 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8009410:	bf00      	nop
 8009412:	3710      	adds	r7, #16
 8009414:	46bd      	mov	sp, r7
 8009416:	bd80      	pop	{r7, pc}

08009418 <UART_TxISR_8BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
{
 8009418:	b480      	push	{r7}
 800941a:	b08f      	sub	sp, #60	; 0x3c
 800941c:	af00      	add	r7, sp, #0
 800941e:	6078      	str	r0, [r7, #4]
  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009426:	2b21      	cmp	r3, #33	; 0x21
 8009428:	d14c      	bne.n	80094c4 <UART_TxISR_8BIT+0xac>
  {
    if (huart->TxXferCount == 0U)
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 8009430:	b29b      	uxth	r3, r3
 8009432:	2b00      	cmp	r3, #0
 8009434:	d132      	bne.n	800949c <UART_TxISR_8BIT+0x84>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	681b      	ldr	r3, [r3, #0]
 800943a:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800943c:	6a3b      	ldr	r3, [r7, #32]
 800943e:	e853 3f00 	ldrex	r3, [r3]
 8009442:	61fb      	str	r3, [r7, #28]
   return(result);
 8009444:	69fb      	ldr	r3, [r7, #28]
 8009446:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800944a:	637b      	str	r3, [r7, #52]	; 0x34
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	681b      	ldr	r3, [r3, #0]
 8009450:	461a      	mov	r2, r3
 8009452:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009454:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009456:	62ba      	str	r2, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009458:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800945a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800945c:	e841 2300 	strex	r3, r2, [r1]
 8009460:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8009462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009464:	2b00      	cmp	r3, #0
 8009466:	d1e6      	bne.n	8009436 <UART_TxISR_8BIT+0x1e>

      /* Enable the UART Transmit Complete Interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800946e:	68fb      	ldr	r3, [r7, #12]
 8009470:	e853 3f00 	ldrex	r3, [r3]
 8009474:	60bb      	str	r3, [r7, #8]
   return(result);
 8009476:	68bb      	ldr	r3, [r7, #8]
 8009478:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800947c:	633b      	str	r3, [r7, #48]	; 0x30
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	681b      	ldr	r3, [r3, #0]
 8009482:	461a      	mov	r2, r3
 8009484:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009486:	61bb      	str	r3, [r7, #24]
 8009488:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800948a:	6979      	ldr	r1, [r7, #20]
 800948c:	69ba      	ldr	r2, [r7, #24]
 800948e:	e841 2300 	strex	r3, r2, [r1]
 8009492:	613b      	str	r3, [r7, #16]
   return(result);
 8009494:	693b      	ldr	r3, [r7, #16]
 8009496:	2b00      	cmp	r3, #0
 8009498:	d1e6      	bne.n	8009468 <UART_TxISR_8BIT+0x50>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
      huart->pTxBuffPtr++;
      huart->TxXferCount--;
    }
  }
}
 800949a:	e013      	b.n	80094c4 <UART_TxISR_8BIT+0xac>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80094a0:	781a      	ldrb	r2, [r3, #0]
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	629a      	str	r2, [r3, #40]	; 0x28
      huart->pTxBuffPtr++;
 80094a8:	687b      	ldr	r3, [r7, #4]
 80094aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80094ac:	1c5a      	adds	r2, r3, #1
 80094ae:	687b      	ldr	r3, [r7, #4]
 80094b0:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80094b8:	b29b      	uxth	r3, r3
 80094ba:	3b01      	subs	r3, #1
 80094bc:	b29a      	uxth	r2, r3
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 80094c4:	bf00      	nop
 80094c6:	373c      	adds	r7, #60	; 0x3c
 80094c8:	46bd      	mov	sp, r7
 80094ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ce:	4770      	bx	lr

080094d0 <UART_TxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
 80094d0:	b480      	push	{r7}
 80094d2:	b091      	sub	sp, #68	; 0x44
 80094d4:	af00      	add	r7, sp, #0
 80094d6:	6078      	str	r0, [r7, #4]
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80094de:	2b21      	cmp	r3, #33	; 0x21
 80094e0:	d151      	bne.n	8009586 <UART_TxISR_16BIT+0xb6>
  {
    if (huart->TxXferCount == 0U)
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80094e8:	b29b      	uxth	r3, r3
 80094ea:	2b00      	cmp	r3, #0
 80094ec:	d132      	bne.n	8009554 <UART_TxISR_16BIT+0x84>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	681b      	ldr	r3, [r3, #0]
 80094f2:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80094f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80094f6:	e853 3f00 	ldrex	r3, [r3]
 80094fa:	623b      	str	r3, [r7, #32]
   return(result);
 80094fc:	6a3b      	ldr	r3, [r7, #32]
 80094fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009502:	63bb      	str	r3, [r7, #56]	; 0x38
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	681b      	ldr	r3, [r3, #0]
 8009508:	461a      	mov	r2, r3
 800950a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800950c:	633b      	str	r3, [r7, #48]	; 0x30
 800950e:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009510:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009512:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009514:	e841 2300 	strex	r3, r2, [r1]
 8009518:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800951a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800951c:	2b00      	cmp	r3, #0
 800951e:	d1e6      	bne.n	80094ee <UART_TxISR_16BIT+0x1e>

      /* Enable the UART Transmit Complete Interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	681b      	ldr	r3, [r3, #0]
 8009524:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009526:	693b      	ldr	r3, [r7, #16]
 8009528:	e853 3f00 	ldrex	r3, [r3]
 800952c:	60fb      	str	r3, [r7, #12]
   return(result);
 800952e:	68fb      	ldr	r3, [r7, #12]
 8009530:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009534:	637b      	str	r3, [r7, #52]	; 0x34
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	681b      	ldr	r3, [r3, #0]
 800953a:	461a      	mov	r2, r3
 800953c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800953e:	61fb      	str	r3, [r7, #28]
 8009540:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009542:	69b9      	ldr	r1, [r7, #24]
 8009544:	69fa      	ldr	r2, [r7, #28]
 8009546:	e841 2300 	strex	r3, r2, [r1]
 800954a:	617b      	str	r3, [r7, #20]
   return(result);
 800954c:	697b      	ldr	r3, [r7, #20]
 800954e:	2b00      	cmp	r3, #0
 8009550:	d1e6      	bne.n	8009520 <UART_TxISR_16BIT+0x50>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
 8009552:	e018      	b.n	8009586 <UART_TxISR_16BIT+0xb6>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009558:	63fb      	str	r3, [r7, #60]	; 0x3c
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 800955a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800955c:	881b      	ldrh	r3, [r3, #0]
 800955e:	461a      	mov	r2, r3
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	681b      	ldr	r3, [r3, #0]
 8009564:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009568:	629a      	str	r2, [r3, #40]	; 0x28
      huart->pTxBuffPtr += 2U;
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800956e:	1c9a      	adds	r2, r3, #2
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800957a:	b29b      	uxth	r3, r3
 800957c:	3b01      	subs	r3, #1
 800957e:	b29a      	uxth	r2, r3
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 8009586:	bf00      	nop
 8009588:	3744      	adds	r7, #68	; 0x44
 800958a:	46bd      	mov	sp, r7
 800958c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009590:	4770      	bx	lr

08009592 <UART_TxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 8009592:	b480      	push	{r7}
 8009594:	b091      	sub	sp, #68	; 0x44
 8009596:	af00      	add	r7, sp, #0
 8009598:	6078      	str	r0, [r7, #4]
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80095a0:	2b21      	cmp	r3, #33	; 0x21
 80095a2:	d160      	bne.n	8009666 <UART_TxISR_8BIT_FIFOEN+0xd4>
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 80095a4:	687b      	ldr	r3, [r7, #4]
 80095a6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 80095aa:	87fb      	strh	r3, [r7, #62]	; 0x3e
 80095ac:	e057      	b.n	800965e <UART_TxISR_8BIT_FIFOEN+0xcc>
    {
      if (huart->TxXferCount == 0U)
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80095b4:	b29b      	uxth	r3, r3
 80095b6:	2b00      	cmp	r3, #0
 80095b8:	d133      	bne.n	8009622 <UART_TxISR_8BIT_FIFOEN+0x90>
      {
        /* Disable the TX FIFO threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 80095ba:	687b      	ldr	r3, [r7, #4]
 80095bc:	681b      	ldr	r3, [r3, #0]
 80095be:	3308      	adds	r3, #8
 80095c0:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80095c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80095c4:	e853 3f00 	ldrex	r3, [r3]
 80095c8:	623b      	str	r3, [r7, #32]
   return(result);
 80095ca:	6a3b      	ldr	r3, [r7, #32]
 80095cc:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80095d0:	63bb      	str	r3, [r7, #56]	; 0x38
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	3308      	adds	r3, #8
 80095d8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80095da:	633a      	str	r2, [r7, #48]	; 0x30
 80095dc:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80095de:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80095e0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80095e2:	e841 2300 	strex	r3, r2, [r1]
 80095e6:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 80095e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80095ea:	2b00      	cmp	r3, #0
 80095ec:	d1e5      	bne.n	80095ba <UART_TxISR_8BIT_FIFOEN+0x28>

        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	681b      	ldr	r3, [r3, #0]
 80095f2:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80095f4:	693b      	ldr	r3, [r7, #16]
 80095f6:	e853 3f00 	ldrex	r3, [r3]
 80095fa:	60fb      	str	r3, [r7, #12]
   return(result);
 80095fc:	68fb      	ldr	r3, [r7, #12]
 80095fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009602:	637b      	str	r3, [r7, #52]	; 0x34
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	461a      	mov	r2, r3
 800960a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800960c:	61fb      	str	r3, [r7, #28]
 800960e:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009610:	69b9      	ldr	r1, [r7, #24]
 8009612:	69fa      	ldr	r2, [r7, #28]
 8009614:	e841 2300 	strex	r3, r2, [r1]
 8009618:	617b      	str	r3, [r7, #20]
   return(result);
 800961a:	697b      	ldr	r3, [r7, #20]
 800961c:	2b00      	cmp	r3, #0
 800961e:	d1e6      	bne.n	80095ee <UART_TxISR_8BIT_FIFOEN+0x5c>

        break; /* force exit loop */
 8009620:	e021      	b.n	8009666 <UART_TxISR_8BIT_FIFOEN+0xd4>
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	69db      	ldr	r3, [r3, #28]
 8009628:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800962c:	2b00      	cmp	r3, #0
 800962e:	d013      	beq.n	8009658 <UART_TxISR_8BIT_FIFOEN+0xc6>
      {
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 8009630:	687b      	ldr	r3, [r7, #4]
 8009632:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009634:	781a      	ldrb	r2, [r3, #0]
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	629a      	str	r2, [r3, #40]	; 0x28
        huart->pTxBuffPtr++;
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009640:	1c5a      	adds	r2, r3, #1
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	651a      	str	r2, [r3, #80]	; 0x50
        huart->TxXferCount--;
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800964c:	b29b      	uxth	r3, r3
 800964e:	3b01      	subs	r3, #1
 8009650:	b29a      	uxth	r2, r3
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 8009658:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800965a:	3b01      	subs	r3, #1
 800965c:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800965e:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8009660:	2b00      	cmp	r3, #0
 8009662:	d1a4      	bne.n	80095ae <UART_TxISR_8BIT_FIFOEN+0x1c>
      {
        /* Nothing to do */
      }
    }
  }
}
 8009664:	e7ff      	b.n	8009666 <UART_TxISR_8BIT_FIFOEN+0xd4>
 8009666:	bf00      	nop
 8009668:	3744      	adds	r7, #68	; 0x44
 800966a:	46bd      	mov	sp, r7
 800966c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009670:	4770      	bx	lr

08009672 <UART_TxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 8009672:	b480      	push	{r7}
 8009674:	b091      	sub	sp, #68	; 0x44
 8009676:	af00      	add	r7, sp, #0
 8009678:	6078      	str	r0, [r7, #4]
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009680:	2b21      	cmp	r3, #33	; 0x21
 8009682:	d165      	bne.n	8009750 <UART_TxISR_16BIT_FIFOEN+0xde>
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 8009684:	687b      	ldr	r3, [r7, #4]
 8009686:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800968a:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800968c:	e05c      	b.n	8009748 <UART_TxISR_16BIT_FIFOEN+0xd6>
    {
      if (huart->TxXferCount == 0U)
 800968e:	687b      	ldr	r3, [r7, #4]
 8009690:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 8009694:	b29b      	uxth	r3, r3
 8009696:	2b00      	cmp	r3, #0
 8009698:	d133      	bne.n	8009702 <UART_TxISR_16BIT_FIFOEN+0x90>
      {
        /* Disable the TX FIFO threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	3308      	adds	r3, #8
 80096a0:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80096a2:	6a3b      	ldr	r3, [r7, #32]
 80096a4:	e853 3f00 	ldrex	r3, [r3]
 80096a8:	61fb      	str	r3, [r7, #28]
   return(result);
 80096aa:	69fb      	ldr	r3, [r7, #28]
 80096ac:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80096b0:	637b      	str	r3, [r7, #52]	; 0x34
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	681b      	ldr	r3, [r3, #0]
 80096b6:	3308      	adds	r3, #8
 80096b8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80096ba:	62fa      	str	r2, [r7, #44]	; 0x2c
 80096bc:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80096be:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80096c0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80096c2:	e841 2300 	strex	r3, r2, [r1]
 80096c6:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 80096c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d1e5      	bne.n	800969a <UART_TxISR_16BIT_FIFOEN+0x28>

        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80096d4:	68fb      	ldr	r3, [r7, #12]
 80096d6:	e853 3f00 	ldrex	r3, [r3]
 80096da:	60bb      	str	r3, [r7, #8]
   return(result);
 80096dc:	68bb      	ldr	r3, [r7, #8]
 80096de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80096e2:	633b      	str	r3, [r7, #48]	; 0x30
 80096e4:	687b      	ldr	r3, [r7, #4]
 80096e6:	681b      	ldr	r3, [r3, #0]
 80096e8:	461a      	mov	r2, r3
 80096ea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096ec:	61bb      	str	r3, [r7, #24]
 80096ee:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80096f0:	6979      	ldr	r1, [r7, #20]
 80096f2:	69ba      	ldr	r2, [r7, #24]
 80096f4:	e841 2300 	strex	r3, r2, [r1]
 80096f8:	613b      	str	r3, [r7, #16]
   return(result);
 80096fa:	693b      	ldr	r3, [r7, #16]
 80096fc:	2b00      	cmp	r3, #0
 80096fe:	d1e6      	bne.n	80096ce <UART_TxISR_16BIT_FIFOEN+0x5c>

        break; /* force exit loop */
 8009700:	e026      	b.n	8009750 <UART_TxISR_16BIT_FIFOEN+0xde>
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	681b      	ldr	r3, [r3, #0]
 8009706:	69db      	ldr	r3, [r3, #28]
 8009708:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800970c:	2b00      	cmp	r3, #0
 800970e:	d018      	beq.n	8009742 <UART_TxISR_16BIT_FIFOEN+0xd0>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009714:	63bb      	str	r3, [r7, #56]	; 0x38
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 8009716:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009718:	881b      	ldrh	r3, [r3, #0]
 800971a:	461a      	mov	r2, r3
 800971c:	687b      	ldr	r3, [r7, #4]
 800971e:	681b      	ldr	r3, [r3, #0]
 8009720:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009724:	629a      	str	r2, [r3, #40]	; 0x28
        huart->pTxBuffPtr += 2U;
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800972a:	1c9a      	adds	r2, r3, #2
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	651a      	str	r2, [r3, #80]	; 0x50
        huart->TxXferCount--;
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 8009736:	b29b      	uxth	r3, r3
 8009738:	3b01      	subs	r3, #1
 800973a:	b29a      	uxth	r2, r3
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 8009742:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8009744:	3b01      	subs	r3, #1
 8009746:	87fb      	strh	r3, [r7, #62]	; 0x3e
 8009748:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800974a:	2b00      	cmp	r3, #0
 800974c:	d19f      	bne.n	800968e <UART_TxISR_16BIT_FIFOEN+0x1c>
      {
        /* Nothing to do */
      }
    }
  }
}
 800974e:	e7ff      	b.n	8009750 <UART_TxISR_16BIT_FIFOEN+0xde>
 8009750:	bf00      	nop
 8009752:	3744      	adds	r7, #68	; 0x44
 8009754:	46bd      	mov	sp, r7
 8009756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800975a:	4770      	bx	lr

0800975c <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800975c:	b580      	push	{r7, lr}
 800975e:	b088      	sub	sp, #32
 8009760:	af00      	add	r7, sp, #0
 8009762:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8009764:	687b      	ldr	r3, [r7, #4]
 8009766:	681b      	ldr	r3, [r3, #0]
 8009768:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	e853 3f00 	ldrex	r3, [r3]
 8009770:	60bb      	str	r3, [r7, #8]
   return(result);
 8009772:	68bb      	ldr	r3, [r7, #8]
 8009774:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009778:	61fb      	str	r3, [r7, #28]
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	681b      	ldr	r3, [r3, #0]
 800977e:	461a      	mov	r2, r3
 8009780:	69fb      	ldr	r3, [r7, #28]
 8009782:	61bb      	str	r3, [r7, #24]
 8009784:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009786:	6979      	ldr	r1, [r7, #20]
 8009788:	69ba      	ldr	r2, [r7, #24]
 800978a:	e841 2300 	strex	r3, r2, [r1]
 800978e:	613b      	str	r3, [r7, #16]
   return(result);
 8009790:	693b      	ldr	r3, [r7, #16]
 8009792:	2b00      	cmp	r3, #0
 8009794:	d1e6      	bne.n	8009764 <UART_EndTransmit_IT+0x8>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8009796:	687b      	ldr	r3, [r7, #4]
 8009798:	2220      	movs	r2, #32
 800979a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	2200      	movs	r2, #0
 80097a2:	679a      	str	r2, [r3, #120]	; 0x78
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80097a4:	6878      	ldr	r0, [r7, #4]
 80097a6:	f7fe fd5d 	bl	8008264 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80097aa:	bf00      	nop
 80097ac:	3720      	adds	r7, #32
 80097ae:	46bd      	mov	sp, r7
 80097b0:	bd80      	pop	{r7, pc}
	...

080097b4 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 80097b4:	b580      	push	{r7, lr}
 80097b6:	b09c      	sub	sp, #112	; 0x70
 80097b8:	af00      	add	r7, sp, #0
 80097ba:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 80097c2:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80097cc:	2b22      	cmp	r3, #34	; 0x22
 80097ce:	f040 80be 	bne.w	800994e <UART_RxISR_8BIT+0x19a>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	681b      	ldr	r3, [r3, #0]
 80097d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097d8:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80097dc:	f8b7 306c 	ldrh.w	r3, [r7, #108]	; 0x6c
 80097e0:	b2d9      	uxtb	r1, r3
 80097e2:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 80097e6:	b2da      	uxtb	r2, r3
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80097ec:	400a      	ands	r2, r1
 80097ee:	b2d2      	uxtb	r2, r2
 80097f0:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80097f6:	1c5a      	adds	r2, r3, #1
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	659a      	str	r2, [r3, #88]	; 0x58
    huart->RxXferCount--;
 80097fc:	687b      	ldr	r3, [r7, #4]
 80097fe:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009802:	b29b      	uxth	r3, r3
 8009804:	3b01      	subs	r3, #1
 8009806:	b29a      	uxth	r2, r3
 8009808:	687b      	ldr	r3, [r7, #4]
 800980a:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 800980e:	687b      	ldr	r3, [r7, #4]
 8009810:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009814:	b29b      	uxth	r3, r3
 8009816:	2b00      	cmp	r3, #0
 8009818:	f040 80a1 	bne.w	800995e <UART_RxISR_8BIT+0x1aa>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	681b      	ldr	r3, [r3, #0]
 8009820:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009822:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009824:	e853 3f00 	ldrex	r3, [r3]
 8009828:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800982a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800982c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009830:	66bb      	str	r3, [r7, #104]	; 0x68
 8009832:	687b      	ldr	r3, [r7, #4]
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	461a      	mov	r2, r3
 8009838:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800983a:	65bb      	str	r3, [r7, #88]	; 0x58
 800983c:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800983e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8009840:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8009842:	e841 2300 	strex	r3, r2, [r1]
 8009846:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 8009848:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800984a:	2b00      	cmp	r3, #0
 800984c:	d1e6      	bne.n	800981c <UART_RxISR_8BIT+0x68>

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	681b      	ldr	r3, [r3, #0]
 8009852:	3308      	adds	r3, #8
 8009854:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009856:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009858:	e853 3f00 	ldrex	r3, [r3]
 800985c:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800985e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009860:	f023 0301 	bic.w	r3, r3, #1
 8009864:	667b      	str	r3, [r7, #100]	; 0x64
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	681b      	ldr	r3, [r3, #0]
 800986a:	3308      	adds	r3, #8
 800986c:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800986e:	647a      	str	r2, [r7, #68]	; 0x44
 8009870:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009872:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8009874:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009876:	e841 2300 	strex	r3, r2, [r1]
 800987a:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800987c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800987e:	2b00      	cmp	r3, #0
 8009880:	d1e5      	bne.n	800984e <UART_RxISR_8BIT+0x9a>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8009882:	687b      	ldr	r3, [r7, #4]
 8009884:	2220      	movs	r2, #32
 8009886:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	2200      	movs	r2, #0
 800988e:	675a      	str	r2, [r3, #116]	; 0x74

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8009890:	687b      	ldr	r3, [r7, #4]
 8009892:	2200      	movs	r2, #0
 8009894:	671a      	str	r2, [r3, #112]	; 0x70

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8009896:	687b      	ldr	r3, [r7, #4]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	4a33      	ldr	r2, [pc, #204]	; (8009968 <UART_RxISR_8BIT+0x1b4>)
 800989c:	4293      	cmp	r3, r2
 800989e:	d01f      	beq.n	80098e0 <UART_RxISR_8BIT+0x12c>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 80098a0:	687b      	ldr	r3, [r7, #4]
 80098a2:	681b      	ldr	r3, [r3, #0]
 80098a4:	685b      	ldr	r3, [r3, #4]
 80098a6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80098aa:	2b00      	cmp	r3, #0
 80098ac:	d018      	beq.n	80098e0 <UART_RxISR_8BIT+0x12c>
        {
          /* Enable the UART Receiver Timeout Interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80098b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80098b6:	e853 3f00 	ldrex	r3, [r3]
 80098ba:	623b      	str	r3, [r7, #32]
   return(result);
 80098bc:	6a3b      	ldr	r3, [r7, #32]
 80098be:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80098c2:	663b      	str	r3, [r7, #96]	; 0x60
 80098c4:	687b      	ldr	r3, [r7, #4]
 80098c6:	681b      	ldr	r3, [r3, #0]
 80098c8:	461a      	mov	r2, r3
 80098ca:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80098cc:	633b      	str	r3, [r7, #48]	; 0x30
 80098ce:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80098d0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80098d2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80098d4:	e841 2300 	strex	r3, r2, [r1]
 80098d8:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 80098da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80098dc:	2b00      	cmp	r3, #0
 80098de:	d1e6      	bne.n	80098ae <UART_RxISR_8BIT+0xfa>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80098e0:	687b      	ldr	r3, [r7, #4]
 80098e2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80098e4:	2b01      	cmp	r3, #1
 80098e6:	d12e      	bne.n	8009946 <UART_RxISR_8BIT+0x192>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80098e8:	687b      	ldr	r3, [r7, #4]
 80098ea:	2200      	movs	r2, #0
 80098ec:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80098ee:	687b      	ldr	r3, [r7, #4]
 80098f0:	681b      	ldr	r3, [r3, #0]
 80098f2:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80098f4:	693b      	ldr	r3, [r7, #16]
 80098f6:	e853 3f00 	ldrex	r3, [r3]
 80098fa:	60fb      	str	r3, [r7, #12]
   return(result);
 80098fc:	68fb      	ldr	r3, [r7, #12]
 80098fe:	f023 0310 	bic.w	r3, r3, #16
 8009902:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	461a      	mov	r2, r3
 800990a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800990c:	61fb      	str	r3, [r7, #28]
 800990e:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009910:	69b9      	ldr	r1, [r7, #24]
 8009912:	69fa      	ldr	r2, [r7, #28]
 8009914:	e841 2300 	strex	r3, r2, [r1]
 8009918:	617b      	str	r3, [r7, #20]
   return(result);
 800991a:	697b      	ldr	r3, [r7, #20]
 800991c:	2b00      	cmp	r3, #0
 800991e:	d1e6      	bne.n	80098ee <UART_RxISR_8BIT+0x13a>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	69db      	ldr	r3, [r3, #28]
 8009926:	f003 0310 	and.w	r3, r3, #16
 800992a:	2b10      	cmp	r3, #16
 800992c:	d103      	bne.n	8009936 <UART_RxISR_8BIT+0x182>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	681b      	ldr	r3, [r3, #0]
 8009932:	2210      	movs	r2, #16
 8009934:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8009936:	687b      	ldr	r3, [r7, #4]
 8009938:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800993c:	4619      	mov	r1, r3
 800993e:	6878      	ldr	r0, [r7, #4]
 8009940:	f7fe fca4 	bl	800828c <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8009944:	e00b      	b.n	800995e <UART_RxISR_8BIT+0x1aa>
        HAL_UART_RxCpltCallback(huart);
 8009946:	6878      	ldr	r0, [r7, #4]
 8009948:	f006 fb2a 	bl	800ffa0 <HAL_UART_RxCpltCallback>
}
 800994c:	e007      	b.n	800995e <UART_RxISR_8BIT+0x1aa>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	681b      	ldr	r3, [r3, #0]
 8009952:	699a      	ldr	r2, [r3, #24]
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	f042 0208 	orr.w	r2, r2, #8
 800995c:	619a      	str	r2, [r3, #24]
}
 800995e:	bf00      	nop
 8009960:	3770      	adds	r7, #112	; 0x70
 8009962:	46bd      	mov	sp, r7
 8009964:	bd80      	pop	{r7, pc}
 8009966:	bf00      	nop
 8009968:	58000c00 	.word	0x58000c00

0800996c <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 800996c:	b580      	push	{r7, lr}
 800996e:	b09c      	sub	sp, #112	; 0x70
 8009970:	af00      	add	r7, sp, #0
 8009972:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800997a:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009984:	2b22      	cmp	r3, #34	; 0x22
 8009986:	f040 80be 	bne.w	8009b06 <UART_RxISR_16BIT+0x19a>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800998a:	687b      	ldr	r3, [r7, #4]
 800998c:	681b      	ldr	r3, [r3, #0]
 800998e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009990:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 8009994:	687b      	ldr	r3, [r7, #4]
 8009996:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009998:	66bb      	str	r3, [r7, #104]	; 0x68
    *tmp = (uint16_t)(uhdata & uhMask);
 800999a:	f8b7 206c 	ldrh.w	r2, [r7, #108]	; 0x6c
 800999e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 80099a2:	4013      	ands	r3, r2
 80099a4:	b29a      	uxth	r2, r3
 80099a6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80099a8:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80099ae:	1c9a      	adds	r2, r3, #2
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	659a      	str	r2, [r3, #88]	; 0x58
    huart->RxXferCount--;
 80099b4:	687b      	ldr	r3, [r7, #4]
 80099b6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80099ba:	b29b      	uxth	r3, r3
 80099bc:	3b01      	subs	r3, #1
 80099be:	b29a      	uxth	r2, r3
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80099cc:	b29b      	uxth	r3, r3
 80099ce:	2b00      	cmp	r3, #0
 80099d0:	f040 80a1 	bne.w	8009b16 <UART_RxISR_16BIT+0x1aa>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	64bb      	str	r3, [r7, #72]	; 0x48
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80099da:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80099dc:	e853 3f00 	ldrex	r3, [r3]
 80099e0:	647b      	str	r3, [r7, #68]	; 0x44
   return(result);
 80099e2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80099e4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80099e8:	667b      	str	r3, [r7, #100]	; 0x64
 80099ea:	687b      	ldr	r3, [r7, #4]
 80099ec:	681b      	ldr	r3, [r3, #0]
 80099ee:	461a      	mov	r2, r3
 80099f0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80099f2:	657b      	str	r3, [r7, #84]	; 0x54
 80099f4:	653a      	str	r2, [r7, #80]	; 0x50
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80099f6:	6d39      	ldr	r1, [r7, #80]	; 0x50
 80099f8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80099fa:	e841 2300 	strex	r3, r2, [r1]
 80099fe:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 8009a00:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009a02:	2b00      	cmp	r3, #0
 8009a04:	d1e6      	bne.n	80099d4 <UART_RxISR_16BIT+0x68>

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009a06:	687b      	ldr	r3, [r7, #4]
 8009a08:	681b      	ldr	r3, [r3, #0]
 8009a0a:	3308      	adds	r3, #8
 8009a0c:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009a0e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a10:	e853 3f00 	ldrex	r3, [r3]
 8009a14:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 8009a16:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009a18:	f023 0301 	bic.w	r3, r3, #1
 8009a1c:	663b      	str	r3, [r7, #96]	; 0x60
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	3308      	adds	r3, #8
 8009a24:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8009a26:	643a      	str	r2, [r7, #64]	; 0x40
 8009a28:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009a2a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8009a2c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8009a2e:	e841 2300 	strex	r3, r2, [r1]
 8009a32:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8009a34:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a36:	2b00      	cmp	r3, #0
 8009a38:	d1e5      	bne.n	8009a06 <UART_RxISR_16BIT+0x9a>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	2220      	movs	r2, #32
 8009a3e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	2200      	movs	r2, #0
 8009a46:	675a      	str	r2, [r3, #116]	; 0x74

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	2200      	movs	r2, #0
 8009a4c:	671a      	str	r2, [r3, #112]	; 0x70

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	681b      	ldr	r3, [r3, #0]
 8009a52:	4a33      	ldr	r2, [pc, #204]	; (8009b20 <UART_RxISR_16BIT+0x1b4>)
 8009a54:	4293      	cmp	r3, r2
 8009a56:	d01f      	beq.n	8009a98 <UART_RxISR_16BIT+0x12c>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	685b      	ldr	r3, [r3, #4]
 8009a5e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009a62:	2b00      	cmp	r3, #0
 8009a64:	d018      	beq.n	8009a98 <UART_RxISR_16BIT+0x12c>
        {
          /* Enable the UART Receiver Timeout Interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009a6c:	6a3b      	ldr	r3, [r7, #32]
 8009a6e:	e853 3f00 	ldrex	r3, [r3]
 8009a72:	61fb      	str	r3, [r7, #28]
   return(result);
 8009a74:	69fb      	ldr	r3, [r7, #28]
 8009a76:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8009a7a:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	461a      	mov	r2, r3
 8009a82:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8009a84:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009a86:	62ba      	str	r2, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009a88:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009a8a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009a8c:	e841 2300 	strex	r3, r2, [r1]
 8009a90:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8009a92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a94:	2b00      	cmp	r3, #0
 8009a96:	d1e6      	bne.n	8009a66 <UART_RxISR_16BIT+0xfa>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009a9c:	2b01      	cmp	r3, #1
 8009a9e:	d12e      	bne.n	8009afe <UART_RxISR_16BIT+0x192>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	2200      	movs	r2, #0
 8009aa4:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	681b      	ldr	r3, [r3, #0]
 8009aaa:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009aac:	68fb      	ldr	r3, [r7, #12]
 8009aae:	e853 3f00 	ldrex	r3, [r3]
 8009ab2:	60bb      	str	r3, [r7, #8]
   return(result);
 8009ab4:	68bb      	ldr	r3, [r7, #8]
 8009ab6:	f023 0310 	bic.w	r3, r3, #16
 8009aba:	65bb      	str	r3, [r7, #88]	; 0x58
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	461a      	mov	r2, r3
 8009ac2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8009ac4:	61bb      	str	r3, [r7, #24]
 8009ac6:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009ac8:	6979      	ldr	r1, [r7, #20]
 8009aca:	69ba      	ldr	r2, [r7, #24]
 8009acc:	e841 2300 	strex	r3, r2, [r1]
 8009ad0:	613b      	str	r3, [r7, #16]
   return(result);
 8009ad2:	693b      	ldr	r3, [r7, #16]
 8009ad4:	2b00      	cmp	r3, #0
 8009ad6:	d1e6      	bne.n	8009aa6 <UART_RxISR_16BIT+0x13a>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	681b      	ldr	r3, [r3, #0]
 8009adc:	69db      	ldr	r3, [r3, #28]
 8009ade:	f003 0310 	and.w	r3, r3, #16
 8009ae2:	2b10      	cmp	r3, #16
 8009ae4:	d103      	bne.n	8009aee <UART_RxISR_16BIT+0x182>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	2210      	movs	r2, #16
 8009aec:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8009aee:	687b      	ldr	r3, [r7, #4]
 8009af0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8009af4:	4619      	mov	r1, r3
 8009af6:	6878      	ldr	r0, [r7, #4]
 8009af8:	f7fe fbc8 	bl	800828c <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8009afc:	e00b      	b.n	8009b16 <UART_RxISR_16BIT+0x1aa>
        HAL_UART_RxCpltCallback(huart);
 8009afe:	6878      	ldr	r0, [r7, #4]
 8009b00:	f006 fa4e 	bl	800ffa0 <HAL_UART_RxCpltCallback>
}
 8009b04:	e007      	b.n	8009b16 <UART_RxISR_16BIT+0x1aa>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	699a      	ldr	r2, [r3, #24]
 8009b0c:	687b      	ldr	r3, [r7, #4]
 8009b0e:	681b      	ldr	r3, [r3, #0]
 8009b10:	f042 0208 	orr.w	r2, r2, #8
 8009b14:	619a      	str	r2, [r3, #24]
}
 8009b16:	bf00      	nop
 8009b18:	3770      	adds	r7, #112	; 0x70
 8009b1a:	46bd      	mov	sp, r7
 8009b1c:	bd80      	pop	{r7, pc}
 8009b1e:	bf00      	nop
 8009b20:	58000c00 	.word	0x58000c00

08009b24 <UART_RxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 8009b24:	b580      	push	{r7, lr}
 8009b26:	b0ac      	sub	sp, #176	; 0xb0
 8009b28:	af00      	add	r7, sp, #0
 8009b2a:	6078      	str	r0, [r7, #4]
  uint16_t  uhMask = huart->Mask;
 8009b2c:	687b      	ldr	r3, [r7, #4]
 8009b2e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8009b32:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	681b      	ldr	r3, [r3, #0]
 8009b3a:	69db      	ldr	r3, [r3, #28]
 8009b3c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 8009b40:	687b      	ldr	r3, [r7, #4]
 8009b42:	681b      	ldr	r3, [r3, #0]
 8009b44:	681b      	ldr	r3, [r3, #0]
 8009b46:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	681b      	ldr	r3, [r3, #0]
 8009b4e:	689b      	ldr	r3, [r3, #8]
 8009b50:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8009b54:	687b      	ldr	r3, [r7, #4]
 8009b56:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009b5a:	2b22      	cmp	r3, #34	; 0x22
 8009b5c:	f040 8180 	bne.w	8009e60 <UART_RxISR_8BIT_FIFOEN+0x33c>
  {
    nb_rx_data = huart->NbRxDataToProcess;
 8009b60:	687b      	ldr	r3, [r7, #4]
 8009b62:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8009b66:	f8a7 309e 	strh.w	r3, [r7, #158]	; 0x9e
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 8009b6a:	e123      	b.n	8009db4 <UART_RxISR_8BIT_FIFOEN+0x290>
    {
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8009b6c:	687b      	ldr	r3, [r7, #4]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b72:	f8a7 309c 	strh.w	r3, [r7, #156]	; 0x9c
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 8009b76:	f8b7 309c 	ldrh.w	r3, [r7, #156]	; 0x9c
 8009b7a:	b2d9      	uxtb	r1, r3
 8009b7c:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 8009b80:	b2da      	uxtb	r2, r3
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b86:	400a      	ands	r2, r1
 8009b88:	b2d2      	uxtb	r2, r2
 8009b8a:	701a      	strb	r2, [r3, #0]
      huart->pRxBuffPtr++;
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b90:	1c5a      	adds	r2, r3, #1
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	659a      	str	r2, [r3, #88]	; 0x58
      huart->RxXferCount--;
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009b9c:	b29b      	uxth	r3, r3
 8009b9e:	3b01      	subs	r3, #1
 8009ba0:	b29a      	uxth	r2, r3
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	681b      	ldr	r3, [r3, #0]
 8009bac:	69db      	ldr	r3, [r3, #28]
 8009bae:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac

      /* If some non blocking errors occurred */
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 8009bb2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009bb6:	f003 0307 	and.w	r3, r3, #7
 8009bba:	2b00      	cmp	r3, #0
 8009bbc:	d053      	beq.n	8009c66 <UART_RxISR_8BIT_FIFOEN+0x142>
      {
        /* UART parity error interrupt occurred -------------------------------------*/
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8009bbe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009bc2:	f003 0301 	and.w	r3, r3, #1
 8009bc6:	2b00      	cmp	r3, #0
 8009bc8:	d011      	beq.n	8009bee <UART_RxISR_8BIT_FIFOEN+0xca>
 8009bca:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8009bce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009bd2:	2b00      	cmp	r3, #0
 8009bd4:	d00b      	beq.n	8009bee <UART_RxISR_8BIT_FIFOEN+0xca>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8009bd6:	687b      	ldr	r3, [r7, #4]
 8009bd8:	681b      	ldr	r3, [r3, #0]
 8009bda:	2201      	movs	r2, #1
 8009bdc:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_PE;
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009be4:	f043 0201 	orr.w	r2, r3, #1
 8009be8:	687b      	ldr	r3, [r7, #4]
 8009bea:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART frame error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009bee:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009bf2:	f003 0302 	and.w	r3, r3, #2
 8009bf6:	2b00      	cmp	r3, #0
 8009bf8:	d011      	beq.n	8009c1e <UART_RxISR_8BIT_FIFOEN+0xfa>
 8009bfa:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8009bfe:	f003 0301 	and.w	r3, r3, #1
 8009c02:	2b00      	cmp	r3, #0
 8009c04:	d00b      	beq.n	8009c1e <UART_RxISR_8BIT_FIFOEN+0xfa>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	681b      	ldr	r3, [r3, #0]
 8009c0a:	2202      	movs	r2, #2
 8009c0c:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_FE;
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c14:	f043 0204 	orr.w	r2, r3, #4
 8009c18:	687b      	ldr	r3, [r7, #4]
 8009c1a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART noise error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009c1e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009c22:	f003 0304 	and.w	r3, r3, #4
 8009c26:	2b00      	cmp	r3, #0
 8009c28:	d011      	beq.n	8009c4e <UART_RxISR_8BIT_FIFOEN+0x12a>
 8009c2a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8009c2e:	f003 0301 	and.w	r3, r3, #1
 8009c32:	2b00      	cmp	r3, #0
 8009c34:	d00b      	beq.n	8009c4e <UART_RxISR_8BIT_FIFOEN+0x12a>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	2204      	movs	r2, #4
 8009c3c:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c44:	f043 0202 	orr.w	r2, r3, #2
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* Call UART Error Call back function if need be ----------------------------*/
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8009c4e:	687b      	ldr	r3, [r7, #4]
 8009c50:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c54:	2b00      	cmp	r3, #0
 8009c56:	d006      	beq.n	8009c66 <UART_RxISR_8BIT_FIFOEN+0x142>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8009c58:	6878      	ldr	r0, [r7, #4]
 8009c5a:	f7fe fb0d 	bl	8008278 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	2200      	movs	r2, #0
 8009c62:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }
      }

      if (huart->RxXferCount == 0U)
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009c6c:	b29b      	uxth	r3, r3
 8009c6e:	2b00      	cmp	r3, #0
 8009c70:	f040 80a0 	bne.w	8009db4 <UART_RxISR_8BIT_FIFOEN+0x290>
      {
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	681b      	ldr	r3, [r3, #0]
 8009c78:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009c7a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8009c7c:	e853 3f00 	ldrex	r3, [r3]
 8009c80:	66fb      	str	r3, [r7, #108]	; 0x6c
   return(result);
 8009c82:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8009c84:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009c88:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	461a      	mov	r2, r3
 8009c92:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8009c96:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009c98:	67ba      	str	r2, [r7, #120]	; 0x78
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009c9a:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 8009c9c:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8009c9e:	e841 2300 	strex	r3, r2, [r1]
 8009ca2:	677b      	str	r3, [r7, #116]	; 0x74
   return(result);
 8009ca4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8009ca6:	2b00      	cmp	r3, #0
 8009ca8:	d1e4      	bne.n	8009c74 <UART_RxISR_8BIT_FIFOEN+0x150>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	681b      	ldr	r3, [r3, #0]
 8009cae:	3308      	adds	r3, #8
 8009cb0:	65fb      	str	r3, [r7, #92]	; 0x5c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009cb2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8009cb4:	e853 3f00 	ldrex	r3, [r3]
 8009cb8:	65bb      	str	r3, [r7, #88]	; 0x58
   return(result);
 8009cba:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8009cbc:	4b6e      	ldr	r3, [pc, #440]	; (8009e78 <UART_RxISR_8BIT_FIFOEN+0x354>)
 8009cbe:	4013      	ands	r3, r2
 8009cc0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8009cc4:	687b      	ldr	r3, [r7, #4]
 8009cc6:	681b      	ldr	r3, [r3, #0]
 8009cc8:	3308      	adds	r3, #8
 8009cca:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8009cce:	66ba      	str	r2, [r7, #104]	; 0x68
 8009cd0:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009cd2:	6e79      	ldr	r1, [r7, #100]	; 0x64
 8009cd4:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8009cd6:	e841 2300 	strex	r3, r2, [r1]
 8009cda:	663b      	str	r3, [r7, #96]	; 0x60
   return(result);
 8009cdc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	d1e3      	bne.n	8009caa <UART_RxISR_8BIT_FIFOEN+0x186>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	2220      	movs	r2, #32
 8009ce6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	2200      	movs	r2, #0
 8009cee:	675a      	str	r2, [r3, #116]	; 0x74

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	2200      	movs	r2, #0
 8009cf4:	671a      	str	r2, [r3, #112]	; 0x70

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	681b      	ldr	r3, [r3, #0]
 8009cfa:	4a60      	ldr	r2, [pc, #384]	; (8009e7c <UART_RxISR_8BIT_FIFOEN+0x358>)
 8009cfc:	4293      	cmp	r3, r2
 8009cfe:	d021      	beq.n	8009d44 <UART_RxISR_8BIT_FIFOEN+0x220>
        {
          /* Check that USART RTOEN bit is set */
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	685b      	ldr	r3, [r3, #4]
 8009d06:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009d0a:	2b00      	cmp	r3, #0
 8009d0c:	d01a      	beq.n	8009d44 <UART_RxISR_8BIT_FIFOEN+0x220>
          {
            /* Enable the UART Receiver Timeout Interrupt */
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	64bb      	str	r3, [r7, #72]	; 0x48
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009d14:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8009d16:	e853 3f00 	ldrex	r3, [r3]
 8009d1a:	647b      	str	r3, [r7, #68]	; 0x44
   return(result);
 8009d1c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8009d1e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8009d22:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	681b      	ldr	r3, [r3, #0]
 8009d2a:	461a      	mov	r2, r3
 8009d2c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8009d30:	657b      	str	r3, [r7, #84]	; 0x54
 8009d32:	653a      	str	r2, [r7, #80]	; 0x50
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009d34:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009d36:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8009d38:	e841 2300 	strex	r3, r2, [r1]
 8009d3c:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 8009d3e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009d40:	2b00      	cmp	r3, #0
 8009d42:	d1e4      	bne.n	8009d0e <UART_RxISR_8BIT_FIFOEN+0x1ea>
          }
        }

        /* Check current reception Mode :
           If Reception till IDLE event has been selected : */
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009d48:	2b01      	cmp	r3, #1
 8009d4a:	d130      	bne.n	8009dae <UART_RxISR_8BIT_FIFOEN+0x28a>
        {
          /* Set reception type to Standard */
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	2200      	movs	r2, #0
 8009d50:	66da      	str	r2, [r3, #108]	; 0x6c

          /* Disable IDLE interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009d52:	687b      	ldr	r3, [r7, #4]
 8009d54:	681b      	ldr	r3, [r3, #0]
 8009d56:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009d58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009d5a:	e853 3f00 	ldrex	r3, [r3]
 8009d5e:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 8009d60:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d62:	f023 0310 	bic.w	r3, r3, #16
 8009d66:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8009d6a:	687b      	ldr	r3, [r7, #4]
 8009d6c:	681b      	ldr	r3, [r3, #0]
 8009d6e:	461a      	mov	r2, r3
 8009d70:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8009d74:	643b      	str	r3, [r7, #64]	; 0x40
 8009d76:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009d78:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8009d7a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8009d7c:	e841 2300 	strex	r3, r2, [r1]
 8009d80:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8009d82:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d84:	2b00      	cmp	r3, #0
 8009d86:	d1e4      	bne.n	8009d52 <UART_RxISR_8BIT_FIFOEN+0x22e>

          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	681b      	ldr	r3, [r3, #0]
 8009d8c:	69db      	ldr	r3, [r3, #28]
 8009d8e:	f003 0310 	and.w	r3, r3, #16
 8009d92:	2b10      	cmp	r3, #16
 8009d94:	d103      	bne.n	8009d9e <UART_RxISR_8BIT_FIFOEN+0x27a>
          {
            /* Clear IDLE Flag */
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	681b      	ldr	r3, [r3, #0]
 8009d9a:	2210      	movs	r2, #16
 8009d9c:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx Event callback*/
          huart->RxEventCallback(huart, huart->RxXferSize);
#else
          /*Call legacy weak Rx Event callback*/
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8009d9e:	687b      	ldr	r3, [r7, #4]
 8009da0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8009da4:	4619      	mov	r1, r3
 8009da6:	6878      	ldr	r0, [r7, #4]
 8009da8:	f7fe fa70 	bl	800828c <HAL_UARTEx_RxEventCallback>
 8009dac:	e002      	b.n	8009db4 <UART_RxISR_8BIT_FIFOEN+0x290>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx complete callback*/
          huart->RxCpltCallback(huart);
#else
          /*Call legacy weak Rx complete callback*/
          HAL_UART_RxCpltCallback(huart);
 8009dae:	6878      	ldr	r0, [r7, #4]
 8009db0:	f006 f8f6 	bl	800ffa0 <HAL_UART_RxCpltCallback>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 8009db4:	f8b7 309e 	ldrh.w	r3, [r7, #158]	; 0x9e
 8009db8:	2b00      	cmp	r3, #0
 8009dba:	d006      	beq.n	8009dca <UART_RxISR_8BIT_FIFOEN+0x2a6>
 8009dbc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009dc0:	f003 0320 	and.w	r3, r3, #32
 8009dc4:	2b00      	cmp	r3, #0
 8009dc6:	f47f aed1 	bne.w	8009b6c <UART_RxISR_8BIT_FIFOEN+0x48>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 8009dca:	687b      	ldr	r3, [r7, #4]
 8009dcc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009dd0:	f8a7 308a 	strh.w	r3, [r7, #138]	; 0x8a
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 8009dd4:	f8b7 308a 	ldrh.w	r3, [r7, #138]	; 0x8a
 8009dd8:	2b00      	cmp	r3, #0
 8009dda:	d049      	beq.n	8009e70 <UART_RxISR_8BIT_FIFOEN+0x34c>
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8009de2:	f8b7 208a 	ldrh.w	r2, [r7, #138]	; 0x8a
 8009de6:	429a      	cmp	r2, r3
 8009de8:	d242      	bcs.n	8009e70 <UART_RxISR_8BIT_FIFOEN+0x34c>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 8009dea:	687b      	ldr	r3, [r7, #4]
 8009dec:	681b      	ldr	r3, [r3, #0]
 8009dee:	3308      	adds	r3, #8
 8009df0:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009df2:	6a3b      	ldr	r3, [r7, #32]
 8009df4:	e853 3f00 	ldrex	r3, [r3]
 8009df8:	61fb      	str	r3, [r7, #28]
   return(result);
 8009dfa:	69fb      	ldr	r3, [r7, #28]
 8009dfc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009e00:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	681b      	ldr	r3, [r3, #0]
 8009e08:	3308      	adds	r3, #8
 8009e0a:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8009e0e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8009e10:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e12:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009e14:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009e16:	e841 2300 	strex	r3, r2, [r1]
 8009e1a:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8009e1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d1e3      	bne.n	8009dea <UART_RxISR_8BIT_FIFOEN+0x2c6>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_8BIT;
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	4a16      	ldr	r2, [pc, #88]	; (8009e80 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 8009e26:	675a      	str	r2, [r3, #116]	; 0x74

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8009e28:	687b      	ldr	r3, [r7, #4]
 8009e2a:	681b      	ldr	r3, [r3, #0]
 8009e2c:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009e2e:	68fb      	ldr	r3, [r7, #12]
 8009e30:	e853 3f00 	ldrex	r3, [r3]
 8009e34:	60bb      	str	r3, [r7, #8]
   return(result);
 8009e36:	68bb      	ldr	r3, [r7, #8]
 8009e38:	f043 0320 	orr.w	r3, r3, #32
 8009e3c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	681b      	ldr	r3, [r3, #0]
 8009e44:	461a      	mov	r2, r3
 8009e46:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8009e4a:	61bb      	str	r3, [r7, #24]
 8009e4c:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e4e:	6979      	ldr	r1, [r7, #20]
 8009e50:	69ba      	ldr	r2, [r7, #24]
 8009e52:	e841 2300 	strex	r3, r2, [r1]
 8009e56:	613b      	str	r3, [r7, #16]
   return(result);
 8009e58:	693b      	ldr	r3, [r7, #16]
 8009e5a:	2b00      	cmp	r3, #0
 8009e5c:	d1e4      	bne.n	8009e28 <UART_RxISR_8BIT_FIFOEN+0x304>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 8009e5e:	e007      	b.n	8009e70 <UART_RxISR_8BIT_FIFOEN+0x34c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	681b      	ldr	r3, [r3, #0]
 8009e64:	699a      	ldr	r2, [r3, #24]
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	681b      	ldr	r3, [r3, #0]
 8009e6a:	f042 0208 	orr.w	r2, r2, #8
 8009e6e:	619a      	str	r2, [r3, #24]
}
 8009e70:	bf00      	nop
 8009e72:	37b0      	adds	r7, #176	; 0xb0
 8009e74:	46bd      	mov	sp, r7
 8009e76:	bd80      	pop	{r7, pc}
 8009e78:	effffffe 	.word	0xeffffffe
 8009e7c:	58000c00 	.word	0x58000c00
 8009e80:	080097b5 	.word	0x080097b5

08009e84 <UART_RxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 8009e84:	b580      	push	{r7, lr}
 8009e86:	b0ae      	sub	sp, #184	; 0xb8
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8009e92:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 8009e96:	687b      	ldr	r3, [r7, #4]
 8009e98:	681b      	ldr	r3, [r3, #0]
 8009e9a:	69db      	ldr	r3, [r3, #28]
 8009e9c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 8009ea0:	687b      	ldr	r3, [r7, #4]
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	681b      	ldr	r3, [r3, #0]
 8009ea6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	681b      	ldr	r3, [r3, #0]
 8009eae:	689b      	ldr	r3, [r3, #8]
 8009eb0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8009eb4:	687b      	ldr	r3, [r7, #4]
 8009eb6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009eba:	2b22      	cmp	r3, #34	; 0x22
 8009ebc:	f040 8184 	bne.w	800a1c8 <UART_RxISR_16BIT_FIFOEN+0x344>
  {
    nb_rx_data = huart->NbRxDataToProcess;
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8009ec6:	f8a7 30a6 	strh.w	r3, [r7, #166]	; 0xa6
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 8009eca:	e127      	b.n	800a11c <UART_RxISR_16BIT_FIFOEN+0x298>
    {
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	681b      	ldr	r3, [r3, #0]
 8009ed0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ed2:	f8a7 30a4 	strh.w	r3, [r7, #164]	; 0xa4
      tmp = (uint16_t *) huart->pRxBuffPtr ;
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009eda:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
      *tmp = (uint16_t)(uhdata & uhMask);
 8009ede:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	; 0xa4
 8009ee2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8009ee6:	4013      	ands	r3, r2
 8009ee8:	b29a      	uxth	r2, r3
 8009eea:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8009eee:	801a      	strh	r2, [r3, #0]
      huart->pRxBuffPtr += 2U;
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009ef4:	1c9a      	adds	r2, r3, #2
 8009ef6:	687b      	ldr	r3, [r7, #4]
 8009ef8:	659a      	str	r2, [r3, #88]	; 0x58
      huart->RxXferCount--;
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009f00:	b29b      	uxth	r3, r3
 8009f02:	3b01      	subs	r3, #1
 8009f04:	b29a      	uxth	r2, r3
 8009f06:	687b      	ldr	r3, [r7, #4]
 8009f08:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 8009f0c:	687b      	ldr	r3, [r7, #4]
 8009f0e:	681b      	ldr	r3, [r3, #0]
 8009f10:	69db      	ldr	r3, [r3, #28]
 8009f12:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4

      /* If some non blocking errors occurred */
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 8009f16:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8009f1a:	f003 0307 	and.w	r3, r3, #7
 8009f1e:	2b00      	cmp	r3, #0
 8009f20:	d053      	beq.n	8009fca <UART_RxISR_16BIT_FIFOEN+0x146>
      {
        /* UART parity error interrupt occurred -------------------------------------*/
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8009f22:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8009f26:	f003 0301 	and.w	r3, r3, #1
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d011      	beq.n	8009f52 <UART_RxISR_16BIT_FIFOEN+0xce>
 8009f2e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009f32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	d00b      	beq.n	8009f52 <UART_RxISR_16BIT_FIFOEN+0xce>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	681b      	ldr	r3, [r3, #0]
 8009f3e:	2201      	movs	r2, #1
 8009f40:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_PE;
 8009f42:	687b      	ldr	r3, [r7, #4]
 8009f44:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009f48:	f043 0201 	orr.w	r2, r3, #1
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART frame error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009f52:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8009f56:	f003 0302 	and.w	r3, r3, #2
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	d011      	beq.n	8009f82 <UART_RxISR_16BIT_FIFOEN+0xfe>
 8009f5e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8009f62:	f003 0301 	and.w	r3, r3, #1
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d00b      	beq.n	8009f82 <UART_RxISR_16BIT_FIFOEN+0xfe>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 8009f6a:	687b      	ldr	r3, [r7, #4]
 8009f6c:	681b      	ldr	r3, [r3, #0]
 8009f6e:	2202      	movs	r2, #2
 8009f70:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_FE;
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009f78:	f043 0204 	orr.w	r2, r3, #4
 8009f7c:	687b      	ldr	r3, [r7, #4]
 8009f7e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART noise error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8009f82:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8009f86:	f003 0304 	and.w	r3, r3, #4
 8009f8a:	2b00      	cmp	r3, #0
 8009f8c:	d011      	beq.n	8009fb2 <UART_RxISR_16BIT_FIFOEN+0x12e>
 8009f8e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8009f92:	f003 0301 	and.w	r3, r3, #1
 8009f96:	2b00      	cmp	r3, #0
 8009f98:	d00b      	beq.n	8009fb2 <UART_RxISR_16BIT_FIFOEN+0x12e>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	681b      	ldr	r3, [r3, #0]
 8009f9e:	2204      	movs	r2, #4
 8009fa0:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009fa8:	f043 0202 	orr.w	r2, r3, #2
 8009fac:	687b      	ldr	r3, [r7, #4]
 8009fae:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* Call UART Error Call back function if need be ----------------------------*/
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8009fb2:	687b      	ldr	r3, [r7, #4]
 8009fb4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009fb8:	2b00      	cmp	r3, #0
 8009fba:	d006      	beq.n	8009fca <UART_RxISR_16BIT_FIFOEN+0x146>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8009fbc:	6878      	ldr	r0, [r7, #4]
 8009fbe:	f7fe f95b 	bl	8008278 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009fc2:	687b      	ldr	r3, [r7, #4]
 8009fc4:	2200      	movs	r2, #0
 8009fc6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }
      }

      if (huart->RxXferCount == 0U)
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009fd0:	b29b      	uxth	r3, r3
 8009fd2:	2b00      	cmp	r3, #0
 8009fd4:	f040 80a2 	bne.w	800a11c <UART_RxISR_16BIT_FIFOEN+0x298>
      {
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	681b      	ldr	r3, [r3, #0]
 8009fdc:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009fde:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8009fe0:	e853 3f00 	ldrex	r3, [r3]
 8009fe4:	673b      	str	r3, [r7, #112]	; 0x70
   return(result);
 8009fe6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8009fe8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009fec:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8009ff0:	687b      	ldr	r3, [r7, #4]
 8009ff2:	681b      	ldr	r3, [r3, #0]
 8009ff4:	461a      	mov	r2, r3
 8009ff6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8009ffa:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009ffe:	67fa      	str	r2, [r7, #124]	; 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a000:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800a002:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800a006:	e841 2300 	strex	r3, r2, [r1]
 800a00a:	67bb      	str	r3, [r7, #120]	; 0x78
   return(result);
 800a00c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800a00e:	2b00      	cmp	r3, #0
 800a010:	d1e2      	bne.n	8009fd8 <UART_RxISR_16BIT_FIFOEN+0x154>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	681b      	ldr	r3, [r3, #0]
 800a016:	3308      	adds	r3, #8
 800a018:	663b      	str	r3, [r7, #96]	; 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a01a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a01c:	e853 3f00 	ldrex	r3, [r3]
 800a020:	65fb      	str	r3, [r7, #92]	; 0x5c
   return(result);
 800a022:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800a024:	4b6e      	ldr	r3, [pc, #440]	; (800a1e0 <UART_RxISR_16BIT_FIFOEN+0x35c>)
 800a026:	4013      	ands	r3, r2
 800a028:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	681b      	ldr	r3, [r3, #0]
 800a030:	3308      	adds	r3, #8
 800a032:	f8d7 2098 	ldr.w	r2, [r7, #152]	; 0x98
 800a036:	66fa      	str	r2, [r7, #108]	; 0x6c
 800a038:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a03a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800a03c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800a03e:	e841 2300 	strex	r3, r2, [r1]
 800a042:	667b      	str	r3, [r7, #100]	; 0x64
   return(result);
 800a044:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a046:	2b00      	cmp	r3, #0
 800a048:	d1e3      	bne.n	800a012 <UART_RxISR_16BIT_FIFOEN+0x18e>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	2220      	movs	r2, #32
 800a04e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800a052:	687b      	ldr	r3, [r7, #4]
 800a054:	2200      	movs	r2, #0
 800a056:	675a      	str	r2, [r3, #116]	; 0x74

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	2200      	movs	r2, #0
 800a05c:	671a      	str	r2, [r3, #112]	; 0x70

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800a05e:	687b      	ldr	r3, [r7, #4]
 800a060:	681b      	ldr	r3, [r3, #0]
 800a062:	4a60      	ldr	r2, [pc, #384]	; (800a1e4 <UART_RxISR_16BIT_FIFOEN+0x360>)
 800a064:	4293      	cmp	r3, r2
 800a066:	d021      	beq.n	800a0ac <UART_RxISR_16BIT_FIFOEN+0x228>
        {
          /* Check that USART RTOEN bit is set */
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800a068:	687b      	ldr	r3, [r7, #4]
 800a06a:	681b      	ldr	r3, [r3, #0]
 800a06c:	685b      	ldr	r3, [r3, #4]
 800a06e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a072:	2b00      	cmp	r3, #0
 800a074:	d01a      	beq.n	800a0ac <UART_RxISR_16BIT_FIFOEN+0x228>
          {
            /* Enable the UART Receiver Timeout Interrupt */
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	681b      	ldr	r3, [r3, #0]
 800a07a:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a07c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a07e:	e853 3f00 	ldrex	r3, [r3]
 800a082:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800a084:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a086:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a08a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	681b      	ldr	r3, [r3, #0]
 800a092:	461a      	mov	r2, r3
 800a094:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800a098:	65bb      	str	r3, [r7, #88]	; 0x58
 800a09a:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a09c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800a09e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800a0a0:	e841 2300 	strex	r3, r2, [r1]
 800a0a4:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 800a0a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a0a8:	2b00      	cmp	r3, #0
 800a0aa:	d1e4      	bne.n	800a076 <UART_RxISR_16BIT_FIFOEN+0x1f2>
          }
        }

        /* Check current reception Mode :
           If Reception till IDLE event has been selected : */
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a0b0:	2b01      	cmp	r3, #1
 800a0b2:	d130      	bne.n	800a116 <UART_RxISR_16BIT_FIFOEN+0x292>
        {
          /* Set reception type to Standard */
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a0b4:	687b      	ldr	r3, [r7, #4]
 800a0b6:	2200      	movs	r2, #0
 800a0b8:	66da      	str	r2, [r3, #108]	; 0x6c

          /* Disable IDLE interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a0c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a0c2:	e853 3f00 	ldrex	r3, [r3]
 800a0c6:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800a0c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a0ca:	f023 0310 	bic.w	r3, r3, #16
 800a0ce:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	461a      	mov	r2, r3
 800a0d8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800a0dc:	647b      	str	r3, [r7, #68]	; 0x44
 800a0de:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a0e0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800a0e2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a0e4:	e841 2300 	strex	r3, r2, [r1]
 800a0e8:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800a0ea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a0ec:	2b00      	cmp	r3, #0
 800a0ee:	d1e4      	bne.n	800a0ba <UART_RxISR_16BIT_FIFOEN+0x236>

          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	681b      	ldr	r3, [r3, #0]
 800a0f4:	69db      	ldr	r3, [r3, #28]
 800a0f6:	f003 0310 	and.w	r3, r3, #16
 800a0fa:	2b10      	cmp	r3, #16
 800a0fc:	d103      	bne.n	800a106 <UART_RxISR_16BIT_FIFOEN+0x282>
          {
            /* Clear IDLE Flag */
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800a0fe:	687b      	ldr	r3, [r7, #4]
 800a100:	681b      	ldr	r3, [r3, #0]
 800a102:	2210      	movs	r2, #16
 800a104:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx Event callback*/
          huart->RxEventCallback(huart, huart->RxXferSize);
#else
          /*Call legacy weak Rx Event callback*/
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800a10c:	4619      	mov	r1, r3
 800a10e:	6878      	ldr	r0, [r7, #4]
 800a110:	f7fe f8bc 	bl	800828c <HAL_UARTEx_RxEventCallback>
 800a114:	e002      	b.n	800a11c <UART_RxISR_16BIT_FIFOEN+0x298>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx complete callback*/
          huart->RxCpltCallback(huart);
#else
          /*Call legacy weak Rx complete callback*/
          HAL_UART_RxCpltCallback(huart);
 800a116:	6878      	ldr	r0, [r7, #4]
 800a118:	f005 ff42 	bl	800ffa0 <HAL_UART_RxCpltCallback>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 800a11c:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	; 0xa6
 800a120:	2b00      	cmp	r3, #0
 800a122:	d006      	beq.n	800a132 <UART_RxISR_16BIT_FIFOEN+0x2ae>
 800a124:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800a128:	f003 0320 	and.w	r3, r3, #32
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	f47f aecd 	bne.w	8009ecc <UART_RxISR_16BIT_FIFOEN+0x48>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800a138:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 800a13c:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 800a140:	2b00      	cmp	r3, #0
 800a142:	d049      	beq.n	800a1d8 <UART_RxISR_16BIT_FIFOEN+0x354>
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800a14a:	f8b7 208e 	ldrh.w	r2, [r7, #142]	; 0x8e
 800a14e:	429a      	cmp	r2, r3
 800a150:	d242      	bcs.n	800a1d8 <UART_RxISR_16BIT_FIFOEN+0x354>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	681b      	ldr	r3, [r3, #0]
 800a156:	3308      	adds	r3, #8
 800a158:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a15a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a15c:	e853 3f00 	ldrex	r3, [r3]
 800a160:	623b      	str	r3, [r7, #32]
   return(result);
 800a162:	6a3b      	ldr	r3, [r7, #32]
 800a164:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a168:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	681b      	ldr	r3, [r3, #0]
 800a170:	3308      	adds	r3, #8
 800a172:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800a176:	633a      	str	r2, [r7, #48]	; 0x30
 800a178:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a17a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a17c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a17e:	e841 2300 	strex	r3, r2, [r1]
 800a182:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800a184:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a186:	2b00      	cmp	r3, #0
 800a188:	d1e3      	bne.n	800a152 <UART_RxISR_16BIT_FIFOEN+0x2ce>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_16BIT;
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	4a16      	ldr	r2, [pc, #88]	; (800a1e8 <UART_RxISR_16BIT_FIFOEN+0x364>)
 800a18e:	675a      	str	r2, [r3, #116]	; 0x74

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 800a190:	687b      	ldr	r3, [r7, #4]
 800a192:	681b      	ldr	r3, [r3, #0]
 800a194:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a196:	693b      	ldr	r3, [r7, #16]
 800a198:	e853 3f00 	ldrex	r3, [r3]
 800a19c:	60fb      	str	r3, [r7, #12]
   return(result);
 800a19e:	68fb      	ldr	r3, [r7, #12]
 800a1a0:	f043 0320 	orr.w	r3, r3, #32
 800a1a4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	461a      	mov	r2, r3
 800a1ae:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800a1b2:	61fb      	str	r3, [r7, #28]
 800a1b4:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a1b6:	69b9      	ldr	r1, [r7, #24]
 800a1b8:	69fa      	ldr	r2, [r7, #28]
 800a1ba:	e841 2300 	strex	r3, r2, [r1]
 800a1be:	617b      	str	r3, [r7, #20]
   return(result);
 800a1c0:	697b      	ldr	r3, [r7, #20]
 800a1c2:	2b00      	cmp	r3, #0
 800a1c4:	d1e4      	bne.n	800a190 <UART_RxISR_16BIT_FIFOEN+0x30c>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800a1c6:	e007      	b.n	800a1d8 <UART_RxISR_16BIT_FIFOEN+0x354>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800a1c8:	687b      	ldr	r3, [r7, #4]
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	699a      	ldr	r2, [r3, #24]
 800a1ce:	687b      	ldr	r3, [r7, #4]
 800a1d0:	681b      	ldr	r3, [r3, #0]
 800a1d2:	f042 0208 	orr.w	r2, r2, #8
 800a1d6:	619a      	str	r2, [r3, #24]
}
 800a1d8:	bf00      	nop
 800a1da:	37b8      	adds	r7, #184	; 0xb8
 800a1dc:	46bd      	mov	sp, r7
 800a1de:	bd80      	pop	{r7, pc}
 800a1e0:	effffffe 	.word	0xeffffffe
 800a1e4:	58000c00 	.word	0x58000c00
 800a1e8:	0800996d 	.word	0x0800996d

0800a1ec <HAL_UARTEx_WakeupCallback>:
  * @brief UART wakeup from Stop mode callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
{
 800a1ec:	b480      	push	{r7}
 800a1ee:	b083      	sub	sp, #12
 800a1f0:	af00      	add	r7, sp, #0
 800a1f2:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
 800a1f4:	bf00      	nop
 800a1f6:	370c      	adds	r7, #12
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1fe:	4770      	bx	lr

0800a200 <HAL_UARTEx_RxFifoFullCallback>:
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
{
 800a200:	b480      	push	{r7}
 800a202:	b083      	sub	sp, #12
 800a204:	af00      	add	r7, sp, #0
 800a206:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
   */
}
 800a208:	bf00      	nop
 800a20a:	370c      	adds	r7, #12
 800a20c:	46bd      	mov	sp, r7
 800a20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a212:	4770      	bx	lr

0800a214 <HAL_UARTEx_TxFifoEmptyCallback>:
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
{
 800a214:	b480      	push	{r7}
 800a216:	b083      	sub	sp, #12
 800a218:	af00      	add	r7, sp, #0
 800a21a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
   */
}
 800a21c:	bf00      	nop
 800a21e:	370c      	adds	r7, #12
 800a220:	46bd      	mov	sp, r7
 800a222:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a226:	4770      	bx	lr

0800a228 <HAL_UARTEx_DisableFifoMode>:
  * @brief  Disable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
{
 800a228:	b480      	push	{r7}
 800a22a:	b085      	sub	sp, #20
 800a22c:	af00      	add	r7, sp, #0
 800a22e:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a236:	2b01      	cmp	r3, #1
 800a238:	d101      	bne.n	800a23e <HAL_UARTEx_DisableFifoMode+0x16>
 800a23a:	2302      	movs	r3, #2
 800a23c:	e027      	b.n	800a28e <HAL_UARTEx_DisableFifoMode+0x66>
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	2201      	movs	r2, #1
 800a242:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	2224      	movs	r2, #36	; 0x24
 800a24a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	681b      	ldr	r3, [r3, #0]
 800a252:	681b      	ldr	r3, [r3, #0]
 800a254:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800a256:	687b      	ldr	r3, [r7, #4]
 800a258:	681b      	ldr	r3, [r3, #0]
 800a25a:	681a      	ldr	r2, [r3, #0]
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	f022 0201 	bic.w	r2, r2, #1
 800a264:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 800a266:	68fb      	ldr	r3, [r7, #12]
 800a268:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800a26c:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	2200      	movs	r2, #0
 800a272:	665a      	str	r2, [r3, #100]	; 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	681b      	ldr	r3, [r3, #0]
 800a278:	68fa      	ldr	r2, [r7, #12]
 800a27a:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	2220      	movs	r2, #32
 800a280:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	2200      	movs	r2, #0
 800a288:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800a28c:	2300      	movs	r3, #0
}
 800a28e:	4618      	mov	r0, r3
 800a290:	3714      	adds	r7, #20
 800a292:	46bd      	mov	sp, r7
 800a294:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a298:	4770      	bx	lr

0800a29a <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800a29a:	b580      	push	{r7, lr}
 800a29c:	b084      	sub	sp, #16
 800a29e:	af00      	add	r7, sp, #0
 800a2a0:	6078      	str	r0, [r7, #4]
 800a2a2:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a2aa:	2b01      	cmp	r3, #1
 800a2ac:	d101      	bne.n	800a2b2 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800a2ae:	2302      	movs	r3, #2
 800a2b0:	e02d      	b.n	800a30e <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	2201      	movs	r2, #1
 800a2b6:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800a2ba:	687b      	ldr	r3, [r7, #4]
 800a2bc:	2224      	movs	r2, #36	; 0x24
 800a2be:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	681b      	ldr	r3, [r3, #0]
 800a2c6:	681b      	ldr	r3, [r3, #0]
 800a2c8:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	681b      	ldr	r3, [r3, #0]
 800a2ce:	681a      	ldr	r2, [r3, #0]
 800a2d0:	687b      	ldr	r3, [r7, #4]
 800a2d2:	681b      	ldr	r3, [r3, #0]
 800a2d4:	f022 0201 	bic.w	r2, r2, #1
 800a2d8:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	681b      	ldr	r3, [r3, #0]
 800a2de:	689b      	ldr	r3, [r3, #8]
 800a2e0:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800a2e4:	687b      	ldr	r3, [r7, #4]
 800a2e6:	681b      	ldr	r3, [r3, #0]
 800a2e8:	683a      	ldr	r2, [r7, #0]
 800a2ea:	430a      	orrs	r2, r1
 800a2ec:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800a2ee:	6878      	ldr	r0, [r7, #4]
 800a2f0:	f000 f850 	bl	800a394 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	681b      	ldr	r3, [r3, #0]
 800a2f8:	68fa      	ldr	r2, [r7, #12]
 800a2fa:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	2220      	movs	r2, #32
 800a300:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	2200      	movs	r2, #0
 800a308:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800a30c:	2300      	movs	r3, #0
}
 800a30e:	4618      	mov	r0, r3
 800a310:	3710      	adds	r7, #16
 800a312:	46bd      	mov	sp, r7
 800a314:	bd80      	pop	{r7, pc}

0800a316 <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800a316:	b580      	push	{r7, lr}
 800a318:	b084      	sub	sp, #16
 800a31a:	af00      	add	r7, sp, #0
 800a31c:	6078      	str	r0, [r7, #4]
 800a31e:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800a320:	687b      	ldr	r3, [r7, #4]
 800a322:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a326:	2b01      	cmp	r3, #1
 800a328:	d101      	bne.n	800a32e <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800a32a:	2302      	movs	r3, #2
 800a32c:	e02d      	b.n	800a38a <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	2201      	movs	r2, #1
 800a332:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800a336:	687b      	ldr	r3, [r7, #4]
 800a338:	2224      	movs	r2, #36	; 0x24
 800a33a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800a33e:	687b      	ldr	r3, [r7, #4]
 800a340:	681b      	ldr	r3, [r3, #0]
 800a342:	681b      	ldr	r3, [r3, #0]
 800a344:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	681b      	ldr	r3, [r3, #0]
 800a34a:	681a      	ldr	r2, [r3, #0]
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	681b      	ldr	r3, [r3, #0]
 800a350:	f022 0201 	bic.w	r2, r2, #1
 800a354:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 800a356:	687b      	ldr	r3, [r7, #4]
 800a358:	681b      	ldr	r3, [r3, #0]
 800a35a:	689b      	ldr	r3, [r3, #8]
 800a35c:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800a360:	687b      	ldr	r3, [r7, #4]
 800a362:	681b      	ldr	r3, [r3, #0]
 800a364:	683a      	ldr	r2, [r7, #0]
 800a366:	430a      	orrs	r2, r1
 800a368:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800a36a:	6878      	ldr	r0, [r7, #4]
 800a36c:	f000 f812 	bl	800a394 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800a370:	687b      	ldr	r3, [r7, #4]
 800a372:	681b      	ldr	r3, [r3, #0]
 800a374:	68fa      	ldr	r2, [r7, #12]
 800a376:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	2220      	movs	r2, #32
 800a37c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	2200      	movs	r2, #0
 800a384:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800a388:	2300      	movs	r3, #0
}
 800a38a:	4618      	mov	r0, r3
 800a38c:	3710      	adds	r7, #16
 800a38e:	46bd      	mov	sp, r7
 800a390:	bd80      	pop	{r7, pc}
	...

0800a394 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 800a394:	b480      	push	{r7}
 800a396:	b085      	sub	sp, #20
 800a398:	af00      	add	r7, sp, #0
 800a39a:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a3a0:	2b00      	cmp	r3, #0
 800a3a2:	d108      	bne.n	800a3b6 <UARTEx_SetNbDataToProcess+0x22>
  {
    huart->NbTxDataToProcess = 1U;
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	2201      	movs	r2, #1
 800a3a8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = 1U;
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	2201      	movs	r2, #1
 800a3b0:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800a3b4:	e031      	b.n	800a41a <UARTEx_SetNbDataToProcess+0x86>
    rx_fifo_depth = RX_FIFO_DEPTH;
 800a3b6:	2310      	movs	r3, #16
 800a3b8:	73fb      	strb	r3, [r7, #15]
    tx_fifo_depth = TX_FIFO_DEPTH;
 800a3ba:	2310      	movs	r3, #16
 800a3bc:	73bb      	strb	r3, [r7, #14]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	681b      	ldr	r3, [r3, #0]
 800a3c2:	689b      	ldr	r3, [r3, #8]
 800a3c4:	0e5b      	lsrs	r3, r3, #25
 800a3c6:	b2db      	uxtb	r3, r3
 800a3c8:	f003 0307 	and.w	r3, r3, #7
 800a3cc:	737b      	strb	r3, [r7, #13]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	681b      	ldr	r3, [r3, #0]
 800a3d2:	689b      	ldr	r3, [r3, #8]
 800a3d4:	0f5b      	lsrs	r3, r3, #29
 800a3d6:	b2db      	uxtb	r3, r3
 800a3d8:	f003 0307 	and.w	r3, r3, #7
 800a3dc:	733b      	strb	r3, [r7, #12]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a3de:	7bbb      	ldrb	r3, [r7, #14]
 800a3e0:	7b3a      	ldrb	r2, [r7, #12]
 800a3e2:	4911      	ldr	r1, [pc, #68]	; (800a428 <UARTEx_SetNbDataToProcess+0x94>)
 800a3e4:	5c8a      	ldrb	r2, [r1, r2]
 800a3e6:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[tx_fifo_threshold];
 800a3ea:	7b3a      	ldrb	r2, [r7, #12]
 800a3ec:	490f      	ldr	r1, [pc, #60]	; (800a42c <UARTEx_SetNbDataToProcess+0x98>)
 800a3ee:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800a3f0:	fb93 f3f2 	sdiv	r3, r3, r2
 800a3f4:	b29a      	uxth	r2, r3
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800a3fc:	7bfb      	ldrb	r3, [r7, #15]
 800a3fe:	7b7a      	ldrb	r2, [r7, #13]
 800a400:	4909      	ldr	r1, [pc, #36]	; (800a428 <UARTEx_SetNbDataToProcess+0x94>)
 800a402:	5c8a      	ldrb	r2, [r1, r2]
 800a404:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[rx_fifo_threshold];
 800a408:	7b7a      	ldrb	r2, [r7, #13]
 800a40a:	4908      	ldr	r1, [pc, #32]	; (800a42c <UARTEx_SetNbDataToProcess+0x98>)
 800a40c:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800a40e:	fb93 f3f2 	sdiv	r3, r3, r2
 800a412:	b29a      	uxth	r2, r3
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
}
 800a41a:	bf00      	nop
 800a41c:	3714      	adds	r7, #20
 800a41e:	46bd      	mov	sp, r7
 800a420:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a424:	4770      	bx	lr
 800a426:	bf00      	nop
 800a428:	080253d0 	.word	0x080253d0
 800a42c:	080253d8 	.word	0x080253d8

0800a430 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800a430:	b480      	push	{r7}
 800a432:	b083      	sub	sp, #12
 800a434:	af00      	add	r7, sp, #0
 800a436:	6078      	str	r0, [r7, #4]
 800a438:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800a43a:	683b      	ldr	r3, [r7, #0]
 800a43c:	681b      	ldr	r3, [r3, #0]
 800a43e:	2b00      	cmp	r3, #0
 800a440:	d121      	bne.n	800a486 <FMC_SDRAM_Init+0x56>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a442:	687b      	ldr	r3, [r7, #4]
 800a444:	681a      	ldr	r2, [r3, #0]
 800a446:	4b27      	ldr	r3, [pc, #156]	; (800a4e4 <FMC_SDRAM_Init+0xb4>)
 800a448:	4013      	ands	r3, r2
 800a44a:	683a      	ldr	r2, [r7, #0]
 800a44c:	6851      	ldr	r1, [r2, #4]
 800a44e:	683a      	ldr	r2, [r7, #0]
 800a450:	6892      	ldr	r2, [r2, #8]
 800a452:	4311      	orrs	r1, r2
 800a454:	683a      	ldr	r2, [r7, #0]
 800a456:	68d2      	ldr	r2, [r2, #12]
 800a458:	4311      	orrs	r1, r2
 800a45a:	683a      	ldr	r2, [r7, #0]
 800a45c:	6912      	ldr	r2, [r2, #16]
 800a45e:	4311      	orrs	r1, r2
 800a460:	683a      	ldr	r2, [r7, #0]
 800a462:	6952      	ldr	r2, [r2, #20]
 800a464:	4311      	orrs	r1, r2
 800a466:	683a      	ldr	r2, [r7, #0]
 800a468:	6992      	ldr	r2, [r2, #24]
 800a46a:	4311      	orrs	r1, r2
 800a46c:	683a      	ldr	r2, [r7, #0]
 800a46e:	69d2      	ldr	r2, [r2, #28]
 800a470:	4311      	orrs	r1, r2
 800a472:	683a      	ldr	r2, [r7, #0]
 800a474:	6a12      	ldr	r2, [r2, #32]
 800a476:	4311      	orrs	r1, r2
 800a478:	683a      	ldr	r2, [r7, #0]
 800a47a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800a47c:	430a      	orrs	r2, r1
 800a47e:	431a      	orrs	r2, r3
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	601a      	str	r2, [r3, #0]
 800a484:	e026      	b.n	800a4d4 <FMC_SDRAM_Init+0xa4>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	f423 42f8 	bic.w	r2, r3, #31744	; 0x7c00
 800a48e:	683b      	ldr	r3, [r7, #0]
 800a490:	69d9      	ldr	r1, [r3, #28]
 800a492:	683b      	ldr	r3, [r7, #0]
 800a494:	6a1b      	ldr	r3, [r3, #32]
 800a496:	4319      	orrs	r1, r3
 800a498:	683b      	ldr	r3, [r7, #0]
 800a49a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a49c:	430b      	orrs	r3, r1
 800a49e:	431a      	orrs	r2, r3
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	601a      	str	r2, [r3, #0]
               FMC_SDCRx_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800a4a4:	687b      	ldr	r3, [r7, #4]
 800a4a6:	685a      	ldr	r2, [r3, #4]
 800a4a8:	4b0e      	ldr	r3, [pc, #56]	; (800a4e4 <FMC_SDRAM_Init+0xb4>)
 800a4aa:	4013      	ands	r3, r2
 800a4ac:	683a      	ldr	r2, [r7, #0]
 800a4ae:	6851      	ldr	r1, [r2, #4]
 800a4b0:	683a      	ldr	r2, [r7, #0]
 800a4b2:	6892      	ldr	r2, [r2, #8]
 800a4b4:	4311      	orrs	r1, r2
 800a4b6:	683a      	ldr	r2, [r7, #0]
 800a4b8:	68d2      	ldr	r2, [r2, #12]
 800a4ba:	4311      	orrs	r1, r2
 800a4bc:	683a      	ldr	r2, [r7, #0]
 800a4be:	6912      	ldr	r2, [r2, #16]
 800a4c0:	4311      	orrs	r1, r2
 800a4c2:	683a      	ldr	r2, [r7, #0]
 800a4c4:	6952      	ldr	r2, [r2, #20]
 800a4c6:	4311      	orrs	r1, r2
 800a4c8:	683a      	ldr	r2, [r7, #0]
 800a4ca:	6992      	ldr	r2, [r2, #24]
 800a4cc:	430a      	orrs	r2, r1
 800a4ce:	431a      	orrs	r2, r3
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 800a4d4:	2300      	movs	r3, #0
}
 800a4d6:	4618      	mov	r0, r3
 800a4d8:	370c      	adds	r7, #12
 800a4da:	46bd      	mov	sp, r7
 800a4dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4e0:	4770      	bx	lr
 800a4e2:	bf00      	nop
 800a4e4:	ffff8000 	.word	0xffff8000

0800a4e8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800a4e8:	b480      	push	{r7}
 800a4ea:	b085      	sub	sp, #20
 800a4ec:	af00      	add	r7, sp, #0
 800a4ee:	60f8      	str	r0, [r7, #12]
 800a4f0:	60b9      	str	r1, [r7, #8]
 800a4f2:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	d128      	bne.n	800a54c <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a4fa:	68fb      	ldr	r3, [r7, #12]
 800a4fc:	689b      	ldr	r3, [r3, #8]
 800a4fe:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 800a502:	68bb      	ldr	r3, [r7, #8]
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	1e59      	subs	r1, r3, #1
 800a508:	68bb      	ldr	r3, [r7, #8]
 800a50a:	685b      	ldr	r3, [r3, #4]
 800a50c:	3b01      	subs	r3, #1
 800a50e:	011b      	lsls	r3, r3, #4
 800a510:	4319      	orrs	r1, r3
 800a512:	68bb      	ldr	r3, [r7, #8]
 800a514:	689b      	ldr	r3, [r3, #8]
 800a516:	3b01      	subs	r3, #1
 800a518:	021b      	lsls	r3, r3, #8
 800a51a:	4319      	orrs	r1, r3
 800a51c:	68bb      	ldr	r3, [r7, #8]
 800a51e:	68db      	ldr	r3, [r3, #12]
 800a520:	3b01      	subs	r3, #1
 800a522:	031b      	lsls	r3, r3, #12
 800a524:	4319      	orrs	r1, r3
 800a526:	68bb      	ldr	r3, [r7, #8]
 800a528:	691b      	ldr	r3, [r3, #16]
 800a52a:	3b01      	subs	r3, #1
 800a52c:	041b      	lsls	r3, r3, #16
 800a52e:	4319      	orrs	r1, r3
 800a530:	68bb      	ldr	r3, [r7, #8]
 800a532:	695b      	ldr	r3, [r3, #20]
 800a534:	3b01      	subs	r3, #1
 800a536:	051b      	lsls	r3, r3, #20
 800a538:	4319      	orrs	r1, r3
 800a53a:	68bb      	ldr	r3, [r7, #8]
 800a53c:	699b      	ldr	r3, [r3, #24]
 800a53e:	3b01      	subs	r3, #1
 800a540:	061b      	lsls	r3, r3, #24
 800a542:	430b      	orrs	r3, r1
 800a544:	431a      	orrs	r2, r3
 800a546:	68fb      	ldr	r3, [r7, #12]
 800a548:	609a      	str	r2, [r3, #8]
 800a54a:	e02d      	b.n	800a5a8 <FMC_SDRAM_Timing_Init+0xc0>
                (((Timing->RPDelay) - 1U)              << FMC_SDTRx_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a54c:	68fb      	ldr	r3, [r7, #12]
 800a54e:	689a      	ldr	r2, [r3, #8]
 800a550:	4b19      	ldr	r3, [pc, #100]	; (800a5b8 <FMC_SDRAM_Timing_Init+0xd0>)
 800a552:	4013      	ands	r3, r2
 800a554:	68ba      	ldr	r2, [r7, #8]
 800a556:	68d2      	ldr	r2, [r2, #12]
 800a558:	3a01      	subs	r2, #1
 800a55a:	0311      	lsls	r1, r2, #12
 800a55c:	68ba      	ldr	r2, [r7, #8]
 800a55e:	6952      	ldr	r2, [r2, #20]
 800a560:	3a01      	subs	r2, #1
 800a562:	0512      	lsls	r2, r2, #20
 800a564:	430a      	orrs	r2, r1
 800a566:	431a      	orrs	r2, r3
 800a568:	68fb      	ldr	r3, [r7, #12]
 800a56a:	609a      	str	r2, [r3, #8]
               FMC_SDTRx_TRC |
               FMC_SDTRx_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTRx_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTRx_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800a56c:	68fb      	ldr	r3, [r7, #12]
 800a56e:	68db      	ldr	r3, [r3, #12]
 800a570:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 800a574:	68bb      	ldr	r3, [r7, #8]
 800a576:	681b      	ldr	r3, [r3, #0]
 800a578:	1e59      	subs	r1, r3, #1
 800a57a:	68bb      	ldr	r3, [r7, #8]
 800a57c:	685b      	ldr	r3, [r3, #4]
 800a57e:	3b01      	subs	r3, #1
 800a580:	011b      	lsls	r3, r3, #4
 800a582:	4319      	orrs	r1, r3
 800a584:	68bb      	ldr	r3, [r7, #8]
 800a586:	689b      	ldr	r3, [r3, #8]
 800a588:	3b01      	subs	r3, #1
 800a58a:	021b      	lsls	r3, r3, #8
 800a58c:	4319      	orrs	r1, r3
 800a58e:	68bb      	ldr	r3, [r7, #8]
 800a590:	691b      	ldr	r3, [r3, #16]
 800a592:	3b01      	subs	r3, #1
 800a594:	041b      	lsls	r3, r3, #16
 800a596:	4319      	orrs	r1, r3
 800a598:	68bb      	ldr	r3, [r7, #8]
 800a59a:	699b      	ldr	r3, [r3, #24]
 800a59c:	3b01      	subs	r3, #1
 800a59e:	061b      	lsls	r3, r3, #24
 800a5a0:	430b      	orrs	r3, r1
 800a5a2:	431a      	orrs	r2, r3
 800a5a4:	68fb      	ldr	r3, [r7, #12]
 800a5a6:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTRx_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
 800a5a8:	2300      	movs	r3, #0
}
 800a5aa:	4618      	mov	r0, r3
 800a5ac:	3714      	adds	r7, #20
 800a5ae:	46bd      	mov	sp, r7
 800a5b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b4:	4770      	bx	lr
 800a5b6:	bf00      	nop
 800a5b8:	ff0f0fff 	.word	0xff0f0fff

0800a5bc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800a5bc:	b480      	push	{r7}
 800a5be:	b085      	sub	sp, #20
 800a5c0:	af00      	add	r7, sp, #0
 800a5c2:	60f8      	str	r0, [r7, #12]
 800a5c4:	60b9      	str	r1, [r7, #8]
 800a5c6:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800a5c8:	68fb      	ldr	r3, [r7, #12]
 800a5ca:	691a      	ldr	r2, [r3, #16]
 800a5cc:	4b0c      	ldr	r3, [pc, #48]	; (800a600 <FMC_SDRAM_SendCommand+0x44>)
 800a5ce:	4013      	ands	r3, r2
 800a5d0:	68ba      	ldr	r2, [r7, #8]
 800a5d2:	6811      	ldr	r1, [r2, #0]
 800a5d4:	68ba      	ldr	r2, [r7, #8]
 800a5d6:	6852      	ldr	r2, [r2, #4]
 800a5d8:	4311      	orrs	r1, r2
 800a5da:	68ba      	ldr	r2, [r7, #8]
 800a5dc:	6892      	ldr	r2, [r2, #8]
 800a5de:	3a01      	subs	r2, #1
 800a5e0:	0152      	lsls	r2, r2, #5
 800a5e2:	4311      	orrs	r1, r2
 800a5e4:	68ba      	ldr	r2, [r7, #8]
 800a5e6:	68d2      	ldr	r2, [r2, #12]
 800a5e8:	0252      	lsls	r2, r2, #9
 800a5ea:	430a      	orrs	r2, r1
 800a5ec:	431a      	orrs	r2, r3
 800a5ee:	68fb      	ldr	r3, [r7, #12]
 800a5f0:	611a      	str	r2, [r3, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
 800a5f2:	2300      	movs	r3, #0
}
 800a5f4:	4618      	mov	r0, r3
 800a5f6:	3714      	adds	r7, #20
 800a5f8:	46bd      	mov	sp, r7
 800a5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5fe:	4770      	bx	lr
 800a600:	ffc00000 	.word	0xffc00000

0800a604 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 800a604:	b480      	push	{r7}
 800a606:	b083      	sub	sp, #12
 800a608:	af00      	add	r7, sp, #0
 800a60a:	6078      	str	r0, [r7, #4]
 800a60c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800a60e:	687b      	ldr	r3, [r7, #4]
 800a610:	695a      	ldr	r2, [r3, #20]
 800a612:	4b07      	ldr	r3, [pc, #28]	; (800a630 <FMC_SDRAM_ProgramRefreshRate+0x2c>)
 800a614:	4013      	ands	r3, r2
 800a616:	683a      	ldr	r2, [r7, #0]
 800a618:	0052      	lsls	r2, r2, #1
 800a61a:	431a      	orrs	r2, r3
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	615a      	str	r2, [r3, #20]

  return HAL_OK;
 800a620:	2300      	movs	r3, #0
}
 800a622:	4618      	mov	r0, r3
 800a624:	370c      	adds	r7, #12
 800a626:	46bd      	mov	sp, r7
 800a628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a62c:	4770      	bx	lr
 800a62e:	bf00      	nop
 800a630:	ffffc001 	.word	0xffffc001

0800a634 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800a634:	b580      	push	{r7, lr}
 800a636:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800a638:	f004 f9da 	bl	800e9f0 <touchgfx_components_init>
  touchgfx_init();
 800a63c:	f004 f9ae 	bl	800e99c <touchgfx_init>
}
 800a640:	bf00      	nop
 800a642:	bd80      	pop	{r7, pc}

0800a644 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800a644:	b580      	push	{r7, lr}
 800a646:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800a648:	f004 f9da 	bl	800ea00 <touchgfx_taskEntry>
}
 800a64c:	bf00      	nop
 800a64e:	bd80      	pop	{r7, pc}

0800a650 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800a650:	b480      	push	{r7}
 800a652:	b083      	sub	sp, #12
 800a654:	af00      	add	r7, sp, #0
 800a656:	6078      	str	r0, [r7, #4]
    {
 800a658:	4a04      	ldr	r2, [pc, #16]	; (800a66c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800a65a:	687b      	ldr	r3, [r7, #4]
 800a65c:	601a      	str	r2, [r3, #0]
    }
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	4618      	mov	r0, r3
 800a662:	370c      	adds	r7, #12
 800a664:	46bd      	mov	sp, r7
 800a666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a66a:	4770      	bx	lr
 800a66c:	080253fc 	.word	0x080253fc

0800a670 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800a670:	b580      	push	{r7, lr}
 800a672:	b082      	sub	sp, #8
 800a674:	af00      	add	r7, sp, #0
 800a676:	6078      	str	r0, [r7, #4]
    }
 800a678:	6878      	ldr	r0, [r7, #4]
 800a67a:	f7ff ffe9 	bl	800a650 <_ZN8touchgfx12FontProviderD1Ev>
 800a67e:	2104      	movs	r1, #4
 800a680:	6878      	ldr	r0, [r7, #4]
 800a682:	f019 f966 	bl	8023952 <_ZdlPvj>
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	4618      	mov	r0, r3
 800a68a:	3708      	adds	r7, #8
 800a68c:	46bd      	mov	sp, r7
 800a68e:	bd80      	pop	{r7, pc}

0800a690 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800a690:	b580      	push	{r7, lr}
 800a692:	b082      	sub	sp, #8
 800a694:	af00      	add	r7, sp, #0
 800a696:	6078      	str	r0, [r7, #4]
 800a698:	460b      	mov	r3, r1
 800a69a:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800a69c:	887b      	ldrh	r3, [r7, #2]
 800a69e:	2b02      	cmp	r3, #2
 800a6a0:	d010      	beq.n	800a6c4 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800a6a2:	2b02      	cmp	r3, #2
 800a6a4:	dc13      	bgt.n	800a6ce <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800a6a6:	2b00      	cmp	r3, #0
 800a6a8:	d002      	beq.n	800a6b0 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800a6aa:	2b01      	cmp	r3, #1
 800a6ac:	d005      	beq.n	800a6ba <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800a6ae:	e00e      	b.n	800a6ce <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800a6b0:	f002 fc6e 	bl	800cf90 <_ZN17TypedTextDatabase8getFontsEv>
 800a6b4:	4603      	mov	r3, r0
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	e00a      	b.n	800a6d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800a6ba:	f002 fc69 	bl	800cf90 <_ZN17TypedTextDatabase8getFontsEv>
 800a6be:	4603      	mov	r3, r0
 800a6c0:	685b      	ldr	r3, [r3, #4]
 800a6c2:	e005      	b.n	800a6d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800a6c4:	f002 fc64 	bl	800cf90 <_ZN17TypedTextDatabase8getFontsEv>
 800a6c8:	4603      	mov	r3, r0
 800a6ca:	689b      	ldr	r3, [r3, #8]
 800a6cc:	e000      	b.n	800a6d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800a6ce:	2300      	movs	r3, #0
    }
}
 800a6d0:	4618      	mov	r0, r3
 800a6d2:	3708      	adds	r7, #8
 800a6d4:	46bd      	mov	sp, r7
 800a6d6:	bd80      	pop	{r7, pc}

0800a6d8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800a6d8:	b580      	push	{r7, lr}
 800a6da:	b082      	sub	sp, #8
 800a6dc:	af00      	add	r7, sp, #0
 800a6de:	6078      	str	r0, [r7, #4]
 800a6e0:	4a05      	ldr	r2, [pc, #20]	; (800a6f8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	601a      	str	r2, [r3, #0]
 800a6e6:	687b      	ldr	r3, [r7, #4]
 800a6e8:	4618      	mov	r0, r3
 800a6ea:	f7ff ffb1 	bl	800a650 <_ZN8touchgfx12FontProviderD1Ev>
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	4618      	mov	r0, r3
 800a6f2:	3708      	adds	r7, #8
 800a6f4:	46bd      	mov	sp, r7
 800a6f6:	bd80      	pop	{r7, pc}
 800a6f8:	080253e8 	.word	0x080253e8

0800a6fc <_ZN23ApplicationFontProviderD0Ev>:
 800a6fc:	b580      	push	{r7, lr}
 800a6fe:	b082      	sub	sp, #8
 800a700:	af00      	add	r7, sp, #0
 800a702:	6078      	str	r0, [r7, #4]
 800a704:	6878      	ldr	r0, [r7, #4]
 800a706:	f7ff ffe7 	bl	800a6d8 <_ZN23ApplicationFontProviderD1Ev>
 800a70a:	2104      	movs	r1, #4
 800a70c:	6878      	ldr	r0, [r7, #4]
 800a70e:	f019 f920 	bl	8023952 <_ZdlPvj>
 800a712:	687b      	ldr	r3, [r7, #4]
 800a714:	4618      	mov	r0, r3
 800a716:	3708      	adds	r7, #8
 800a718:	46bd      	mov	sp, r7
 800a71a:	bd80      	pop	{r7, pc}

0800a71c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800a71c:	b480      	push	{r7}
 800a71e:	b083      	sub	sp, #12
 800a720:	af00      	add	r7, sp, #0
 800a722:	6078      	str	r0, [r7, #4]
    {
 800a724:	4a04      	ldr	r2, [pc, #16]	; (800a738 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	601a      	str	r2, [r3, #0]
    }
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	4618      	mov	r0, r3
 800a72e:	370c      	adds	r7, #12
 800a730:	46bd      	mov	sp, r7
 800a732:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a736:	4770      	bx	lr
 800a738:	0802579c 	.word	0x0802579c

0800a73c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800a73c:	b580      	push	{r7, lr}
 800a73e:	b082      	sub	sp, #8
 800a740:	af00      	add	r7, sp, #0
 800a742:	6078      	str	r0, [r7, #4]
    }
 800a744:	6878      	ldr	r0, [r7, #4]
 800a746:	f7ff ffe9 	bl	800a71c <_ZN8touchgfx4FontD1Ev>
 800a74a:	2114      	movs	r1, #20
 800a74c:	6878      	ldr	r0, [r7, #4]
 800a74e:	f019 f900 	bl	8023952 <_ZdlPvj>
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	4618      	mov	r0, r3
 800a756:	3708      	adds	r7, #8
 800a758:	46bd      	mov	sp, r7
 800a75a:	bd80      	pop	{r7, pc}

0800a75c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800a75c:	b590      	push	{r4, r7, lr}
 800a75e:	b087      	sub	sp, #28
 800a760:	af00      	add	r7, sp, #0
 800a762:	6078      	str	r0, [r7, #4]
 800a764:	460b      	mov	r3, r1
 800a766:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800a768:	887b      	ldrh	r3, [r7, #2]
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d101      	bne.n	800a772 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800a76e:	2300      	movs	r3, #0
 800a770:	e010      	b.n	800a794 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800a772:	2300      	movs	r3, #0
 800a774:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800a776:	2300      	movs	r3, #0
 800a778:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800a77a:	687b      	ldr	r3, [r7, #4]
 800a77c:	681b      	ldr	r3, [r3, #0]
 800a77e:	3308      	adds	r3, #8
 800a780:	681c      	ldr	r4, [r3, #0]
 800a782:	f107 030f 	add.w	r3, r7, #15
 800a786:	f107 0210 	add.w	r2, r7, #16
 800a78a:	8879      	ldrh	r1, [r7, #2]
 800a78c:	6878      	ldr	r0, [r7, #4]
 800a78e:	47a0      	blx	r4
 800a790:	6178      	str	r0, [r7, #20]
        return glyph;
 800a792:	697b      	ldr	r3, [r7, #20]
    }
 800a794:	4618      	mov	r0, r3
 800a796:	371c      	adds	r7, #28
 800a798:	46bd      	mov	sp, r7
 800a79a:	bd90      	pop	{r4, r7, pc}

0800a79c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800a79c:	b480      	push	{r7}
 800a79e:	b083      	sub	sp, #12
 800a7a0:	af00      	add	r7, sp, #0
 800a7a2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800a7a4:	687b      	ldr	r3, [r7, #4]
 800a7a6:	89db      	ldrh	r3, [r3, #14]
    }
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	370c      	adds	r7, #12
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7b2:	4770      	bx	lr

0800a7b4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800a7b4:	b480      	push	{r7}
 800a7b6:	b083      	sub	sp, #12
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	8a1b      	ldrh	r3, [r3, #16]
    }
 800a7c0:	4618      	mov	r0, r3
 800a7c2:	370c      	adds	r7, #12
 800a7c4:	46bd      	mov	sp, r7
 800a7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ca:	4770      	bx	lr

0800a7cc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800a7cc:	b480      	push	{r7}
 800a7ce:	b083      	sub	sp, #12
 800a7d0:	af00      	add	r7, sp, #0
 800a7d2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	88db      	ldrh	r3, [r3, #6]
    }
 800a7d8:	4618      	mov	r0, r3
 800a7da:	370c      	adds	r7, #12
 800a7dc:	46bd      	mov	sp, r7
 800a7de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7e2:	4770      	bx	lr

0800a7e4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800a7e4:	b480      	push	{r7}
 800a7e6:	b083      	sub	sp, #12
 800a7e8:	af00      	add	r7, sp, #0
 800a7ea:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	889b      	ldrh	r3, [r3, #4]
    }
 800a7f0:	4618      	mov	r0, r3
 800a7f2:	370c      	adds	r7, #12
 800a7f4:	46bd      	mov	sp, r7
 800a7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7fa:	4770      	bx	lr

0800a7fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800a7fc:	b480      	push	{r7}
 800a7fe:	b083      	sub	sp, #12
 800a800:	af00      	add	r7, sp, #0
 800a802:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800a804:	687b      	ldr	r3, [r7, #4]
 800a806:	7a9b      	ldrb	r3, [r3, #10]
 800a808:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800a80c:	b2db      	uxtb	r3, r3
    }
 800a80e:	4618      	mov	r0, r3
 800a810:	370c      	adds	r7, #12
 800a812:	46bd      	mov	sp, r7
 800a814:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a818:	4770      	bx	lr

0800a81a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800a81a:	b480      	push	{r7}
 800a81c:	b083      	sub	sp, #12
 800a81e:	af00      	add	r7, sp, #0
 800a820:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	7a9b      	ldrb	r3, [r3, #10]
 800a826:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800a82a:	b2db      	uxtb	r3, r3
    }
 800a82c:	4618      	mov	r0, r3
 800a82e:	370c      	adds	r7, #12
 800a830:	46bd      	mov	sp, r7
 800a832:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a836:	4770      	bx	lr

0800a838 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800a838:	b580      	push	{r7, lr}
 800a83a:	b082      	sub	sp, #8
 800a83c:	af00      	add	r7, sp, #0
 800a83e:	6078      	str	r0, [r7, #4]
 800a840:	4a05      	ldr	r2, [pc, #20]	; (800a858 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	601a      	str	r2, [r3, #0]
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	4618      	mov	r0, r3
 800a84a:	f7ff ff67 	bl	800a71c <_ZN8touchgfx4FontD1Ev>
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	4618      	mov	r0, r3
 800a852:	3708      	adds	r7, #8
 800a854:	46bd      	mov	sp, r7
 800a856:	bd80      	pop	{r7, pc}
 800a858:	08026164 	.word	0x08026164

0800a85c <_ZN8touchgfx9ConstFontD0Ev>:
 800a85c:	b580      	push	{r7, lr}
 800a85e:	b082      	sub	sp, #8
 800a860:	af00      	add	r7, sp, #0
 800a862:	6078      	str	r0, [r7, #4]
 800a864:	6878      	ldr	r0, [r7, #4]
 800a866:	f7ff ffe7 	bl	800a838 <_ZN8touchgfx9ConstFontD1Ev>
 800a86a:	211c      	movs	r1, #28
 800a86c:	6878      	ldr	r0, [r7, #4]
 800a86e:	f019 f870 	bl	8023952 <_ZdlPvj>
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	4618      	mov	r0, r3
 800a876:	3708      	adds	r7, #8
 800a878:	46bd      	mov	sp, r7
 800a87a:	bd80      	pop	{r7, pc}

0800a87c <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800a87c:	b580      	push	{r7, lr}
 800a87e:	b082      	sub	sp, #8
 800a880:	af00      	add	r7, sp, #0
 800a882:	6078      	str	r0, [r7, #4]
 800a884:	4a05      	ldr	r2, [pc, #20]	; (800a89c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	601a      	str	r2, [r3, #0]
 800a88a:	687b      	ldr	r3, [r7, #4]
 800a88c:	4618      	mov	r0, r3
 800a88e:	f7ff ffd3 	bl	800a838 <_ZN8touchgfx9ConstFontD1Ev>
 800a892:	687b      	ldr	r3, [r7, #4]
 800a894:	4618      	mov	r0, r3
 800a896:	3708      	adds	r7, #8
 800a898:	46bd      	mov	sp, r7
 800a89a:	bd80      	pop	{r7, pc}
 800a89c:	08025420 	.word	0x08025420

0800a8a0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800a8a0:	b580      	push	{r7, lr}
 800a8a2:	b082      	sub	sp, #8
 800a8a4:	af00      	add	r7, sp, #0
 800a8a6:	6078      	str	r0, [r7, #4]
 800a8a8:	6878      	ldr	r0, [r7, #4]
 800a8aa:	f7ff ffe7 	bl	800a87c <_ZN8touchgfx13GeneratedFontD1Ev>
 800a8ae:	212c      	movs	r1, #44	; 0x2c
 800a8b0:	6878      	ldr	r0, [r7, #4]
 800a8b2:	f019 f84e 	bl	8023952 <_ZdlPvj>
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	4618      	mov	r0, r3
 800a8ba:	3708      	adds	r7, #8
 800a8bc:	46bd      	mov	sp, r7
 800a8be:	bd80      	pop	{r7, pc}

0800a8c0 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800a8c0:	b480      	push	{r7}
 800a8c2:	b083      	sub	sp, #12
 800a8c4:	af00      	add	r7, sp, #0
 800a8c6:	6078      	str	r0, [r7, #4]
    {
 800a8c8:	4a04      	ldr	r2, [pc, #16]	; (800a8dc <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	601a      	str	r2, [r3, #0]
    }
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	4618      	mov	r0, r3
 800a8d2:	370c      	adds	r7, #12
 800a8d4:	46bd      	mov	sp, r7
 800a8d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8da:	4770      	bx	lr
 800a8dc:	08025410 	.word	0x08025410

0800a8e0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800a8e0:	b580      	push	{r7, lr}
 800a8e2:	b082      	sub	sp, #8
 800a8e4:	af00      	add	r7, sp, #0
 800a8e6:	6078      	str	r0, [r7, #4]
    }
 800a8e8:	6878      	ldr	r0, [r7, #4]
 800a8ea:	f7ff ffe9 	bl	800a8c0 <_ZN8touchgfx9TypedTextD1Ev>
 800a8ee:	2108      	movs	r1, #8
 800a8f0:	6878      	ldr	r0, [r7, #4]
 800a8f2:	f019 f82e 	bl	8023952 <_ZdlPvj>
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	3708      	adds	r7, #8
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	bd80      	pop	{r7, pc}

0800a900 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800a900:	b480      	push	{r7}
 800a902:	b083      	sub	sp, #12
 800a904:	af00      	add	r7, sp, #0
 800a906:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800a90c:	4618      	mov	r0, r3
 800a90e:	370c      	adds	r7, #12
 800a910:	46bd      	mov	sp, r7
 800a912:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a916:	4770      	bx	lr

0800a918 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a918:	b480      	push	{r7}
 800a91a:	b083      	sub	sp, #12
 800a91c:	af00      	add	r7, sp, #0
 800a91e:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800a924:	4618      	mov	r0, r3
 800a926:	370c      	adds	r7, #12
 800a928:	46bd      	mov	sp, r7
 800a92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a92e:	4770      	bx	lr

0800a930 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800a930:	b580      	push	{r7, lr}
 800a932:	b08e      	sub	sp, #56	; 0x38
 800a934:	af0a      	add	r7, sp, #40	; 0x28
 800a936:	60f8      	str	r0, [r7, #12]
 800a938:	60b9      	str	r1, [r7, #8]
 800a93a:	4611      	mov	r1, r2
 800a93c:	461a      	mov	r2, r3
 800a93e:	460b      	mov	r3, r1
 800a940:	80fb      	strh	r3, [r7, #6]
 800a942:	4613      	mov	r3, r2
 800a944:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800a946:	68f8      	ldr	r0, [r7, #12]
 800a948:	88b9      	ldrh	r1, [r7, #4]
 800a94a:	88fa      	ldrh	r2, [r7, #6]
 800a94c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800a950:	9308      	str	r3, [sp, #32]
 800a952:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800a954:	9307      	str	r3, [sp, #28]
 800a956:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800a95a:	9306      	str	r3, [sp, #24]
 800a95c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800a960:	9305      	str	r3, [sp, #20]
 800a962:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a966:	9304      	str	r3, [sp, #16]
 800a968:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800a96c:	9303      	str	r3, [sp, #12]
 800a96e:	f897 3020 	ldrb.w	r3, [r7, #32]
 800a972:	9302      	str	r3, [sp, #8]
 800a974:	7f3b      	ldrb	r3, [r7, #28]
 800a976:	9301      	str	r3, [sp, #4]
 800a978:	8b3b      	ldrh	r3, [r7, #24]
 800a97a:	9300      	str	r3, [sp, #0]
 800a97c:	460b      	mov	r3, r1
 800a97e:	68b9      	ldr	r1, [r7, #8]
 800a980:	f009 ffea 	bl	8014958 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800a984:	4a09      	ldr	r2, [pc, #36]	; (800a9ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800a986:	68fb      	ldr	r3, [r7, #12]
 800a988:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800a98a:	68fb      	ldr	r3, [r7, #12]
 800a98c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a98e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800a990:	68fb      	ldr	r3, [r7, #12]
 800a992:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a994:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800a996:	68fb      	ldr	r3, [r7, #12]
 800a998:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a99a:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800a99c:	68fb      	ldr	r3, [r7, #12]
 800a99e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a9a0:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800a9a2:	68fb      	ldr	r3, [r7, #12]
 800a9a4:	4618      	mov	r0, r3
 800a9a6:	3710      	adds	r7, #16
 800a9a8:	46bd      	mov	sp, r7
 800a9aa:	bd80      	pop	{r7, pc}
 800a9ac:	08025420 	.word	0x08025420

0800a9b0 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800a9b0:	b480      	push	{r7}
 800a9b2:	b085      	sub	sp, #20
 800a9b4:	af00      	add	r7, sp, #0
 800a9b6:	6078      	str	r0, [r7, #4]
 800a9b8:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	69db      	ldr	r3, [r3, #28]
 800a9be:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800a9c0:	683b      	ldr	r3, [r7, #0]
 800a9c2:	889b      	ldrh	r3, [r3, #4]
 800a9c4:	0adb      	lsrs	r3, r3, #11
 800a9c6:	b29b      	uxth	r3, r3
 800a9c8:	009b      	lsls	r3, r3, #2
 800a9ca:	68fa      	ldr	r2, [r7, #12]
 800a9cc:	4413      	add	r3, r2
 800a9ce:	681a      	ldr	r2, [r3, #0]
 800a9d0:	683b      	ldr	r3, [r7, #0]
 800a9d2:	681b      	ldr	r3, [r3, #0]
 800a9d4:	4413      	add	r3, r2
}
 800a9d6:	4618      	mov	r0, r3
 800a9d8:	3714      	adds	r7, #20
 800a9da:	46bd      	mov	sp, r7
 800a9dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9e0:	4770      	bx	lr

0800a9e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800a9e2:	b480      	push	{r7}
 800a9e4:	b089      	sub	sp, #36	; 0x24
 800a9e6:	af00      	add	r7, sp, #0
 800a9e8:	60f8      	str	r0, [r7, #12]
 800a9ea:	460b      	mov	r3, r1
 800a9ec:	607a      	str	r2, [r7, #4]
 800a9ee:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800a9f0:	687b      	ldr	r3, [r7, #4]
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	d003      	beq.n	800a9fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	7b1b      	ldrb	r3, [r3, #12]
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d101      	bne.n	800aa02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800a9fe:	2300      	movs	r3, #0
 800aa00:	e031      	b.n	800aa66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800aa02:	68fb      	ldr	r3, [r7, #12]
 800aa04:	6a1a      	ldr	r2, [r3, #32]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800aa0a:	697b      	ldr	r3, [r7, #20]
 800aa0c:	7b5b      	ldrb	r3, [r3, #13]
 800aa0e:	021b      	lsls	r3, r3, #8
 800aa10:	b21b      	sxth	r3, r3
 800aa12:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800aa16:	b219      	sxth	r1, r3
 800aa18:	697b      	ldr	r3, [r7, #20]
 800aa1a:	7adb      	ldrb	r3, [r3, #11]
 800aa1c:	b21b      	sxth	r3, r3
 800aa1e:	430b      	orrs	r3, r1
 800aa20:	b21b      	sxth	r3, r3
 800aa22:	b29b      	uxth	r3, r3
 800aa24:	009b      	lsls	r3, r3, #2
 800aa26:	4413      	add	r3, r2
 800aa28:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800aa2a:	687b      	ldr	r3, [r7, #4]
 800aa2c:	7b1b      	ldrb	r3, [r3, #12]
 800aa2e:	837b      	strh	r3, [r7, #26]
 800aa30:	e013      	b.n	800aa5a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800aa32:	69fb      	ldr	r3, [r7, #28]
 800aa34:	881b      	ldrh	r3, [r3, #0]
 800aa36:	897a      	ldrh	r2, [r7, #10]
 800aa38:	429a      	cmp	r2, r3
 800aa3a:	d103      	bne.n	800aa44 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800aa3c:	69fb      	ldr	r3, [r7, #28]
 800aa3e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800aa42:	e010      	b.n	800aa66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800aa44:	69fb      	ldr	r3, [r7, #28]
 800aa46:	881b      	ldrh	r3, [r3, #0]
 800aa48:	897a      	ldrh	r2, [r7, #10]
 800aa4a:	429a      	cmp	r2, r3
 800aa4c:	d309      	bcc.n	800aa62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800aa4e:	8b7b      	ldrh	r3, [r7, #26]
 800aa50:	3b01      	subs	r3, #1
 800aa52:	837b      	strh	r3, [r7, #26]
 800aa54:	69fb      	ldr	r3, [r7, #28]
 800aa56:	3304      	adds	r3, #4
 800aa58:	61fb      	str	r3, [r7, #28]
 800aa5a:	8b7b      	ldrh	r3, [r7, #26]
 800aa5c:	2b00      	cmp	r3, #0
 800aa5e:	d1e8      	bne.n	800aa32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800aa60:	e000      	b.n	800aa64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800aa62:	bf00      	nop
        }
    }
    return 0;
 800aa64:	2300      	movs	r3, #0
}
 800aa66:	4618      	mov	r0, r3
 800aa68:	3724      	adds	r7, #36	; 0x24
 800aa6a:	46bd      	mov	sp, r7
 800aa6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa70:	4770      	bx	lr
	...

0800aa74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa74:	b580      	push	{r7, lr}
 800aa76:	af00      	add	r7, sp, #0
 800aa78:	4801      	ldr	r0, [pc, #4]	; (800aa80 <__tcf_0+0xc>)
 800aa7a:	f7ff feff 	bl	800a87c <_ZN8touchgfx13GeneratedFontD1Ev>
 800aa7e:	bd80      	pop	{r7, pc}
 800aa80:	24000448 	.word	0x24000448

0800aa84 <_Z23getFont_verdana_10_4bppv>:
{
 800aa84:	b580      	push	{r7, lr}
 800aa86:	b08e      	sub	sp, #56	; 0x38
 800aa88:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa8a:	4b21      	ldr	r3, [pc, #132]	; (800ab10 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	f3bf 8f5b 	dmb	ish
 800aa92:	f003 0301 	and.w	r3, r3, #1
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	bf0c      	ite	eq
 800aa9a:	2301      	moveq	r3, #1
 800aa9c:	2300      	movne	r3, #0
 800aa9e:	b2db      	uxtb	r3, r3
 800aaa0:	2b00      	cmp	r3, #0
 800aaa2:	d030      	beq.n	800ab06 <_Z23getFont_verdana_10_4bppv+0x82>
 800aaa4:	481a      	ldr	r0, [pc, #104]	; (800ab10 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800aaa6:	f018 ff56 	bl	8023956 <__cxa_guard_acquire>
 800aaaa:	4603      	mov	r3, r0
 800aaac:	2b00      	cmp	r3, #0
 800aaae:	bf14      	ite	ne
 800aab0:	2301      	movne	r3, #1
 800aab2:	2300      	moveq	r3, #0
 800aab4:	b2db      	uxtb	r3, r3
 800aab6:	2b00      	cmp	r3, #0
 800aab8:	d025      	beq.n	800ab06 <_Z23getFont_verdana_10_4bppv+0x82>
 800aaba:	2300      	movs	r3, #0
 800aabc:	930c      	str	r3, [sp, #48]	; 0x30
 800aabe:	2300      	movs	r3, #0
 800aac0:	930b      	str	r3, [sp, #44]	; 0x2c
 800aac2:	2300      	movs	r3, #0
 800aac4:	930a      	str	r3, [sp, #40]	; 0x28
 800aac6:	233f      	movs	r3, #63	; 0x3f
 800aac8:	9309      	str	r3, [sp, #36]	; 0x24
 800aaca:	4b12      	ldr	r3, [pc, #72]	; (800ab14 <_Z23getFont_verdana_10_4bppv+0x90>)
 800aacc:	9308      	str	r3, [sp, #32]
 800aace:	4b12      	ldr	r3, [pc, #72]	; (800ab18 <_Z23getFont_verdana_10_4bppv+0x94>)
 800aad0:	9307      	str	r3, [sp, #28]
 800aad2:	2300      	movs	r3, #0
 800aad4:	9306      	str	r3, [sp, #24]
 800aad6:	2300      	movs	r3, #0
 800aad8:	9305      	str	r3, [sp, #20]
 800aada:	2301      	movs	r3, #1
 800aadc:	9304      	str	r3, [sp, #16]
 800aade:	2304      	movs	r3, #4
 800aae0:	9303      	str	r3, [sp, #12]
 800aae2:	2300      	movs	r3, #0
 800aae4:	9302      	str	r3, [sp, #8]
 800aae6:	2300      	movs	r3, #0
 800aae8:	9301      	str	r3, [sp, #4]
 800aaea:	230a      	movs	r3, #10
 800aaec:	9300      	str	r3, [sp, #0]
 800aaee:	230a      	movs	r3, #10
 800aaf0:	2201      	movs	r2, #1
 800aaf2:	490a      	ldr	r1, [pc, #40]	; (800ab1c <_Z23getFont_verdana_10_4bppv+0x98>)
 800aaf4:	480a      	ldr	r0, [pc, #40]	; (800ab20 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800aaf6:	f7ff ff1b 	bl	800a930 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aafa:	480a      	ldr	r0, [pc, #40]	; (800ab24 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800aafc:	f018 ff76 	bl	80239ec <atexit>
 800ab00:	4803      	ldr	r0, [pc, #12]	; (800ab10 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800ab02:	f018 ff34 	bl	802396e <__cxa_guard_release>
    return verdana_10_4bpp;
 800ab06:	4b06      	ldr	r3, [pc, #24]	; (800ab20 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800ab08:	4618      	mov	r0, r3
 800ab0a:	46bd      	mov	sp, r7
 800ab0c:	bd80      	pop	{r7, pc}
 800ab0e:	bf00      	nop
 800ab10:	24000474 	.word	0x24000474
 800ab14:	08026eec 	.word	0x08026eec
 800ab18:	08026ef8 	.word	0x08026ef8
 800ab1c:	08026e40 	.word	0x08026e40
 800ab20:	24000448 	.word	0x24000448
 800ab24:	0800aa75 	.word	0x0800aa75

0800ab28 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800ab28:	b580      	push	{r7, lr}
 800ab2a:	af00      	add	r7, sp, #0
 800ab2c:	4801      	ldr	r0, [pc, #4]	; (800ab34 <__tcf_0+0xc>)
 800ab2e:	f7ff fea5 	bl	800a87c <_ZN8touchgfx13GeneratedFontD1Ev>
 800ab32:	bd80      	pop	{r7, pc}
 800ab34:	24000478 	.word	0x24000478

0800ab38 <_Z23getFont_verdana_20_4bppv>:
{
 800ab38:	b580      	push	{r7, lr}
 800ab3a:	b08e      	sub	sp, #56	; 0x38
 800ab3c:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800ab3e:	4b21      	ldr	r3, [pc, #132]	; (800abc4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800ab40:	681b      	ldr	r3, [r3, #0]
 800ab42:	f3bf 8f5b 	dmb	ish
 800ab46:	f003 0301 	and.w	r3, r3, #1
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	bf0c      	ite	eq
 800ab4e:	2301      	moveq	r3, #1
 800ab50:	2300      	movne	r3, #0
 800ab52:	b2db      	uxtb	r3, r3
 800ab54:	2b00      	cmp	r3, #0
 800ab56:	d030      	beq.n	800abba <_Z23getFont_verdana_20_4bppv+0x82>
 800ab58:	481a      	ldr	r0, [pc, #104]	; (800abc4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800ab5a:	f018 fefc 	bl	8023956 <__cxa_guard_acquire>
 800ab5e:	4603      	mov	r3, r0
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	bf14      	ite	ne
 800ab64:	2301      	movne	r3, #1
 800ab66:	2300      	moveq	r3, #0
 800ab68:	b2db      	uxtb	r3, r3
 800ab6a:	2b00      	cmp	r3, #0
 800ab6c:	d025      	beq.n	800abba <_Z23getFont_verdana_20_4bppv+0x82>
 800ab6e:	2300      	movs	r3, #0
 800ab70:	930c      	str	r3, [sp, #48]	; 0x30
 800ab72:	2300      	movs	r3, #0
 800ab74:	930b      	str	r3, [sp, #44]	; 0x2c
 800ab76:	2300      	movs	r3, #0
 800ab78:	930a      	str	r3, [sp, #40]	; 0x28
 800ab7a:	233f      	movs	r3, #63	; 0x3f
 800ab7c:	9309      	str	r3, [sp, #36]	; 0x24
 800ab7e:	4b12      	ldr	r3, [pc, #72]	; (800abc8 <_Z23getFont_verdana_20_4bppv+0x90>)
 800ab80:	9308      	str	r3, [sp, #32]
 800ab82:	4b12      	ldr	r3, [pc, #72]	; (800abcc <_Z23getFont_verdana_20_4bppv+0x94>)
 800ab84:	9307      	str	r3, [sp, #28]
 800ab86:	2300      	movs	r3, #0
 800ab88:	9306      	str	r3, [sp, #24]
 800ab8a:	2300      	movs	r3, #0
 800ab8c:	9305      	str	r3, [sp, #20]
 800ab8e:	2301      	movs	r3, #1
 800ab90:	9304      	str	r3, [sp, #16]
 800ab92:	2304      	movs	r3, #4
 800ab94:	9303      	str	r3, [sp, #12]
 800ab96:	2300      	movs	r3, #0
 800ab98:	9302      	str	r3, [sp, #8]
 800ab9a:	2300      	movs	r3, #0
 800ab9c:	9301      	str	r3, [sp, #4]
 800ab9e:	2314      	movs	r3, #20
 800aba0:	9300      	str	r3, [sp, #0]
 800aba2:	2314      	movs	r3, #20
 800aba4:	2201      	movs	r2, #1
 800aba6:	490a      	ldr	r1, [pc, #40]	; (800abd0 <_Z23getFont_verdana_20_4bppv+0x98>)
 800aba8:	480a      	ldr	r0, [pc, #40]	; (800abd4 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800abaa:	f7ff fec1 	bl	800a930 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800abae:	480a      	ldr	r0, [pc, #40]	; (800abd8 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800abb0:	f018 ff1c 	bl	80239ec <atexit>
 800abb4:	4803      	ldr	r0, [pc, #12]	; (800abc4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800abb6:	f018 feda 	bl	802396e <__cxa_guard_release>
    return verdana_20_4bpp;
 800abba:	4b06      	ldr	r3, [pc, #24]	; (800abd4 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800abbc:	4618      	mov	r0, r3
 800abbe:	46bd      	mov	sp, r7
 800abc0:	bd80      	pop	{r7, pc}
 800abc2:	bf00      	nop
 800abc4:	240004a4 	.word	0x240004a4
 800abc8:	08026ef0 	.word	0x08026ef0
 800abcc:	08026efc 	.word	0x08026efc
 800abd0:	08026e50 	.word	0x08026e50
 800abd4:	24000478 	.word	0x24000478
 800abd8:	0800ab29 	.word	0x0800ab29

0800abdc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800abdc:	b580      	push	{r7, lr}
 800abde:	af00      	add	r7, sp, #0
 800abe0:	4801      	ldr	r0, [pc, #4]	; (800abe8 <__tcf_0+0xc>)
 800abe2:	f7ff fe4b 	bl	800a87c <_ZN8touchgfx13GeneratedFontD1Ev>
 800abe6:	bd80      	pop	{r7, pc}
 800abe8:	240004a8 	.word	0x240004a8

0800abec <_Z23getFont_verdana_40_4bppv>:
{
 800abec:	b580      	push	{r7, lr}
 800abee:	b08e      	sub	sp, #56	; 0x38
 800abf0:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800abf2:	4b21      	ldr	r3, [pc, #132]	; (800ac78 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800abf4:	681b      	ldr	r3, [r3, #0]
 800abf6:	f3bf 8f5b 	dmb	ish
 800abfa:	f003 0301 	and.w	r3, r3, #1
 800abfe:	2b00      	cmp	r3, #0
 800ac00:	bf0c      	ite	eq
 800ac02:	2301      	moveq	r3, #1
 800ac04:	2300      	movne	r3, #0
 800ac06:	b2db      	uxtb	r3, r3
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d030      	beq.n	800ac6e <_Z23getFont_verdana_40_4bppv+0x82>
 800ac0c:	481a      	ldr	r0, [pc, #104]	; (800ac78 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800ac0e:	f018 fea2 	bl	8023956 <__cxa_guard_acquire>
 800ac12:	4603      	mov	r3, r0
 800ac14:	2b00      	cmp	r3, #0
 800ac16:	bf14      	ite	ne
 800ac18:	2301      	movne	r3, #1
 800ac1a:	2300      	moveq	r3, #0
 800ac1c:	b2db      	uxtb	r3, r3
 800ac1e:	2b00      	cmp	r3, #0
 800ac20:	d025      	beq.n	800ac6e <_Z23getFont_verdana_40_4bppv+0x82>
 800ac22:	2300      	movs	r3, #0
 800ac24:	930c      	str	r3, [sp, #48]	; 0x30
 800ac26:	2300      	movs	r3, #0
 800ac28:	930b      	str	r3, [sp, #44]	; 0x2c
 800ac2a:	2300      	movs	r3, #0
 800ac2c:	930a      	str	r3, [sp, #40]	; 0x28
 800ac2e:	233f      	movs	r3, #63	; 0x3f
 800ac30:	9309      	str	r3, [sp, #36]	; 0x24
 800ac32:	4b12      	ldr	r3, [pc, #72]	; (800ac7c <_Z23getFont_verdana_40_4bppv+0x90>)
 800ac34:	9308      	str	r3, [sp, #32]
 800ac36:	4b12      	ldr	r3, [pc, #72]	; (800ac80 <_Z23getFont_verdana_40_4bppv+0x94>)
 800ac38:	9307      	str	r3, [sp, #28]
 800ac3a:	2301      	movs	r3, #1
 800ac3c:	9306      	str	r3, [sp, #24]
 800ac3e:	2300      	movs	r3, #0
 800ac40:	9305      	str	r3, [sp, #20]
 800ac42:	2301      	movs	r3, #1
 800ac44:	9304      	str	r3, [sp, #16]
 800ac46:	2304      	movs	r3, #4
 800ac48:	9303      	str	r3, [sp, #12]
 800ac4a:	2300      	movs	r3, #0
 800ac4c:	9302      	str	r3, [sp, #8]
 800ac4e:	2300      	movs	r3, #0
 800ac50:	9301      	str	r3, [sp, #4]
 800ac52:	2328      	movs	r3, #40	; 0x28
 800ac54:	9300      	str	r3, [sp, #0]
 800ac56:	2329      	movs	r3, #41	; 0x29
 800ac58:	220a      	movs	r2, #10
 800ac5a:	490a      	ldr	r1, [pc, #40]	; (800ac84 <_Z23getFont_verdana_40_4bppv+0x98>)
 800ac5c:	480a      	ldr	r0, [pc, #40]	; (800ac88 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800ac5e:	f7ff fe67 	bl	800a930 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ac62:	480a      	ldr	r0, [pc, #40]	; (800ac8c <_Z23getFont_verdana_40_4bppv+0xa0>)
 800ac64:	f018 fec2 	bl	80239ec <atexit>
 800ac68:	4803      	ldr	r0, [pc, #12]	; (800ac78 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800ac6a:	f018 fe80 	bl	802396e <__cxa_guard_release>
    return verdana_40_4bpp;
 800ac6e:	4b06      	ldr	r3, [pc, #24]	; (800ac88 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800ac70:	4618      	mov	r0, r3
 800ac72:	46bd      	mov	sp, r7
 800ac74:	bd80      	pop	{r7, pc}
 800ac76:	bf00      	nop
 800ac78:	240004d4 	.word	0x240004d4
 800ac7c:	08026ef4 	.word	0x08026ef4
 800ac80:	08026f00 	.word	0x08026f00
 800ac84:	08026e60 	.word	0x08026e60
 800ac88:	240004a8 	.word	0x240004a8
 800ac8c:	0800abdd 	.word	0x0800abdd

0800ac90 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800ac90:	b480      	push	{r7}
 800ac92:	b083      	sub	sp, #12
 800ac94:	af00      	add	r7, sp, #0
 800ac96:	6078      	str	r0, [r7, #4]
 800ac98:	6039      	str	r1, [r7, #0]
 800ac9a:	683b      	ldr	r3, [r7, #0]
 800ac9c:	4618      	mov	r0, r3
 800ac9e:	370c      	adds	r7, #12
 800aca0:	46bd      	mov	sp, r7
 800aca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aca6:	4770      	bx	lr

0800aca8 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800aca8:	b480      	push	{r7}
 800acaa:	b083      	sub	sp, #12
 800acac:	af00      	add	r7, sp, #0
 800acae:	6078      	str	r0, [r7, #4]
 800acb0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800acb2:	bf00      	nop
 800acb4:	370c      	adds	r7, #12
 800acb6:	46bd      	mov	sp, r7
 800acb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acbc:	4770      	bx	lr

0800acbe <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800acbe:	b480      	push	{r7}
 800acc0:	b083      	sub	sp, #12
 800acc2:	af00      	add	r7, sp, #0
 800acc4:	6078      	str	r0, [r7, #4]
 800acc6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800acc8:	bf00      	nop
 800acca:	370c      	adds	r7, #12
 800accc:	46bd      	mov	sp, r7
 800acce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acd2:	4770      	bx	lr

0800acd4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800acd4:	b480      	push	{r7}
 800acd6:	b083      	sub	sp, #12
 800acd8:	af00      	add	r7, sp, #0
 800acda:	6078      	str	r0, [r7, #4]
 800acdc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800acde:	bf00      	nop
 800ace0:	370c      	adds	r7, #12
 800ace2:	46bd      	mov	sp, r7
 800ace4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ace8:	4770      	bx	lr

0800acea <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800acea:	b480      	push	{r7}
 800acec:	b083      	sub	sp, #12
 800acee:	af00      	add	r7, sp, #0
 800acf0:	6078      	str	r0, [r7, #4]
 800acf2:	460b      	mov	r3, r1
 800acf4:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800acf6:	bf00      	nop
 800acf8:	370c      	adds	r7, #12
 800acfa:	46bd      	mov	sp, r7
 800acfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad00:	4770      	bx	lr

0800ad02 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800ad02:	b480      	push	{r7}
 800ad04:	b083      	sub	sp, #12
 800ad06:	af00      	add	r7, sp, #0
 800ad08:	6078      	str	r0, [r7, #4]
    {
    }
 800ad0a:	bf00      	nop
 800ad0c:	370c      	adds	r7, #12
 800ad0e:	46bd      	mov	sp, r7
 800ad10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad14:	4770      	bx	lr

0800ad16 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800ad16:	b480      	push	{r7}
 800ad18:	b083      	sub	sp, #12
 800ad1a:	af00      	add	r7, sp, #0
 800ad1c:	6078      	str	r0, [r7, #4]
    {
    }
 800ad1e:	bf00      	nop
 800ad20:	370c      	adds	r7, #12
 800ad22:	46bd      	mov	sp, r7
 800ad24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad28:	4770      	bx	lr
	...

0800ad2c <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800ad2c:	b480      	push	{r7}
 800ad2e:	b083      	sub	sp, #12
 800ad30:	af00      	add	r7, sp, #0
 800ad32:	6078      	str	r0, [r7, #4]
    {
 800ad34:	4a04      	ldr	r2, [pc, #16]	; (800ad48 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800ad36:	687b      	ldr	r3, [r7, #4]
 800ad38:	601a      	str	r2, [r3, #0]
    }
 800ad3a:	687b      	ldr	r3, [r7, #4]
 800ad3c:	4618      	mov	r0, r3
 800ad3e:	370c      	adds	r7, #12
 800ad40:	46bd      	mov	sp, r7
 800ad42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad46:	4770      	bx	lr
 800ad48:	080255a0 	.word	0x080255a0

0800ad4c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800ad4c:	b580      	push	{r7, lr}
 800ad4e:	b082      	sub	sp, #8
 800ad50:	af00      	add	r7, sp, #0
 800ad52:	6078      	str	r0, [r7, #4]
    }
 800ad54:	6878      	ldr	r0, [r7, #4]
 800ad56:	f7ff ffe9 	bl	800ad2c <_ZN8touchgfx15UIEventListenerD1Ev>
 800ad5a:	2104      	movs	r1, #4
 800ad5c:	6878      	ldr	r0, [r7, #4]
 800ad5e:	f018 fdf8 	bl	8023952 <_ZdlPvj>
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	4618      	mov	r0, r3
 800ad66:	3708      	adds	r7, #8
 800ad68:	46bd      	mov	sp, r7
 800ad6a:	bd80      	pop	{r7, pc}

0800ad6c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800ad6c:	b480      	push	{r7}
 800ad6e:	b083      	sub	sp, #12
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
    {
    }
 800ad74:	bf00      	nop
 800ad76:	370c      	adds	r7, #12
 800ad78:	46bd      	mov	sp, r7
 800ad7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad7e:	4770      	bx	lr

0800ad80 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800ad80:	b480      	push	{r7}
 800ad82:	b083      	sub	sp, #12
 800ad84:	af00      	add	r7, sp, #0
 800ad86:	6078      	str	r0, [r7, #4]
 800ad88:	460b      	mov	r3, r1
 800ad8a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800ad8c:	bf00      	nop
 800ad8e:	370c      	adds	r7, #12
 800ad90:	46bd      	mov	sp, r7
 800ad92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad96:	4770      	bx	lr

0800ad98 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800ad98:	b480      	push	{r7}
 800ad9a:	b083      	sub	sp, #12
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	683a      	ldr	r2, [r7, #0]
 800ada6:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800adaa:	6810      	ldr	r0, [r2, #0]
 800adac:	6851      	ldr	r1, [r2, #4]
 800adae:	c303      	stmia	r3!, {r0, r1}
    }
 800adb0:	bf00      	nop
 800adb2:	370c      	adds	r7, #12
 800adb4:	46bd      	mov	sp, r7
 800adb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adba:	4770      	bx	lr

0800adbc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800adbc:	b580      	push	{r7, lr}
 800adbe:	b082      	sub	sp, #8
 800adc0:	af00      	add	r7, sp, #0
 800adc2:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800adc4:	687b      	ldr	r3, [r7, #4]
 800adc6:	3304      	adds	r3, #4
 800adc8:	4618      	mov	r0, r3
 800adca:	f008 fcc4 	bl	8013756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800adce:	bf00      	nop
 800add0:	3708      	adds	r7, #8
 800add2:	46bd      	mov	sp, r7
 800add4:	bd80      	pop	{r7, pc}
	...

0800add8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800add8:	b480      	push	{r7}
 800adda:	b083      	sub	sp, #12
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
    {
 800ade0:	4a04      	ldr	r2, [pc, #16]	; (800adf4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	601a      	str	r2, [r3, #0]
    }
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	4618      	mov	r0, r3
 800adea:	370c      	adds	r7, #12
 800adec:	46bd      	mov	sp, r7
 800adee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adf2:	4770      	bx	lr
 800adf4:	08025588 	.word	0x08025588

0800adf8 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800adf8:	b580      	push	{r7, lr}
 800adfa:	b082      	sub	sp, #8
 800adfc:	af00      	add	r7, sp, #0
 800adfe:	6078      	str	r0, [r7, #4]
    }
 800ae00:	6878      	ldr	r0, [r7, #4]
 800ae02:	f7ff ffe9 	bl	800add8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800ae06:	2104      	movs	r1, #4
 800ae08:	6878      	ldr	r0, [r7, #4]
 800ae0a:	f018 fda2 	bl	8023952 <_ZdlPvj>
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	4618      	mov	r0, r3
 800ae12:	3708      	adds	r7, #8
 800ae14:	46bd      	mov	sp, r7
 800ae16:	bd80      	pop	{r7, pc}

0800ae18 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800ae18:	b480      	push	{r7}
 800ae1a:	af00      	add	r7, sp, #0
    {
        return instance;
 800ae1c:	4b03      	ldr	r3, [pc, #12]	; (800ae2c <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800ae1e:	681b      	ldr	r3, [r3, #0]
    }
 800ae20:	4618      	mov	r0, r3
 800ae22:	46bd      	mov	sp, r7
 800ae24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae28:	4770      	bx	lr
 800ae2a:	bf00      	nop
 800ae2c:	240016b0 	.word	0x240016b0

0800ae30 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800ae30:	b480      	push	{r7}
 800ae32:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800ae34:	4b0b      	ldr	r3, [pc, #44]	; (800ae64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800ae3c:	2b00      	cmp	r3, #0
 800ae3e:	d008      	beq.n	800ae52 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800ae40:	4b08      	ldr	r3, [pc, #32]	; (800ae64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ae46:	2b00      	cmp	r3, #0
 800ae48:	d003      	beq.n	800ae52 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800ae4a:	4b06      	ldr	r3, [pc, #24]	; (800ae64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ae4c:	681b      	ldr	r3, [r3, #0]
 800ae4e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ae50:	e002      	b.n	800ae58 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800ae52:	4b04      	ldr	r3, [pc, #16]	; (800ae64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800ae54:	681b      	ldr	r3, [r3, #0]
 800ae56:	689b      	ldr	r3, [r3, #8]
    }
 800ae58:	4618      	mov	r0, r3
 800ae5a:	46bd      	mov	sp, r7
 800ae5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae60:	4770      	bx	lr
 800ae62:	bf00      	nop
 800ae64:	240016b0 	.word	0x240016b0

0800ae68 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800ae68:	b480      	push	{r7}
 800ae6a:	b083      	sub	sp, #12
 800ae6c:	af00      	add	r7, sp, #0
 800ae6e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800ae70:	4a07      	ldr	r2, [pc, #28]	; (800ae90 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	601a      	str	r2, [r3, #0]
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	2200      	movs	r2, #0
 800ae7a:	605a      	str	r2, [r3, #4]
 800ae7c:	687b      	ldr	r3, [r7, #4]
 800ae7e:	2200      	movs	r2, #0
 800ae80:	721a      	strb	r2, [r3, #8]
    {
    }
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	4618      	mov	r0, r3
 800ae86:	370c      	adds	r7, #12
 800ae88:	46bd      	mov	sp, r7
 800ae8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae8e:	4770      	bx	lr
 800ae90:	08025564 	.word	0x08025564

0800ae94 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800ae94:	b480      	push	{r7}
 800ae96:	b083      	sub	sp, #12
 800ae98:	af00      	add	r7, sp, #0
 800ae9a:	6078      	str	r0, [r7, #4]
    {
 800ae9c:	4a04      	ldr	r2, [pc, #16]	; (800aeb0 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	601a      	str	r2, [r3, #0]
    }
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	4618      	mov	r0, r3
 800aea6:	370c      	adds	r7, #12
 800aea8:	46bd      	mov	sp, r7
 800aeaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeae:	4770      	bx	lr
 800aeb0:	08025564 	.word	0x08025564

0800aeb4 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800aeb4:	b580      	push	{r7, lr}
 800aeb6:	b082      	sub	sp, #8
 800aeb8:	af00      	add	r7, sp, #0
 800aeba:	6078      	str	r0, [r7, #4]
    }
 800aebc:	6878      	ldr	r0, [r7, #4]
 800aebe:	f7ff ffe9 	bl	800ae94 <_ZN8touchgfx10TransitionD1Ev>
 800aec2:	210c      	movs	r1, #12
 800aec4:	6878      	ldr	r0, [r7, #4]
 800aec6:	f018 fd44 	bl	8023952 <_ZdlPvj>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	4618      	mov	r0, r3
 800aece:	3708      	adds	r7, #8
 800aed0:	46bd      	mov	sp, r7
 800aed2:	bd80      	pop	{r7, pc}

0800aed4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800aed4:	b480      	push	{r7}
 800aed6:	b083      	sub	sp, #12
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	6078      	str	r0, [r7, #4]
    {
    }
 800aedc:	bf00      	nop
 800aede:	370c      	adds	r7, #12
 800aee0:	46bd      	mov	sp, r7
 800aee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aee6:	4770      	bx	lr

0800aee8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800aee8:	b480      	push	{r7}
 800aeea:	b083      	sub	sp, #12
 800aeec:	af00      	add	r7, sp, #0
 800aeee:	6078      	str	r0, [r7, #4]
    {
    }
 800aef0:	bf00      	nop
 800aef2:	370c      	adds	r7, #12
 800aef4:	46bd      	mov	sp, r7
 800aef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aefa:	4770      	bx	lr

0800aefc <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800aefc:	b480      	push	{r7}
 800aefe:	b083      	sub	sp, #12
 800af00:	af00      	add	r7, sp, #0
 800af02:	6078      	str	r0, [r7, #4]
    {
    }
 800af04:	bf00      	nop
 800af06:	370c      	adds	r7, #12
 800af08:	46bd      	mov	sp, r7
 800af0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af0e:	4770      	bx	lr

0800af10 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800af10:	b580      	push	{r7, lr}
 800af12:	b082      	sub	sp, #8
 800af14:	af00      	add	r7, sp, #0
 800af16:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800af18:	f008 fbf8 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800af1c:	4603      	mov	r3, r0
 800af1e:	681a      	ldr	r2, [r3, #0]
 800af20:	323c      	adds	r2, #60	; 0x3c
 800af22:	6812      	ldr	r2, [r2, #0]
 800af24:	4618      	mov	r0, r3
 800af26:	4790      	blx	r2
    }
 800af28:	bf00      	nop
 800af2a:	3708      	adds	r7, #8
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd80      	pop	{r7, pc}

0800af30 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800af30:	b480      	push	{r7}
 800af32:	b083      	sub	sp, #12
 800af34:	af00      	add	r7, sp, #0
 800af36:	6078      	str	r0, [r7, #4]
 800af38:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	683a      	ldr	r2, [r7, #0]
 800af3e:	605a      	str	r2, [r3, #4]
    }
 800af40:	bf00      	nop
 800af42:	370c      	adds	r7, #12
 800af44:	46bd      	mov	sp, r7
 800af46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af4a:	4770      	bx	lr

0800af4c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800af4c:	b580      	push	{r7, lr}
 800af4e:	b082      	sub	sp, #8
 800af50:	af00      	add	r7, sp, #0
 800af52:	6078      	str	r0, [r7, #4]
 800af54:	4a05      	ldr	r2, [pc, #20]	; (800af6c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800af56:	687b      	ldr	r3, [r7, #4]
 800af58:	601a      	str	r2, [r3, #0]
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	4618      	mov	r0, r3
 800af5e:	f7ff fee5 	bl	800ad2c <_ZN8touchgfx15UIEventListenerD1Ev>
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	4618      	mov	r0, r3
 800af66:	3708      	adds	r7, #8
 800af68:	46bd      	mov	sp, r7
 800af6a:	bd80      	pop	{r7, pc}
 800af6c:	080260a8 	.word	0x080260a8

0800af70 <_ZN8touchgfx11ApplicationD0Ev>:
 800af70:	b580      	push	{r7, lr}
 800af72:	b082      	sub	sp, #8
 800af74:	af00      	add	r7, sp, #0
 800af76:	6078      	str	r0, [r7, #4]
 800af78:	6878      	ldr	r0, [r7, #4]
 800af7a:	f7ff ffe7 	bl	800af4c <_ZN8touchgfx11ApplicationD1Ev>
 800af7e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800af82:	6878      	ldr	r0, [r7, #4]
 800af84:	f018 fce5 	bl	8023952 <_ZdlPvj>
 800af88:	687b      	ldr	r3, [r7, #4]
 800af8a:	4618      	mov	r0, r3
 800af8c:	3708      	adds	r7, #8
 800af8e:	46bd      	mov	sp, r7
 800af90:	bd80      	pop	{r7, pc}
	...

0800af94 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800af94:	b580      	push	{r7, lr}
 800af96:	b082      	sub	sp, #8
 800af98:	af00      	add	r7, sp, #0
 800af9a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	4618      	mov	r0, r3
 800afa0:	f008 fc7a 	bl	8013898 <_ZN8touchgfx11ApplicationC1Ev>
 800afa4:	4a09      	ldr	r2, [pc, #36]	; (800afcc <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800afaa:	687b      	ldr	r3, [r7, #4]
 800afac:	2200      	movs	r2, #0
 800afae:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	2200      	movs	r2, #0
 800afb6:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	4a04      	ldr	r2, [pc, #16]	; (800afd0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800afbe:	6013      	str	r3, [r2, #0]
    }
 800afc0:	687b      	ldr	r3, [r7, #4]
 800afc2:	4618      	mov	r0, r3
 800afc4:	3708      	adds	r7, #8
 800afc6:	46bd      	mov	sp, r7
 800afc8:	bd80      	pop	{r7, pc}
 800afca:	bf00      	nop
 800afcc:	08025510 	.word	0x08025510
 800afd0:	240016fc 	.word	0x240016fc

0800afd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800afd4:	b580      	push	{r7, lr}
 800afd6:	b082      	sub	sp, #8
 800afd8:	af00      	add	r7, sp, #0
 800afda:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800afdc:	6878      	ldr	r0, [r7, #4]
 800afde:	f000 f804 	bl	800afea <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800afe2:	bf00      	nop
 800afe4:	3708      	adds	r7, #8
 800afe6:	46bd      	mov	sp, r7
 800afe8:	bd80      	pop	{r7, pc}

0800afea <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800afea:	b580      	push	{r7, lr}
 800afec:	b082      	sub	sp, #8
 800afee:	af00      	add	r7, sp, #0
 800aff0:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800aff8:	2b00      	cmp	r3, #0
 800affa:	d00f      	beq.n	800b01c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800affc:	687b      	ldr	r3, [r7, #4]
 800affe:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b008:	681b      	ldr	r3, [r3, #0]
 800b00a:	330c      	adds	r3, #12
 800b00c:	681b      	ldr	r3, [r3, #0]
 800b00e:	4610      	mov	r0, r2
 800b010:	4798      	blx	r3
 800b012:	4603      	mov	r3, r0
 800b014:	2b00      	cmp	r3, #0
 800b016:	d001      	beq.n	800b01c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b018:	2301      	movs	r3, #1
 800b01a:	e000      	b.n	800b01e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800b01c:	2300      	movs	r3, #0
 800b01e:	2b00      	cmp	r3, #0
 800b020:	d00e      	beq.n	800b040 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800b022:	687b      	ldr	r3, [r7, #4]
 800b024:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800b028:	687b      	ldr	r3, [r7, #4]
 800b02a:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	3308      	adds	r3, #8
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	4610      	mov	r0, r2
 800b036:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800b038:	687b      	ldr	r3, [r7, #4]
 800b03a:	2200      	movs	r2, #0
 800b03c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800b040:	bf00      	nop
 800b042:	3708      	adds	r7, #8
 800b044:	46bd      	mov	sp, r7
 800b046:	bd80      	pop	{r7, pc}

0800b048 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800b048:	b480      	push	{r7}
 800b04a:	b083      	sub	sp, #12
 800b04c:	af00      	add	r7, sp, #0
 800b04e:	6078      	str	r0, [r7, #4]
 800b050:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800b052:	687b      	ldr	r3, [r7, #4]
 800b054:	683a      	ldr	r2, [r7, #0]
 800b056:	601a      	str	r2, [r3, #0]
    }
 800b058:	bf00      	nop
 800b05a:	370c      	adds	r7, #12
 800b05c:	46bd      	mov	sp, r7
 800b05e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b062:	4770      	bx	lr

0800b064 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800b064:	b580      	push	{r7, lr}
 800b066:	b082      	sub	sp, #8
 800b068:	af00      	add	r7, sp, #0
 800b06a:	6078      	str	r0, [r7, #4]
 800b06c:	4a05      	ldr	r2, [pc, #20]	; (800b084 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800b06e:	687b      	ldr	r3, [r7, #4]
 800b070:	601a      	str	r2, [r3, #0]
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	4618      	mov	r0, r3
 800b076:	f7ff ff69 	bl	800af4c <_ZN8touchgfx11ApplicationD1Ev>
 800b07a:	687b      	ldr	r3, [r7, #4]
 800b07c:	4618      	mov	r0, r3
 800b07e:	3708      	adds	r7, #8
 800b080:	46bd      	mov	sp, r7
 800b082:	bd80      	pop	{r7, pc}
 800b084:	08025510 	.word	0x08025510

0800b088 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800b088:	b580      	push	{r7, lr}
 800b08a:	b082      	sub	sp, #8
 800b08c:	af00      	add	r7, sp, #0
 800b08e:	6078      	str	r0, [r7, #4]
 800b090:	6878      	ldr	r0, [r7, #4]
 800b092:	f7ff ffe7 	bl	800b064 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b096:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800b09a:	6878      	ldr	r0, [r7, #4]
 800b09c:	f018 fc59 	bl	8023952 <_ZdlPvj>
 800b0a0:	687b      	ldr	r3, [r7, #4]
 800b0a2:	4618      	mov	r0, r3
 800b0a4:	3708      	adds	r7, #8
 800b0a6:	46bd      	mov	sp, r7
 800b0a8:	bd80      	pop	{r7, pc}
	...

0800b0ac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800b0ac:	b580      	push	{r7, lr}
 800b0ae:	b082      	sub	sp, #8
 800b0b0:	af00      	add	r7, sp, #0
 800b0b2:	6078      	str	r0, [r7, #4]
 800b0b4:	4a08      	ldr	r2, [pc, #32]	; (800b0d8 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800b0b6:	687b      	ldr	r3, [r7, #4]
 800b0b8:	601a      	str	r2, [r3, #0]
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b0c0:	4618      	mov	r0, r3
 800b0c2:	f000 fc5d 	bl	800b980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b0c6:	687b      	ldr	r3, [r7, #4]
 800b0c8:	4618      	mov	r0, r3
 800b0ca:	f7ff ffcb 	bl	800b064 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	3708      	adds	r7, #8
 800b0d4:	46bd      	mov	sp, r7
 800b0d6:	bd80      	pop	{r7, pc}
 800b0d8:	080254a4 	.word	0x080254a4

0800b0dc <_ZN23FrontendApplicationBaseD0Ev>:
 800b0dc:	b580      	push	{r7, lr}
 800b0de:	b082      	sub	sp, #8
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	6078      	str	r0, [r7, #4]
 800b0e4:	6878      	ldr	r0, [r7, #4]
 800b0e6:	f7ff ffe1 	bl	800b0ac <_ZN23FrontendApplicationBaseD1Ev>
 800b0ea:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800b0ee:	6878      	ldr	r0, [r7, #4]
 800b0f0:	f018 fc2f 	bl	8023952 <_ZdlPvj>
 800b0f4:	687b      	ldr	r3, [r7, #4]
 800b0f6:	4618      	mov	r0, r3
 800b0f8:	3708      	adds	r7, #8
 800b0fa:	46bd      	mov	sp, r7
 800b0fc:	bd80      	pop	{r7, pc}

0800b0fe <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800b0fe:	b580      	push	{r7, lr}
 800b100:	b082      	sub	sp, #8
 800b102:	af00      	add	r7, sp, #0
 800b104:	6078      	str	r0, [r7, #4]
    {
        gotoscreen1ScreenNoTransition();
 800b106:	6878      	ldr	r0, [r7, #4]
 800b108:	f000 f882 	bl	800b210 <_ZN23FrontendApplicationBase29gotoscreen1ScreenNoTransitionEv>
    }
 800b10c:	bf00      	nop
 800b10e:	3708      	adds	r7, #8
 800b110:	46bd      	mov	sp, r7
 800b112:	bd80      	pop	{r7, pc}

0800b114 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800b114:	b480      	push	{r7}
 800b116:	b083      	sub	sp, #12
 800b118:	af00      	add	r7, sp, #0
 800b11a:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800b11c:	687b      	ldr	r3, [r7, #4]
 800b11e:	2201      	movs	r2, #1
 800b120:	721a      	strb	r2, [r3, #8]
    }
 800b122:	bf00      	nop
 800b124:	370c      	adds	r7, #12
 800b126:	46bd      	mov	sp, r7
 800b128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b12c:	4770      	bx	lr

0800b12e <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800b12e:	b480      	push	{r7}
 800b130:	b083      	sub	sp, #12
 800b132:	af00      	add	r7, sp, #0
 800b134:	6078      	str	r0, [r7, #4]
 800b136:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800b138:	687b      	ldr	r3, [r7, #4]
 800b13a:	683a      	ldr	r2, [r7, #0]
 800b13c:	605a      	str	r2, [r3, #4]
    }
 800b13e:	bf00      	nop
 800b140:	370c      	adds	r7, #12
 800b142:	46bd      	mov	sp, r7
 800b144:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b148:	4770      	bx	lr
	...

0800b14c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800b14c:	b580      	push	{r7, lr}
 800b14e:	b084      	sub	sp, #16
 800b150:	af00      	add	r7, sp, #0
 800b152:	60f8      	str	r0, [r7, #12]
 800b154:	60b9      	str	r1, [r7, #8]
 800b156:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800b158:	68fb      	ldr	r3, [r7, #12]
 800b15a:	4618      	mov	r0, r3
 800b15c:	f7ff ff1a 	bl	800af94 <_ZN8touchgfx14MVPApplicationC1Ev>
 800b160:	4a16      	ldr	r2, [pc, #88]	; (800b1bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800b162:	68fb      	ldr	r3, [r7, #12]
 800b164:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800b166:	68fb      	ldr	r3, [r7, #12]
 800b168:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b16c:	4618      	mov	r0, r3
 800b16e:	f000 f8eb 	bl	800b348 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800b172:	68fb      	ldr	r3, [r7, #12]
 800b174:	687a      	ldr	r2, [r7, #4]
 800b176:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800b17a:	68fb      	ldr	r3, [r7, #12]
 800b17c:	68ba      	ldr	r2, [r7, #8]
 800b17e:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800b182:	f7ff fe49 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800b186:	4603      	mov	r3, r0
 800b188:	681a      	ldr	r2, [r3, #0]
 800b18a:	3208      	adds	r2, #8
 800b18c:	6812      	ldr	r2, [r2, #0]
 800b18e:	2100      	movs	r1, #0
 800b190:	4618      	mov	r0, r3
 800b192:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800b194:	2000      	movs	r0, #0
 800b196:	f001 fe83 	bl	800cea0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800b19a:	f7ff fe49 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 800b19e:	4603      	mov	r3, r0
 800b1a0:	4618      	mov	r0, r3
 800b1a2:	f011 f87c 	bl	801c29e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800b1a6:	f7ff fe43 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 800b1aa:	4603      	mov	r3, r0
 800b1ac:	4618      	mov	r0, r3
 800b1ae:	f011 f8f1 	bl	801c394 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800b1b2:	68fb      	ldr	r3, [r7, #12]
 800b1b4:	4618      	mov	r0, r3
 800b1b6:	3710      	adds	r7, #16
 800b1b8:	46bd      	mov	sp, r7
 800b1ba:	bd80      	pop	{r7, pc}
 800b1bc:	080254a4 	.word	0x080254a4

0800b1c0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800b1c0:	b480      	push	{r7}
 800b1c2:	b083      	sub	sp, #12
 800b1c4:	af00      	add	r7, sp, #0
 800b1c6:	6078      	str	r0, [r7, #4]
 800b1c8:	6039      	str	r1, [r7, #0]
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	4618      	mov	r0, r3
 800b1ce:	370c      	adds	r7, #12
 800b1d0:	46bd      	mov	sp, r7
 800b1d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1d6:	4770      	bx	lr

0800b1d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b1d8:	b580      	push	{r7, lr}
 800b1da:	b082      	sub	sp, #8
 800b1dc:	af00      	add	r7, sp, #0
 800b1de:	6078      	str	r0, [r7, #4]
 800b1e0:	6039      	str	r1, [r7, #0]
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	683a      	ldr	r2, [r7, #0]
 800b1e6:	4611      	mov	r1, r2
 800b1e8:	4618      	mov	r0, r3
 800b1ea:	f7ff ffe9 	bl	800b1c0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800b1ee:	683b      	ldr	r3, [r7, #0]
 800b1f0:	685a      	ldr	r2, [r3, #4]
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	605a      	str	r2, [r3, #4]
 800b1f6:	687b      	ldr	r3, [r7, #4]
 800b1f8:	683a      	ldr	r2, [r7, #0]
 800b1fa:	3308      	adds	r3, #8
 800b1fc:	3208      	adds	r2, #8
 800b1fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b202:	e883 0003 	stmia.w	r3, {r0, r1}
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	4618      	mov	r0, r3
 800b20a:	3708      	adds	r7, #8
 800b20c:	46bd      	mov	sp, r7
 800b20e:	bd80      	pop	{r7, pc}

0800b210 <_ZN23FrontendApplicationBase29gotoscreen1ScreenNoTransitionEv>:
 */

// screen1

void FrontendApplicationBase::gotoscreen1ScreenNoTransition()
{
 800b210:	b590      	push	{r4, r7, lr}
 800b212:	b089      	sub	sp, #36	; 0x24
 800b214:	af00      	add	r7, sp, #0
 800b216:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen1ScreenNoTransitionImpl);
 800b218:	687b      	ldr	r3, [r7, #4]
 800b21a:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b21e:	4b10      	ldr	r3, [pc, #64]	; (800b260 <_ZN23FrontendApplicationBase29gotoscreen1ScreenNoTransitionEv+0x50>)
 800b220:	61bb      	str	r3, [r7, #24]
 800b222:	2300      	movs	r3, #0
 800b224:	61fb      	str	r3, [r7, #28]
 800b226:	f107 0008 	add.w	r0, r7, #8
 800b22a:	f107 0318 	add.w	r3, r7, #24
 800b22e:	cb0c      	ldmia	r3, {r2, r3}
 800b230:	6879      	ldr	r1, [r7, #4]
 800b232:	f000 f8a5 	bl	800b380 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b236:	f107 0308 	add.w	r3, r7, #8
 800b23a:	4619      	mov	r1, r3
 800b23c:	4620      	mov	r0, r4
 800b23e:	f7ff ffcb 	bl	800b1d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b242:	f107 0308 	add.w	r3, r7, #8
 800b246:	4618      	mov	r0, r3
 800b248:	f000 fb9a 	bl	800b980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b24c:	687b      	ldr	r3, [r7, #4]
 800b24e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b258:	bf00      	nop
 800b25a:	3724      	adds	r7, #36	; 0x24
 800b25c:	46bd      	mov	sp, r7
 800b25e:	bd90      	pop	{r4, r7, pc}
 800b260:	0800b265 	.word	0x0800b265

0800b264 <_ZN23FrontendApplicationBase33gotoscreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreen1ScreenNoTransitionImpl()
{
 800b264:	b580      	push	{r7, lr}
 800b266:	b084      	sub	sp, #16
 800b268:	af02      	add	r7, sp, #8
 800b26a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screen1View, screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b278:	461a      	mov	r2, r3
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b280:	9300      	str	r3, [sp, #0]
 800b282:	4b04      	ldr	r3, [pc, #16]	; (800b294 <_ZN23FrontendApplicationBase33gotoscreen1ScreenNoTransitionImplEv+0x30>)
 800b284:	4804      	ldr	r0, [pc, #16]	; (800b298 <_ZN23FrontendApplicationBase33gotoscreen1ScreenNoTransitionImplEv+0x34>)
 800b286:	f000 f8ad 	bl	800b3e4 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b28a:	bf00      	nop
 800b28c:	3708      	adds	r7, #8
 800b28e:	46bd      	mov	sp, r7
 800b290:	bd80      	pop	{r7, pc}
 800b292:	bf00      	nop
 800b294:	240016f0 	.word	0x240016f0
 800b298:	240016ec 	.word	0x240016ec

0800b29c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:

// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
 800b29c:	b590      	push	{r4, r7, lr}
 800b29e:	b089      	sub	sp, #36	; 0x24
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl);
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b2aa:	4b10      	ldr	r3, [pc, #64]	; (800b2ec <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x50>)
 800b2ac:	61bb      	str	r3, [r7, #24]
 800b2ae:	2300      	movs	r3, #0
 800b2b0:	61fb      	str	r3, [r7, #28]
 800b2b2:	f107 0008 	add.w	r0, r7, #8
 800b2b6:	f107 0318 	add.w	r3, r7, #24
 800b2ba:	cb0c      	ldmia	r3, {r2, r3}
 800b2bc:	6879      	ldr	r1, [r7, #4]
 800b2be:	f000 f85f 	bl	800b380 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800b2c2:	f107 0308 	add.w	r3, r7, #8
 800b2c6:	4619      	mov	r1, r3
 800b2c8:	4620      	mov	r0, r4
 800b2ca:	f7ff ff85 	bl	800b1d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800b2ce:	f107 0308 	add.w	r3, r7, #8
 800b2d2:	4618      	mov	r0, r3
 800b2d4:	f000 fb54 	bl	800b980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800b2d8:	687b      	ldr	r3, [r7, #4]
 800b2da:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800b2e4:	bf00      	nop
 800b2e6:	3724      	adds	r7, #36	; 0x24
 800b2e8:	46bd      	mov	sp, r7
 800b2ea:	bd90      	pop	{r4, r7, pc}
 800b2ec:	0800b2f1 	.word	0x0800b2f1

0800b2f0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 800b2f0:	b580      	push	{r7, lr}
 800b2f2:	b084      	sub	sp, #16
 800b2f4:	af02      	add	r7, sp, #8
 800b2f6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800b304:	461a      	mov	r2, r3
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800b30c:	9300      	str	r3, [sp, #0]
 800b30e:	4b04      	ldr	r3, [pc, #16]	; (800b320 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x30>)
 800b310:	4804      	ldr	r0, [pc, #16]	; (800b324 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x34>)
 800b312:	f000 f97f 	bl	800b614 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800b316:	bf00      	nop
 800b318:	3708      	adds	r7, #8
 800b31a:	46bd      	mov	sp, r7
 800b31c:	bd80      	pop	{r7, pc}
 800b31e:	bf00      	nop
 800b320:	240016f0 	.word	0x240016f0
 800b324:	240016ec 	.word	0x240016ec

0800b328 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800b328:	b480      	push	{r7}
 800b32a:	b083      	sub	sp, #12
 800b32c:	af00      	add	r7, sp, #0
 800b32e:	6078      	str	r0, [r7, #4]
 800b330:	4a04      	ldr	r2, [pc, #16]	; (800b344 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800b332:	687b      	ldr	r3, [r7, #4]
 800b334:	601a      	str	r2, [r3, #0]
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	4618      	mov	r0, r3
 800b33a:	370c      	adds	r7, #12
 800b33c:	46bd      	mov	sp, r7
 800b33e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b342:	4770      	bx	lr
 800b344:	08025588 	.word	0x08025588

0800b348 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800b348:	b580      	push	{r7, lr}
 800b34a:	b082      	sub	sp, #8
 800b34c:	af00      	add	r7, sp, #0
 800b34e:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	4618      	mov	r0, r3
 800b354:	f7ff ffe8 	bl	800b328 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b358:	4a08      	ldr	r2, [pc, #32]	; (800b37c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	601a      	str	r2, [r3, #0]
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	2200      	movs	r2, #0
 800b362:	605a      	str	r2, [r3, #4]
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	2200      	movs	r2, #0
 800b368:	609a      	str	r2, [r3, #8]
 800b36a:	687b      	ldr	r3, [r7, #4]
 800b36c:	2200      	movs	r2, #0
 800b36e:	60da      	str	r2, [r3, #12]
    {
    }
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	4618      	mov	r0, r3
 800b374:	3708      	adds	r7, #8
 800b376:	46bd      	mov	sp, r7
 800b378:	bd80      	pop	{r7, pc}
 800b37a:	bf00      	nop
 800b37c:	080254f8 	.word	0x080254f8

0800b380 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800b380:	b580      	push	{r7, lr}
 800b382:	b084      	sub	sp, #16
 800b384:	af00      	add	r7, sp, #0
 800b386:	60f8      	str	r0, [r7, #12]
 800b388:	60b9      	str	r1, [r7, #8]
 800b38a:	4639      	mov	r1, r7
 800b38c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800b390:	68fb      	ldr	r3, [r7, #12]
 800b392:	4618      	mov	r0, r3
 800b394:	f7ff ffc8 	bl	800b328 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800b398:	4a08      	ldr	r2, [pc, #32]	; (800b3bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800b39a:	68fb      	ldr	r3, [r7, #12]
 800b39c:	601a      	str	r2, [r3, #0]
 800b39e:	68fb      	ldr	r3, [r7, #12]
 800b3a0:	68ba      	ldr	r2, [r7, #8]
 800b3a2:	605a      	str	r2, [r3, #4]
 800b3a4:	68fb      	ldr	r3, [r7, #12]
 800b3a6:	3308      	adds	r3, #8
 800b3a8:	463a      	mov	r2, r7
 800b3aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b3ae:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800b3b2:	68fb      	ldr	r3, [r7, #12]
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	3710      	adds	r7, #16
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd80      	pop	{r7, pc}
 800b3bc:	080254f8 	.word	0x080254f8

0800b3c0 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800b3c0:	b580      	push	{r7, lr}
 800b3c2:	b082      	sub	sp, #8
 800b3c4:	af00      	add	r7, sp, #0
 800b3c6:	6078      	str	r0, [r7, #4]
 800b3c8:	687b      	ldr	r3, [r7, #4]
 800b3ca:	4618      	mov	r0, r3
 800b3cc:	f7ff fd4c 	bl	800ae68 <_ZN8touchgfx10TransitionC1Ev>
 800b3d0:	4a03      	ldr	r2, [pc, #12]	; (800b3e0 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	601a      	str	r2, [r3, #0]
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3708      	adds	r7, #8
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}
 800b3e0:	08025480 	.word	0x08025480

0800b3e4 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b3e4:	b590      	push	{r4, r7, lr}
 800b3e6:	b08f      	sub	sp, #60	; 0x3c
 800b3e8:	af00      	add	r7, sp, #0
 800b3ea:	60f8      	str	r0, [r7, #12]
 800b3ec:	60b9      	str	r1, [r7, #8]
 800b3ee:	607a      	str	r2, [r7, #4]
 800b3f0:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	689a      	ldr	r2, [r3, #8]
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	689b      	ldr	r3, [r3, #8]
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	3320      	adds	r3, #32
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	4610      	mov	r0, r2
 800b402:	4798      	blx	r3
 800b404:	4603      	mov	r3, r0
 800b406:	2bf7      	cmp	r3, #247	; 0xf7
 800b408:	d805      	bhi.n	800b416 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800b40a:	4b7d      	ldr	r3, [pc, #500]	; (800b600 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x21c>)
 800b40c:	4a7d      	ldr	r2, [pc, #500]	; (800b604 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b40e:	21a3      	movs	r1, #163	; 0xa3
 800b410:	487d      	ldr	r0, [pc, #500]	; (800b608 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b412:	f018 facd 	bl	80239b0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	685a      	ldr	r2, [r3, #4]
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	685b      	ldr	r3, [r3, #4]
 800b41e:	681b      	ldr	r3, [r3, #0]
 800b420:	3320      	adds	r3, #32
 800b422:	681b      	ldr	r3, [r3, #0]
 800b424:	4610      	mov	r0, r2
 800b426:	4798      	blx	r3
 800b428:	4603      	mov	r3, r0
 800b42a:	2b0f      	cmp	r3, #15
 800b42c:	d805      	bhi.n	800b43a <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x56>
 800b42e:	4b77      	ldr	r3, [pc, #476]	; (800b60c <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b430:	4a74      	ldr	r2, [pc, #464]	; (800b604 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b432:	21a4      	movs	r1, #164	; 0xa4
 800b434:	4874      	ldr	r0, [pc, #464]	; (800b608 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b436:	f018 fabb 	bl	80239b0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	68da      	ldr	r2, [r3, #12]
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	68db      	ldr	r3, [r3, #12]
 800b442:	681b      	ldr	r3, [r3, #0]
 800b444:	3320      	adds	r3, #32
 800b446:	681b      	ldr	r3, [r3, #0]
 800b448:	4610      	mov	r0, r2
 800b44a:	4798      	blx	r3
 800b44c:	4603      	mov	r3, r0
 800b44e:	2b0b      	cmp	r3, #11
 800b450:	d805      	bhi.n	800b45e <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 800b452:	4b6f      	ldr	r3, [pc, #444]	; (800b610 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b454:	4a6b      	ldr	r2, [pc, #428]	; (800b604 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b456:	21a5      	movs	r1, #165	; 0xa5
 800b458:	486b      	ldr	r0, [pc, #428]	; (800b608 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b45a:	f018 faa9 	bl	80239b0 <__assert_func>
 800b45e:	68fb      	ldr	r3, [r7, #12]
 800b460:	62bb      	str	r3, [r7, #40]	; 0x28
 800b462:	68bb      	ldr	r3, [r7, #8]
 800b464:	627b      	str	r3, [r7, #36]	; 0x24
 800b466:	683b      	ldr	r3, [r7, #0]
 800b468:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b46a:	f008 f94f 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800b46e:	4603      	mov	r3, r0
 800b470:	4618      	mov	r0, r3
 800b472:	f7ff fca3 	bl	800adbc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b476:	6a3b      	ldr	r3, [r7, #32]
 800b478:	681b      	ldr	r3, [r3, #0]
 800b47a:	2b00      	cmp	r3, #0
 800b47c:	d008      	beq.n	800b490 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xac>
        (*currentTrans)->tearDown();
 800b47e:	6a3b      	ldr	r3, [r7, #32]
 800b480:	681a      	ldr	r2, [r3, #0]
 800b482:	6a3b      	ldr	r3, [r7, #32]
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	330c      	adds	r3, #12
 800b48a:	681b      	ldr	r3, [r3, #0]
 800b48c:	4610      	mov	r0, r2
 800b48e:	4798      	blx	r3
    if (*currentTrans)
 800b490:	6a3b      	ldr	r3, [r7, #32]
 800b492:	681b      	ldr	r3, [r3, #0]
 800b494:	2b00      	cmp	r3, #0
 800b496:	d007      	beq.n	800b4a8 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc4>
        (*currentTrans)->~Transition();
 800b498:	6a3b      	ldr	r3, [r7, #32]
 800b49a:	681a      	ldr	r2, [r3, #0]
 800b49c:	6a3b      	ldr	r3, [r7, #32]
 800b49e:	681b      	ldr	r3, [r3, #0]
 800b4a0:	681b      	ldr	r3, [r3, #0]
 800b4a2:	681b      	ldr	r3, [r3, #0]
 800b4a4:	4610      	mov	r0, r2
 800b4a6:	4798      	blx	r3
    if (*currentScreen)
 800b4a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4aa:	681b      	ldr	r3, [r3, #0]
 800b4ac:	2b00      	cmp	r3, #0
 800b4ae:	d008      	beq.n	800b4c2 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
        (*currentScreen)->tearDownScreen();
 800b4b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4b2:	681a      	ldr	r2, [r3, #0]
 800b4b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4b6:	681b      	ldr	r3, [r3, #0]
 800b4b8:	681b      	ldr	r3, [r3, #0]
 800b4ba:	3314      	adds	r3, #20
 800b4bc:	681b      	ldr	r3, [r3, #0]
 800b4be:	4610      	mov	r0, r2
 800b4c0:	4798      	blx	r3
    if (*currentPresenter)
 800b4c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4c4:	681b      	ldr	r3, [r3, #0]
 800b4c6:	2b00      	cmp	r3, #0
 800b4c8:	d008      	beq.n	800b4dc <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf8>
        (*currentPresenter)->deactivate();
 800b4ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4cc:	681a      	ldr	r2, [r3, #0]
 800b4ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	681b      	ldr	r3, [r3, #0]
 800b4d4:	3304      	adds	r3, #4
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	4610      	mov	r0, r2
 800b4da:	4798      	blx	r3
    if (*currentScreen)
 800b4dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4de:	681b      	ldr	r3, [r3, #0]
 800b4e0:	2b00      	cmp	r3, #0
 800b4e2:	d007      	beq.n	800b4f4 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
        (*currentScreen)->~Screen();
 800b4e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4e6:	681a      	ldr	r2, [r3, #0]
 800b4e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4ea:	681b      	ldr	r3, [r3, #0]
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	681b      	ldr	r3, [r3, #0]
 800b4f0:	4610      	mov	r0, r2
 800b4f2:	4798      	blx	r3
    if (*currentPresenter)
 800b4f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4f6:	681b      	ldr	r3, [r3, #0]
 800b4f8:	2b00      	cmp	r3, #0
 800b4fa:	d008      	beq.n	800b50e <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
        (*currentPresenter)->~Presenter();
 800b4fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4fe:	681a      	ldr	r2, [r3, #0]
 800b500:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b502:	681b      	ldr	r3, [r3, #0]
 800b504:	681b      	ldr	r3, [r3, #0]
 800b506:	3308      	adds	r3, #8
 800b508:	681b      	ldr	r3, [r3, #0]
 800b50a:	4610      	mov	r0, r2
 800b50c:	4798      	blx	r3
}
 800b50e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b510:	687b      	ldr	r3, [r7, #4]
 800b512:	68db      	ldr	r3, [r3, #12]
 800b514:	2100      	movs	r1, #0
 800b516:	4618      	mov	r0, r3
 800b518:	f000 f994 	bl	800b844 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800b51c:	4603      	mov	r3, r0
 800b51e:	4619      	mov	r1, r3
 800b520:	200c      	movs	r0, #12
 800b522:	f7ff fbb5 	bl	800ac90 <_ZnwjPv>
 800b526:	4604      	mov	r4, r0
 800b528:	4620      	mov	r0, r4
 800b52a:	f7ff ff49 	bl	800b3c0 <_ZN8touchgfx12NoTransitionC1Ev>
 800b52e:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b530:	687b      	ldr	r3, [r7, #4]
 800b532:	689b      	ldr	r3, [r3, #8]
 800b534:	2100      	movs	r1, #0
 800b536:	4618      	mov	r0, r3
 800b538:	f000 f997 	bl	800b86a <_ZN8touchgfx17AbstractPartition2atI11screen1ViewEERT_t>
 800b53c:	4603      	mov	r3, r0
 800b53e:	4619      	mov	r1, r3
 800b540:	20f8      	movs	r0, #248	; 0xf8
 800b542:	f7ff fba5 	bl	800ac90 <_ZnwjPv>
 800b546:	4604      	mov	r4, r0
 800b548:	4620      	mov	r0, r4
 800b54a:	f001 febb 	bl	800d2c4 <_ZN11screen1ViewC1Ev>
 800b54e:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b550:	687b      	ldr	r3, [r7, #4]
 800b552:	685b      	ldr	r3, [r3, #4]
 800b554:	2100      	movs	r1, #0
 800b556:	4618      	mov	r0, r3
 800b558:	f000 f99a 	bl	800b890 <_ZN8touchgfx17AbstractPartition2atI16screen1PresenterEERT_t>
 800b55c:	4603      	mov	r3, r0
 800b55e:	4619      	mov	r1, r3
 800b560:	2010      	movs	r0, #16
 800b562:	f7ff fb95 	bl	800ac90 <_ZnwjPv>
 800b566:	4604      	mov	r4, r0
 800b568:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b56a:	4620      	mov	r0, r4
 800b56c:	f001 fe54 	bl	800d218 <_ZN16screen1PresenterC1ER11screen1View>
 800b570:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b572:	683b      	ldr	r3, [r7, #0]
 800b574:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b576:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b578:	68bb      	ldr	r3, [r7, #8]
 800b57a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b57c:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b57e:	68fb      	ldr	r3, [r7, #12]
 800b580:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b582:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b584:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b586:	2b00      	cmp	r3, #0
 800b588:	d002      	beq.n	800b590 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 800b58a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b58c:	3304      	adds	r3, #4
 800b58e:	e000      	b.n	800b592 <_ZN8touchgfx14makeTransitionI11screen1View16screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800b590:	2300      	movs	r3, #0
 800b592:	4619      	mov	r1, r3
 800b594:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b596:	f7ff fd57 	bl	800b048 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b59a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b59c:	3304      	adds	r3, #4
 800b59e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b5a0:	4618      	mov	r0, r3
 800b5a2:	f7ff fdc4 	bl	800b12e <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b5a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b5a8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b5aa:	4618      	mov	r0, r3
 800b5ac:	f000 f983 	bl	800b8b6 <_ZN8touchgfx4ViewI16screen1PresenterE4bindERS1_>
 800b5b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b5b2:	61fb      	str	r3, [r7, #28]
 800b5b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5b6:	61bb      	str	r3, [r7, #24]
 800b5b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b5ba:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b5bc:	69fb      	ldr	r3, [r7, #28]
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	330c      	adds	r3, #12
 800b5c2:	681b      	ldr	r3, [r3, #0]
 800b5c4:	69f8      	ldr	r0, [r7, #28]
 800b5c6:	4798      	blx	r3
    newPresenter->activate();
 800b5c8:	69bb      	ldr	r3, [r7, #24]
 800b5ca:	681b      	ldr	r3, [r3, #0]
 800b5cc:	681b      	ldr	r3, [r3, #0]
 800b5ce:	69b8      	ldr	r0, [r7, #24]
 800b5d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b5d2:	6979      	ldr	r1, [r7, #20]
 800b5d4:	69f8      	ldr	r0, [r7, #28]
 800b5d6:	f009 fd5d 	bl	8015094 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b5da:	697b      	ldr	r3, [r7, #20]
 800b5dc:	681b      	ldr	r3, [r3, #0]
 800b5de:	3310      	adds	r3, #16
 800b5e0:	681b      	ldr	r3, [r3, #0]
 800b5e2:	6978      	ldr	r0, [r7, #20]
 800b5e4:	4798      	blx	r3
    newTransition->invalidate();
 800b5e6:	697b      	ldr	r3, [r7, #20]
 800b5e8:	681b      	ldr	r3, [r3, #0]
 800b5ea:	3314      	adds	r3, #20
 800b5ec:	681b      	ldr	r3, [r3, #0]
 800b5ee:	6978      	ldr	r0, [r7, #20]
 800b5f0:	4798      	blx	r3
}
 800b5f2:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b5f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b5f6:	4618      	mov	r0, r3
 800b5f8:	373c      	adds	r7, #60	; 0x3c
 800b5fa:	46bd      	mov	sp, r7
 800b5fc:	bd90      	pop	{r4, r7, pc}
 800b5fe:	bf00      	nop
 800b600:	080249f0 	.word	0x080249f0
 800b604:	08024a80 	.word	0x08024a80
 800b608:	08024b84 	.word	0x08024b84
 800b60c:	08024bc8 	.word	0x08024bc8
 800b610:	08024c6c 	.word	0x08024c6c

0800b614 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800b614:	b590      	push	{r4, r7, lr}
 800b616:	b08f      	sub	sp, #60	; 0x3c
 800b618:	af00      	add	r7, sp, #0
 800b61a:	60f8      	str	r0, [r7, #12]
 800b61c:	60b9      	str	r1, [r7, #8]
 800b61e:	607a      	str	r2, [r7, #4]
 800b620:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	689a      	ldr	r2, [r3, #8]
 800b626:	687b      	ldr	r3, [r7, #4]
 800b628:	689b      	ldr	r3, [r3, #8]
 800b62a:	681b      	ldr	r3, [r3, #0]
 800b62c:	3320      	adds	r3, #32
 800b62e:	681b      	ldr	r3, [r3, #0]
 800b630:	4610      	mov	r0, r2
 800b632:	4798      	blx	r3
 800b634:	4603      	mov	r3, r0
 800b636:	2bf7      	cmp	r3, #247	; 0xf7
 800b638:	d805      	bhi.n	800b646 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800b63a:	4b7d      	ldr	r3, [pc, #500]	; (800b830 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x21c>)
 800b63c:	4a7d      	ldr	r2, [pc, #500]	; (800b834 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b63e:	21a3      	movs	r1, #163	; 0xa3
 800b640:	487d      	ldr	r0, [pc, #500]	; (800b838 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b642:	f018 f9b5 	bl	80239b0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	685a      	ldr	r2, [r3, #4]
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	685b      	ldr	r3, [r3, #4]
 800b64e:	681b      	ldr	r3, [r3, #0]
 800b650:	3320      	adds	r3, #32
 800b652:	681b      	ldr	r3, [r3, #0]
 800b654:	4610      	mov	r0, r2
 800b656:	4798      	blx	r3
 800b658:	4603      	mov	r3, r0
 800b65a:	2b0f      	cmp	r3, #15
 800b65c:	d805      	bhi.n	800b66a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x56>
 800b65e:	4b77      	ldr	r3, [pc, #476]	; (800b83c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800b660:	4a74      	ldr	r2, [pc, #464]	; (800b834 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b662:	21a4      	movs	r1, #164	; 0xa4
 800b664:	4874      	ldr	r0, [pc, #464]	; (800b838 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b666:	f018 f9a3 	bl	80239b0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	68da      	ldr	r2, [r3, #12]
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	68db      	ldr	r3, [r3, #12]
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	3320      	adds	r3, #32
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	4610      	mov	r0, r2
 800b67a:	4798      	blx	r3
 800b67c:	4603      	mov	r3, r0
 800b67e:	2b0b      	cmp	r3, #11
 800b680:	d805      	bhi.n	800b68e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 800b682:	4b6f      	ldr	r3, [pc, #444]	; (800b840 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800b684:	4a6b      	ldr	r2, [pc, #428]	; (800b834 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800b686:	21a5      	movs	r1, #165	; 0xa5
 800b688:	486b      	ldr	r0, [pc, #428]	; (800b838 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800b68a:	f018 f991 	bl	80239b0 <__assert_func>
 800b68e:	68fb      	ldr	r3, [r7, #12]
 800b690:	62bb      	str	r3, [r7, #40]	; 0x28
 800b692:	68bb      	ldr	r3, [r7, #8]
 800b694:	627b      	str	r3, [r7, #36]	; 0x24
 800b696:	683b      	ldr	r3, [r7, #0]
 800b698:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800b69a:	f008 f837 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800b69e:	4603      	mov	r3, r0
 800b6a0:	4618      	mov	r0, r3
 800b6a2:	f7ff fb8b 	bl	800adbc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800b6a6:	6a3b      	ldr	r3, [r7, #32]
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	2b00      	cmp	r3, #0
 800b6ac:	d008      	beq.n	800b6c0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xac>
        (*currentTrans)->tearDown();
 800b6ae:	6a3b      	ldr	r3, [r7, #32]
 800b6b0:	681a      	ldr	r2, [r3, #0]
 800b6b2:	6a3b      	ldr	r3, [r7, #32]
 800b6b4:	681b      	ldr	r3, [r3, #0]
 800b6b6:	681b      	ldr	r3, [r3, #0]
 800b6b8:	330c      	adds	r3, #12
 800b6ba:	681b      	ldr	r3, [r3, #0]
 800b6bc:	4610      	mov	r0, r2
 800b6be:	4798      	blx	r3
    if (*currentTrans)
 800b6c0:	6a3b      	ldr	r3, [r7, #32]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	2b00      	cmp	r3, #0
 800b6c6:	d007      	beq.n	800b6d8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc4>
        (*currentTrans)->~Transition();
 800b6c8:	6a3b      	ldr	r3, [r7, #32]
 800b6ca:	681a      	ldr	r2, [r3, #0]
 800b6cc:	6a3b      	ldr	r3, [r7, #32]
 800b6ce:	681b      	ldr	r3, [r3, #0]
 800b6d0:	681b      	ldr	r3, [r3, #0]
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	4610      	mov	r0, r2
 800b6d6:	4798      	blx	r3
    if (*currentScreen)
 800b6d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b6da:	681b      	ldr	r3, [r3, #0]
 800b6dc:	2b00      	cmp	r3, #0
 800b6de:	d008      	beq.n	800b6f2 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
        (*currentScreen)->tearDownScreen();
 800b6e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b6e2:	681a      	ldr	r2, [r3, #0]
 800b6e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b6e6:	681b      	ldr	r3, [r3, #0]
 800b6e8:	681b      	ldr	r3, [r3, #0]
 800b6ea:	3314      	adds	r3, #20
 800b6ec:	681b      	ldr	r3, [r3, #0]
 800b6ee:	4610      	mov	r0, r2
 800b6f0:	4798      	blx	r3
    if (*currentPresenter)
 800b6f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b6f4:	681b      	ldr	r3, [r3, #0]
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	d008      	beq.n	800b70c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf8>
        (*currentPresenter)->deactivate();
 800b6fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b6fc:	681a      	ldr	r2, [r3, #0]
 800b6fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b700:	681b      	ldr	r3, [r3, #0]
 800b702:	681b      	ldr	r3, [r3, #0]
 800b704:	3304      	adds	r3, #4
 800b706:	681b      	ldr	r3, [r3, #0]
 800b708:	4610      	mov	r0, r2
 800b70a:	4798      	blx	r3
    if (*currentScreen)
 800b70c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b70e:	681b      	ldr	r3, [r3, #0]
 800b710:	2b00      	cmp	r3, #0
 800b712:	d007      	beq.n	800b724 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
        (*currentScreen)->~Screen();
 800b714:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b716:	681a      	ldr	r2, [r3, #0]
 800b718:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	681b      	ldr	r3, [r3, #0]
 800b71e:	681b      	ldr	r3, [r3, #0]
 800b720:	4610      	mov	r0, r2
 800b722:	4798      	blx	r3
    if (*currentPresenter)
 800b724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b726:	681b      	ldr	r3, [r3, #0]
 800b728:	2b00      	cmp	r3, #0
 800b72a:	d008      	beq.n	800b73e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
        (*currentPresenter)->~Presenter();
 800b72c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b72e:	681a      	ldr	r2, [r3, #0]
 800b730:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b732:	681b      	ldr	r3, [r3, #0]
 800b734:	681b      	ldr	r3, [r3, #0]
 800b736:	3308      	adds	r3, #8
 800b738:	681b      	ldr	r3, [r3, #0]
 800b73a:	4610      	mov	r0, r2
 800b73c:	4798      	blx	r3
}
 800b73e:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b740:	687b      	ldr	r3, [r7, #4]
 800b742:	68db      	ldr	r3, [r3, #12]
 800b744:	2100      	movs	r1, #0
 800b746:	4618      	mov	r0, r3
 800b748:	f000 f87c 	bl	800b844 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800b74c:	4603      	mov	r3, r0
 800b74e:	4619      	mov	r1, r3
 800b750:	200c      	movs	r0, #12
 800b752:	f7ff fa9d 	bl	800ac90 <_ZnwjPv>
 800b756:	4604      	mov	r4, r0
 800b758:	4620      	mov	r0, r4
 800b75a:	f7ff fe31 	bl	800b3c0 <_ZN8touchgfx12NoTransitionC1Ev>
 800b75e:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	689b      	ldr	r3, [r3, #8]
 800b764:	2100      	movs	r1, #0
 800b766:	4618      	mov	r0, r3
 800b768:	f000 f8b3 	bl	800b8d2 <_ZN8touchgfx17AbstractPartition2atI11Screen2ViewEERT_t>
 800b76c:	4603      	mov	r3, r0
 800b76e:	4619      	mov	r1, r3
 800b770:	20f8      	movs	r0, #248	; 0xf8
 800b772:	f7ff fa8d 	bl	800ac90 <_ZnwjPv>
 800b776:	4604      	mov	r4, r0
 800b778:	4620      	mov	r0, r4
 800b77a:	f001 fe57 	bl	800d42c <_ZN11Screen2ViewC1Ev>
 800b77e:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b780:	687b      	ldr	r3, [r7, #4]
 800b782:	685b      	ldr	r3, [r3, #4]
 800b784:	2100      	movs	r1, #0
 800b786:	4618      	mov	r0, r3
 800b788:	f000 f8b6 	bl	800b8f8 <_ZN8touchgfx17AbstractPartition2atI16Screen2PresenterEERT_t>
 800b78c:	4603      	mov	r3, r0
 800b78e:	4619      	mov	r1, r3
 800b790:	2010      	movs	r0, #16
 800b792:	f7ff fa7d 	bl	800ac90 <_ZnwjPv>
 800b796:	4604      	mov	r4, r0
 800b798:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b79a:	4620      	mov	r0, r4
 800b79c:	f001 fdf0 	bl	800d380 <_ZN16Screen2PresenterC1ER11Screen2View>
 800b7a0:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b7a2:	683b      	ldr	r3, [r7, #0]
 800b7a4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b7a6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b7a8:	68bb      	ldr	r3, [r7, #8]
 800b7aa:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b7ac:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b7ae:	68fb      	ldr	r3, [r7, #12]
 800b7b0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b7b2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b7b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7b6:	2b00      	cmp	r3, #0
 800b7b8:	d002      	beq.n	800b7c0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 800b7ba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7bc:	3304      	adds	r3, #4
 800b7be:	e000      	b.n	800b7c2 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800b7c0:	2300      	movs	r3, #0
 800b7c2:	4619      	mov	r1, r3
 800b7c4:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b7c6:	f7ff fc3f 	bl	800b048 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b7ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7cc:	3304      	adds	r3, #4
 800b7ce:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b7d0:	4618      	mov	r0, r3
 800b7d2:	f7ff fcac 	bl	800b12e <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b7d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b7d8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b7da:	4618      	mov	r0, r3
 800b7dc:	f000 f89f 	bl	800b91e <_ZN8touchgfx4ViewI16Screen2PresenterE4bindERS1_>
 800b7e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b7e2:	61fb      	str	r3, [r7, #28]
 800b7e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7e6:	61bb      	str	r3, [r7, #24]
 800b7e8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b7ea:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b7ec:	69fb      	ldr	r3, [r7, #28]
 800b7ee:	681b      	ldr	r3, [r3, #0]
 800b7f0:	330c      	adds	r3, #12
 800b7f2:	681b      	ldr	r3, [r3, #0]
 800b7f4:	69f8      	ldr	r0, [r7, #28]
 800b7f6:	4798      	blx	r3
    newPresenter->activate();
 800b7f8:	69bb      	ldr	r3, [r7, #24]
 800b7fa:	681b      	ldr	r3, [r3, #0]
 800b7fc:	681b      	ldr	r3, [r3, #0]
 800b7fe:	69b8      	ldr	r0, [r7, #24]
 800b800:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b802:	6979      	ldr	r1, [r7, #20]
 800b804:	69f8      	ldr	r0, [r7, #28]
 800b806:	f009 fc45 	bl	8015094 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b80a:	697b      	ldr	r3, [r7, #20]
 800b80c:	681b      	ldr	r3, [r3, #0]
 800b80e:	3310      	adds	r3, #16
 800b810:	681b      	ldr	r3, [r3, #0]
 800b812:	6978      	ldr	r0, [r7, #20]
 800b814:	4798      	blx	r3
    newTransition->invalidate();
 800b816:	697b      	ldr	r3, [r7, #20]
 800b818:	681b      	ldr	r3, [r3, #0]
 800b81a:	3314      	adds	r3, #20
 800b81c:	681b      	ldr	r3, [r3, #0]
 800b81e:	6978      	ldr	r0, [r7, #20]
 800b820:	4798      	blx	r3
}
 800b822:	bf00      	nop
    return newPresenter;
 800b824:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b826:	4618      	mov	r0, r3
 800b828:	373c      	adds	r7, #60	; 0x3c
 800b82a:	46bd      	mov	sp, r7
 800b82c:	bd90      	pop	{r4, r7, pc}
 800b82e:	bf00      	nop
 800b830:	080249f0 	.word	0x080249f0
 800b834:	08024d10 	.word	0x08024d10
 800b838:	08024b84 	.word	0x08024b84
 800b83c:	08024bc8 	.word	0x08024bc8
 800b840:	08024c6c 	.word	0x08024c6c

0800b844 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800b844:	b580      	push	{r7, lr}
 800b846:	b082      	sub	sp, #8
 800b848:	af00      	add	r7, sp, #0
 800b84a:	6078      	str	r0, [r7, #4]
 800b84c:	460b      	mov	r3, r1
 800b84e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800b850:	687b      	ldr	r3, [r7, #4]
 800b852:	681b      	ldr	r3, [r3, #0]
 800b854:	3324      	adds	r3, #36	; 0x24
 800b856:	681b      	ldr	r3, [r3, #0]
 800b858:	887a      	ldrh	r2, [r7, #2]
 800b85a:	4611      	mov	r1, r2
 800b85c:	6878      	ldr	r0, [r7, #4]
 800b85e:	4798      	blx	r3
 800b860:	4603      	mov	r3, r0
    }
 800b862:	4618      	mov	r0, r3
 800b864:	3708      	adds	r7, #8
 800b866:	46bd      	mov	sp, r7
 800b868:	bd80      	pop	{r7, pc}

0800b86a <_ZN8touchgfx17AbstractPartition2atI11screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800b86a:	b580      	push	{r7, lr}
 800b86c:	b082      	sub	sp, #8
 800b86e:	af00      	add	r7, sp, #0
 800b870:	6078      	str	r0, [r7, #4]
 800b872:	460b      	mov	r3, r1
 800b874:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	681b      	ldr	r3, [r3, #0]
 800b87a:	3324      	adds	r3, #36	; 0x24
 800b87c:	681b      	ldr	r3, [r3, #0]
 800b87e:	887a      	ldrh	r2, [r7, #2]
 800b880:	4611      	mov	r1, r2
 800b882:	6878      	ldr	r0, [r7, #4]
 800b884:	4798      	blx	r3
 800b886:	4603      	mov	r3, r0
    }
 800b888:	4618      	mov	r0, r3
 800b88a:	3708      	adds	r7, #8
 800b88c:	46bd      	mov	sp, r7
 800b88e:	bd80      	pop	{r7, pc}

0800b890 <_ZN8touchgfx17AbstractPartition2atI16screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800b890:	b580      	push	{r7, lr}
 800b892:	b082      	sub	sp, #8
 800b894:	af00      	add	r7, sp, #0
 800b896:	6078      	str	r0, [r7, #4]
 800b898:	460b      	mov	r3, r1
 800b89a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b89c:	687b      	ldr	r3, [r7, #4]
 800b89e:	681b      	ldr	r3, [r3, #0]
 800b8a0:	3324      	adds	r3, #36	; 0x24
 800b8a2:	681b      	ldr	r3, [r3, #0]
 800b8a4:	887a      	ldrh	r2, [r7, #2]
 800b8a6:	4611      	mov	r1, r2
 800b8a8:	6878      	ldr	r0, [r7, #4]
 800b8aa:	4798      	blx	r3
 800b8ac:	4603      	mov	r3, r0
    }
 800b8ae:	4618      	mov	r0, r3
 800b8b0:	3708      	adds	r7, #8
 800b8b2:	46bd      	mov	sp, r7
 800b8b4:	bd80      	pop	{r7, pc}

0800b8b6 <_ZN8touchgfx4ViewI16screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800b8b6:	b480      	push	{r7}
 800b8b8:	b083      	sub	sp, #12
 800b8ba:	af00      	add	r7, sp, #0
 800b8bc:	6078      	str	r0, [r7, #4]
 800b8be:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800b8c0:	687b      	ldr	r3, [r7, #4]
 800b8c2:	683a      	ldr	r2, [r7, #0]
 800b8c4:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800b8c6:	bf00      	nop
 800b8c8:	370c      	adds	r7, #12
 800b8ca:	46bd      	mov	sp, r7
 800b8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d0:	4770      	bx	lr

0800b8d2 <_ZN8touchgfx17AbstractPartition2atI11Screen2ViewEERT_t>:
    T& at(const uint16_t index)
 800b8d2:	b580      	push	{r7, lr}
 800b8d4:	b082      	sub	sp, #8
 800b8d6:	af00      	add	r7, sp, #0
 800b8d8:	6078      	str	r0, [r7, #4]
 800b8da:	460b      	mov	r3, r1
 800b8dc:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b8de:	687b      	ldr	r3, [r7, #4]
 800b8e0:	681b      	ldr	r3, [r3, #0]
 800b8e2:	3324      	adds	r3, #36	; 0x24
 800b8e4:	681b      	ldr	r3, [r3, #0]
 800b8e6:	887a      	ldrh	r2, [r7, #2]
 800b8e8:	4611      	mov	r1, r2
 800b8ea:	6878      	ldr	r0, [r7, #4]
 800b8ec:	4798      	blx	r3
 800b8ee:	4603      	mov	r3, r0
    }
 800b8f0:	4618      	mov	r0, r3
 800b8f2:	3708      	adds	r7, #8
 800b8f4:	46bd      	mov	sp, r7
 800b8f6:	bd80      	pop	{r7, pc}

0800b8f8 <_ZN8touchgfx17AbstractPartition2atI16Screen2PresenterEERT_t>:
    T& at(const uint16_t index)
 800b8f8:	b580      	push	{r7, lr}
 800b8fa:	b082      	sub	sp, #8
 800b8fc:	af00      	add	r7, sp, #0
 800b8fe:	6078      	str	r0, [r7, #4]
 800b900:	460b      	mov	r3, r1
 800b902:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b904:	687b      	ldr	r3, [r7, #4]
 800b906:	681b      	ldr	r3, [r3, #0]
 800b908:	3324      	adds	r3, #36	; 0x24
 800b90a:	681b      	ldr	r3, [r3, #0]
 800b90c:	887a      	ldrh	r2, [r7, #2]
 800b90e:	4611      	mov	r1, r2
 800b910:	6878      	ldr	r0, [r7, #4]
 800b912:	4798      	blx	r3
 800b914:	4603      	mov	r3, r0
    }
 800b916:	4618      	mov	r0, r3
 800b918:	3708      	adds	r7, #8
 800b91a:	46bd      	mov	sp, r7
 800b91c:	bd80      	pop	{r7, pc}

0800b91e <_ZN8touchgfx4ViewI16Screen2PresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800b91e:	b480      	push	{r7}
 800b920:	b083      	sub	sp, #12
 800b922:	af00      	add	r7, sp, #0
 800b924:	6078      	str	r0, [r7, #4]
 800b926:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	683a      	ldr	r2, [r7, #0]
 800b92c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800b92e:	bf00      	nop
 800b930:	370c      	adds	r7, #12
 800b932:	46bd      	mov	sp, r7
 800b934:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b938:	4770      	bx	lr
	...

0800b93c <_ZN8touchgfx12NoTransitionD1Ev>:
 800b93c:	b580      	push	{r7, lr}
 800b93e:	b082      	sub	sp, #8
 800b940:	af00      	add	r7, sp, #0
 800b942:	6078      	str	r0, [r7, #4]
 800b944:	4a05      	ldr	r2, [pc, #20]	; (800b95c <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	601a      	str	r2, [r3, #0]
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	4618      	mov	r0, r3
 800b94e:	f7ff faa1 	bl	800ae94 <_ZN8touchgfx10TransitionD1Ev>
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	4618      	mov	r0, r3
 800b956:	3708      	adds	r7, #8
 800b958:	46bd      	mov	sp, r7
 800b95a:	bd80      	pop	{r7, pc}
 800b95c:	08025480 	.word	0x08025480

0800b960 <_ZN8touchgfx12NoTransitionD0Ev>:
 800b960:	b580      	push	{r7, lr}
 800b962:	b082      	sub	sp, #8
 800b964:	af00      	add	r7, sp, #0
 800b966:	6078      	str	r0, [r7, #4]
 800b968:	6878      	ldr	r0, [r7, #4]
 800b96a:	f7ff ffe7 	bl	800b93c <_ZN8touchgfx12NoTransitionD1Ev>
 800b96e:	210c      	movs	r1, #12
 800b970:	6878      	ldr	r0, [r7, #4]
 800b972:	f017 ffee 	bl	8023952 <_ZdlPvj>
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	4618      	mov	r0, r3
 800b97a:	3708      	adds	r7, #8
 800b97c:	46bd      	mov	sp, r7
 800b97e:	bd80      	pop	{r7, pc}

0800b980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b980:	b580      	push	{r7, lr}
 800b982:	b082      	sub	sp, #8
 800b984:	af00      	add	r7, sp, #0
 800b986:	6078      	str	r0, [r7, #4]
 800b988:	4a05      	ldr	r2, [pc, #20]	; (800b9a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	601a      	str	r2, [r3, #0]
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	4618      	mov	r0, r3
 800b992:	f7ff fa21 	bl	800add8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800b996:	687b      	ldr	r3, [r7, #4]
 800b998:	4618      	mov	r0, r3
 800b99a:	3708      	adds	r7, #8
 800b99c:	46bd      	mov	sp, r7
 800b99e:	bd80      	pop	{r7, pc}
 800b9a0:	080254f8 	.word	0x080254f8

0800b9a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800b9a4:	b580      	push	{r7, lr}
 800b9a6:	b082      	sub	sp, #8
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	6078      	str	r0, [r7, #4]
 800b9ac:	6878      	ldr	r0, [r7, #4]
 800b9ae:	f7ff ffe7 	bl	800b980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b9b2:	2110      	movs	r1, #16
 800b9b4:	6878      	ldr	r0, [r7, #4]
 800b9b6:	f017 ffcc 	bl	8023952 <_ZdlPvj>
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	4618      	mov	r0, r3
 800b9be:	3708      	adds	r7, #8
 800b9c0:	46bd      	mov	sp, r7
 800b9c2:	bd80      	pop	{r7, pc}

0800b9c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800b9c4:	b580      	push	{r7, lr}
 800b9c6:	b082      	sub	sp, #8
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800b9cc:	687b      	ldr	r3, [r7, #4]
 800b9ce:	685b      	ldr	r3, [r3, #4]
 800b9d0:	687a      	ldr	r2, [r7, #4]
 800b9d2:	68d2      	ldr	r2, [r2, #12]
 800b9d4:	1052      	asrs	r2, r2, #1
 800b9d6:	1899      	adds	r1, r3, r2
 800b9d8:	687b      	ldr	r3, [r7, #4]
 800b9da:	68db      	ldr	r3, [r3, #12]
 800b9dc:	f003 0301 	and.w	r3, r3, #1
 800b9e0:	2b00      	cmp	r3, #0
 800b9e2:	d102      	bne.n	800b9ea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800b9e4:	687b      	ldr	r3, [r7, #4]
 800b9e6:	689b      	ldr	r3, [r3, #8]
 800b9e8:	e00a      	b.n	800ba00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800b9ea:	687b      	ldr	r3, [r7, #4]
 800b9ec:	685b      	ldr	r3, [r3, #4]
 800b9ee:	687a      	ldr	r2, [r7, #4]
 800b9f0:	68d2      	ldr	r2, [r2, #12]
 800b9f2:	1052      	asrs	r2, r2, #1
 800b9f4:	4413      	add	r3, r2
 800b9f6:	681b      	ldr	r3, [r3, #0]
 800b9f8:	687a      	ldr	r2, [r7, #4]
 800b9fa:	6892      	ldr	r2, [r2, #8]
 800b9fc:	4413      	add	r3, r2
 800b9fe:	681b      	ldr	r3, [r3, #0]
 800ba00:	4608      	mov	r0, r1
 800ba02:	4798      	blx	r3
    }
 800ba04:	bf00      	nop
 800ba06:	3708      	adds	r7, #8
 800ba08:	46bd      	mov	sp, r7
 800ba0a:	bd80      	pop	{r7, pc}

0800ba0c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800ba0c:	b480      	push	{r7}
 800ba0e:	b083      	sub	sp, #12
 800ba10:	af00      	add	r7, sp, #0
 800ba12:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800ba14:	687b      	ldr	r3, [r7, #4]
 800ba16:	685b      	ldr	r3, [r3, #4]
 800ba18:	2b00      	cmp	r3, #0
 800ba1a:	d010      	beq.n	800ba3e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ba1c:	687b      	ldr	r3, [r7, #4]
 800ba1e:	689b      	ldr	r3, [r3, #8]
 800ba20:	2b00      	cmp	r3, #0
 800ba22:	d107      	bne.n	800ba34 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ba24:	687b      	ldr	r3, [r7, #4]
 800ba26:	68db      	ldr	r3, [r3, #12]
 800ba28:	f003 0301 	and.w	r3, r3, #1
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	d101      	bne.n	800ba34 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ba30:	2301      	movs	r3, #1
 800ba32:	e000      	b.n	800ba36 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800ba34:	2300      	movs	r3, #0
 800ba36:	2b01      	cmp	r3, #1
 800ba38:	d001      	beq.n	800ba3e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ba3a:	2301      	movs	r3, #1
 800ba3c:	e000      	b.n	800ba40 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800ba3e:	2300      	movs	r3, #0
    }
 800ba40:	4618      	mov	r0, r3
 800ba42:	370c      	adds	r7, #12
 800ba44:	46bd      	mov	sp, r7
 800ba46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba4a:	4770      	bx	lr

0800ba4c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800ba4c:	b480      	push	{r7}
 800ba4e:	b083      	sub	sp, #12
 800ba50:	af00      	add	r7, sp, #0
 800ba52:	6078      	str	r0, [r7, #4]
 800ba54:	6039      	str	r1, [r7, #0]
        : color(col)
 800ba56:	687b      	ldr	r3, [r7, #4]
 800ba58:	683a      	ldr	r2, [r7, #0]
 800ba5a:	601a      	str	r2, [r3, #0]
    {
    }
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	4618      	mov	r0, r3
 800ba60:	370c      	adds	r7, #12
 800ba62:	46bd      	mov	sp, r7
 800ba64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba68:	4770      	bx	lr

0800ba6a <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800ba6a:	b480      	push	{r7}
 800ba6c:	b083      	sub	sp, #12
 800ba6e:	af00      	add	r7, sp, #0
 800ba70:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	2200      	movs	r2, #0
 800ba76:	801a      	strh	r2, [r3, #0]
 800ba78:	687b      	ldr	r3, [r7, #4]
 800ba7a:	2200      	movs	r2, #0
 800ba7c:	805a      	strh	r2, [r3, #2]
 800ba7e:	687b      	ldr	r3, [r7, #4]
 800ba80:	2200      	movs	r2, #0
 800ba82:	809a      	strh	r2, [r3, #4]
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	2200      	movs	r2, #0
 800ba88:	80da      	strh	r2, [r3, #6]
    {
    }
 800ba8a:	687b      	ldr	r3, [r7, #4]
 800ba8c:	4618      	mov	r0, r3
 800ba8e:	370c      	adds	r7, #12
 800ba90:	46bd      	mov	sp, r7
 800ba92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba96:	4770      	bx	lr

0800ba98 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800ba98:	b480      	push	{r7}
 800ba9a:	b085      	sub	sp, #20
 800ba9c:	af00      	add	r7, sp, #0
 800ba9e:	60f8      	str	r0, [r7, #12]
 800baa0:	4608      	mov	r0, r1
 800baa2:	4611      	mov	r1, r2
 800baa4:	461a      	mov	r2, r3
 800baa6:	4603      	mov	r3, r0
 800baa8:	817b      	strh	r3, [r7, #10]
 800baaa:	460b      	mov	r3, r1
 800baac:	813b      	strh	r3, [r7, #8]
 800baae:	4613      	mov	r3, r2
 800bab0:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800bab2:	68fb      	ldr	r3, [r7, #12]
 800bab4:	897a      	ldrh	r2, [r7, #10]
 800bab6:	801a      	strh	r2, [r3, #0]
 800bab8:	68fb      	ldr	r3, [r7, #12]
 800baba:	893a      	ldrh	r2, [r7, #8]
 800babc:	805a      	strh	r2, [r3, #2]
 800babe:	68fb      	ldr	r3, [r7, #12]
 800bac0:	88fa      	ldrh	r2, [r7, #6]
 800bac2:	809a      	strh	r2, [r3, #4]
 800bac4:	68fb      	ldr	r3, [r7, #12]
 800bac6:	8b3a      	ldrh	r2, [r7, #24]
 800bac8:	80da      	strh	r2, [r3, #6]
    {
    }
 800baca:	68fb      	ldr	r3, [r7, #12]
 800bacc:	4618      	mov	r0, r3
 800bace:	3714      	adds	r7, #20
 800bad0:	46bd      	mov	sp, r7
 800bad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bad6:	4770      	bx	lr

0800bad8 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800bad8:	b480      	push	{r7}
 800bada:	b083      	sub	sp, #12
 800badc:	af00      	add	r7, sp, #0
 800bade:	6078      	str	r0, [r7, #4]
 800bae0:	460b      	mov	r3, r1
 800bae2:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800bae4:	687b      	ldr	r3, [r7, #4]
 800bae6:	887a      	ldrh	r2, [r7, #2]
 800bae8:	801a      	strh	r2, [r3, #0]
    {
    }
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	4618      	mov	r0, r3
 800baee:	370c      	adds	r7, #12
 800baf0:	46bd      	mov	sp, r7
 800baf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baf6:	4770      	bx	lr

0800baf8 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800baf8:	b580      	push	{r7, lr}
 800bafa:	b082      	sub	sp, #8
 800bafc:	af00      	add	r7, sp, #0
 800bafe:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800bb00:	4a14      	ldr	r2, [pc, #80]	; (800bb54 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	601a      	str	r2, [r3, #0]
        : rect(),
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	3304      	adds	r3, #4
 800bb0a:	4618      	mov	r0, r3
 800bb0c:	f7ff ffad 	bl	800ba6a <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	330c      	adds	r3, #12
 800bb14:	4618      	mov	r0, r3
 800bb16:	f7ff ffa8 	bl	800ba6a <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	2200      	movs	r2, #0
 800bb1e:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800bb20:	687b      	ldr	r3, [r7, #4]
 800bb22:	2200      	movs	r2, #0
 800bb24:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	2200      	movs	r2, #0
 800bb2a:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	2200      	movs	r2, #0
 800bb30:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	2200      	movs	r2, #0
 800bb36:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800bb38:	687b      	ldr	r3, [r7, #4]
 800bb3a:	2200      	movs	r2, #0
 800bb3c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800bb40:	687b      	ldr	r3, [r7, #4]
 800bb42:	2201      	movs	r2, #1
 800bb44:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	4618      	mov	r0, r3
 800bb4c:	3708      	adds	r7, #8
 800bb4e:	46bd      	mov	sp, r7
 800bb50:	bd80      	pop	{r7, pc}
 800bb52:	bf00      	nop
 800bb54:	080260fc 	.word	0x080260fc

0800bb58 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800bb58:	b480      	push	{r7}
 800bb5a:	b083      	sub	sp, #12
 800bb5c:	af00      	add	r7, sp, #0
 800bb5e:	6078      	str	r0, [r7, #4]
    {
 800bb60:	4a04      	ldr	r2, [pc, #16]	; (800bb74 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	601a      	str	r2, [r3, #0]
    }
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	4618      	mov	r0, r3
 800bb6a:	370c      	adds	r7, #12
 800bb6c:	46bd      	mov	sp, r7
 800bb6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb72:	4770      	bx	lr
 800bb74:	080260fc 	.word	0x080260fc

0800bb78 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800bb78:	b580      	push	{r7, lr}
 800bb7a:	b082      	sub	sp, #8
 800bb7c:	af00      	add	r7, sp, #0
 800bb7e:	6078      	str	r0, [r7, #4]
    }
 800bb80:	6878      	ldr	r0, [r7, #4]
 800bb82:	f7ff ffe9 	bl	800bb58 <_ZN8touchgfx8DrawableD1Ev>
 800bb86:	2128      	movs	r1, #40	; 0x28
 800bb88:	6878      	ldr	r0, [r7, #4]
 800bb8a:	f017 fee2 	bl	8023952 <_ZdlPvj>
 800bb8e:	687b      	ldr	r3, [r7, #4]
 800bb90:	4618      	mov	r0, r3
 800bb92:	3708      	adds	r7, #8
 800bb94:	46bd      	mov	sp, r7
 800bb96:	bd80      	pop	{r7, pc}

0800bb98 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800bb98:	b580      	push	{r7, lr}
 800bb9a:	b082      	sub	sp, #8
 800bb9c:	af00      	add	r7, sp, #0
 800bb9e:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800bba6:	2b00      	cmp	r3, #0
 800bba8:	d005      	beq.n	800bbb6 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	681b      	ldr	r3, [r3, #0]
 800bbae:	3314      	adds	r3, #20
 800bbb0:	681b      	ldr	r3, [r3, #0]
 800bbb2:	6878      	ldr	r0, [r7, #4]
 800bbb4:	4798      	blx	r3
        }
    }
 800bbb6:	bf00      	nop
 800bbb8:	3708      	adds	r7, #8
 800bbba:	46bd      	mov	sp, r7
 800bbbc:	bd80      	pop	{r7, pc}

0800bbbe <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800bbbe:	b480      	push	{r7}
 800bbc0:	b083      	sub	sp, #12
 800bbc2:	af00      	add	r7, sp, #0
 800bbc4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800bbc6:	2300      	movs	r3, #0
    }
 800bbc8:	4618      	mov	r0, r3
 800bbca:	370c      	adds	r7, #12
 800bbcc:	46bd      	mov	sp, r7
 800bbce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbd2:	4770      	bx	lr

0800bbd4 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b084      	sub	sp, #16
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	60f8      	str	r0, [r7, #12]
 800bbdc:	4608      	mov	r0, r1
 800bbde:	4611      	mov	r1, r2
 800bbe0:	461a      	mov	r2, r3
 800bbe2:	4603      	mov	r3, r0
 800bbe4:	817b      	strh	r3, [r7, #10]
 800bbe6:	460b      	mov	r3, r1
 800bbe8:	813b      	strh	r3, [r7, #8]
 800bbea:	4613      	mov	r3, r2
 800bbec:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800bbee:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800bbf2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800bbf6:	4619      	mov	r1, r3
 800bbf8:	68f8      	ldr	r0, [r7, #12]
 800bbfa:	f000 f82a 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800bbfe:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800bc02:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800bc06:	4619      	mov	r1, r3
 800bc08:	68f8      	ldr	r0, [r7, #12]
 800bc0a:	f000 f87e 	bl	800bd0a <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800bc0e:	bf00      	nop
 800bc10:	3710      	adds	r7, #16
 800bc12:	46bd      	mov	sp, r7
 800bc14:	bd80      	pop	{r7, pc}

0800bc16 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800bc16:	b480      	push	{r7}
 800bc18:	b083      	sub	sp, #12
 800bc1a:	af00      	add	r7, sp, #0
 800bc1c:	6078      	str	r0, [r7, #4]
 800bc1e:	460b      	mov	r3, r1
 800bc20:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	887a      	ldrh	r2, [r7, #2]
 800bc26:	809a      	strh	r2, [r3, #4]
    }
 800bc28:	bf00      	nop
 800bc2a:	370c      	adds	r7, #12
 800bc2c:	46bd      	mov	sp, r7
 800bc2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc32:	4770      	bx	lr

0800bc34 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800bc34:	b480      	push	{r7}
 800bc36:	b083      	sub	sp, #12
 800bc38:	af00      	add	r7, sp, #0
 800bc3a:	6078      	str	r0, [r7, #4]
 800bc3c:	460b      	mov	r3, r1
 800bc3e:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	887a      	ldrh	r2, [r7, #2]
 800bc44:	80da      	strh	r2, [r3, #6]
    }
 800bc46:	bf00      	nop
 800bc48:	370c      	adds	r7, #12
 800bc4a:	46bd      	mov	sp, r7
 800bc4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc50:	4770      	bx	lr

0800bc52 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800bc52:	b580      	push	{r7, lr}
 800bc54:	b082      	sub	sp, #8
 800bc56:	af00      	add	r7, sp, #0
 800bc58:	6078      	str	r0, [r7, #4]
 800bc5a:	460b      	mov	r3, r1
 800bc5c:	807b      	strh	r3, [r7, #2]
 800bc5e:	4613      	mov	r3, r2
 800bc60:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	681b      	ldr	r3, [r3, #0]
 800bc66:	3330      	adds	r3, #48	; 0x30
 800bc68:	681b      	ldr	r3, [r3, #0]
 800bc6a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800bc6e:	4611      	mov	r1, r2
 800bc70:	6878      	ldr	r0, [r7, #4]
 800bc72:	4798      	blx	r3
        setY(y);
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	3334      	adds	r3, #52	; 0x34
 800bc7a:	681b      	ldr	r3, [r3, #0]
 800bc7c:	f9b7 2000 	ldrsh.w	r2, [r7]
 800bc80:	4611      	mov	r1, r2
 800bc82:	6878      	ldr	r0, [r7, #4]
 800bc84:	4798      	blx	r3
    }
 800bc86:	bf00      	nop
 800bc88:	3708      	adds	r7, #8
 800bc8a:	46bd      	mov	sp, r7
 800bc8c:	bd80      	pop	{r7, pc}

0800bc8e <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800bc8e:	b480      	push	{r7}
 800bc90:	b083      	sub	sp, #12
 800bc92:	af00      	add	r7, sp, #0
 800bc94:	6078      	str	r0, [r7, #4]
 800bc96:	460b      	mov	r3, r1
 800bc98:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800bc9a:	687b      	ldr	r3, [r7, #4]
 800bc9c:	887a      	ldrh	r2, [r7, #2]
 800bc9e:	811a      	strh	r2, [r3, #8]
    }
 800bca0:	bf00      	nop
 800bca2:	370c      	adds	r7, #12
 800bca4:	46bd      	mov	sp, r7
 800bca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcaa:	4770      	bx	lr

0800bcac <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800bcac:	b480      	push	{r7}
 800bcae:	b083      	sub	sp, #12
 800bcb0:	af00      	add	r7, sp, #0
 800bcb2:	6078      	str	r0, [r7, #4]
 800bcb4:	460b      	mov	r3, r1
 800bcb6:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	887a      	ldrh	r2, [r7, #2]
 800bcbc:	815a      	strh	r2, [r3, #10]
    }
 800bcbe:	bf00      	nop
 800bcc0:	370c      	adds	r7, #12
 800bcc2:	46bd      	mov	sp, r7
 800bcc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcc8:	4770      	bx	lr

0800bcca <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800bcca:	b480      	push	{r7}
 800bccc:	b083      	sub	sp, #12
 800bcce:	af00      	add	r7, sp, #0
 800bcd0:	6078      	str	r0, [r7, #4]
    {
    }
 800bcd2:	bf00      	nop
 800bcd4:	370c      	adds	r7, #12
 800bcd6:	46bd      	mov	sp, r7
 800bcd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcdc:	4770      	bx	lr

0800bcde <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800bcde:	b480      	push	{r7}
 800bce0:	b083      	sub	sp, #12
 800bce2:	af00      	add	r7, sp, #0
 800bce4:	6078      	str	r0, [r7, #4]
 800bce6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bce8:	bf00      	nop
 800bcea:	370c      	adds	r7, #12
 800bcec:	46bd      	mov	sp, r7
 800bcee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcf2:	4770      	bx	lr

0800bcf4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800bcf4:	b480      	push	{r7}
 800bcf6:	b083      	sub	sp, #12
 800bcf8:	af00      	add	r7, sp, #0
 800bcfa:	6078      	str	r0, [r7, #4]
 800bcfc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bcfe:	bf00      	nop
 800bd00:	370c      	adds	r7, #12
 800bd02:	46bd      	mov	sp, r7
 800bd04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd08:	4770      	bx	lr

0800bd0a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800bd0a:	b580      	push	{r7, lr}
 800bd0c:	b082      	sub	sp, #8
 800bd0e:	af00      	add	r7, sp, #0
 800bd10:	6078      	str	r0, [r7, #4]
 800bd12:	460b      	mov	r3, r1
 800bd14:	807b      	strh	r3, [r7, #2]
 800bd16:	4613      	mov	r3, r2
 800bd18:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	3338      	adds	r3, #56	; 0x38
 800bd20:	681b      	ldr	r3, [r3, #0]
 800bd22:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800bd26:	4611      	mov	r1, r2
 800bd28:	6878      	ldr	r0, [r7, #4]
 800bd2a:	4798      	blx	r3
        setHeight(height);
 800bd2c:	687b      	ldr	r3, [r7, #4]
 800bd2e:	681b      	ldr	r3, [r3, #0]
 800bd30:	333c      	adds	r3, #60	; 0x3c
 800bd32:	681b      	ldr	r3, [r3, #0]
 800bd34:	f9b7 2000 	ldrsh.w	r2, [r7]
 800bd38:	4611      	mov	r1, r2
 800bd3a:	6878      	ldr	r0, [r7, #4]
 800bd3c:	4798      	blx	r3
    }
 800bd3e:	bf00      	nop
 800bd40:	3708      	adds	r7, #8
 800bd42:	46bd      	mov	sp, r7
 800bd44:	bd80      	pop	{r7, pc}

0800bd46 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800bd46:	b480      	push	{r7}
 800bd48:	b083      	sub	sp, #12
 800bd4a:	af00      	add	r7, sp, #0
 800bd4c:	6078      	str	r0, [r7, #4]
 800bd4e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800bd50:	bf00      	nop
 800bd52:	370c      	adds	r7, #12
 800bd54:	46bd      	mov	sp, r7
 800bd56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd5a:	4770      	bx	lr

0800bd5c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800bd5c:	b480      	push	{r7}
 800bd5e:	b083      	sub	sp, #12
 800bd60:	af00      	add	r7, sp, #0
 800bd62:	6078      	str	r0, [r7, #4]
    {
    }
 800bd64:	bf00      	nop
 800bd66:	370c      	adds	r7, #12
 800bd68:	46bd      	mov	sp, r7
 800bd6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd6e:	4770      	bx	lr

0800bd70 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800bd70:	b480      	push	{r7}
 800bd72:	b083      	sub	sp, #12
 800bd74:	af00      	add	r7, sp, #0
 800bd76:	6078      	str	r0, [r7, #4]
 800bd78:	460b      	mov	r3, r1
 800bd7a:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	78fa      	ldrb	r2, [r7, #3]
 800bd80:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800bd84:	bf00      	nop
 800bd86:	370c      	adds	r7, #12
 800bd88:	46bd      	mov	sp, r7
 800bd8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd8e:	4770      	bx	lr

0800bd90 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800bd90:	b480      	push	{r7}
 800bd92:	b083      	sub	sp, #12
 800bd94:	af00      	add	r7, sp, #0
 800bd96:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800bd98:	687b      	ldr	r3, [r7, #4]
 800bd9a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800bd9e:	4618      	mov	r0, r3
 800bda0:	370c      	adds	r7, #12
 800bda2:	46bd      	mov	sp, r7
 800bda4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bda8:	4770      	bx	lr

0800bdaa <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800bdaa:	b480      	push	{r7}
 800bdac:	b083      	sub	sp, #12
 800bdae:	af00      	add	r7, sp, #0
 800bdb0:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800bdb8:	4618      	mov	r0, r3
 800bdba:	370c      	adds	r7, #12
 800bdbc:	46bd      	mov	sp, r7
 800bdbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdc2:	4770      	bx	lr

0800bdc4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800bdc4:	b580      	push	{r7, lr}
 800bdc6:	b082      	sub	sp, #8
 800bdc8:	af00      	add	r7, sp, #0
 800bdca:	6078      	str	r0, [r7, #4]
 800bdcc:	460b      	mov	r3, r1
 800bdce:	807b      	strh	r3, [r7, #2]
 800bdd0:	4613      	mov	r3, r2
 800bdd2:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800bdd4:	687b      	ldr	r3, [r7, #4]
 800bdd6:	681b      	ldr	r3, [r3, #0]
 800bdd8:	3354      	adds	r3, #84	; 0x54
 800bdda:	681b      	ldr	r3, [r3, #0]
 800bddc:	8879      	ldrh	r1, [r7, #2]
 800bdde:	687a      	ldr	r2, [r7, #4]
 800bde0:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800bde4:	b292      	uxth	r2, r2
 800bde6:	1a8a      	subs	r2, r1, r2
 800bde8:	b292      	uxth	r2, r2
 800bdea:	b210      	sxth	r0, r2
 800bdec:	8839      	ldrh	r1, [r7, #0]
 800bdee:	687a      	ldr	r2, [r7, #4]
 800bdf0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800bdf4:	b292      	uxth	r2, r2
 800bdf6:	1a8a      	subs	r2, r1, r2
 800bdf8:	b292      	uxth	r2, r2
 800bdfa:	b212      	sxth	r2, r2
 800bdfc:	4601      	mov	r1, r0
 800bdfe:	6878      	ldr	r0, [r7, #4]
 800be00:	4798      	blx	r3
    }
 800be02:	bf00      	nop
 800be04:	3708      	adds	r7, #8
 800be06:	46bd      	mov	sp, r7
 800be08:	bd80      	pop	{r7, pc}

0800be0a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800be0a:	b480      	push	{r7}
 800be0c:	b083      	sub	sp, #12
 800be0e:	af00      	add	r7, sp, #0
 800be10:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800be18:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800be1a:	687b      	ldr	r3, [r7, #4]
 800be1c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800be20:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800be28:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800be2a:	bf00      	nop
 800be2c:	370c      	adds	r7, #12
 800be2e:	46bd      	mov	sp, r7
 800be30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be34:	4770      	bx	lr

0800be36 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800be36:	b580      	push	{r7, lr}
 800be38:	b084      	sub	sp, #16
 800be3a:	af00      	add	r7, sp, #0
 800be3c:	60f8      	str	r0, [r7, #12]
 800be3e:	60b9      	str	r1, [r7, #8]
 800be40:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800be42:	68f8      	ldr	r0, [r7, #12]
 800be44:	f7ff ffe1 	bl	800be0a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800be48:	687b      	ldr	r3, [r7, #4]
 800be4a:	681a      	ldr	r2, [r3, #0]
 800be4c:	68fb      	ldr	r3, [r7, #12]
 800be4e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800be50:	687b      	ldr	r3, [r7, #4]
 800be52:	68fa      	ldr	r2, [r7, #12]
 800be54:	601a      	str	r2, [r3, #0]
    }
 800be56:	bf00      	nop
 800be58:	3710      	adds	r7, #16
 800be5a:	46bd      	mov	sp, r7
 800be5c:	bd80      	pop	{r7, pc}
	...

0800be60 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800be60:	b580      	push	{r7, lr}
 800be62:	b082      	sub	sp, #8
 800be64:	af00      	add	r7, sp, #0
 800be66:	6078      	str	r0, [r7, #4]
    {
 800be68:	4a06      	ldr	r2, [pc, #24]	; (800be84 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	601a      	str	r2, [r3, #0]
 800be6e:	687b      	ldr	r3, [r7, #4]
 800be70:	3304      	adds	r3, #4
 800be72:	4618      	mov	r0, r3
 800be74:	f000 fbd8 	bl	800c628 <_ZN8touchgfx9ContainerD1Ev>
    }
 800be78:	687b      	ldr	r3, [r7, #4]
 800be7a:	4618      	mov	r0, r3
 800be7c:	3708      	adds	r7, #8
 800be7e:	46bd      	mov	sp, r7
 800be80:	bd80      	pop	{r7, pc}
 800be82:	bf00      	nop
 800be84:	08026200 	.word	0x08026200

0800be88 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800be88:	b580      	push	{r7, lr}
 800be8a:	b082      	sub	sp, #8
 800be8c:	af00      	add	r7, sp, #0
 800be8e:	6078      	str	r0, [r7, #4]
    }
 800be90:	6878      	ldr	r0, [r7, #4]
 800be92:	f7ff ffe5 	bl	800be60 <_ZN8touchgfx6ScreenD1Ev>
 800be96:	213c      	movs	r1, #60	; 0x3c
 800be98:	6878      	ldr	r0, [r7, #4]
 800be9a:	f017 fd5a 	bl	8023952 <_ZdlPvj>
 800be9e:	687b      	ldr	r3, [r7, #4]
 800bea0:	4618      	mov	r0, r3
 800bea2:	3708      	adds	r7, #8
 800bea4:	46bd      	mov	sp, r7
 800bea6:	bd80      	pop	{r7, pc}

0800bea8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800bea8:	b480      	push	{r7}
 800beaa:	b083      	sub	sp, #12
 800beac:	af00      	add	r7, sp, #0
 800beae:	6078      	str	r0, [r7, #4]
    {
    }
 800beb0:	bf00      	nop
 800beb2:	370c      	adds	r7, #12
 800beb4:	46bd      	mov	sp, r7
 800beb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800beba:	4770      	bx	lr

0800bebc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800bebc:	b480      	push	{r7}
 800bebe:	b083      	sub	sp, #12
 800bec0:	af00      	add	r7, sp, #0
 800bec2:	6078      	str	r0, [r7, #4]
    {
    }
 800bec4:	bf00      	nop
 800bec6:	370c      	adds	r7, #12
 800bec8:	46bd      	mov	sp, r7
 800beca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bece:	4770      	bx	lr

0800bed0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800bed0:	b480      	push	{r7}
 800bed2:	b083      	sub	sp, #12
 800bed4:	af00      	add	r7, sp, #0
 800bed6:	6078      	str	r0, [r7, #4]
    {
    }
 800bed8:	bf00      	nop
 800beda:	370c      	adds	r7, #12
 800bedc:	46bd      	mov	sp, r7
 800bede:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bee2:	4770      	bx	lr

0800bee4 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800bee4:	b480      	push	{r7}
 800bee6:	b083      	sub	sp, #12
 800bee8:	af00      	add	r7, sp, #0
 800beea:	6078      	str	r0, [r7, #4]
    {
    }
 800beec:	bf00      	nop
 800beee:	370c      	adds	r7, #12
 800bef0:	46bd      	mov	sp, r7
 800bef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bef6:	4770      	bx	lr

0800bef8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800bef8:	b480      	push	{r7}
 800befa:	b083      	sub	sp, #12
 800befc:	af00      	add	r7, sp, #0
 800befe:	6078      	str	r0, [r7, #4]
 800bf00:	460b      	mov	r3, r1
 800bf02:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800bf04:	bf00      	nop
 800bf06:	370c      	adds	r7, #12
 800bf08:	46bd      	mov	sp, r7
 800bf0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf0e:	4770      	bx	lr

0800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800bf10:	b580      	push	{r7, lr}
 800bf12:	b082      	sub	sp, #8
 800bf14:	af00      	add	r7, sp, #0
 800bf16:	6078      	str	r0, [r7, #4]
 800bf18:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	3304      	adds	r3, #4
 800bf1e:	6839      	ldr	r1, [r7, #0]
 800bf20:	4618      	mov	r0, r3
 800bf22:	f004 f8ab 	bl	801007c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800bf26:	bf00      	nop
 800bf28:	3708      	adds	r7, #8
 800bf2a:	46bd      	mov	sp, r7
 800bf2c:	bd80      	pop	{r7, pc}

0800bf2e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800bf2e:	b580      	push	{r7, lr}
 800bf30:	b084      	sub	sp, #16
 800bf32:	af00      	add	r7, sp, #0
 800bf34:	60f8      	str	r0, [r7, #12]
 800bf36:	607b      	str	r3, [r7, #4]
 800bf38:	460b      	mov	r3, r1
 800bf3a:	817b      	strh	r3, [r7, #10]
 800bf3c:	4613      	mov	r3, r2
 800bf3e:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800bf40:	68fb      	ldr	r3, [r7, #12]
 800bf42:	4618      	mov	r0, r3
 800bf44:	f7ff ff24 	bl	800bd90 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800bf48:	4603      	mov	r3, r0
 800bf4a:	2b00      	cmp	r3, #0
 800bf4c:	d008      	beq.n	800bf60 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800bf4e:	68fb      	ldr	r3, [r7, #12]
 800bf50:	4618      	mov	r0, r3
 800bf52:	f7ff ff2a 	bl	800bdaa <_ZNK8touchgfx8Drawable11isTouchableEv>
 800bf56:	4603      	mov	r3, r0
 800bf58:	2b00      	cmp	r3, #0
 800bf5a:	d001      	beq.n	800bf60 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800bf5c:	2301      	movs	r3, #1
 800bf5e:	e000      	b.n	800bf62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800bf60:	2300      	movs	r3, #0
 800bf62:	2b00      	cmp	r3, #0
 800bf64:	d002      	beq.n	800bf6c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800bf66:	68fa      	ldr	r2, [r7, #12]
 800bf68:	687b      	ldr	r3, [r7, #4]
 800bf6a:	601a      	str	r2, [r3, #0]
        }
    }
 800bf6c:	bf00      	nop
 800bf6e:	3710      	adds	r7, #16
 800bf70:	46bd      	mov	sp, r7
 800bf72:	bd80      	pop	{r7, pc}

0800bf74 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800bf74:	b580      	push	{r7, lr}
 800bf76:	b082      	sub	sp, #8
 800bf78:	af00      	add	r7, sp, #0
 800bf7a:	6078      	str	r0, [r7, #4]
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	4618      	mov	r0, r3
 800bf80:	f7ff fdba 	bl	800baf8 <_ZN8touchgfx8DrawableC1Ev>
 800bf84:	4a03      	ldr	r2, [pc, #12]	; (800bf94 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800bf86:	687b      	ldr	r3, [r7, #4]
 800bf88:	601a      	str	r2, [r3, #0]
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	4618      	mov	r0, r3
 800bf8e:	3708      	adds	r7, #8
 800bf90:	46bd      	mov	sp, r7
 800bf92:	bd80      	pop	{r7, pc}
 800bf94:	08025664 	.word	0x08025664

0800bf98 <_ZN8touchgfx6WidgetD1Ev>:
 800bf98:	b580      	push	{r7, lr}
 800bf9a:	b082      	sub	sp, #8
 800bf9c:	af00      	add	r7, sp, #0
 800bf9e:	6078      	str	r0, [r7, #4]
 800bfa0:	4a05      	ldr	r2, [pc, #20]	; (800bfb8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	601a      	str	r2, [r3, #0]
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	4618      	mov	r0, r3
 800bfaa:	f7ff fdd5 	bl	800bb58 <_ZN8touchgfx8DrawableD1Ev>
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	4618      	mov	r0, r3
 800bfb2:	3708      	adds	r7, #8
 800bfb4:	46bd      	mov	sp, r7
 800bfb6:	bd80      	pop	{r7, pc}
 800bfb8:	08025664 	.word	0x08025664

0800bfbc <_ZN8touchgfx6WidgetD0Ev>:
 800bfbc:	b580      	push	{r7, lr}
 800bfbe:	b082      	sub	sp, #8
 800bfc0:	af00      	add	r7, sp, #0
 800bfc2:	6078      	str	r0, [r7, #4]
 800bfc4:	6878      	ldr	r0, [r7, #4]
 800bfc6:	f7ff ffe7 	bl	800bf98 <_ZN8touchgfx6WidgetD1Ev>
 800bfca:	2128      	movs	r1, #40	; 0x28
 800bfcc:	6878      	ldr	r0, [r7, #4]
 800bfce:	f017 fcc0 	bl	8023952 <_ZdlPvj>
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	4618      	mov	r0, r3
 800bfd6:	3708      	adds	r7, #8
 800bfd8:	46bd      	mov	sp, r7
 800bfda:	bd80      	pop	{r7, pc}

0800bfdc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800bfdc:	b580      	push	{r7, lr}
 800bfde:	b082      	sub	sp, #8
 800bfe0:	af00      	add	r7, sp, #0
 800bfe2:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800bfe4:	687b      	ldr	r3, [r7, #4]
 800bfe6:	4618      	mov	r0, r3
 800bfe8:	2326      	movs	r3, #38	; 0x26
 800bfea:	461a      	mov	r2, r3
 800bfec:	2100      	movs	r1, #0
 800bfee:	f017 ff67 	bl	8023ec0 <memset>
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	4618      	mov	r0, r3
 800bff6:	f7ff ffbd 	bl	800bf74 <_ZN8touchgfx6WidgetC1Ev>
 800bffa:	4a09      	ldr	r2, [pc, #36]	; (800c020 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800bffc:	687b      	ldr	r3, [r7, #4]
 800bffe:	601a      	str	r2, [r3, #0]
 800c000:	687b      	ldr	r3, [r7, #4]
 800c002:	22ff      	movs	r2, #255	; 0xff
 800c004:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800c008:	687b      	ldr	r3, [r7, #4]
 800c00a:	3328      	adds	r3, #40	; 0x28
 800c00c:	2100      	movs	r1, #0
 800c00e:	4618      	mov	r0, r3
 800c010:	f7ff fd1c 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800c014:	687b      	ldr	r3, [r7, #4]
 800c016:	4618      	mov	r0, r3
 800c018:	3708      	adds	r7, #8
 800c01a:	46bd      	mov	sp, r7
 800c01c:	bd80      	pop	{r7, pc}
 800c01e:	bf00      	nop
 800c020:	08025f74 	.word	0x08025f74

0800c024 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800c024:	b480      	push	{r7}
 800c026:	b083      	sub	sp, #12
 800c028:	af00      	add	r7, sp, #0
 800c02a:	6078      	str	r0, [r7, #4]
 800c02c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800c02e:	687b      	ldr	r3, [r7, #4]
 800c030:	683a      	ldr	r2, [r7, #0]
 800c032:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800c034:	bf00      	nop
 800c036:	370c      	adds	r7, #12
 800c038:	46bd      	mov	sp, r7
 800c03a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c03e:	4770      	bx	lr

0800c040 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800c040:	b580      	push	{r7, lr}
 800c042:	b082      	sub	sp, #8
 800c044:	af00      	add	r7, sp, #0
 800c046:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800c048:	687b      	ldr	r3, [r7, #4]
 800c04a:	4618      	mov	r0, r3
 800c04c:	2326      	movs	r3, #38	; 0x26
 800c04e:	461a      	mov	r2, r3
 800c050:	2100      	movs	r1, #0
 800c052:	f017 ff35 	bl	8023ec0 <memset>
 800c056:	687b      	ldr	r3, [r7, #4]
 800c058:	4618      	mov	r0, r3
 800c05a:	f7ff ff8b 	bl	800bf74 <_ZN8touchgfx6WidgetC1Ev>
 800c05e:	4a0a      	ldr	r2, [pc, #40]	; (800c088 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800c060:	687b      	ldr	r3, [r7, #4]
 800c062:	601a      	str	r2, [r3, #0]
 800c064:	687b      	ldr	r3, [r7, #4]
 800c066:	2200      	movs	r2, #0
 800c068:	629a      	str	r2, [r3, #40]	; 0x28
 800c06a:	687b      	ldr	r3, [r7, #4]
 800c06c:	2200      	movs	r2, #0
 800c06e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 800c072:	687b      	ldr	r3, [r7, #4]
 800c074:	2101      	movs	r1, #1
 800c076:	4618      	mov	r0, r3
 800c078:	f7ff fe7a 	bl	800bd70 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800c07c:	687b      	ldr	r3, [r7, #4]
 800c07e:	4618      	mov	r0, r3
 800c080:	3708      	adds	r7, #8
 800c082:	46bd      	mov	sp, r7
 800c084:	bd80      	pop	{r7, pc}
 800c086:	bf00      	nop
 800c088:	08025e74 	.word	0x08025e74

0800c08c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800c08c:	b480      	push	{r7}
 800c08e:	b083      	sub	sp, #12
 800c090:	af00      	add	r7, sp, #0
 800c092:	6078      	str	r0, [r7, #4]
 800c094:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	683a      	ldr	r2, [r7, #0]
 800c09a:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800c09c:	bf00      	nop
 800c09e:	370c      	adds	r7, #12
 800c0a0:	46bd      	mov	sp, r7
 800c0a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0a6:	4770      	bx	lr

0800c0a8 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800c0a8:	b580      	push	{r7, lr}
 800c0aa:	b082      	sub	sp, #8
 800c0ac:	af00      	add	r7, sp, #0
 800c0ae:	6078      	str	r0, [r7, #4]
 800c0b0:	4a05      	ldr	r2, [pc, #20]	; (800c0c8 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800c0b2:	687b      	ldr	r3, [r7, #4]
 800c0b4:	601a      	str	r2, [r3, #0]
 800c0b6:	687b      	ldr	r3, [r7, #4]
 800c0b8:	4618      	mov	r0, r3
 800c0ba:	f7ff ff6d 	bl	800bf98 <_ZN8touchgfx6WidgetD1Ev>
 800c0be:	687b      	ldr	r3, [r7, #4]
 800c0c0:	4618      	mov	r0, r3
 800c0c2:	3708      	adds	r7, #8
 800c0c4:	46bd      	mov	sp, r7
 800c0c6:	bd80      	pop	{r7, pc}
 800c0c8:	08025e74 	.word	0x08025e74

0800c0cc <_ZN8touchgfx14AbstractButtonD0Ev>:
 800c0cc:	b580      	push	{r7, lr}
 800c0ce:	b082      	sub	sp, #8
 800c0d0:	af00      	add	r7, sp, #0
 800c0d2:	6078      	str	r0, [r7, #4]
 800c0d4:	6878      	ldr	r0, [r7, #4]
 800c0d6:	f7ff ffe7 	bl	800c0a8 <_ZN8touchgfx14AbstractButtonD1Ev>
 800c0da:	2130      	movs	r1, #48	; 0x30
 800c0dc:	6878      	ldr	r0, [r7, #4]
 800c0de:	f017 fc38 	bl	8023952 <_ZdlPvj>
 800c0e2:	687b      	ldr	r3, [r7, #4]
 800c0e4:	4618      	mov	r0, r3
 800c0e6:	3708      	adds	r7, #8
 800c0e8:	46bd      	mov	sp, r7
 800c0ea:	bd80      	pop	{r7, pc}

0800c0ec <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800c0ec:	b580      	push	{r7, lr}
 800c0ee:	b082      	sub	sp, #8
 800c0f0:	af00      	add	r7, sp, #0
 800c0f2:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800c0f4:	687b      	ldr	r3, [r7, #4]
 800c0f6:	4618      	mov	r0, r3
 800c0f8:	f7ff ffa2 	bl	800c040 <_ZN8touchgfx14AbstractButtonC1Ev>
 800c0fc:	4a0c      	ldr	r2, [pc, #48]	; (800c130 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800c0fe:	687b      	ldr	r3, [r7, #4]
 800c100:	601a      	str	r2, [r3, #0]
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	332e      	adds	r3, #46	; 0x2e
 800c106:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c10a:	4618      	mov	r0, r3
 800c10c:	f7ff fce4 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c110:	687b      	ldr	r3, [r7, #4]
 800c112:	3330      	adds	r3, #48	; 0x30
 800c114:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c118:	4618      	mov	r0, r3
 800c11a:	f7ff fcdd 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c11e:	687b      	ldr	r3, [r7, #4]
 800c120:	22ff      	movs	r2, #255	; 0xff
 800c122:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
    {
    }
 800c126:	687b      	ldr	r3, [r7, #4]
 800c128:	4618      	mov	r0, r3
 800c12a:	3708      	adds	r7, #8
 800c12c:	46bd      	mov	sp, r7
 800c12e:	bd80      	pop	{r7, pc}
 800c130:	08025fdc 	.word	0x08025fdc

0800c134 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800c134:	b480      	push	{r7}
 800c136:	b083      	sub	sp, #12
 800c138:	af00      	add	r7, sp, #0
 800c13a:	6078      	str	r0, [r7, #4]
 800c13c:	460b      	mov	r3, r1
 800c13e:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800c140:	4a06      	ldr	r2, [pc, #24]	; (800c15c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800c142:	687b      	ldr	r3, [r7, #4]
 800c144:	601a      	str	r2, [r3, #0]
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	887a      	ldrh	r2, [r7, #2]
 800c14a:	809a      	strh	r2, [r3, #4]
    }
 800c14c:	687b      	ldr	r3, [r7, #4]
 800c14e:	4618      	mov	r0, r3
 800c150:	370c      	adds	r7, #12
 800c152:	46bd      	mov	sp, r7
 800c154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c158:	4770      	bx	lr
 800c15a:	bf00      	nop
 800c15c:	08025410 	.word	0x08025410

0800c160 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800c160:	b580      	push	{r7, lr}
 800c162:	b082      	sub	sp, #8
 800c164:	af00      	add	r7, sp, #0
 800c166:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800c168:	687b      	ldr	r3, [r7, #4]
 800c16a:	4618      	mov	r0, r3
 800c16c:	2326      	movs	r3, #38	; 0x26
 800c16e:	461a      	mov	r2, r3
 800c170:	2100      	movs	r1, #0
 800c172:	f017 fea5 	bl	8023ec0 <memset>
 800c176:	687b      	ldr	r3, [r7, #4]
 800c178:	4618      	mov	r0, r3
 800c17a:	f7ff fefb 	bl	800bf74 <_ZN8touchgfx6WidgetC1Ev>
 800c17e:	4a16      	ldr	r2, [pc, #88]	; (800c1d8 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800c180:	687b      	ldr	r3, [r7, #4]
 800c182:	601a      	str	r2, [r3, #0]
 800c184:	687b      	ldr	r3, [r7, #4]
 800c186:	3328      	adds	r3, #40	; 0x28
 800c188:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c18c:	4618      	mov	r0, r3
 800c18e:	f7ff ffd1 	bl	800c134 <_ZN8touchgfx9TypedTextC1Et>
 800c192:	687b      	ldr	r3, [r7, #4]
 800c194:	3330      	adds	r3, #48	; 0x30
 800c196:	2100      	movs	r1, #0
 800c198:	4618      	mov	r0, r3
 800c19a:	f7ff fc57 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	2200      	movs	r2, #0
 800c1a2:	869a      	strh	r2, [r3, #52]	; 0x34
 800c1a4:	687b      	ldr	r3, [r7, #4]
 800c1a6:	22ff      	movs	r2, #255	; 0xff
 800c1a8:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800c1ac:	687b      	ldr	r3, [r7, #4]
 800c1ae:	2200      	movs	r2, #0
 800c1b0:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	2200      	movs	r2, #0
 800c1b8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800c1bc:	687b      	ldr	r3, [r7, #4]
 800c1be:	2200      	movs	r2, #0
 800c1c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800c1c4:	687b      	ldr	r3, [r7, #4]
 800c1c6:	333c      	adds	r3, #60	; 0x3c
 800c1c8:	4618      	mov	r0, r3
 800c1ca:	f000 f807 	bl	800c1dc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800c1ce:	687b      	ldr	r3, [r7, #4]
 800c1d0:	4618      	mov	r0, r3
 800c1d2:	3708      	adds	r7, #8
 800c1d4:	46bd      	mov	sp, r7
 800c1d6:	bd80      	pop	{r7, pc}
 800c1d8:	08025ee4 	.word	0x08025ee4

0800c1dc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800c1dc:	b580      	push	{r7, lr}
 800c1de:	b084      	sub	sp, #16
 800c1e0:	af02      	add	r7, sp, #8
 800c1e2:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800c1e4:	6878      	ldr	r0, [r7, #4]
 800c1e6:	f04f 33ff 	mov.w	r3, #4294967295
 800c1ea:	9300      	str	r3, [sp, #0]
 800c1ec:	f04f 33ff 	mov.w	r3, #4294967295
 800c1f0:	2200      	movs	r2, #0
 800c1f2:	2100      	movs	r1, #0
 800c1f4:	f7ff fc50 	bl	800ba98 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800c1f8:	687b      	ldr	r3, [r7, #4]
 800c1fa:	2200      	movs	r2, #0
 800c1fc:	609a      	str	r2, [r3, #8]
        {
        }
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	4618      	mov	r0, r3
 800c202:	3708      	adds	r7, #8
 800c204:	46bd      	mov	sp, r7
 800c206:	bd80      	pop	{r7, pc}

0800c208 <_ZN15screen1ViewBase7action1Ev>:
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1()
 800c208:	b480      	push	{r7}
 800c20a:	b083      	sub	sp, #12
 800c20c:	af00      	add	r7, sp, #0
 800c20e:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Screen1
    }
 800c210:	bf00      	nop
 800c212:	370c      	adds	r7, #12
 800c214:	46bd      	mov	sp, r7
 800c216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c21a:	4770      	bx	lr

0800c21c <_ZN15screen1ViewBase11applicationEv>:
    

protected:
    FrontendApplication& application() {
 800c21c:	b580      	push	{r7, lr}
 800c21e:	b082      	sub	sp, #8
 800c220:	af00      	add	r7, sp, #0
 800c222:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800c224:	f007 fa72 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800c228:	4603      	mov	r3, r0
    }
 800c22a:	4618      	mov	r0, r3
 800c22c:	3708      	adds	r7, #8
 800c22e:	46bd      	mov	sp, r7
 800c230:	bd80      	pop	{r7, pc}
	...

0800c234 <_ZN8touchgfx4ViewI16screen1PresenterED1Ev>:
class View : public Screen
 800c234:	b580      	push	{r7, lr}
 800c236:	b082      	sub	sp, #8
 800c238:	af00      	add	r7, sp, #0
 800c23a:	6078      	str	r0, [r7, #4]
 800c23c:	4a05      	ldr	r2, [pc, #20]	; (800c254 <_ZN8touchgfx4ViewI16screen1PresenterED1Ev+0x20>)
 800c23e:	687b      	ldr	r3, [r7, #4]
 800c240:	601a      	str	r2, [r3, #0]
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	4618      	mov	r0, r3
 800c246:	f7ff fe0b 	bl	800be60 <_ZN8touchgfx6ScreenD1Ev>
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	4618      	mov	r0, r3
 800c24e:	3708      	adds	r7, #8
 800c250:	46bd      	mov	sp, r7
 800c252:	bd80      	pop	{r7, pc}
 800c254:	08025618 	.word	0x08025618

0800c258 <_ZN8touchgfx4ViewI16screen1PresenterED0Ev>:
 800c258:	b580      	push	{r7, lr}
 800c25a:	b082      	sub	sp, #8
 800c25c:	af00      	add	r7, sp, #0
 800c25e:	6078      	str	r0, [r7, #4]
 800c260:	6878      	ldr	r0, [r7, #4]
 800c262:	f7ff ffe7 	bl	800c234 <_ZN8touchgfx4ViewI16screen1PresenterED1Ev>
 800c266:	2140      	movs	r1, #64	; 0x40
 800c268:	6878      	ldr	r0, [r7, #4]
 800c26a:	f017 fb72 	bl	8023952 <_ZdlPvj>
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	4618      	mov	r0, r3
 800c272:	3708      	adds	r7, #8
 800c274:	46bd      	mov	sp, r7
 800c276:	bd80      	pop	{r7, pc}

0800c278 <_ZN15screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen1ViewBase::screen1ViewBase() :
 800c278:	b590      	push	{r4, r7, lr}
 800c27a:	b097      	sub	sp, #92	; 0x5c
 800c27c:	af02      	add	r7, sp, #8
 800c27e:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &screen1ViewBase::buttonCallbackHandler)
 800c280:	697b      	ldr	r3, [r7, #20]
 800c282:	4618      	mov	r0, r3
 800c284:	f000 f948 	bl	800c518 <_ZN8touchgfx4ViewI16screen1PresenterEC1Ev>
 800c288:	4a76      	ldr	r2, [pc, #472]	; (800c464 <_ZN15screen1ViewBaseC1Ev+0x1ec>)
 800c28a:	697b      	ldr	r3, [r7, #20]
 800c28c:	601a      	str	r2, [r3, #0]
 800c28e:	697b      	ldr	r3, [r7, #20]
 800c290:	3340      	adds	r3, #64	; 0x40
 800c292:	4618      	mov	r0, r3
 800c294:	f7ff fea2 	bl	800bfdc <_ZN8touchgfx3BoxC1Ev>
 800c298:	697b      	ldr	r3, [r7, #20]
 800c29a:	336c      	adds	r3, #108	; 0x6c
 800c29c:	4618      	mov	r0, r3
 800c29e:	f7ff ff25 	bl	800c0ec <_ZN8touchgfx6ButtonC1Ev>
 800c2a2:	697b      	ldr	r3, [r7, #20]
 800c2a4:	33a0      	adds	r3, #160	; 0xa0
 800c2a6:	4618      	mov	r0, r3
 800c2a8:	f7ff ff5a 	bl	800c160 <_ZN8touchgfx8TextAreaC1Ev>
 800c2ac:	697b      	ldr	r3, [r7, #20]
 800c2ae:	f103 00e8 	add.w	r0, r3, #232	; 0xe8
 800c2b2:	4b6d      	ldr	r3, [pc, #436]	; (800c468 <_ZN15screen1ViewBaseC1Ev+0x1f0>)
 800c2b4:	61fb      	str	r3, [r7, #28]
 800c2b6:	2300      	movs	r3, #0
 800c2b8:	623b      	str	r3, [r7, #32]
 800c2ba:	f107 031c 	add.w	r3, r7, #28
 800c2be:	cb0c      	ldmia	r3, {r2, r3}
 800c2c0:	6979      	ldr	r1, [r7, #20]
 800c2c2:	f000 f94f 	bl	800c564 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 1024, 600);
 800c2c6:	697b      	ldr	r3, [r7, #20]
 800c2c8:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800c2cc:	f44f 7316 	mov.w	r3, #600	; 0x258
 800c2d0:	9300      	str	r3, [sp, #0]
 800c2d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c2d6:	2200      	movs	r2, #0
 800c2d8:	2100      	movs	r1, #0
 800c2da:	f7ff fc7b 	bl	800bbd4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800c2de:	697b      	ldr	r3, [r7, #20]
 800c2e0:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800c2e4:	2300      	movs	r3, #0
 800c2e6:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 800c2ea:	2300      	movs	r3, #0
 800c2ec:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 800c2f0:	2300      	movs	r3, #0
 800c2f2:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800c2f6:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800c2fa:	041b      	lsls	r3, r3, #16
 800c2fc:	461a      	mov	r2, r3
 800c2fe:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800c302:	021b      	lsls	r3, r3, #8
 800c304:	431a      	orrs	r2, r3
 800c306:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 800c30a:	4313      	orrs	r3, r2
 800c30c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c310:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c314:	4611      	mov	r1, r2
 800c316:	4618      	mov	r0, r3
 800c318:	f7ff fb98 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
 800c31c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c31e:	4619      	mov	r1, r3
 800c320:	4620      	mov	r0, r4
 800c322:	f7ff fe7f 	bl	800c024 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800c326:	697a      	ldr	r2, [r7, #20]
 800c328:	697b      	ldr	r3, [r7, #20]
 800c32a:	3340      	adds	r3, #64	; 0x40
 800c32c:	4619      	mov	r1, r3
 800c32e:	4610      	mov	r0, r2
 800c330:	f7ff fdee 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    button1.setXY(451, 495);
 800c334:	697b      	ldr	r3, [r7, #20]
 800c336:	336c      	adds	r3, #108	; 0x6c
 800c338:	f240 12ef 	movw	r2, #495	; 0x1ef
 800c33c:	f240 11c3 	movw	r1, #451	; 0x1c3
 800c340:	4618      	mov	r0, r3
 800c342:	f7ff fc86 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
 800c346:	697b      	ldr	r3, [r7, #20]
 800c348:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800c34c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c350:	2101      	movs	r1, #1
 800c352:	4618      	mov	r0, r3
 800c354:	f7ff fbc0 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c358:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c35c:	2103      	movs	r1, #3
 800c35e:	4618      	mov	r0, r3
 800c360:	f7ff fbba 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c364:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800c368:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c36c:	4619      	mov	r1, r3
 800c36e:	4620      	mov	r0, r4
 800c370:	f005 fc52 	bl	8011c18 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 800c374:	697b      	ldr	r3, [r7, #20]
 800c376:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800c37a:	697b      	ldr	r3, [r7, #20]
 800c37c:	33e8      	adds	r3, #232	; 0xe8
 800c37e:	4619      	mov	r1, r3
 800c380:	4610      	mov	r0, r2
 800c382:	f7ff fe83 	bl	800c08c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(button1);
 800c386:	697a      	ldr	r2, [r7, #20]
 800c388:	697b      	ldr	r3, [r7, #20]
 800c38a:	336c      	adds	r3, #108	; 0x6c
 800c38c:	4619      	mov	r1, r3
 800c38e:	4610      	mov	r0, r2
 800c390:	f7ff fdbe 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(375, 137);
 800c394:	697b      	ldr	r3, [r7, #20]
 800c396:	33a0      	adds	r3, #160	; 0xa0
 800c398:	2289      	movs	r2, #137	; 0x89
 800c39a:	f240 1177 	movw	r1, #375	; 0x177
 800c39e:	4618      	mov	r0, r3
 800c3a0:	f7ff fc57 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 252, 252));
 800c3a4:	697b      	ldr	r3, [r7, #20]
 800c3a6:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800c3aa:	23ff      	movs	r3, #255	; 0xff
 800c3ac:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3b0:	23fc      	movs	r3, #252	; 0xfc
 800c3b2:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800c3b6:	23fc      	movs	r3, #252	; 0xfc
 800c3b8:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 800c3bc:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800c3c0:	041b      	lsls	r3, r3, #16
 800c3c2:	461a      	mov	r2, r3
 800c3c4:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800c3c8:	021b      	lsls	r3, r3, #8
 800c3ca:	431a      	orrs	r2, r3
 800c3cc:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800c3d0:	4313      	orrs	r3, r2
 800c3d2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c3d6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c3da:	4611      	mov	r1, r2
 800c3dc:	4618      	mov	r0, r3
 800c3de:	f7ff fb35 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
 800c3e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c3e4:	647c      	str	r4, [r7, #68]	; 0x44
 800c3e6:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800c3e8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c3ea:	69ba      	ldr	r2, [r7, #24]
 800c3ec:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800c3ee:	bf00      	nop
    textArea1.setLinespacing(0);
 800c3f0:	697b      	ldr	r3, [r7, #20]
 800c3f2:	33a0      	adds	r3, #160	; 0xa0
 800c3f4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c3f6:	2300      	movs	r3, #0
 800c3f8:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
        linespace = space;
 800c3fc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c3fe:	f8b7 204a 	ldrh.w	r2, [r7, #74]	; 0x4a
 800c402:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800c404:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c406:	681b      	ldr	r3, [r3, #0]
 800c408:	3384      	adds	r3, #132	; 0x84
 800c40a:	681b      	ldr	r3, [r3, #0]
 800c40c:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800c40e:	463a      	mov	r2, r7
 800c410:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800c412:	4610      	mov	r0, r2
 800c414:	4798      	blx	r3
 800c416:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800c41a:	463a      	mov	r2, r7
 800c41c:	ca07      	ldmia	r2, {r0, r1, r2}
 800c41e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c422:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T_DEMO));
 800c424:	697b      	ldr	r3, [r7, #20]
 800c426:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800c42a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c42e:	2101      	movs	r1, #1
 800c430:	4618      	mov	r0, r3
 800c432:	f7ff fe7f 	bl	800c134 <_ZN8touchgfx9TypedTextC1Et>
 800c436:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c43a:	4619      	mov	r1, r3
 800c43c:	4620      	mov	r0, r4
 800c43e:	f005 fb99 	bl	8011b74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c442:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c446:	4618      	mov	r0, r3
 800c448:	f7fe fa3a 	bl	800a8c0 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800c44c:	697a      	ldr	r2, [r7, #20]
 800c44e:	697b      	ldr	r3, [r7, #20]
 800c450:	33a0      	adds	r3, #160	; 0xa0
 800c452:	4619      	mov	r1, r3
 800c454:	4610      	mov	r0, r2
 800c456:	f7ff fd5b 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800c45a:	697b      	ldr	r3, [r7, #20]
 800c45c:	4618      	mov	r0, r3
 800c45e:	3754      	adds	r7, #84	; 0x54
 800c460:	46bd      	mov	sp, r7
 800c462:	bd90      	pop	{r4, r7, pc}
 800c464:	080255c8 	.word	0x080255c8
 800c468:	0800c4ed 	.word	0x0800c4ed

0800c46c <_ZN15screen1ViewBaseD1Ev>:

screen1ViewBase::~screen1ViewBase()
 800c46c:	b580      	push	{r7, lr}
 800c46e:	b082      	sub	sp, #8
 800c470:	af00      	add	r7, sp, #0
 800c472:	6078      	str	r0, [r7, #4]
 800c474:	4a0f      	ldr	r2, [pc, #60]	; (800c4b4 <_ZN15screen1ViewBaseD1Ev+0x48>)
 800c476:	687b      	ldr	r3, [r7, #4]
 800c478:	601a      	str	r2, [r3, #0]
 800c47a:	687b      	ldr	r3, [r7, #4]
 800c47c:	33e8      	adds	r3, #232	; 0xe8
 800c47e:	4618      	mov	r0, r3
 800c480:	f000 f8b0 	bl	800c5e4 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c484:	687b      	ldr	r3, [r7, #4]
 800c486:	33a0      	adds	r3, #160	; 0xa0
 800c488:	4618      	mov	r0, r3
 800c48a:	f000 f933 	bl	800c6f4 <_ZN8touchgfx8TextAreaD1Ev>
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	336c      	adds	r3, #108	; 0x6c
 800c492:	4618      	mov	r0, r3
 800c494:	f000 f90c 	bl	800c6b0 <_ZN8touchgfx6ButtonD1Ev>
 800c498:	687b      	ldr	r3, [r7, #4]
 800c49a:	3340      	adds	r3, #64	; 0x40
 800c49c:	4618      	mov	r0, r3
 800c49e:	f000 f8e5 	bl	800c66c <_ZN8touchgfx3BoxD1Ev>
 800c4a2:	687b      	ldr	r3, [r7, #4]
 800c4a4:	4618      	mov	r0, r3
 800c4a6:	f7ff fec5 	bl	800c234 <_ZN8touchgfx4ViewI16screen1PresenterED1Ev>
{

}
 800c4aa:	687b      	ldr	r3, [r7, #4]
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	3708      	adds	r7, #8
 800c4b0:	46bd      	mov	sp, r7
 800c4b2:	bd80      	pop	{r7, pc}
 800c4b4:	080255c8 	.word	0x080255c8

0800c4b8 <_ZN15screen1ViewBaseD0Ev>:
screen1ViewBase::~screen1ViewBase()
 800c4b8:	b580      	push	{r7, lr}
 800c4ba:	b082      	sub	sp, #8
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	6078      	str	r0, [r7, #4]
}
 800c4c0:	6878      	ldr	r0, [r7, #4]
 800c4c2:	f7ff ffd3 	bl	800c46c <_ZN15screen1ViewBaseD1Ev>
 800c4c6:	21f8      	movs	r1, #248	; 0xf8
 800c4c8:	6878      	ldr	r0, [r7, #4]
 800c4ca:	f017 fa42 	bl	8023952 <_ZdlPvj>
 800c4ce:	687b      	ldr	r3, [r7, #4]
 800c4d0:	4618      	mov	r0, r3
 800c4d2:	3708      	adds	r7, #8
 800c4d4:	46bd      	mov	sp, r7
 800c4d6:	bd80      	pop	{r7, pc}

0800c4d8 <_ZN15screen1ViewBase11setupScreenEv>:

void screen1ViewBase::setupScreen()
{
 800c4d8:	b480      	push	{r7}
 800c4da:	b083      	sub	sp, #12
 800c4dc:	af00      	add	r7, sp, #0
 800c4de:	6078      	str	r0, [r7, #4]

}
 800c4e0:	bf00      	nop
 800c4e2:	370c      	adds	r7, #12
 800c4e4:	46bd      	mov	sp, r7
 800c4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4ea:	4770      	bx	lr

0800c4ec <_ZN15screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800c4ec:	b580      	push	{r7, lr}
 800c4ee:	b082      	sub	sp, #8
 800c4f0:	af00      	add	r7, sp, #0
 800c4f2:	6078      	str	r0, [r7, #4]
 800c4f4:	6039      	str	r1, [r7, #0]
    if (&src == &button1)
 800c4f6:	687b      	ldr	r3, [r7, #4]
 800c4f8:	336c      	adds	r3, #108	; 0x6c
 800c4fa:	683a      	ldr	r2, [r7, #0]
 800c4fc:	429a      	cmp	r2, r3
 800c4fe:	d106      	bne.n	800c50e <_ZN15screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction1
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
 800c500:	6878      	ldr	r0, [r7, #4]
 800c502:	f7ff fe8b 	bl	800c21c <_ZN15screen1ViewBase11applicationEv>
 800c506:	4603      	mov	r3, r0
 800c508:	4618      	mov	r0, r3
 800c50a:	f7fe fec7 	bl	800b29c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    }
}
 800c50e:	bf00      	nop
 800c510:	3708      	adds	r7, #8
 800c512:	46bd      	mov	sp, r7
 800c514:	bd80      	pop	{r7, pc}
	...

0800c518 <_ZN8touchgfx4ViewI16screen1PresenterEC1Ev>:
    View()
 800c518:	b580      	push	{r7, lr}
 800c51a:	b082      	sub	sp, #8
 800c51c:	af00      	add	r7, sp, #0
 800c51e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800c520:	687b      	ldr	r3, [r7, #4]
 800c522:	4618      	mov	r0, r3
 800c524:	f008 fc0a 	bl	8014d3c <_ZN8touchgfx6ScreenC1Ev>
 800c528:	4a05      	ldr	r2, [pc, #20]	; (800c540 <_ZN8touchgfx4ViewI16screen1PresenterEC1Ev+0x28>)
 800c52a:	687b      	ldr	r3, [r7, #4]
 800c52c:	601a      	str	r2, [r3, #0]
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	2200      	movs	r2, #0
 800c532:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c534:	687b      	ldr	r3, [r7, #4]
 800c536:	4618      	mov	r0, r3
 800c538:	3708      	adds	r7, #8
 800c53a:	46bd      	mov	sp, r7
 800c53c:	bd80      	pop	{r7, pc}
 800c53e:	bf00      	nop
 800c540:	08025618 	.word	0x08025618

0800c544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800c544:	b480      	push	{r7}
 800c546:	b083      	sub	sp, #12
 800c548:	af00      	add	r7, sp, #0
 800c54a:	6078      	str	r0, [r7, #4]
 800c54c:	4a04      	ldr	r2, [pc, #16]	; (800c560 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	601a      	str	r2, [r3, #0]
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	4618      	mov	r0, r3
 800c556:	370c      	adds	r7, #12
 800c558:	46bd      	mov	sp, r7
 800c55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c55e:	4770      	bx	lr
 800c560:	0802564c 	.word	0x0802564c

0800c564 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c564:	b580      	push	{r7, lr}
 800c566:	b084      	sub	sp, #16
 800c568:	af00      	add	r7, sp, #0
 800c56a:	60f8      	str	r0, [r7, #12]
 800c56c:	60b9      	str	r1, [r7, #8]
 800c56e:	4639      	mov	r1, r7
 800c570:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c574:	68fb      	ldr	r3, [r7, #12]
 800c576:	4618      	mov	r0, r3
 800c578:	f7ff ffe4 	bl	800c544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800c57c:	4a08      	ldr	r2, [pc, #32]	; (800c5a0 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c57e:	68fb      	ldr	r3, [r7, #12]
 800c580:	601a      	str	r2, [r3, #0]
 800c582:	68fb      	ldr	r3, [r7, #12]
 800c584:	68ba      	ldr	r2, [r7, #8]
 800c586:	605a      	str	r2, [r3, #4]
 800c588:	68fb      	ldr	r3, [r7, #12]
 800c58a:	3308      	adds	r3, #8
 800c58c:	463a      	mov	r2, r7
 800c58e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c592:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c596:	68fb      	ldr	r3, [r7, #12]
 800c598:	4618      	mov	r0, r3
 800c59a:	3710      	adds	r7, #16
 800c59c:	46bd      	mov	sp, r7
 800c59e:	bd80      	pop	{r7, pc}
 800c5a0:	08025600 	.word	0x08025600

0800c5a4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800c5a4:	b480      	push	{r7}
 800c5a6:	b083      	sub	sp, #12
 800c5a8:	af00      	add	r7, sp, #0
 800c5aa:	6078      	str	r0, [r7, #4]
    }
 800c5ac:	4a04      	ldr	r2, [pc, #16]	; (800c5c0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800c5ae:	687b      	ldr	r3, [r7, #4]
 800c5b0:	601a      	str	r2, [r3, #0]
 800c5b2:	687b      	ldr	r3, [r7, #4]
 800c5b4:	4618      	mov	r0, r3
 800c5b6:	370c      	adds	r7, #12
 800c5b8:	46bd      	mov	sp, r7
 800c5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5be:	4770      	bx	lr
 800c5c0:	0802564c 	.word	0x0802564c

0800c5c4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800c5c4:	b580      	push	{r7, lr}
 800c5c6:	b082      	sub	sp, #8
 800c5c8:	af00      	add	r7, sp, #0
 800c5ca:	6078      	str	r0, [r7, #4]
    }
 800c5cc:	6878      	ldr	r0, [r7, #4]
 800c5ce:	f7ff ffe9 	bl	800c5a4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c5d2:	2104      	movs	r1, #4
 800c5d4:	6878      	ldr	r0, [r7, #4]
 800c5d6:	f017 f9bc 	bl	8023952 <_ZdlPvj>
 800c5da:	687b      	ldr	r3, [r7, #4]
 800c5dc:	4618      	mov	r0, r3
 800c5de:	3708      	adds	r7, #8
 800c5e0:	46bd      	mov	sp, r7
 800c5e2:	bd80      	pop	{r7, pc}

0800c5e4 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800c5e4:	b580      	push	{r7, lr}
 800c5e6:	b082      	sub	sp, #8
 800c5e8:	af00      	add	r7, sp, #0
 800c5ea:	6078      	str	r0, [r7, #4]
 800c5ec:	4a05      	ldr	r2, [pc, #20]	; (800c604 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800c5ee:	687b      	ldr	r3, [r7, #4]
 800c5f0:	601a      	str	r2, [r3, #0]
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	f7ff ffd5 	bl	800c5a4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c5fa:	687b      	ldr	r3, [r7, #4]
 800c5fc:	4618      	mov	r0, r3
 800c5fe:	3708      	adds	r7, #8
 800c600:	46bd      	mov	sp, r7
 800c602:	bd80      	pop	{r7, pc}
 800c604:	08025600 	.word	0x08025600

0800c608 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800c608:	b580      	push	{r7, lr}
 800c60a:	b082      	sub	sp, #8
 800c60c:	af00      	add	r7, sp, #0
 800c60e:	6078      	str	r0, [r7, #4]
 800c610:	6878      	ldr	r0, [r7, #4]
 800c612:	f7ff ffe7 	bl	800c5e4 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c616:	2110      	movs	r1, #16
 800c618:	6878      	ldr	r0, [r7, #4]
 800c61a:	f017 f99a 	bl	8023952 <_ZdlPvj>
 800c61e:	687b      	ldr	r3, [r7, #4]
 800c620:	4618      	mov	r0, r3
 800c622:	3708      	adds	r7, #8
 800c624:	46bd      	mov	sp, r7
 800c626:	bd80      	pop	{r7, pc}

0800c628 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800c628:	b580      	push	{r7, lr}
 800c62a:	b082      	sub	sp, #8
 800c62c:	af00      	add	r7, sp, #0
 800c62e:	6078      	str	r0, [r7, #4]
 800c630:	4a05      	ldr	r2, [pc, #20]	; (800c648 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800c632:	687b      	ldr	r3, [r7, #4]
 800c634:	601a      	str	r2, [r3, #0]
 800c636:	687b      	ldr	r3, [r7, #4]
 800c638:	4618      	mov	r0, r3
 800c63a:	f7ff fa8d 	bl	800bb58 <_ZN8touchgfx8DrawableD1Ev>
 800c63e:	687b      	ldr	r3, [r7, #4]
 800c640:	4618      	mov	r0, r3
 800c642:	3708      	adds	r7, #8
 800c644:	46bd      	mov	sp, r7
 800c646:	bd80      	pop	{r7, pc}
 800c648:	08025c8c 	.word	0x08025c8c

0800c64c <_ZN8touchgfx9ContainerD0Ev>:
 800c64c:	b580      	push	{r7, lr}
 800c64e:	b082      	sub	sp, #8
 800c650:	af00      	add	r7, sp, #0
 800c652:	6078      	str	r0, [r7, #4]
 800c654:	6878      	ldr	r0, [r7, #4]
 800c656:	f7ff ffe7 	bl	800c628 <_ZN8touchgfx9ContainerD1Ev>
 800c65a:	212c      	movs	r1, #44	; 0x2c
 800c65c:	6878      	ldr	r0, [r7, #4]
 800c65e:	f017 f978 	bl	8023952 <_ZdlPvj>
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	4618      	mov	r0, r3
 800c666:	3708      	adds	r7, #8
 800c668:	46bd      	mov	sp, r7
 800c66a:	bd80      	pop	{r7, pc}

0800c66c <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800c66c:	b580      	push	{r7, lr}
 800c66e:	b082      	sub	sp, #8
 800c670:	af00      	add	r7, sp, #0
 800c672:	6078      	str	r0, [r7, #4]
 800c674:	4a05      	ldr	r2, [pc, #20]	; (800c68c <_ZN8touchgfx3BoxD1Ev+0x20>)
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	601a      	str	r2, [r3, #0]
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	4618      	mov	r0, r3
 800c67e:	f7ff fc8b 	bl	800bf98 <_ZN8touchgfx6WidgetD1Ev>
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	4618      	mov	r0, r3
 800c686:	3708      	adds	r7, #8
 800c688:	46bd      	mov	sp, r7
 800c68a:	bd80      	pop	{r7, pc}
 800c68c:	08025f74 	.word	0x08025f74

0800c690 <_ZN8touchgfx3BoxD0Ev>:
 800c690:	b580      	push	{r7, lr}
 800c692:	b082      	sub	sp, #8
 800c694:	af00      	add	r7, sp, #0
 800c696:	6078      	str	r0, [r7, #4]
 800c698:	6878      	ldr	r0, [r7, #4]
 800c69a:	f7ff ffe7 	bl	800c66c <_ZN8touchgfx3BoxD1Ev>
 800c69e:	212c      	movs	r1, #44	; 0x2c
 800c6a0:	6878      	ldr	r0, [r7, #4]
 800c6a2:	f017 f956 	bl	8023952 <_ZdlPvj>
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	4618      	mov	r0, r3
 800c6aa:	3708      	adds	r7, #8
 800c6ac:	46bd      	mov	sp, r7
 800c6ae:	bd80      	pop	{r7, pc}

0800c6b0 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 800c6b0:	b580      	push	{r7, lr}
 800c6b2:	b082      	sub	sp, #8
 800c6b4:	af00      	add	r7, sp, #0
 800c6b6:	6078      	str	r0, [r7, #4]
 800c6b8:	4a05      	ldr	r2, [pc, #20]	; (800c6d0 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800c6ba:	687b      	ldr	r3, [r7, #4]
 800c6bc:	601a      	str	r2, [r3, #0]
 800c6be:	687b      	ldr	r3, [r7, #4]
 800c6c0:	4618      	mov	r0, r3
 800c6c2:	f7ff fcf1 	bl	800c0a8 <_ZN8touchgfx14AbstractButtonD1Ev>
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	4618      	mov	r0, r3
 800c6ca:	3708      	adds	r7, #8
 800c6cc:	46bd      	mov	sp, r7
 800c6ce:	bd80      	pop	{r7, pc}
 800c6d0:	08025fdc 	.word	0x08025fdc

0800c6d4 <_ZN8touchgfx6ButtonD0Ev>:
 800c6d4:	b580      	push	{r7, lr}
 800c6d6:	b082      	sub	sp, #8
 800c6d8:	af00      	add	r7, sp, #0
 800c6da:	6078      	str	r0, [r7, #4]
 800c6dc:	6878      	ldr	r0, [r7, #4]
 800c6de:	f7ff ffe7 	bl	800c6b0 <_ZN8touchgfx6ButtonD1Ev>
 800c6e2:	2134      	movs	r1, #52	; 0x34
 800c6e4:	6878      	ldr	r0, [r7, #4]
 800c6e6:	f017 f934 	bl	8023952 <_ZdlPvj>
 800c6ea:	687b      	ldr	r3, [r7, #4]
 800c6ec:	4618      	mov	r0, r3
 800c6ee:	3708      	adds	r7, #8
 800c6f0:	46bd      	mov	sp, r7
 800c6f2:	bd80      	pop	{r7, pc}

0800c6f4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800c6f4:	b580      	push	{r7, lr}
 800c6f6:	b082      	sub	sp, #8
 800c6f8:	af00      	add	r7, sp, #0
 800c6fa:	6078      	str	r0, [r7, #4]
 800c6fc:	4a08      	ldr	r2, [pc, #32]	; (800c720 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800c6fe:	687b      	ldr	r3, [r7, #4]
 800c700:	601a      	str	r2, [r3, #0]
 800c702:	687b      	ldr	r3, [r7, #4]
 800c704:	3328      	adds	r3, #40	; 0x28
 800c706:	4618      	mov	r0, r3
 800c708:	f7fe f8da 	bl	800a8c0 <_ZN8touchgfx9TypedTextD1Ev>
 800c70c:	687b      	ldr	r3, [r7, #4]
 800c70e:	4618      	mov	r0, r3
 800c710:	f7ff fc42 	bl	800bf98 <_ZN8touchgfx6WidgetD1Ev>
 800c714:	687b      	ldr	r3, [r7, #4]
 800c716:	4618      	mov	r0, r3
 800c718:	3708      	adds	r7, #8
 800c71a:	46bd      	mov	sp, r7
 800c71c:	bd80      	pop	{r7, pc}
 800c71e:	bf00      	nop
 800c720:	08025ee4 	.word	0x08025ee4

0800c724 <_ZN8touchgfx8TextAreaD0Ev>:
 800c724:	b580      	push	{r7, lr}
 800c726:	b082      	sub	sp, #8
 800c728:	af00      	add	r7, sp, #0
 800c72a:	6078      	str	r0, [r7, #4]
 800c72c:	6878      	ldr	r0, [r7, #4]
 800c72e:	f7ff ffe1 	bl	800c6f4 <_ZN8touchgfx8TextAreaD1Ev>
 800c732:	2148      	movs	r1, #72	; 0x48
 800c734:	6878      	ldr	r0, [r7, #4]
 800c736:	f017 f90c 	bl	8023952 <_ZdlPvj>
 800c73a:	687b      	ldr	r3, [r7, #4]
 800c73c:	4618      	mov	r0, r3
 800c73e:	3708      	adds	r7, #8
 800c740:	46bd      	mov	sp, r7
 800c742:	bd80      	pop	{r7, pc}

0800c744 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800c744:	b580      	push	{r7, lr}
 800c746:	b082      	sub	sp, #8
 800c748:	af00      	add	r7, sp, #0
 800c74a:	6078      	str	r0, [r7, #4]
 800c74c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800c74e:	687b      	ldr	r3, [r7, #4]
 800c750:	685b      	ldr	r3, [r3, #4]
 800c752:	687a      	ldr	r2, [r7, #4]
 800c754:	68d2      	ldr	r2, [r2, #12]
 800c756:	1052      	asrs	r2, r2, #1
 800c758:	1898      	adds	r0, r3, r2
 800c75a:	687b      	ldr	r3, [r7, #4]
 800c75c:	68db      	ldr	r3, [r3, #12]
 800c75e:	f003 0301 	and.w	r3, r3, #1
 800c762:	2b00      	cmp	r3, #0
 800c764:	d102      	bne.n	800c76c <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800c766:	687b      	ldr	r3, [r7, #4]
 800c768:	689b      	ldr	r3, [r3, #8]
 800c76a:	e00a      	b.n	800c782 <_ZN8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	685b      	ldr	r3, [r3, #4]
 800c770:	687a      	ldr	r2, [r7, #4]
 800c772:	68d2      	ldr	r2, [r2, #12]
 800c774:	1052      	asrs	r2, r2, #1
 800c776:	4413      	add	r3, r2
 800c778:	681b      	ldr	r3, [r3, #0]
 800c77a:	687a      	ldr	r2, [r7, #4]
 800c77c:	6892      	ldr	r2, [r2, #8]
 800c77e:	4413      	add	r3, r2
 800c780:	681b      	ldr	r3, [r3, #0]
 800c782:	6839      	ldr	r1, [r7, #0]
 800c784:	4798      	blx	r3
    }
 800c786:	bf00      	nop
 800c788:	3708      	adds	r7, #8
 800c78a:	46bd      	mov	sp, r7
 800c78c:	bd80      	pop	{r7, pc}

0800c78e <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800c78e:	b480      	push	{r7}
 800c790:	b083      	sub	sp, #12
 800c792:	af00      	add	r7, sp, #0
 800c794:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	685b      	ldr	r3, [r3, #4]
 800c79a:	2b00      	cmp	r3, #0
 800c79c:	d010      	beq.n	800c7c0 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800c79e:	687b      	ldr	r3, [r7, #4]
 800c7a0:	689b      	ldr	r3, [r3, #8]
 800c7a2:	2b00      	cmp	r3, #0
 800c7a4:	d107      	bne.n	800c7b6 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800c7a6:	687b      	ldr	r3, [r7, #4]
 800c7a8:	68db      	ldr	r3, [r3, #12]
 800c7aa:	f003 0301 	and.w	r3, r3, #1
 800c7ae:	2b00      	cmp	r3, #0
 800c7b0:	d101      	bne.n	800c7b6 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800c7b2:	2301      	movs	r3, #1
 800c7b4:	e000      	b.n	800c7b8 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800c7b6:	2300      	movs	r3, #0
 800c7b8:	2b01      	cmp	r3, #1
 800c7ba:	d001      	beq.n	800c7c0 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800c7bc:	2301      	movs	r3, #1
 800c7be:	e000      	b.n	800c7c2 <_ZNK8touchgfx8CallbackI15screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800c7c0:	2300      	movs	r3, #0
    }
 800c7c2:	4618      	mov	r0, r3
 800c7c4:	370c      	adds	r7, #12
 800c7c6:	46bd      	mov	sp, r7
 800c7c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7cc:	4770      	bx	lr

0800c7ce <_ZN15Screen2ViewBase11applicationEv>:
    Screen2ViewBase();
    virtual ~Screen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
 800c7ce:	b580      	push	{r7, lr}
 800c7d0:	b082      	sub	sp, #8
 800c7d2:	af00      	add	r7, sp, #0
 800c7d4:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800c7d6:	f006 ff99 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800c7da:	4603      	mov	r3, r0
    }
 800c7dc:	4618      	mov	r0, r3
 800c7de:	3708      	adds	r7, #8
 800c7e0:	46bd      	mov	sp, r7
 800c7e2:	bd80      	pop	{r7, pc}

0800c7e4 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev>:
class View : public Screen
 800c7e4:	b580      	push	{r7, lr}
 800c7e6:	b082      	sub	sp, #8
 800c7e8:	af00      	add	r7, sp, #0
 800c7ea:	6078      	str	r0, [r7, #4]
 800c7ec:	4a05      	ldr	r2, [pc, #20]	; (800c804 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev+0x20>)
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	601a      	str	r2, [r3, #0]
 800c7f2:	687b      	ldr	r3, [r7, #4]
 800c7f4:	4618      	mov	r0, r3
 800c7f6:	f7ff fb33 	bl	800be60 <_ZN8touchgfx6ScreenD1Ev>
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	4618      	mov	r0, r3
 800c7fe:	3708      	adds	r7, #8
 800c800:	46bd      	mov	sp, r7
 800c802:	bd80      	pop	{r7, pc}
 800c804:	08025718 	.word	0x08025718

0800c808 <_ZN8touchgfx4ViewI16Screen2PresenterED0Ev>:
 800c808:	b580      	push	{r7, lr}
 800c80a:	b082      	sub	sp, #8
 800c80c:	af00      	add	r7, sp, #0
 800c80e:	6078      	str	r0, [r7, #4]
 800c810:	6878      	ldr	r0, [r7, #4]
 800c812:	f7ff ffe7 	bl	800c7e4 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev>
 800c816:	2140      	movs	r1, #64	; 0x40
 800c818:	6878      	ldr	r0, [r7, #4]
 800c81a:	f017 f89a 	bl	8023952 <_ZdlPvj>
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	4618      	mov	r0, r3
 800c822:	3708      	adds	r7, #8
 800c824:	46bd      	mov	sp, r7
 800c826:	bd80      	pop	{r7, pc}

0800c828 <_ZN15Screen2ViewBaseC1Ev>:
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
 800c828:	b590      	push	{r4, r7, lr}
 800c82a:	b097      	sub	sp, #92	; 0x5c
 800c82c:	af02      	add	r7, sp, #8
 800c82e:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
 800c830:	697b      	ldr	r3, [r7, #20]
 800c832:	4618      	mov	r0, r3
 800c834:	f000 f948 	bl	800cac8 <_ZN8touchgfx4ViewI16Screen2PresenterEC1Ev>
 800c838:	4a76      	ldr	r2, [pc, #472]	; (800ca14 <_ZN15Screen2ViewBaseC1Ev+0x1ec>)
 800c83a:	697b      	ldr	r3, [r7, #20]
 800c83c:	601a      	str	r2, [r3, #0]
 800c83e:	697b      	ldr	r3, [r7, #20]
 800c840:	3340      	adds	r3, #64	; 0x40
 800c842:	4618      	mov	r0, r3
 800c844:	f7ff fbca 	bl	800bfdc <_ZN8touchgfx3BoxC1Ev>
 800c848:	697b      	ldr	r3, [r7, #20]
 800c84a:	336c      	adds	r3, #108	; 0x6c
 800c84c:	4618      	mov	r0, r3
 800c84e:	f7ff fc4d 	bl	800c0ec <_ZN8touchgfx6ButtonC1Ev>
 800c852:	697b      	ldr	r3, [r7, #20]
 800c854:	33a0      	adds	r3, #160	; 0xa0
 800c856:	4618      	mov	r0, r3
 800c858:	f7ff fc82 	bl	800c160 <_ZN8touchgfx8TextAreaC1Ev>
 800c85c:	697b      	ldr	r3, [r7, #20]
 800c85e:	f103 00e8 	add.w	r0, r3, #232	; 0xe8
 800c862:	4b6d      	ldr	r3, [pc, #436]	; (800ca18 <_ZN15Screen2ViewBaseC1Ev+0x1f0>)
 800c864:	61fb      	str	r3, [r7, #28]
 800c866:	2300      	movs	r3, #0
 800c868:	623b      	str	r3, [r7, #32]
 800c86a:	f107 031c 	add.w	r3, r7, #28
 800c86e:	cb0c      	ldmia	r3, {r2, r3}
 800c870:	6979      	ldr	r1, [r7, #20]
 800c872:	f000 f93f 	bl	800caf4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 1024, 600);
 800c876:	697b      	ldr	r3, [r7, #20]
 800c878:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800c87c:	f44f 7316 	mov.w	r3, #600	; 0x258
 800c880:	9300      	str	r3, [sp, #0]
 800c882:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c886:	2200      	movs	r2, #0
 800c888:	2100      	movs	r1, #0
 800c88a:	f7ff f9a3 	bl	800bbd4 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800c88e:	697b      	ldr	r3, [r7, #20]
 800c890:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800c894:	2300      	movs	r3, #0
 800c896:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 800c89a:	2300      	movs	r3, #0
 800c89c:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 800c8a0:	2300      	movs	r3, #0
 800c8a2:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 800c8a6:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800c8aa:	041b      	lsls	r3, r3, #16
 800c8ac:	461a      	mov	r2, r3
 800c8ae:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800c8b2:	021b      	lsls	r3, r3, #8
 800c8b4:	431a      	orrs	r2, r3
 800c8b6:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 800c8ba:	4313      	orrs	r3, r2
 800c8bc:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c8c0:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c8c4:	4611      	mov	r1, r2
 800c8c6:	4618      	mov	r0, r3
 800c8c8:	f7ff f8c0 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
 800c8cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c8ce:	4619      	mov	r1, r3
 800c8d0:	4620      	mov	r0, r4
 800c8d2:	f7ff fba7 	bl	800c024 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800c8d6:	697a      	ldr	r2, [r7, #20]
 800c8d8:	697b      	ldr	r3, [r7, #20]
 800c8da:	3340      	adds	r3, #64	; 0x40
 800c8dc:	4619      	mov	r1, r3
 800c8de:	4610      	mov	r0, r2
 800c8e0:	f7ff fb16 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    button1.setXY(457, 422);
 800c8e4:	697b      	ldr	r3, [r7, #20]
 800c8e6:	336c      	adds	r3, #108	; 0x6c
 800c8e8:	f44f 72d3 	mov.w	r2, #422	; 0x1a6
 800c8ec:	f240 11c9 	movw	r1, #457	; 0x1c9
 800c8f0:	4618      	mov	r0, r3
 800c8f2:	f7ff f9ae 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_DISABLED_ID));
 800c8f6:	697b      	ldr	r3, [r7, #20]
 800c8f8:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800c8fc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c900:	2100      	movs	r1, #0
 800c902:	4618      	mov	r0, r3
 800c904:	f7ff f8e8 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c908:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c90c:	2102      	movs	r1, #2
 800c90e:	4618      	mov	r0, r3
 800c910:	f7ff f8e2 	bl	800bad8 <_ZN8touchgfx6BitmapC1Et>
 800c914:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800c918:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c91c:	4619      	mov	r1, r3
 800c91e:	4620      	mov	r0, r4
 800c920:	f005 f97a 	bl	8011c18 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 800c924:	697b      	ldr	r3, [r7, #20]
 800c926:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 800c92a:	697b      	ldr	r3, [r7, #20]
 800c92c:	33e8      	adds	r3, #232	; 0xe8
 800c92e:	4619      	mov	r1, r3
 800c930:	4610      	mov	r0, r2
 800c932:	f7ff fbab 	bl	800c08c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(button1);
 800c936:	697a      	ldr	r2, [r7, #20]
 800c938:	697b      	ldr	r3, [r7, #20]
 800c93a:	336c      	adds	r3, #108	; 0x6c
 800c93c:	4619      	mov	r1, r3
 800c93e:	4610      	mov	r0, r2
 800c940:	f7ff fae6 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(381, 190);
 800c944:	697b      	ldr	r3, [r7, #20]
 800c946:	33a0      	adds	r3, #160	; 0xa0
 800c948:	22be      	movs	r2, #190	; 0xbe
 800c94a:	f240 117d 	movw	r1, #381	; 0x17d
 800c94e:	4618      	mov	r0, r3
 800c950:	f7ff f97f 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(250, 245, 245));
 800c954:	697b      	ldr	r3, [r7, #20]
 800c956:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800c95a:	23fa      	movs	r3, #250	; 0xfa
 800c95c:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c960:	23f5      	movs	r3, #245	; 0xf5
 800c962:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800c966:	23f5      	movs	r3, #245	; 0xf5
 800c968:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 800c96c:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800c970:	041b      	lsls	r3, r3, #16
 800c972:	461a      	mov	r2, r3
 800c974:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800c978:	021b      	lsls	r3, r3, #8
 800c97a:	431a      	orrs	r2, r3
 800c97c:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800c980:	4313      	orrs	r3, r2
 800c982:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800c986:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c98a:	4611      	mov	r1, r2
 800c98c:	4618      	mov	r0, r3
 800c98e:	f7ff f85d 	bl	800ba4c <_ZN8touchgfx9colortypeC1Em>
 800c992:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c994:	647c      	str	r4, [r7, #68]	; 0x44
 800c996:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800c998:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800c99a:	69ba      	ldr	r2, [r7, #24]
 800c99c:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800c99e:	bf00      	nop
    textArea1.setLinespacing(0);
 800c9a0:	697b      	ldr	r3, [r7, #20]
 800c9a2:	33a0      	adds	r3, #160	; 0xa0
 800c9a4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c9a6:	2300      	movs	r3, #0
 800c9a8:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
        linespace = space;
 800c9ac:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c9ae:	f8b7 204a 	ldrh.w	r2, [r7, #74]	; 0x4a
 800c9b2:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800c9b4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c9b6:	681b      	ldr	r3, [r3, #0]
 800c9b8:	3384      	adds	r3, #132	; 0x84
 800c9ba:	681b      	ldr	r3, [r3, #0]
 800c9bc:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800c9be:	463a      	mov	r2, r7
 800c9c0:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 800c9c2:	4610      	mov	r0, r2
 800c9c4:	4798      	blx	r3
 800c9c6:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800c9ca:	463a      	mov	r2, r7
 800c9cc:	ca07      	ldmia	r2, {r0, r1, r2}
 800c9ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c9d2:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID1));
 800c9d4:	697b      	ldr	r3, [r7, #20]
 800c9d6:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800c9da:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c9de:	2100      	movs	r1, #0
 800c9e0:	4618      	mov	r0, r3
 800c9e2:	f7ff fba7 	bl	800c134 <_ZN8touchgfx9TypedTextC1Et>
 800c9e6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c9ea:	4619      	mov	r1, r3
 800c9ec:	4620      	mov	r0, r4
 800c9ee:	f005 f8c1 	bl	8011b74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c9f2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800c9f6:	4618      	mov	r0, r3
 800c9f8:	f7fd ff62 	bl	800a8c0 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800c9fc:	697a      	ldr	r2, [r7, #20]
 800c9fe:	697b      	ldr	r3, [r7, #20]
 800ca00:	33a0      	adds	r3, #160	; 0xa0
 800ca02:	4619      	mov	r1, r3
 800ca04:	4610      	mov	r0, r2
 800ca06:	f7ff fa83 	bl	800bf10 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ca0a:	697b      	ldr	r3, [r7, #20]
 800ca0c:	4618      	mov	r0, r3
 800ca0e:	3754      	adds	r7, #84	; 0x54
 800ca10:	46bd      	mov	sp, r7
 800ca12:	bd90      	pop	{r4, r7, pc}
 800ca14:	080256cc 	.word	0x080256cc
 800ca18:	0800ca9d 	.word	0x0800ca9d

0800ca1c <_ZN15Screen2ViewBaseD1Ev>:

Screen2ViewBase::~Screen2ViewBase()
 800ca1c:	b580      	push	{r7, lr}
 800ca1e:	b082      	sub	sp, #8
 800ca20:	af00      	add	r7, sp, #0
 800ca22:	6078      	str	r0, [r7, #4]
 800ca24:	4a0f      	ldr	r2, [pc, #60]	; (800ca64 <_ZN15Screen2ViewBaseD1Ev+0x48>)
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	601a      	str	r2, [r3, #0]
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	33e8      	adds	r3, #232	; 0xe8
 800ca2e:	4618      	mov	r0, r3
 800ca30:	f000 f880 	bl	800cb34 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ca34:	687b      	ldr	r3, [r7, #4]
 800ca36:	33a0      	adds	r3, #160	; 0xa0
 800ca38:	4618      	mov	r0, r3
 800ca3a:	f7ff fe5b 	bl	800c6f4 <_ZN8touchgfx8TextAreaD1Ev>
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	336c      	adds	r3, #108	; 0x6c
 800ca42:	4618      	mov	r0, r3
 800ca44:	f7ff fe34 	bl	800c6b0 <_ZN8touchgfx6ButtonD1Ev>
 800ca48:	687b      	ldr	r3, [r7, #4]
 800ca4a:	3340      	adds	r3, #64	; 0x40
 800ca4c:	4618      	mov	r0, r3
 800ca4e:	f7ff fe0d 	bl	800c66c <_ZN8touchgfx3BoxD1Ev>
 800ca52:	687b      	ldr	r3, [r7, #4]
 800ca54:	4618      	mov	r0, r3
 800ca56:	f7ff fec5 	bl	800c7e4 <_ZN8touchgfx4ViewI16Screen2PresenterED1Ev>
{

}
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	4618      	mov	r0, r3
 800ca5e:	3708      	adds	r7, #8
 800ca60:	46bd      	mov	sp, r7
 800ca62:	bd80      	pop	{r7, pc}
 800ca64:	080256cc 	.word	0x080256cc

0800ca68 <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
 800ca68:	b580      	push	{r7, lr}
 800ca6a:	b082      	sub	sp, #8
 800ca6c:	af00      	add	r7, sp, #0
 800ca6e:	6078      	str	r0, [r7, #4]
}
 800ca70:	6878      	ldr	r0, [r7, #4]
 800ca72:	f7ff ffd3 	bl	800ca1c <_ZN15Screen2ViewBaseD1Ev>
 800ca76:	21f8      	movs	r1, #248	; 0xf8
 800ca78:	6878      	ldr	r0, [r7, #4]
 800ca7a:	f016 ff6a 	bl	8023952 <_ZdlPvj>
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	4618      	mov	r0, r3
 800ca82:	3708      	adds	r7, #8
 800ca84:	46bd      	mov	sp, r7
 800ca86:	bd80      	pop	{r7, pc}

0800ca88 <_ZN15Screen2ViewBase11setupScreenEv>:

void Screen2ViewBase::setupScreen()
{
 800ca88:	b480      	push	{r7}
 800ca8a:	b083      	sub	sp, #12
 800ca8c:	af00      	add	r7, sp, #0
 800ca8e:	6078      	str	r0, [r7, #4]

}
 800ca90:	bf00      	nop
 800ca92:	370c      	adds	r7, #12
 800ca94:	46bd      	mov	sp, r7
 800ca96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca9a:	4770      	bx	lr

0800ca9c <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ca9c:	b580      	push	{r7, lr}
 800ca9e:	b082      	sub	sp, #8
 800caa0:	af00      	add	r7, sp, #0
 800caa2:	6078      	str	r0, [r7, #4]
 800caa4:	6039      	str	r1, [r7, #0]
    if (&src == &button1)
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	336c      	adds	r3, #108	; 0x6c
 800caaa:	683a      	ldr	r2, [r7, #0]
 800caac:	429a      	cmp	r2, r3
 800caae:	d106      	bne.n	800cabe <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction1
        //When button1 clicked change screen to screen1
        //Go to screen1 with no screen transition
        application().gotoscreen1ScreenNoTransition();
 800cab0:	6878      	ldr	r0, [r7, #4]
 800cab2:	f7ff fe8c 	bl	800c7ce <_ZN15Screen2ViewBase11applicationEv>
 800cab6:	4603      	mov	r3, r0
 800cab8:	4618      	mov	r0, r3
 800caba:	f7fe fba9 	bl	800b210 <_ZN23FrontendApplicationBase29gotoscreen1ScreenNoTransitionEv>
    }
}
 800cabe:	bf00      	nop
 800cac0:	3708      	adds	r7, #8
 800cac2:	46bd      	mov	sp, r7
 800cac4:	bd80      	pop	{r7, pc}
	...

0800cac8 <_ZN8touchgfx4ViewI16Screen2PresenterEC1Ev>:
    View()
 800cac8:	b580      	push	{r7, lr}
 800caca:	b082      	sub	sp, #8
 800cacc:	af00      	add	r7, sp, #0
 800cace:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	4618      	mov	r0, r3
 800cad4:	f008 f932 	bl	8014d3c <_ZN8touchgfx6ScreenC1Ev>
 800cad8:	4a05      	ldr	r2, [pc, #20]	; (800caf0 <_ZN8touchgfx4ViewI16Screen2PresenterEC1Ev+0x28>)
 800cada:	687b      	ldr	r3, [r7, #4]
 800cadc:	601a      	str	r2, [r3, #0]
 800cade:	687b      	ldr	r3, [r7, #4]
 800cae0:	2200      	movs	r2, #0
 800cae2:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800cae4:	687b      	ldr	r3, [r7, #4]
 800cae6:	4618      	mov	r0, r3
 800cae8:	3708      	adds	r7, #8
 800caea:	46bd      	mov	sp, r7
 800caec:	bd80      	pop	{r7, pc}
 800caee:	bf00      	nop
 800caf0:	08025718 	.word	0x08025718

0800caf4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800caf4:	b580      	push	{r7, lr}
 800caf6:	b084      	sub	sp, #16
 800caf8:	af00      	add	r7, sp, #0
 800cafa:	60f8      	str	r0, [r7, #12]
 800cafc:	60b9      	str	r1, [r7, #8]
 800cafe:	4639      	mov	r1, r7
 800cb00:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800cb04:	68fb      	ldr	r3, [r7, #12]
 800cb06:	4618      	mov	r0, r3
 800cb08:	f7ff fd1c 	bl	800c544 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800cb0c:	4a08      	ldr	r2, [pc, #32]	; (800cb30 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800cb0e:	68fb      	ldr	r3, [r7, #12]
 800cb10:	601a      	str	r2, [r3, #0]
 800cb12:	68fb      	ldr	r3, [r7, #12]
 800cb14:	68ba      	ldr	r2, [r7, #8]
 800cb16:	605a      	str	r2, [r3, #4]
 800cb18:	68fb      	ldr	r3, [r7, #12]
 800cb1a:	3308      	adds	r3, #8
 800cb1c:	463a      	mov	r2, r7
 800cb1e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cb22:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800cb26:	68fb      	ldr	r3, [r7, #12]
 800cb28:	4618      	mov	r0, r3
 800cb2a:	3710      	adds	r7, #16
 800cb2c:	46bd      	mov	sp, r7
 800cb2e:	bd80      	pop	{r7, pc}
 800cb30:	08025700 	.word	0x08025700

0800cb34 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800cb34:	b580      	push	{r7, lr}
 800cb36:	b082      	sub	sp, #8
 800cb38:	af00      	add	r7, sp, #0
 800cb3a:	6078      	str	r0, [r7, #4]
 800cb3c:	4a05      	ldr	r2, [pc, #20]	; (800cb54 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800cb3e:	687b      	ldr	r3, [r7, #4]
 800cb40:	601a      	str	r2, [r3, #0]
 800cb42:	687b      	ldr	r3, [r7, #4]
 800cb44:	4618      	mov	r0, r3
 800cb46:	f7ff fd2d 	bl	800c5a4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800cb4a:	687b      	ldr	r3, [r7, #4]
 800cb4c:	4618      	mov	r0, r3
 800cb4e:	3708      	adds	r7, #8
 800cb50:	46bd      	mov	sp, r7
 800cb52:	bd80      	pop	{r7, pc}
 800cb54:	08025700 	.word	0x08025700

0800cb58 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800cb58:	b580      	push	{r7, lr}
 800cb5a:	b082      	sub	sp, #8
 800cb5c:	af00      	add	r7, sp, #0
 800cb5e:	6078      	str	r0, [r7, #4]
 800cb60:	6878      	ldr	r0, [r7, #4]
 800cb62:	f7ff ffe7 	bl	800cb34 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800cb66:	2110      	movs	r1, #16
 800cb68:	6878      	ldr	r0, [r7, #4]
 800cb6a:	f016 fef2 	bl	8023952 <_ZdlPvj>
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	4618      	mov	r0, r3
 800cb72:	3708      	adds	r7, #8
 800cb74:	46bd      	mov	sp, r7
 800cb76:	bd80      	pop	{r7, pc}

0800cb78 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800cb78:	b580      	push	{r7, lr}
 800cb7a:	b082      	sub	sp, #8
 800cb7c:	af00      	add	r7, sp, #0
 800cb7e:	6078      	str	r0, [r7, #4]
 800cb80:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cb82:	687b      	ldr	r3, [r7, #4]
 800cb84:	685b      	ldr	r3, [r3, #4]
 800cb86:	687a      	ldr	r2, [r7, #4]
 800cb88:	68d2      	ldr	r2, [r2, #12]
 800cb8a:	1052      	asrs	r2, r2, #1
 800cb8c:	1898      	adds	r0, r3, r2
 800cb8e:	687b      	ldr	r3, [r7, #4]
 800cb90:	68db      	ldr	r3, [r3, #12]
 800cb92:	f003 0301 	and.w	r3, r3, #1
 800cb96:	2b00      	cmp	r3, #0
 800cb98:	d102      	bne.n	800cba0 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	689b      	ldr	r3, [r3, #8]
 800cb9e:	e00a      	b.n	800cbb6 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800cba0:	687b      	ldr	r3, [r7, #4]
 800cba2:	685b      	ldr	r3, [r3, #4]
 800cba4:	687a      	ldr	r2, [r7, #4]
 800cba6:	68d2      	ldr	r2, [r2, #12]
 800cba8:	1052      	asrs	r2, r2, #1
 800cbaa:	4413      	add	r3, r2
 800cbac:	681b      	ldr	r3, [r3, #0]
 800cbae:	687a      	ldr	r2, [r7, #4]
 800cbb0:	6892      	ldr	r2, [r2, #8]
 800cbb2:	4413      	add	r3, r2
 800cbb4:	681b      	ldr	r3, [r3, #0]
 800cbb6:	6839      	ldr	r1, [r7, #0]
 800cbb8:	4798      	blx	r3
    }
 800cbba:	bf00      	nop
 800cbbc:	3708      	adds	r7, #8
 800cbbe:	46bd      	mov	sp, r7
 800cbc0:	bd80      	pop	{r7, pc}

0800cbc2 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800cbc2:	b480      	push	{r7}
 800cbc4:	b083      	sub	sp, #12
 800cbc6:	af00      	add	r7, sp, #0
 800cbc8:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	685b      	ldr	r3, [r3, #4]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	d010      	beq.n	800cbf4 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	689b      	ldr	r3, [r3, #8]
 800cbd6:	2b00      	cmp	r3, #0
 800cbd8:	d107      	bne.n	800cbea <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cbda:	687b      	ldr	r3, [r7, #4]
 800cbdc:	68db      	ldr	r3, [r3, #12]
 800cbde:	f003 0301 	and.w	r3, r3, #1
 800cbe2:	2b00      	cmp	r3, #0
 800cbe4:	d101      	bne.n	800cbea <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cbe6:	2301      	movs	r3, #1
 800cbe8:	e000      	b.n	800cbec <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800cbea:	2300      	movs	r3, #0
 800cbec:	2b01      	cmp	r3, #1
 800cbee:	d001      	beq.n	800cbf4 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cbf0:	2301      	movs	r3, #1
 800cbf2:	e000      	b.n	800cbf6 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800cbf4:	2300      	movs	r3, #0
    }
 800cbf6:	4618      	mov	r0, r3
 800cbf8:	370c      	adds	r7, #12
 800cbfa:	46bd      	mov	sp, r7
 800cbfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc00:	4770      	bx	lr
	...

0800cc04 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800cc04:	b480      	push	{r7}
 800cc06:	af00      	add	r7, sp, #0
    return bitmap_database;
 800cc08:	4b02      	ldr	r3, [pc, #8]	; (800cc14 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800cc0a:	4618      	mov	r0, r3
 800cc0c:	46bd      	mov	sp, r7
 800cc0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc12:	4770      	bx	lr
 800cc14:	08025744 	.word	0x08025744

0800cc18 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800cc18:	b480      	push	{r7}
 800cc1a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800cc1c:	2304      	movs	r3, #4
}
 800cc1e:	4618      	mov	r0, r3
 800cc20:	46bd      	mov	sp, r7
 800cc22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc26:	4770      	bx	lr

0800cc28 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800cc28:	b480      	push	{r7}
 800cc2a:	b085      	sub	sp, #20
 800cc2c:	af00      	add	r7, sp, #0
 800cc2e:	60f8      	str	r0, [r7, #12]
 800cc30:	460b      	mov	r3, r1
 800cc32:	607a      	str	r2, [r7, #4]
 800cc34:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800cc36:	2300      	movs	r3, #0
    }
 800cc38:	4618      	mov	r0, r3
 800cc3a:	3714      	adds	r7, #20
 800cc3c:	46bd      	mov	sp, r7
 800cc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc42:	4770      	bx	lr

0800cc44 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800cc44:	b480      	push	{r7}
 800cc46:	b083      	sub	sp, #12
 800cc48:	af00      	add	r7, sp, #0
 800cc4a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800cc4c:	2300      	movs	r3, #0
    }
 800cc4e:	4618      	mov	r0, r3
 800cc50:	370c      	adds	r7, #12
 800cc52:	46bd      	mov	sp, r7
 800cc54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc58:	4770      	bx	lr

0800cc5a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800cc5a:	b480      	push	{r7}
 800cc5c:	b083      	sub	sp, #12
 800cc5e:	af00      	add	r7, sp, #0
 800cc60:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800cc62:	2300      	movs	r3, #0
    }
 800cc64:	4618      	mov	r0, r3
 800cc66:	370c      	adds	r7, #12
 800cc68:	46bd      	mov	sp, r7
 800cc6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc6e:	4770      	bx	lr

0800cc70 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800cc70:	b480      	push	{r7}
 800cc72:	b085      	sub	sp, #20
 800cc74:	af00      	add	r7, sp, #0
 800cc76:	60f8      	str	r0, [r7, #12]
 800cc78:	60b9      	str	r1, [r7, #8]
 800cc7a:	4613      	mov	r3, r2
 800cc7c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800cc7e:	4a07      	ldr	r2, [pc, #28]	; (800cc9c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800cc80:	68fb      	ldr	r3, [r7, #12]
 800cc82:	6013      	str	r3, [r2, #0]
        fonts = f;
 800cc84:	4a06      	ldr	r2, [pc, #24]	; (800cca0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800cc86:	68bb      	ldr	r3, [r7, #8]
 800cc88:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800cc8a:	4a06      	ldr	r2, [pc, #24]	; (800cca4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800cc8c:	88fb      	ldrh	r3, [r7, #6]
 800cc8e:	8013      	strh	r3, [r2, #0]
    }
 800cc90:	bf00      	nop
 800cc92:	3714      	adds	r7, #20
 800cc94:	46bd      	mov	sp, r7
 800cc96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc9a:	4770      	bx	lr
 800cc9c:	24001700 	.word	0x24001700
 800cca0:	24001708 	.word	0x24001708
 800cca4:	24001704 	.word	0x24001704

0800cca8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800cca8:	b40e      	push	{r1, r2, r3}
 800ccaa:	b580      	push	{r7, lr}
 800ccac:	b085      	sub	sp, #20
 800ccae:	af00      	add	r7, sp, #0
 800ccb0:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800ccb2:	f107 0320 	add.w	r3, r7, #32
 800ccb6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800ccb8:	68bb      	ldr	r3, [r7, #8]
 800ccba:	69fa      	ldr	r2, [r7, #28]
 800ccbc:	2100      	movs	r1, #0
 800ccbe:	6878      	ldr	r0, [r7, #4]
 800ccc0:	f007 fc72 	bl	80145a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800ccc4:	4603      	mov	r3, r0
 800ccc6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ccc8:	89fb      	ldrh	r3, [r7, #14]
}
 800ccca:	4618      	mov	r0, r3
 800cccc:	3714      	adds	r7, #20
 800ccce:	46bd      	mov	sp, r7
 800ccd0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ccd4:	b003      	add	sp, #12
 800ccd6:	4770      	bx	lr

0800ccd8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ccd8:	b40c      	push	{r2, r3}
 800ccda:	b580      	push	{r7, lr}
 800ccdc:	b084      	sub	sp, #16
 800ccde:	af00      	add	r7, sp, #0
 800cce0:	6078      	str	r0, [r7, #4]
 800cce2:	460b      	mov	r3, r1
 800cce4:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800cce6:	f107 031c 	add.w	r3, r7, #28
 800ccea:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800ccec:	78f9      	ldrb	r1, [r7, #3]
 800ccee:	68bb      	ldr	r3, [r7, #8]
 800ccf0:	69ba      	ldr	r2, [r7, #24]
 800ccf2:	6878      	ldr	r0, [r7, #4]
 800ccf4:	f007 fc58 	bl	80145a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800ccf8:	4603      	mov	r3, r0
 800ccfa:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ccfc:	89fb      	ldrh	r3, [r7, #14]
}
 800ccfe:	4618      	mov	r0, r3
 800cd00:	3710      	adds	r7, #16
 800cd02:	46bd      	mov	sp, r7
 800cd04:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800cd08:	b002      	add	sp, #8
 800cd0a:	4770      	bx	lr

0800cd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800cd0c:	b580      	push	{r7, lr}
 800cd0e:	b08a      	sub	sp, #40	; 0x28
 800cd10:	af00      	add	r7, sp, #0
 800cd12:	6078      	str	r0, [r7, #4]
 800cd14:	460b      	mov	r3, r1
 800cd16:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800cd18:	687b      	ldr	r3, [r7, #4]
 800cd1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cd1c:	2b00      	cmp	r3, #0
 800cd1e:	d016      	beq.n	800cd4e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	3322      	adds	r3, #34	; 0x22
 800cd24:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800cd26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd28:	8adb      	ldrh	r3, [r3, #22]
 800cd2a:	2b00      	cmp	r3, #0
 800cd2c:	d105      	bne.n	800cd3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800cd2e:	4b43      	ldr	r3, [pc, #268]	; (800ce3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800cd30:	4a43      	ldr	r2, [pc, #268]	; (800ce40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800cd32:	21c5      	movs	r1, #197	; 0xc5
 800cd34:	4843      	ldr	r0, [pc, #268]	; (800ce44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cd36:	f016 fe3b 	bl	80239b0 <__assert_func>
            return buffer[pos];
 800cd3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd3c:	8a9b      	ldrh	r3, [r3, #20]
 800cd3e:	461a      	mov	r2, r3
 800cd40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd42:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800cd46:	2b00      	cmp	r3, #0
 800cd48:	d001      	beq.n	800cd4e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cd4a:	2301      	movs	r3, #1
 800cd4c:	e000      	b.n	800cd50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800cd4e:	2300      	movs	r3, #0
 800cd50:	2b00      	cmp	r3, #0
 800cd52:	d06a      	beq.n	800ce2a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800cd54:	6878      	ldr	r0, [r7, #4]
 800cd56:	f008 fecd 	bl	8015af4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800cd5a:	687b      	ldr	r3, [r7, #4]
 800cd5c:	3322      	adds	r3, #34	; 0x22
 800cd5e:	623b      	str	r3, [r7, #32]
 800cd60:	2301      	movs	r3, #1
 800cd62:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800cd64:	6a3b      	ldr	r3, [r7, #32]
 800cd66:	8adb      	ldrh	r3, [r3, #22]
 800cd68:	8bfa      	ldrh	r2, [r7, #30]
 800cd6a:	429a      	cmp	r2, r3
 800cd6c:	d305      	bcc.n	800cd7a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800cd6e:	4b36      	ldr	r3, [pc, #216]	; (800ce48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800cd70:	4a36      	ldr	r2, [pc, #216]	; (800ce4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800cd72:	21cb      	movs	r1, #203	; 0xcb
 800cd74:	4833      	ldr	r0, [pc, #204]	; (800ce44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cd76:	f016 fe1b 	bl	80239b0 <__assert_func>
            const uint16_t index = pos + offset;
 800cd7a:	6a3b      	ldr	r3, [r7, #32]
 800cd7c:	8a9a      	ldrh	r2, [r3, #20]
 800cd7e:	8bfb      	ldrh	r3, [r7, #30]
 800cd80:	4413      	add	r3, r2
 800cd82:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800cd84:	8bbb      	ldrh	r3, [r7, #28]
 800cd86:	2b09      	cmp	r3, #9
 800cd88:	d801      	bhi.n	800cd8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800cd8a:	8bbb      	ldrh	r3, [r7, #28]
 800cd8c:	e001      	b.n	800cd92 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800cd8e:	8bbb      	ldrh	r3, [r7, #28]
 800cd90:	3b0a      	subs	r3, #10
 800cd92:	6a3a      	ldr	r2, [r7, #32]
 800cd94:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800cd98:	f640 123f 	movw	r2, #2367	; 0x93f
 800cd9c:	4293      	cmp	r3, r2
 800cd9e:	bf0c      	ite	eq
 800cda0:	2301      	moveq	r3, #1
 800cda2:	2300      	movne	r3, #0
 800cda4:	b2db      	uxtb	r3, r3
 800cda6:	2b00      	cmp	r3, #0
 800cda8:	d03f      	beq.n	800ce2a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800cdaa:	687b      	ldr	r3, [r7, #4]
 800cdac:	3322      	adds	r3, #34	; 0x22
 800cdae:	687a      	ldr	r2, [r7, #4]
 800cdb0:	3222      	adds	r2, #34	; 0x22
 800cdb2:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800cdb4:	68ba      	ldr	r2, [r7, #8]
 800cdb6:	8ad2      	ldrh	r2, [r2, #22]
 800cdb8:	2a00      	cmp	r2, #0
 800cdba:	d105      	bne.n	800cdc8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800cdbc:	4b1f      	ldr	r3, [pc, #124]	; (800ce3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800cdbe:	4a20      	ldr	r2, [pc, #128]	; (800ce40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800cdc0:	21c5      	movs	r1, #197	; 0xc5
 800cdc2:	4820      	ldr	r0, [pc, #128]	; (800ce44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cdc4:	f016 fdf4 	bl	80239b0 <__assert_func>
            return buffer[pos];
 800cdc8:	68ba      	ldr	r2, [r7, #8]
 800cdca:	8a92      	ldrh	r2, [r2, #20]
 800cdcc:	4611      	mov	r1, r2
 800cdce:	68ba      	ldr	r2, [r7, #8]
 800cdd0:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800cdd4:	613b      	str	r3, [r7, #16]
 800cdd6:	4613      	mov	r3, r2
 800cdd8:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800cdda:	693b      	ldr	r3, [r7, #16]
 800cddc:	8adb      	ldrh	r3, [r3, #22]
 800cdde:	2b01      	cmp	r3, #1
 800cde0:	d806      	bhi.n	800cdf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800cde2:	4b1b      	ldr	r3, [pc, #108]	; (800ce50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800cde4:	4a1b      	ldr	r2, [pc, #108]	; (800ce54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800cde6:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800cdea:	4816      	ldr	r0, [pc, #88]	; (800ce44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cdec:	f016 fde0 	bl	80239b0 <__assert_func>
            const uint16_t index = pos + 1;
 800cdf0:	693b      	ldr	r3, [r7, #16]
 800cdf2:	8a9b      	ldrh	r3, [r3, #20]
 800cdf4:	3301      	adds	r3, #1
 800cdf6:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800cdf8:	89bb      	ldrh	r3, [r7, #12]
 800cdfa:	2b09      	cmp	r3, #9
 800cdfc:	d801      	bhi.n	800ce02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800cdfe:	89bb      	ldrh	r3, [r7, #12]
 800ce00:	e000      	b.n	800ce04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800ce02:	2300      	movs	r3, #0
 800ce04:	693a      	ldr	r2, [r7, #16]
 800ce06:	89f9      	ldrh	r1, [r7, #14]
 800ce08:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800ce0c:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800ce0e:	687b      	ldr	r3, [r7, #4]
 800ce10:	3322      	adds	r3, #34	; 0x22
 800ce12:	61bb      	str	r3, [r7, #24]
 800ce14:	f640 133f 	movw	r3, #2367	; 0x93f
 800ce18:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800ce1a:	69bb      	ldr	r3, [r7, #24]
 800ce1c:	8a9b      	ldrh	r3, [r3, #20]
 800ce1e:	4619      	mov	r1, r3
 800ce20:	69bb      	ldr	r3, [r7, #24]
 800ce22:	8afa      	ldrh	r2, [r7, #22]
 800ce24:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800ce28:	bf00      	nop
        }
    }
    return getNextChar();
 800ce2a:	6878      	ldr	r0, [r7, #4]
 800ce2c:	f008 fd64 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ce30:	4603      	mov	r3, r0
}
 800ce32:	4618      	mov	r0, r3
 800ce34:	3728      	adds	r7, #40	; 0x28
 800ce36:	46bd      	mov	sp, r7
 800ce38:	bd80      	pop	{r7, pc}
 800ce3a:	bf00      	nop
 800ce3c:	08024e14 	.word	0x08024e14
 800ce40:	08024e20 	.word	0x08024e20
 800ce44:	08024ecc 	.word	0x08024ecc
 800ce48:	08024f14 	.word	0x08024f14
 800ce4c:	08024f24 	.word	0x08024f24
 800ce50:	08024ff8 	.word	0x08024ff8
 800ce54:	08025004 	.word	0x08025004

0800ce58 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800ce58:	b580      	push	{r7, lr}
 800ce5a:	b082      	sub	sp, #8
 800ce5c:	af00      	add	r7, sp, #0
 800ce5e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800ce60:	6878      	ldr	r0, [r7, #4]
 800ce62:	f008 fd12 	bl	801588a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800ce66:	bf00      	nop
 800ce68:	3708      	adds	r7, #8
 800ce6a:	46bd      	mov	sp, r7
 800ce6c:	bd80      	pop	{r7, pc}

0800ce6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ce6e:	b580      	push	{r7, lr}
 800ce70:	b088      	sub	sp, #32
 800ce72:	af02      	add	r7, sp, #8
 800ce74:	60f8      	str	r0, [r7, #12]
 800ce76:	1d38      	adds	r0, r7, #4
 800ce78:	e880 0006 	stmia.w	r0, {r1, r2}
 800ce7c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800ce7e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800ce82:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ce84:	1d39      	adds	r1, r7, #4
 800ce86:	697b      	ldr	r3, [r7, #20]
 800ce88:	9301      	str	r3, [sp, #4]
 800ce8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce8c:	9300      	str	r3, [sp, #0]
 800ce8e:	6a3b      	ldr	r3, [r7, #32]
 800ce90:	683a      	ldr	r2, [r7, #0]
 800ce92:	68f8      	ldr	r0, [r7, #12]
 800ce94:	f005 ffe2 	bl	8012e5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ce98:	bf00      	nop
 800ce9a:	3718      	adds	r7, #24
 800ce9c:	46bd      	mov	sp, r7
 800ce9e:	bd80      	pop	{r7, pc}

0800cea0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800cea0:	b590      	push	{r4, r7, lr}
 800cea2:	b085      	sub	sp, #20
 800cea4:	af00      	add	r7, sp, #0
 800cea6:	4603      	mov	r3, r0
 800cea8:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800ceaa:	2300      	movs	r3, #0
 800ceac:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800ceae:	88fb      	ldrh	r3, [r7, #6]
 800ceb0:	2b00      	cmp	r3, #0
 800ceb2:	d127      	bne.n	800cf04 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800ceb4:	88fb      	ldrh	r3, [r7, #6]
 800ceb6:	4a1e      	ldr	r2, [pc, #120]	; (800cf30 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ceb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cebc:	2b00      	cmp	r3, #0
 800cebe:	d016      	beq.n	800ceee <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800cec0:	88fb      	ldrh	r3, [r7, #6]
 800cec2:	4a1b      	ldr	r2, [pc, #108]	; (800cf30 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800cec4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cec8:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ceca:	68bb      	ldr	r3, [r7, #8]
 800cecc:	681b      	ldr	r3, [r3, #0]
 800cece:	68ba      	ldr	r2, [r7, #8]
 800ced0:	4413      	add	r3, r2
 800ced2:	4a18      	ldr	r2, [pc, #96]	; (800cf34 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800ced4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800ced6:	68bb      	ldr	r3, [r7, #8]
 800ced8:	685b      	ldr	r3, [r3, #4]
 800ceda:	68ba      	ldr	r2, [r7, #8]
 800cedc:	4413      	add	r3, r2
 800cede:	4a16      	ldr	r2, [pc, #88]	; (800cf38 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800cee0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800cee2:	68bb      	ldr	r3, [r7, #8]
 800cee4:	689b      	ldr	r3, [r3, #8]
 800cee6:	68ba      	ldr	r2, [r7, #8]
 800cee8:	4413      	add	r3, r2
 800ceea:	60fb      	str	r3, [r7, #12]
 800ceec:	e00a      	b.n	800cf04 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800ceee:	4b11      	ldr	r3, [pc, #68]	; (800cf34 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800cef0:	4a12      	ldr	r2, [pc, #72]	; (800cf3c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800cef2:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800cef4:	4a12      	ldr	r2, [pc, #72]	; (800cf40 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800cef6:	4b10      	ldr	r3, [pc, #64]	; (800cf38 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800cef8:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800cefa:	88fb      	ldrh	r3, [r7, #6]
 800cefc:	4a11      	ldr	r2, [pc, #68]	; (800cf44 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800cefe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cf02:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800cf04:	68fb      	ldr	r3, [r7, #12]
 800cf06:	2b00      	cmp	r3, #0
 800cf08:	d00d      	beq.n	800cf26 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800cf0a:	4a0f      	ldr	r2, [pc, #60]	; (800cf48 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800cf0c:	88fb      	ldrh	r3, [r7, #6]
 800cf0e:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800cf10:	f000 f83e 	bl	800cf90 <_ZN17TypedTextDatabase8getFontsEv>
 800cf14:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800cf16:	f000 f833 	bl	800cf80 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800cf1a:	4603      	mov	r3, r0
 800cf1c:	461a      	mov	r2, r3
 800cf1e:	4621      	mov	r1, r4
 800cf20:	68f8      	ldr	r0, [r7, #12]
 800cf22:	f7ff fea5 	bl	800cc70 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800cf26:	bf00      	nop
 800cf28:	3714      	adds	r7, #20
 800cf2a:	46bd      	mov	sp, r7
 800cf2c:	bd90      	pop	{r4, r7, pc}
 800cf2e:	bf00      	nop
 800cf30:	240004d8 	.word	0x240004d8
 800cf34:	240004e0 	.word	0x240004e0
 800cf38:	240004e4 	.word	0x240004e4
 800cf3c:	0803c6cc 	.word	0x0803c6cc
 800cf40:	0803c6c4 	.word	0x0803c6c4
 800cf44:	0803c708 	.word	0x0803c708
 800cf48:	240004dc 	.word	0x240004dc

0800cf4c <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800cf4c:	b480      	push	{r7}
 800cf4e:	b083      	sub	sp, #12
 800cf50:	af00      	add	r7, sp, #0
 800cf52:	6078      	str	r0, [r7, #4]
 800cf54:	460b      	mov	r3, r1
 800cf56:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800cf58:	4b07      	ldr	r3, [pc, #28]	; (800cf78 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800cf5a:	681a      	ldr	r2, [r3, #0]
 800cf5c:	4b07      	ldr	r3, [pc, #28]	; (800cf7c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800cf5e:	6819      	ldr	r1, [r3, #0]
 800cf60:	887b      	ldrh	r3, [r7, #2]
 800cf62:	009b      	lsls	r3, r3, #2
 800cf64:	440b      	add	r3, r1
 800cf66:	681b      	ldr	r3, [r3, #0]
 800cf68:	005b      	lsls	r3, r3, #1
 800cf6a:	4413      	add	r3, r2
}
 800cf6c:	4618      	mov	r0, r3
 800cf6e:	370c      	adds	r7, #12
 800cf70:	46bd      	mov	sp, r7
 800cf72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf76:	4770      	bx	lr
 800cf78:	240004e0 	.word	0x240004e0
 800cf7c:	240004e4 	.word	0x240004e4

0800cf80 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800cf80:	b480      	push	{r7}
 800cf82:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800cf84:	2302      	movs	r3, #2
}
 800cf86:	4618      	mov	r0, r3
 800cf88:	46bd      	mov	sp, r7
 800cf8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf8e:	4770      	bx	lr

0800cf90 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800cf90:	b480      	push	{r7}
 800cf92:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800cf94:	4b02      	ldr	r3, [pc, #8]	; (800cfa0 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800cf96:	4618      	mov	r0, r3
 800cf98:	46bd      	mov	sp, r7
 800cf9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf9e:	4770      	bx	lr
 800cfa0:	240004e8 	.word	0x240004e8

0800cfa4 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800cfa4:	b580      	push	{r7, lr}
 800cfa6:	b082      	sub	sp, #8
 800cfa8:	af00      	add	r7, sp, #0
 800cfaa:	6078      	str	r0, [r7, #4]
 800cfac:	6039      	str	r1, [r7, #0]
 800cfae:	687b      	ldr	r3, [r7, #4]
 800cfb0:	2b01      	cmp	r3, #1
 800cfb2:	d113      	bne.n	800cfdc <_Z41__static_initialization_and_destruction_0ii+0x38>
 800cfb4:	683b      	ldr	r3, [r7, #0]
 800cfb6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cfba:	4293      	cmp	r3, r2
 800cfbc:	d10e      	bne.n	800cfdc <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800cfbe:	f7fd fdbb 	bl	800ab38 <_Z23getFont_verdana_20_4bppv>
 800cfc2:	4603      	mov	r3, r0
};
 800cfc4:	4a07      	ldr	r2, [pc, #28]	; (800cfe4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cfc6:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800cfc8:	f7fd fe10 	bl	800abec <_Z23getFont_verdana_40_4bppv>
 800cfcc:	4603      	mov	r3, r0
};
 800cfce:	4a05      	ldr	r2, [pc, #20]	; (800cfe4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cfd0:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800cfd2:	f7fd fd57 	bl	800aa84 <_Z23getFont_verdana_10_4bppv>
 800cfd6:	4603      	mov	r3, r0
};
 800cfd8:	4a02      	ldr	r2, [pc, #8]	; (800cfe4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cfda:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800cfdc:	bf00      	nop
 800cfde:	3708      	adds	r7, #8
 800cfe0:	46bd      	mov	sp, r7
 800cfe2:	bd80      	pop	{r7, pc}
 800cfe4:	240004e8 	.word	0x240004e8

0800cfe8 <_GLOBAL__sub_I_touchgfx_fonts>:
 800cfe8:	b580      	push	{r7, lr}
 800cfea:	af00      	add	r7, sp, #0
 800cfec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800cff0:	2001      	movs	r0, #1
 800cff2:	f7ff ffd7 	bl	800cfa4 <_Z41__static_initialization_and_destruction_0ii>
 800cff6:	bd80      	pop	{r7, pc}

0800cff8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800cff8:	b580      	push	{r7, lr}
 800cffa:	b082      	sub	sp, #8
 800cffc:	af00      	add	r7, sp, #0
 800cffe:	6078      	str	r0, [r7, #4]
 800d000:	4a05      	ldr	r2, [pc, #20]	; (800d018 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d002:	687b      	ldr	r3, [r7, #4]
 800d004:	601a      	str	r2, [r3, #0]
 800d006:	687b      	ldr	r3, [r7, #4]
 800d008:	4618      	mov	r0, r3
 800d00a:	f7fe f84f 	bl	800b0ac <_ZN23FrontendApplicationBaseD1Ev>
 800d00e:	687b      	ldr	r3, [r7, #4]
 800d010:	4618      	mov	r0, r3
 800d012:	3708      	adds	r7, #8
 800d014:	46bd      	mov	sp, r7
 800d016:	bd80      	pop	{r7, pc}
 800d018:	080257f8 	.word	0x080257f8

0800d01c <_ZN19FrontendApplicationD0Ev>:
 800d01c:	b580      	push	{r7, lr}
 800d01e:	b082      	sub	sp, #8
 800d020:	af00      	add	r7, sp, #0
 800d022:	6078      	str	r0, [r7, #4]
 800d024:	6878      	ldr	r0, [r7, #4]
 800d026:	f7ff ffe7 	bl	800cff8 <_ZN19FrontendApplicationD1Ev>
 800d02a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800d02e:	6878      	ldr	r0, [r7, #4]
 800d030:	f016 fc8f 	bl	8023952 <_ZdlPvj>
 800d034:	687b      	ldr	r3, [r7, #4]
 800d036:	4618      	mov	r0, r3
 800d038:	3708      	adds	r7, #8
 800d03a:	46bd      	mov	sp, r7
 800d03c:	bd80      	pop	{r7, pc}

0800d03e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d03e:	b580      	push	{r7, lr}
 800d040:	b082      	sub	sp, #8
 800d042:	af00      	add	r7, sp, #0
 800d044:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d046:	687b      	ldr	r3, [r7, #4]
 800d048:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800d04c:	4618      	mov	r0, r3
 800d04e:	f000 f82d 	bl	800d0ac <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d052:	687b      	ldr	r3, [r7, #4]
 800d054:	4618      	mov	r0, r3
 800d056:	f006 fbdb 	bl	8013810 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d05a:	bf00      	nop
 800d05c:	3708      	adds	r7, #8
 800d05e:	46bd      	mov	sp, r7
 800d060:	bd80      	pop	{r7, pc}
	...

0800d064 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d064:	b580      	push	{r7, lr}
 800d066:	b084      	sub	sp, #16
 800d068:	af00      	add	r7, sp, #0
 800d06a:	60f8      	str	r0, [r7, #12]
 800d06c:	60b9      	str	r1, [r7, #8]
 800d06e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d070:	68fb      	ldr	r3, [r7, #12]
 800d072:	687a      	ldr	r2, [r7, #4]
 800d074:	68b9      	ldr	r1, [r7, #8]
 800d076:	4618      	mov	r0, r3
 800d078:	f7fe f868 	bl	800b14c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d07c:	4a03      	ldr	r2, [pc, #12]	; (800d08c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d07e:	68fb      	ldr	r3, [r7, #12]
 800d080:	601a      	str	r2, [r3, #0]
{

}
 800d082:	68fb      	ldr	r3, [r7, #12]
 800d084:	4618      	mov	r0, r3
 800d086:	3710      	adds	r7, #16
 800d088:	46bd      	mov	sp, r7
 800d08a:	bd80      	pop	{r7, pc}
 800d08c:	080257f8 	.word	0x080257f8

0800d090 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800d090:	b480      	push	{r7}
 800d092:	b083      	sub	sp, #12
 800d094:	af00      	add	r7, sp, #0
 800d096:	6078      	str	r0, [r7, #4]
 800d098:	687b      	ldr	r3, [r7, #4]
 800d09a:	2200      	movs	r2, #0
 800d09c:	601a      	str	r2, [r3, #0]
{

}
 800d09e:	687b      	ldr	r3, [r7, #4]
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	370c      	adds	r7, #12
 800d0a4:	46bd      	mov	sp, r7
 800d0a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0aa:	4770      	bx	lr

0800d0ac <_ZN5Model4tickEv>:

void Model::tick()
{
 800d0ac:	b480      	push	{r7}
 800d0ae:	b083      	sub	sp, #12
 800d0b0:	af00      	add	r7, sp, #0
 800d0b2:	6078      	str	r0, [r7, #4]

}
 800d0b4:	bf00      	nop
 800d0b6:	370c      	adds	r7, #12
 800d0b8:	46bd      	mov	sp, r7
 800d0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0be:	4770      	bx	lr

0800d0c0 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d0c0:	b480      	push	{r7}
 800d0c2:	b083      	sub	sp, #12
 800d0c4:	af00      	add	r7, sp, #0
 800d0c6:	6078      	str	r0, [r7, #4]
    {
    }
 800d0c8:	bf00      	nop
 800d0ca:	370c      	adds	r7, #12
 800d0cc:	46bd      	mov	sp, r7
 800d0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0d2:	4770      	bx	lr

0800d0d4 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d0d4:	b480      	push	{r7}
 800d0d6:	b083      	sub	sp, #12
 800d0d8:	af00      	add	r7, sp, #0
 800d0da:	6078      	str	r0, [r7, #4]
    {
    }
 800d0dc:	bf00      	nop
 800d0de:	370c      	adds	r7, #12
 800d0e0:	46bd      	mov	sp, r7
 800d0e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0e6:	4770      	bx	lr

0800d0e8 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d0e8:	b480      	push	{r7}
 800d0ea:	b083      	sub	sp, #12
 800d0ec:	af00      	add	r7, sp, #0
 800d0ee:	6078      	str	r0, [r7, #4]
    {
 800d0f0:	4a04      	ldr	r2, [pc, #16]	; (800d104 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d0f2:	687b      	ldr	r3, [r7, #4]
 800d0f4:	601a      	str	r2, [r3, #0]
    }
 800d0f6:	687b      	ldr	r3, [r7, #4]
 800d0f8:	4618      	mov	r0, r3
 800d0fa:	370c      	adds	r7, #12
 800d0fc:	46bd      	mov	sp, r7
 800d0fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d102:	4770      	bx	lr
 800d104:	08025884 	.word	0x08025884

0800d108 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d108:	b580      	push	{r7, lr}
 800d10a:	b082      	sub	sp, #8
 800d10c:	af00      	add	r7, sp, #0
 800d10e:	6078      	str	r0, [r7, #4]
    }
 800d110:	6878      	ldr	r0, [r7, #4]
 800d112:	f7ff ffe9 	bl	800d0e8 <_ZN8touchgfx9PresenterD1Ev>
 800d116:	2104      	movs	r1, #4
 800d118:	6878      	ldr	r0, [r7, #4]
 800d11a:	f016 fc1a 	bl	8023952 <_ZdlPvj>
 800d11e:	687b      	ldr	r3, [r7, #4]
 800d120:	4618      	mov	r0, r3
 800d122:	3708      	adds	r7, #8
 800d124:	46bd      	mov	sp, r7
 800d126:	bd80      	pop	{r7, pc}

0800d128 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d128:	b480      	push	{r7}
 800d12a:	b083      	sub	sp, #12
 800d12c:	af00      	add	r7, sp, #0
 800d12e:	6078      	str	r0, [r7, #4]
    {
 800d130:	4a04      	ldr	r2, [pc, #16]	; (800d144 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d132:	687b      	ldr	r3, [r7, #4]
 800d134:	601a      	str	r2, [r3, #0]
    }
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	4618      	mov	r0, r3
 800d13a:	370c      	adds	r7, #12
 800d13c:	46bd      	mov	sp, r7
 800d13e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d142:	4770      	bx	lr
 800d144:	08025884 	.word	0x08025884

0800d148 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d148:	b480      	push	{r7}
 800d14a:	b083      	sub	sp, #12
 800d14c:	af00      	add	r7, sp, #0
 800d14e:	6078      	str	r0, [r7, #4]
 800d150:	4a06      	ldr	r2, [pc, #24]	; (800d16c <_ZN13ModelListenerC1Ev+0x24>)
 800d152:	687b      	ldr	r3, [r7, #4]
 800d154:	601a      	str	r2, [r3, #0]
 800d156:	687b      	ldr	r3, [r7, #4]
 800d158:	2200      	movs	r2, #0
 800d15a:	605a      	str	r2, [r3, #4]
 800d15c:	687b      	ldr	r3, [r7, #4]
 800d15e:	4618      	mov	r0, r3
 800d160:	370c      	adds	r7, #12
 800d162:	46bd      	mov	sp, r7
 800d164:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d168:	4770      	bx	lr
 800d16a:	bf00      	nop
 800d16c:	08025874 	.word	0x08025874

0800d170 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800d170:	b480      	push	{r7}
 800d172:	b083      	sub	sp, #12
 800d174:	af00      	add	r7, sp, #0
 800d176:	6078      	str	r0, [r7, #4]
 800d178:	4a04      	ldr	r2, [pc, #16]	; (800d18c <_ZN13ModelListenerD1Ev+0x1c>)
 800d17a:	687b      	ldr	r3, [r7, #4]
 800d17c:	601a      	str	r2, [r3, #0]
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	4618      	mov	r0, r3
 800d182:	370c      	adds	r7, #12
 800d184:	46bd      	mov	sp, r7
 800d186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d18a:	4770      	bx	lr
 800d18c:	08025874 	.word	0x08025874

0800d190 <_ZN13ModelListenerD0Ev>:
 800d190:	b580      	push	{r7, lr}
 800d192:	b082      	sub	sp, #8
 800d194:	af00      	add	r7, sp, #0
 800d196:	6078      	str	r0, [r7, #4]
 800d198:	6878      	ldr	r0, [r7, #4]
 800d19a:	f7ff ffe9 	bl	800d170 <_ZN13ModelListenerD1Ev>
 800d19e:	2108      	movs	r1, #8
 800d1a0:	6878      	ldr	r0, [r7, #4]
 800d1a2:	f016 fbd6 	bl	8023952 <_ZdlPvj>
 800d1a6:	687b      	ldr	r3, [r7, #4]
 800d1a8:	4618      	mov	r0, r3
 800d1aa:	3708      	adds	r7, #8
 800d1ac:	46bd      	mov	sp, r7
 800d1ae:	bd80      	pop	{r7, pc}

0800d1b0 <_ZN16screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen1Presenter() {}
 800d1b0:	b580      	push	{r7, lr}
 800d1b2:	b082      	sub	sp, #8
 800d1b4:	af00      	add	r7, sp, #0
 800d1b6:	6078      	str	r0, [r7, #4]
 800d1b8:	4a09      	ldr	r2, [pc, #36]	; (800d1e0 <_ZN16screen1PresenterD1Ev+0x30>)
 800d1ba:	687b      	ldr	r3, [r7, #4]
 800d1bc:	601a      	str	r2, [r3, #0]
 800d1be:	4a09      	ldr	r2, [pc, #36]	; (800d1e4 <_ZN16screen1PresenterD1Ev+0x34>)
 800d1c0:	687b      	ldr	r3, [r7, #4]
 800d1c2:	605a      	str	r2, [r3, #4]
 800d1c4:	687b      	ldr	r3, [r7, #4]
 800d1c6:	3304      	adds	r3, #4
 800d1c8:	4618      	mov	r0, r3
 800d1ca:	f7ff ffd1 	bl	800d170 <_ZN13ModelListenerD1Ev>
 800d1ce:	687b      	ldr	r3, [r7, #4]
 800d1d0:	4618      	mov	r0, r3
 800d1d2:	f7ff ff89 	bl	800d0e8 <_ZN8touchgfx9PresenterD1Ev>
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	4618      	mov	r0, r3
 800d1da:	3708      	adds	r7, #8
 800d1dc:	46bd      	mov	sp, r7
 800d1de:	bd80      	pop	{r7, pc}
 800d1e0:	0802584c 	.word	0x0802584c
 800d1e4:	08025864 	.word	0x08025864

0800d1e8 <_ZThn4_N16screen1PresenterD1Ev>:
 800d1e8:	f1a0 0004 	sub.w	r0, r0, #4
 800d1ec:	e7e0      	b.n	800d1b0 <_ZN16screen1PresenterD1Ev>
 800d1ee:	bf00      	nop

0800d1f0 <_ZN16screen1PresenterD0Ev>:
 800d1f0:	b580      	push	{r7, lr}
 800d1f2:	b082      	sub	sp, #8
 800d1f4:	af00      	add	r7, sp, #0
 800d1f6:	6078      	str	r0, [r7, #4]
 800d1f8:	6878      	ldr	r0, [r7, #4]
 800d1fa:	f7ff ffd9 	bl	800d1b0 <_ZN16screen1PresenterD1Ev>
 800d1fe:	2110      	movs	r1, #16
 800d200:	6878      	ldr	r0, [r7, #4]
 800d202:	f016 fba6 	bl	8023952 <_ZdlPvj>
 800d206:	687b      	ldr	r3, [r7, #4]
 800d208:	4618      	mov	r0, r3
 800d20a:	3708      	adds	r7, #8
 800d20c:	46bd      	mov	sp, r7
 800d20e:	bd80      	pop	{r7, pc}

0800d210 <_ZThn4_N16screen1PresenterD0Ev>:
 800d210:	f1a0 0004 	sub.w	r0, r0, #4
 800d214:	e7ec      	b.n	800d1f0 <_ZN16screen1PresenterD0Ev>
	...

0800d218 <_ZN16screen1PresenterC1ER11screen1View>:
#include <gui/screen1_screen/screen1View.hpp>
#include <gui/screen1_screen/screen1Presenter.hpp>

screen1Presenter::screen1Presenter(screen1View& v)
 800d218:	b580      	push	{r7, lr}
 800d21a:	b082      	sub	sp, #8
 800d21c:	af00      	add	r7, sp, #0
 800d21e:	6078      	str	r0, [r7, #4]
 800d220:	6039      	str	r1, [r7, #0]
    : view(v)
 800d222:	687b      	ldr	r3, [r7, #4]
 800d224:	4618      	mov	r0, r3
 800d226:	f7ff ff7f 	bl	800d128 <_ZN8touchgfx9PresenterC1Ev>
 800d22a:	687b      	ldr	r3, [r7, #4]
 800d22c:	3304      	adds	r3, #4
 800d22e:	4618      	mov	r0, r3
 800d230:	f7ff ff8a 	bl	800d148 <_ZN13ModelListenerC1Ev>
 800d234:	4a06      	ldr	r2, [pc, #24]	; (800d250 <_ZN16screen1PresenterC1ER11screen1View+0x38>)
 800d236:	687b      	ldr	r3, [r7, #4]
 800d238:	601a      	str	r2, [r3, #0]
 800d23a:	4a06      	ldr	r2, [pc, #24]	; (800d254 <_ZN16screen1PresenterC1ER11screen1View+0x3c>)
 800d23c:	687b      	ldr	r3, [r7, #4]
 800d23e:	605a      	str	r2, [r3, #4]
 800d240:	687b      	ldr	r3, [r7, #4]
 800d242:	683a      	ldr	r2, [r7, #0]
 800d244:	60da      	str	r2, [r3, #12]
{

}
 800d246:	687b      	ldr	r3, [r7, #4]
 800d248:	4618      	mov	r0, r3
 800d24a:	3708      	adds	r7, #8
 800d24c:	46bd      	mov	sp, r7
 800d24e:	bd80      	pop	{r7, pc}
 800d250:	0802584c 	.word	0x0802584c
 800d254:	08025864 	.word	0x08025864

0800d258 <_ZN16screen1Presenter8activateEv>:

void screen1Presenter::activate()
{
 800d258:	b480      	push	{r7}
 800d25a:	b083      	sub	sp, #12
 800d25c:	af00      	add	r7, sp, #0
 800d25e:	6078      	str	r0, [r7, #4]

}
 800d260:	bf00      	nop
 800d262:	370c      	adds	r7, #12
 800d264:	46bd      	mov	sp, r7
 800d266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d26a:	4770      	bx	lr

0800d26c <_ZN16screen1Presenter10deactivateEv>:

void screen1Presenter::deactivate()
{
 800d26c:	b480      	push	{r7}
 800d26e:	b083      	sub	sp, #12
 800d270:	af00      	add	r7, sp, #0
 800d272:	6078      	str	r0, [r7, #4]

}
 800d274:	bf00      	nop
 800d276:	370c      	adds	r7, #12
 800d278:	46bd      	mov	sp, r7
 800d27a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d27e:	4770      	bx	lr

0800d280 <_ZN11screen1ViewD1Ev>:

class screen1View : public screen1ViewBase
{
public:
    screen1View();
    virtual ~screen1View() {}
 800d280:	b580      	push	{r7, lr}
 800d282:	b082      	sub	sp, #8
 800d284:	af00      	add	r7, sp, #0
 800d286:	6078      	str	r0, [r7, #4]
 800d288:	4a05      	ldr	r2, [pc, #20]	; (800d2a0 <_ZN11screen1ViewD1Ev+0x20>)
 800d28a:	687b      	ldr	r3, [r7, #4]
 800d28c:	601a      	str	r2, [r3, #0]
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	4618      	mov	r0, r3
 800d292:	f7ff f8eb 	bl	800c46c <_ZN15screen1ViewBaseD1Ev>
 800d296:	687b      	ldr	r3, [r7, #4]
 800d298:	4618      	mov	r0, r3
 800d29a:	3708      	adds	r7, #8
 800d29c:	46bd      	mov	sp, r7
 800d29e:	bd80      	pop	{r7, pc}
 800d2a0:	0802589c 	.word	0x0802589c

0800d2a4 <_ZN11screen1ViewD0Ev>:
 800d2a4:	b580      	push	{r7, lr}
 800d2a6:	b082      	sub	sp, #8
 800d2a8:	af00      	add	r7, sp, #0
 800d2aa:	6078      	str	r0, [r7, #4]
 800d2ac:	6878      	ldr	r0, [r7, #4]
 800d2ae:	f7ff ffe7 	bl	800d280 <_ZN11screen1ViewD1Ev>
 800d2b2:	21f8      	movs	r1, #248	; 0xf8
 800d2b4:	6878      	ldr	r0, [r7, #4]
 800d2b6:	f016 fb4c 	bl	8023952 <_ZdlPvj>
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	4618      	mov	r0, r3
 800d2be:	3708      	adds	r7, #8
 800d2c0:	46bd      	mov	sp, r7
 800d2c2:	bd80      	pop	{r7, pc}

0800d2c4 <_ZN11screen1ViewC1Ev>:
#include <gui/screen1_screen/screen1View.hpp>

screen1View::screen1View()
 800d2c4:	b580      	push	{r7, lr}
 800d2c6:	b082      	sub	sp, #8
 800d2c8:	af00      	add	r7, sp, #0
 800d2ca:	6078      	str	r0, [r7, #4]
 800d2cc:	687b      	ldr	r3, [r7, #4]
 800d2ce:	4618      	mov	r0, r3
 800d2d0:	f7fe ffd2 	bl	800c278 <_ZN15screen1ViewBaseC1Ev>
 800d2d4:	4a03      	ldr	r2, [pc, #12]	; (800d2e4 <_ZN11screen1ViewC1Ev+0x20>)
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	601a      	str	r2, [r3, #0]
{

}
 800d2da:	687b      	ldr	r3, [r7, #4]
 800d2dc:	4618      	mov	r0, r3
 800d2de:	3708      	adds	r7, #8
 800d2e0:	46bd      	mov	sp, r7
 800d2e2:	bd80      	pop	{r7, pc}
 800d2e4:	0802589c 	.word	0x0802589c

0800d2e8 <_ZN11screen1View11setupScreenEv>:

void screen1View::setupScreen()
{
 800d2e8:	b580      	push	{r7, lr}
 800d2ea:	b082      	sub	sp, #8
 800d2ec:	af00      	add	r7, sp, #0
 800d2ee:	6078      	str	r0, [r7, #4]
    screen1ViewBase::setupScreen();
 800d2f0:	687b      	ldr	r3, [r7, #4]
 800d2f2:	4618      	mov	r0, r3
 800d2f4:	f7ff f8f0 	bl	800c4d8 <_ZN15screen1ViewBase11setupScreenEv>
}
 800d2f8:	bf00      	nop
 800d2fa:	3708      	adds	r7, #8
 800d2fc:	46bd      	mov	sp, r7
 800d2fe:	bd80      	pop	{r7, pc}

0800d300 <_ZN11screen1View14tearDownScreenEv>:

void screen1View::tearDownScreen()
{
 800d300:	b580      	push	{r7, lr}
 800d302:	b082      	sub	sp, #8
 800d304:	af00      	add	r7, sp, #0
 800d306:	6078      	str	r0, [r7, #4]
    screen1ViewBase::tearDownScreen();
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	4618      	mov	r0, r3
 800d30c:	f7fe fde0 	bl	800bed0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800d310:	bf00      	nop
 800d312:	3708      	adds	r7, #8
 800d314:	46bd      	mov	sp, r7
 800d316:	bd80      	pop	{r7, pc}

0800d318 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {}
 800d318:	b580      	push	{r7, lr}
 800d31a:	b082      	sub	sp, #8
 800d31c:	af00      	add	r7, sp, #0
 800d31e:	6078      	str	r0, [r7, #4]
 800d320:	4a09      	ldr	r2, [pc, #36]	; (800d348 <_ZN16Screen2PresenterD1Ev+0x30>)
 800d322:	687b      	ldr	r3, [r7, #4]
 800d324:	601a      	str	r2, [r3, #0]
 800d326:	4a09      	ldr	r2, [pc, #36]	; (800d34c <_ZN16Screen2PresenterD1Ev+0x34>)
 800d328:	687b      	ldr	r3, [r7, #4]
 800d32a:	605a      	str	r2, [r3, #4]
 800d32c:	687b      	ldr	r3, [r7, #4]
 800d32e:	3304      	adds	r3, #4
 800d330:	4618      	mov	r0, r3
 800d332:	f7ff ff1d 	bl	800d170 <_ZN13ModelListenerD1Ev>
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	4618      	mov	r0, r3
 800d33a:	f7ff fed5 	bl	800d0e8 <_ZN8touchgfx9PresenterD1Ev>
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	4618      	mov	r0, r3
 800d342:	3708      	adds	r7, #8
 800d344:	46bd      	mov	sp, r7
 800d346:	bd80      	pop	{r7, pc}
 800d348:	080258d4 	.word	0x080258d4
 800d34c:	080258ec 	.word	0x080258ec

0800d350 <_ZThn4_N16Screen2PresenterD1Ev>:
 800d350:	f1a0 0004 	sub.w	r0, r0, #4
 800d354:	e7e0      	b.n	800d318 <_ZN16Screen2PresenterD1Ev>
 800d356:	bf00      	nop

0800d358 <_ZN16Screen2PresenterD0Ev>:
 800d358:	b580      	push	{r7, lr}
 800d35a:	b082      	sub	sp, #8
 800d35c:	af00      	add	r7, sp, #0
 800d35e:	6078      	str	r0, [r7, #4]
 800d360:	6878      	ldr	r0, [r7, #4]
 800d362:	f7ff ffd9 	bl	800d318 <_ZN16Screen2PresenterD1Ev>
 800d366:	2110      	movs	r1, #16
 800d368:	6878      	ldr	r0, [r7, #4]
 800d36a:	f016 faf2 	bl	8023952 <_ZdlPvj>
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	4618      	mov	r0, r3
 800d372:	3708      	adds	r7, #8
 800d374:	46bd      	mov	sp, r7
 800d376:	bd80      	pop	{r7, pc}

0800d378 <_ZThn4_N16Screen2PresenterD0Ev>:
 800d378:	f1a0 0004 	sub.w	r0, r0, #4
 800d37c:	e7ec      	b.n	800d358 <_ZN16Screen2PresenterD0Ev>
	...

0800d380 <_ZN16Screen2PresenterC1ER11Screen2View>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

Screen2Presenter::Screen2Presenter(Screen2View& v)
 800d380:	b580      	push	{r7, lr}
 800d382:	b082      	sub	sp, #8
 800d384:	af00      	add	r7, sp, #0
 800d386:	6078      	str	r0, [r7, #4]
 800d388:	6039      	str	r1, [r7, #0]
    : view(v)
 800d38a:	687b      	ldr	r3, [r7, #4]
 800d38c:	4618      	mov	r0, r3
 800d38e:	f7ff fecb 	bl	800d128 <_ZN8touchgfx9PresenterC1Ev>
 800d392:	687b      	ldr	r3, [r7, #4]
 800d394:	3304      	adds	r3, #4
 800d396:	4618      	mov	r0, r3
 800d398:	f7ff fed6 	bl	800d148 <_ZN13ModelListenerC1Ev>
 800d39c:	4a06      	ldr	r2, [pc, #24]	; (800d3b8 <_ZN16Screen2PresenterC1ER11Screen2View+0x38>)
 800d39e:	687b      	ldr	r3, [r7, #4]
 800d3a0:	601a      	str	r2, [r3, #0]
 800d3a2:	4a06      	ldr	r2, [pc, #24]	; (800d3bc <_ZN16Screen2PresenterC1ER11Screen2View+0x3c>)
 800d3a4:	687b      	ldr	r3, [r7, #4]
 800d3a6:	605a      	str	r2, [r3, #4]
 800d3a8:	687b      	ldr	r3, [r7, #4]
 800d3aa:	683a      	ldr	r2, [r7, #0]
 800d3ac:	60da      	str	r2, [r3, #12]
{

}
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	4618      	mov	r0, r3
 800d3b2:	3708      	adds	r7, #8
 800d3b4:	46bd      	mov	sp, r7
 800d3b6:	bd80      	pop	{r7, pc}
 800d3b8:	080258d4 	.word	0x080258d4
 800d3bc:	080258ec 	.word	0x080258ec

0800d3c0 <_ZN16Screen2Presenter8activateEv>:

void Screen2Presenter::activate()
{
 800d3c0:	b480      	push	{r7}
 800d3c2:	b083      	sub	sp, #12
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	6078      	str	r0, [r7, #4]

}
 800d3c8:	bf00      	nop
 800d3ca:	370c      	adds	r7, #12
 800d3cc:	46bd      	mov	sp, r7
 800d3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3d2:	4770      	bx	lr

0800d3d4 <_ZN16Screen2Presenter10deactivateEv>:

void Screen2Presenter::deactivate()
{
 800d3d4:	b480      	push	{r7}
 800d3d6:	b083      	sub	sp, #12
 800d3d8:	af00      	add	r7, sp, #0
 800d3da:	6078      	str	r0, [r7, #4]

}
 800d3dc:	bf00      	nop
 800d3de:	370c      	adds	r7, #12
 800d3e0:	46bd      	mov	sp, r7
 800d3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3e6:	4770      	bx	lr

0800d3e8 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800d3e8:	b580      	push	{r7, lr}
 800d3ea:	b082      	sub	sp, #8
 800d3ec:	af00      	add	r7, sp, #0
 800d3ee:	6078      	str	r0, [r7, #4]
 800d3f0:	4a05      	ldr	r2, [pc, #20]	; (800d408 <_ZN11Screen2ViewD1Ev+0x20>)
 800d3f2:	687b      	ldr	r3, [r7, #4]
 800d3f4:	601a      	str	r2, [r3, #0]
 800d3f6:	687b      	ldr	r3, [r7, #4]
 800d3f8:	4618      	mov	r0, r3
 800d3fa:	f7ff fb0f 	bl	800ca1c <_ZN15Screen2ViewBaseD1Ev>
 800d3fe:	687b      	ldr	r3, [r7, #4]
 800d400:	4618      	mov	r0, r3
 800d402:	3708      	adds	r7, #8
 800d404:	46bd      	mov	sp, r7
 800d406:	bd80      	pop	{r7, pc}
 800d408:	080258fc 	.word	0x080258fc

0800d40c <_ZN11Screen2ViewD0Ev>:
 800d40c:	b580      	push	{r7, lr}
 800d40e:	b082      	sub	sp, #8
 800d410:	af00      	add	r7, sp, #0
 800d412:	6078      	str	r0, [r7, #4]
 800d414:	6878      	ldr	r0, [r7, #4]
 800d416:	f7ff ffe7 	bl	800d3e8 <_ZN11Screen2ViewD1Ev>
 800d41a:	21f8      	movs	r1, #248	; 0xf8
 800d41c:	6878      	ldr	r0, [r7, #4]
 800d41e:	f016 fa98 	bl	8023952 <_ZdlPvj>
 800d422:	687b      	ldr	r3, [r7, #4]
 800d424:	4618      	mov	r0, r3
 800d426:	3708      	adds	r7, #8
 800d428:	46bd      	mov	sp, r7
 800d42a:	bd80      	pop	{r7, pc}

0800d42c <_ZN11Screen2ViewC1Ev>:
#include <gui/screen2_screen/Screen2View.hpp>

Screen2View::Screen2View()
 800d42c:	b580      	push	{r7, lr}
 800d42e:	b082      	sub	sp, #8
 800d430:	af00      	add	r7, sp, #0
 800d432:	6078      	str	r0, [r7, #4]
 800d434:	687b      	ldr	r3, [r7, #4]
 800d436:	4618      	mov	r0, r3
 800d438:	f7ff f9f6 	bl	800c828 <_ZN15Screen2ViewBaseC1Ev>
 800d43c:	4a03      	ldr	r2, [pc, #12]	; (800d44c <_ZN11Screen2ViewC1Ev+0x20>)
 800d43e:	687b      	ldr	r3, [r7, #4]
 800d440:	601a      	str	r2, [r3, #0]
{

}
 800d442:	687b      	ldr	r3, [r7, #4]
 800d444:	4618      	mov	r0, r3
 800d446:	3708      	adds	r7, #8
 800d448:	46bd      	mov	sp, r7
 800d44a:	bd80      	pop	{r7, pc}
 800d44c:	080258fc 	.word	0x080258fc

0800d450 <_ZN11Screen2View11setupScreenEv>:

void Screen2View::setupScreen()
{
 800d450:	b580      	push	{r7, lr}
 800d452:	b082      	sub	sp, #8
 800d454:	af00      	add	r7, sp, #0
 800d456:	6078      	str	r0, [r7, #4]
    Screen2ViewBase::setupScreen();
 800d458:	687b      	ldr	r3, [r7, #4]
 800d45a:	4618      	mov	r0, r3
 800d45c:	f7ff fb14 	bl	800ca88 <_ZN15Screen2ViewBase11setupScreenEv>
}
 800d460:	bf00      	nop
 800d462:	3708      	adds	r7, #8
 800d464:	46bd      	mov	sp, r7
 800d466:	bd80      	pop	{r7, pc}

0800d468 <_ZN11Screen2View14tearDownScreenEv>:

void Screen2View::tearDownScreen()
{
 800d468:	b580      	push	{r7, lr}
 800d46a:	b082      	sub	sp, #8
 800d46c:	af00      	add	r7, sp, #0
 800d46e:	6078      	str	r0, [r7, #4]
    Screen2ViewBase::tearDownScreen();
 800d470:	687b      	ldr	r3, [r7, #4]
 800d472:	4618      	mov	r0, r3
 800d474:	f7fe fd2c 	bl	800bed0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800d478:	bf00      	nop
 800d47a:	3708      	adds	r7, #8
 800d47c:	46bd      	mov	sp, r7
 800d47e:	bd80      	pop	{r7, pc}

0800d480 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800d480:	b480      	push	{r7}
 800d482:	b083      	sub	sp, #12
 800d484:	af00      	add	r7, sp, #0
 800d486:	6078      	str	r0, [r7, #4]
    {
 800d488:	4a04      	ldr	r2, [pc, #16]	; (800d49c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800d48a:	687b      	ldr	r3, [r7, #4]
 800d48c:	601a      	str	r2, [r3, #0]
    }
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	4618      	mov	r0, r3
 800d492:	370c      	adds	r7, #12
 800d494:	46bd      	mov	sp, r7
 800d496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d49a:	4770      	bx	lr
 800d49c:	08025948 	.word	0x08025948

0800d4a0 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800d4a0:	b580      	push	{r7, lr}
 800d4a2:	b082      	sub	sp, #8
 800d4a4:	af00      	add	r7, sp, #0
 800d4a6:	6078      	str	r0, [r7, #4]
    }
 800d4a8:	6878      	ldr	r0, [r7, #4]
 800d4aa:	f7ff ffe9 	bl	800d480 <_ZN8touchgfx15TouchControllerD1Ev>
 800d4ae:	2104      	movs	r1, #4
 800d4b0:	6878      	ldr	r0, [r7, #4]
 800d4b2:	f016 fa4e 	bl	8023952 <_ZdlPvj>
 800d4b6:	687b      	ldr	r3, [r7, #4]
 800d4b8:	4618      	mov	r0, r3
 800d4ba:	3708      	adds	r7, #8
 800d4bc:	46bd      	mov	sp, r7
 800d4be:	bd80      	pop	{r7, pc}

0800d4c0 <_ZN20STM32TouchController4initEv>:
extern "C" void touch_init(void);
extern "C" void touch_Scanf(void);


void STM32TouchController::init()
{
 800d4c0:	b580      	push	{r7, lr}
 800d4c2:	b082      	sub	sp, #8
 800d4c4:	af00      	add	r7, sp, #0
 800d4c6:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
	touch_init();
 800d4c8:	f002 fc9a 	bl	800fe00 <touch_init>
}
 800d4cc:	bf00      	nop
 800d4ce:	3708      	adds	r7, #8
 800d4d0:	46bd      	mov	sp, r7
 800d4d2:	bd80      	pop	{r7, pc}

0800d4d4 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800d4d4:	b580      	push	{r7, lr}
 800d4d6:	b084      	sub	sp, #16
 800d4d8:	af00      	add	r7, sp, #0
 800d4da:	60f8      	str	r0, [r7, #12]
 800d4dc:	60b9      	str	r1, [r7, #8]
 800d4de:	607a      	str	r2, [r7, #4]
	touch_Scanf();
 800d4e0:	f002 fc06 	bl	800fcf0 <touch_Scanf>
	if(User_Touch.state) //有触摸，并读出数据
 800d4e4:	4b0a      	ldr	r3, [pc, #40]	; (800d510 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
 800d4e6:	781b      	ldrb	r3, [r3, #0]
 800d4e8:	2b00      	cmp	r3, #0
 800d4ea:	d00b      	beq.n	800d504 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>
	{
		x = User_Touch.point[0].x;
 800d4ec:	4b08      	ldr	r3, [pc, #32]	; (800d510 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
 800d4ee:	885b      	ldrh	r3, [r3, #2]
 800d4f0:	461a      	mov	r2, r3
 800d4f2:	68bb      	ldr	r3, [r7, #8]
 800d4f4:	601a      	str	r2, [r3, #0]
		y = User_Touch.point[0].y;
 800d4f6:	4b06      	ldr	r3, [pc, #24]	; (800d510 <_ZN20STM32TouchController11sampleTouchERlS0_+0x3c>)
 800d4f8:	889b      	ldrh	r3, [r3, #4]
 800d4fa:	461a      	mov	r2, r3
 800d4fc:	687b      	ldr	r3, [r7, #4]
 800d4fe:	601a      	str	r2, [r3, #0]
		return true;
 800d500:	2301      	movs	r3, #1
 800d502:	e000      	b.n	800d506 <_ZN20STM32TouchController11sampleTouchERlS0_+0x32>
	}
    return false;
 800d504:	2300      	movs	r3, #0
}
 800d506:	4618      	mov	r0, r3
 800d508:	3710      	adds	r7, #16
 800d50a:	46bd      	mov	sp, r7
 800d50c:	bd80      	pop	{r7, pc}
 800d50e:	bf00      	nop
 800d510:	24001650 	.word	0x24001650

0800d514 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800d514:	b580      	push	{r7, lr}
 800d516:	b082      	sub	sp, #8
 800d518:	af00      	add	r7, sp, #0
 800d51a:	6078      	str	r0, [r7, #4]
 800d51c:	4a05      	ldr	r2, [pc, #20]	; (800d534 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	601a      	str	r2, [r3, #0]
 800d522:	687b      	ldr	r3, [r7, #4]
 800d524:	4618      	mov	r0, r3
 800d526:	f7ff ffab 	bl	800d480 <_ZN8touchgfx15TouchControllerD1Ev>
 800d52a:	687b      	ldr	r3, [r7, #4]
 800d52c:	4618      	mov	r0, r3
 800d52e:	3708      	adds	r7, #8
 800d530:	46bd      	mov	sp, r7
 800d532:	bd80      	pop	{r7, pc}
 800d534:	08025930 	.word	0x08025930

0800d538 <_ZN20STM32TouchControllerD0Ev>:
 800d538:	b580      	push	{r7, lr}
 800d53a:	b082      	sub	sp, #8
 800d53c:	af00      	add	r7, sp, #0
 800d53e:	6078      	str	r0, [r7, #4]
 800d540:	6878      	ldr	r0, [r7, #4]
 800d542:	f7ff ffe7 	bl	800d514 <_ZN20STM32TouchControllerD1Ev>
 800d546:	2104      	movs	r1, #4
 800d548:	6878      	ldr	r0, [r7, #4]
 800d54a:	f016 fa02 	bl	8023952 <_ZdlPvj>
 800d54e:	687b      	ldr	r3, [r7, #4]
 800d550:	4618      	mov	r0, r3
 800d552:	3708      	adds	r7, #8
 800d554:	46bd      	mov	sp, r7
 800d556:	bd80      	pop	{r7, pc}

0800d558 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800d558:	b480      	push	{r7}
 800d55a:	af00      	add	r7, sp, #0

}
 800d55c:	bf00      	nop
 800d55e:	46bd      	mov	sp, r7
 800d560:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d564:	4770      	bx	lr
	...

0800d568 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800d568:	b480      	push	{r7}
 800d56a:	b083      	sub	sp, #12
 800d56c:	af00      	add	r7, sp, #0
 800d56e:	4603      	mov	r3, r0
 800d570:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d572:	79fb      	ldrb	r3, [r7, #7]
 800d574:	2b03      	cmp	r3, #3
 800d576:	d80c      	bhi.n	800d592 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800d578:	a201      	add	r2, pc, #4	; (adr r2, 800d580 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800d57a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d57e:	bf00      	nop
 800d580:	0800d591 	.word	0x0800d591
 800d584:	0800d591 	.word	0x0800d591
 800d588:	0800d591 	.word	0x0800d591
 800d58c:	0800d591 	.word	0x0800d591
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800d590:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800d592:	bf00      	nop
 800d594:	370c      	adds	r7, #12
 800d596:	46bd      	mov	sp, r7
 800d598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop

0800d5a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800d5a0:	b480      	push	{r7}
 800d5a2:	b083      	sub	sp, #12
 800d5a4:	af00      	add	r7, sp, #0
 800d5a6:	4603      	mov	r3, r0
 800d5a8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d5aa:	79fb      	ldrb	r3, [r7, #7]
 800d5ac:	2b03      	cmp	r3, #3
 800d5ae:	d80c      	bhi.n	800d5ca <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800d5b0:	a201      	add	r2, pc, #4	; (adr r2, 800d5b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800d5b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d5b6:	bf00      	nop
 800d5b8:	0800d5c9 	.word	0x0800d5c9
 800d5bc:	0800d5c9 	.word	0x0800d5c9
 800d5c0:	0800d5c9 	.word	0x0800d5c9
 800d5c4:	0800d5c9 	.word	0x0800d5c9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800d5c8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800d5ca:	bf00      	nop
 800d5cc:	370c      	adds	r7, #12
 800d5ce:	46bd      	mov	sp, r7
 800d5d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5d4:	4770      	bx	lr
 800d5d6:	bf00      	nop

0800d5d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800d5d8:	b480      	push	{r7}
 800d5da:	b083      	sub	sp, #12
 800d5dc:	af00      	add	r7, sp, #0
 800d5de:	4603      	mov	r3, r0
 800d5e0:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d5e2:	79fb      	ldrb	r3, [r7, #7]
 800d5e4:	2b03      	cmp	r3, #3
 800d5e6:	d80c      	bhi.n	800d602 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800d5e8:	a201      	add	r2, pc, #4	; (adr r2, 800d5f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800d5ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d5ee:	bf00      	nop
 800d5f0:	0800d601 	.word	0x0800d601
 800d5f4:	0800d601 	.word	0x0800d601
 800d5f8:	0800d601 	.word	0x0800d601
 800d5fc:	0800d601 	.word	0x0800d601
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800d600:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800d602:	bf00      	nop
 800d604:	370c      	adds	r7, #12
 800d606:	46bd      	mov	sp, r7
 800d608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d60c:	4770      	bx	lr
 800d60e:	bf00      	nop

0800d610 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800d610:	b480      	push	{r7}
 800d612:	b083      	sub	sp, #12
 800d614:	af00      	add	r7, sp, #0
 800d616:	6078      	str	r0, [r7, #4]
    {
 800d618:	4a04      	ldr	r2, [pc, #16]	; (800d62c <_ZN8touchgfx3HALD1Ev+0x1c>)
 800d61a:	687b      	ldr	r3, [r7, #4]
 800d61c:	601a      	str	r2, [r3, #0]
    }
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	4618      	mov	r0, r3
 800d622:	370c      	adds	r7, #12
 800d624:	46bd      	mov	sp, r7
 800d626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d62a:	4770      	bx	lr
 800d62c:	08025d28 	.word	0x08025d28

0800d630 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800d630:	b580      	push	{r7, lr}
 800d632:	b082      	sub	sp, #8
 800d634:	af00      	add	r7, sp, #0
 800d636:	6078      	str	r0, [r7, #4]
    }
 800d638:	6878      	ldr	r0, [r7, #4]
 800d63a:	f7ff ffe9 	bl	800d610 <_ZN8touchgfx3HALD1Ev>
 800d63e:	217c      	movs	r1, #124	; 0x7c
 800d640:	6878      	ldr	r0, [r7, #4]
 800d642:	f016 f986 	bl	8023952 <_ZdlPvj>
 800d646:	687b      	ldr	r3, [r7, #4]
 800d648:	4618      	mov	r0, r3
 800d64a:	3708      	adds	r7, #8
 800d64c:	46bd      	mov	sp, r7
 800d64e:	bd80      	pop	{r7, pc}

0800d650 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800d650:	b480      	push	{r7}
 800d652:	b083      	sub	sp, #12
 800d654:	af00      	add	r7, sp, #0
 800d656:	6078      	str	r0, [r7, #4]
 800d658:	460b      	mov	r3, r1
 800d65a:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800d65c:	687b      	ldr	r3, [r7, #4]
 800d65e:	78fa      	ldrb	r2, [r7, #3]
 800d660:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800d664:	687b      	ldr	r3, [r7, #4]
 800d666:	2201      	movs	r2, #1
 800d668:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800d66c:	bf00      	nop
 800d66e:	370c      	adds	r7, #12
 800d670:	46bd      	mov	sp, r7
 800d672:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d676:	4770      	bx	lr

0800d678 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800d678:	b580      	push	{r7, lr}
 800d67a:	b082      	sub	sp, #8
 800d67c:	af00      	add	r7, sp, #0
 800d67e:	6078      	str	r0, [r7, #4]
 800d680:	460b      	mov	r3, r1
 800d682:	807b      	strh	r3, [r7, #2]
 800d684:	4613      	mov	r3, r2
 800d686:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800d688:	4b0c      	ldr	r3, [pc, #48]	; (800d6bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800d68a:	881b      	ldrh	r3, [r3, #0]
 800d68c:	887a      	ldrh	r2, [r7, #2]
 800d68e:	429a      	cmp	r2, r3
 800d690:	d304      	bcc.n	800d69c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800d692:	4b0b      	ldr	r3, [pc, #44]	; (800d6c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800d694:	881b      	ldrh	r3, [r3, #0]
 800d696:	883a      	ldrh	r2, [r7, #0]
 800d698:	429a      	cmp	r2, r3
 800d69a:	d205      	bcs.n	800d6a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800d69c:	4b09      	ldr	r3, [pc, #36]	; (800d6c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800d69e:	4a0a      	ldr	r2, [pc, #40]	; (800d6c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800d6a0:	219e      	movs	r1, #158	; 0x9e
 800d6a2:	480a      	ldr	r0, [pc, #40]	; (800d6cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800d6a4:	f016 f984 	bl	80239b0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800d6a8:	4a09      	ldr	r2, [pc, #36]	; (800d6d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800d6aa:	887b      	ldrh	r3, [r7, #2]
 800d6ac:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800d6ae:	4a09      	ldr	r2, [pc, #36]	; (800d6d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800d6b0:	883b      	ldrh	r3, [r7, #0]
 800d6b2:	8013      	strh	r3, [r2, #0]
    }
 800d6b4:	bf00      	nop
 800d6b6:	3708      	adds	r7, #8
 800d6b8:	46bd      	mov	sp, r7
 800d6ba:	bd80      	pop	{r7, pc}
 800d6bc:	240016a4 	.word	0x240016a4
 800d6c0:	240016a6 	.word	0x240016a6
 800d6c4:	080250b8 	.word	0x080250b8
 800d6c8:	0802511c 	.word	0x0802511c
 800d6cc:	08025160 	.word	0x08025160
 800d6d0:	240016aa 	.word	0x240016aa
 800d6d4:	240016ac 	.word	0x240016ac

0800d6d8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800d6d8:	b580      	push	{r7, lr}
 800d6da:	b082      	sub	sp, #8
 800d6dc:	af00      	add	r7, sp, #0
 800d6de:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800d6e0:	687b      	ldr	r3, [r7, #4]
 800d6e2:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800d6e6:	2b00      	cmp	r3, #0
 800d6e8:	d009      	beq.n	800d6fe <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800d6ea:	687b      	ldr	r3, [r7, #4]
 800d6ec:	685a      	ldr	r2, [r3, #4]
 800d6ee:	687b      	ldr	r3, [r7, #4]
 800d6f0:	685b      	ldr	r3, [r3, #4]
 800d6f2:	681b      	ldr	r3, [r3, #0]
 800d6f4:	681b      	ldr	r3, [r3, #0]
 800d6f6:	4610      	mov	r0, r2
 800d6f8:	4798      	blx	r3
 800d6fa:	4603      	mov	r3, r0
 800d6fc:	e000      	b.n	800d700 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800d6fe:	2300      	movs	r3, #0
    }
 800d700:	4618      	mov	r0, r3
 800d702:	3708      	adds	r7, #8
 800d704:	46bd      	mov	sp, r7
 800d706:	bd80      	pop	{r7, pc}

0800d708 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800d708:	b580      	push	{r7, lr}
 800d70a:	b082      	sub	sp, #8
 800d70c:	af00      	add	r7, sp, #0
 800d70e:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800d710:	6878      	ldr	r0, [r7, #4]
 800d712:	f003 fce7 	bl	80110e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800d716:	687b      	ldr	r3, [r7, #4]
 800d718:	681b      	ldr	r3, [r3, #0]
 800d71a:	33ac      	adds	r3, #172	; 0xac
 800d71c:	681b      	ldr	r3, [r3, #0]
 800d71e:	6878      	ldr	r0, [r7, #4]
 800d720:	4798      	blx	r3
    }
 800d722:	bf00      	nop
 800d724:	3708      	adds	r7, #8
 800d726:	46bd      	mov	sp, r7
 800d728:	bd80      	pop	{r7, pc}

0800d72a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800d72a:	b480      	push	{r7}
 800d72c:	b083      	sub	sp, #12
 800d72e:	af00      	add	r7, sp, #0
 800d730:	6078      	str	r0, [r7, #4]
 800d732:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800d734:	2300      	movs	r3, #0
    }
 800d736:	4618      	mov	r0, r3
 800d738:	370c      	adds	r7, #12
 800d73a:	46bd      	mov	sp, r7
 800d73c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d740:	4770      	bx	lr
	...

0800d744 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800d744:	b580      	push	{r7, lr}
 800d746:	b084      	sub	sp, #16
 800d748:	af00      	add	r7, sp, #0
 800d74a:	60f8      	str	r0, [r7, #12]
 800d74c:	60b9      	str	r1, [r7, #8]
 800d74e:	607a      	str	r2, [r7, #4]
 800d750:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800d752:	68bb      	ldr	r3, [r7, #8]
 800d754:	2b00      	cmp	r3, #0
 800d756:	d106      	bne.n	800d766 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800d758:	4b0f      	ldr	r3, [pc, #60]	; (800d798 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800d75a:	4a10      	ldr	r2, [pc, #64]	; (800d79c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800d75c:	f240 21d2 	movw	r1, #722	; 0x2d2
 800d760:	480f      	ldr	r0, [pc, #60]	; (800d7a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800d762:	f016 f925 	bl	80239b0 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800d766:	68fb      	ldr	r3, [r7, #12]
 800d768:	68ba      	ldr	r2, [r7, #8]
 800d76a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800d76c:	68fb      	ldr	r3, [r7, #12]
 800d76e:	687a      	ldr	r2, [r7, #4]
 800d770:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800d772:	687b      	ldr	r3, [r7, #4]
 800d774:	2b00      	cmp	r3, #0
 800d776:	bf14      	ite	ne
 800d778:	2301      	movne	r3, #1
 800d77a:	2300      	moveq	r3, #0
 800d77c:	b2da      	uxtb	r2, r3
 800d77e:	4b09      	ldr	r3, [pc, #36]	; (800d7a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800d780:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800d782:	68fb      	ldr	r3, [r7, #12]
 800d784:	681b      	ldr	r3, [r3, #0]
 800d786:	338c      	adds	r3, #140	; 0x8c
 800d788:	681b      	ldr	r3, [r3, #0]
 800d78a:	6839      	ldr	r1, [r7, #0]
 800d78c:	68f8      	ldr	r0, [r7, #12]
 800d78e:	4798      	blx	r3
    }
 800d790:	bf00      	nop
 800d792:	3710      	adds	r7, #16
 800d794:	46bd      	mov	sp, r7
 800d796:	bd80      	pop	{r7, pc}
 800d798:	080251a4 	.word	0x080251a4
 800d79c:	080251dc 	.word	0x080251dc
 800d7a0:	08025160 	.word	0x08025160
 800d7a4:	240016ae 	.word	0x240016ae

0800d7a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800d7a8:	b480      	push	{r7}
 800d7aa:	b083      	sub	sp, #12
 800d7ac:	af00      	add	r7, sp, #0
 800d7ae:	6078      	str	r0, [r7, #4]
 800d7b0:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800d7b2:	687b      	ldr	r3, [r7, #4]
 800d7b4:	683a      	ldr	r2, [r7, #0]
 800d7b6:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800d7b8:	683b      	ldr	r3, [r7, #0]
 800d7ba:	2b00      	cmp	r3, #0
 800d7bc:	bf14      	ite	ne
 800d7be:	2301      	movne	r3, #1
 800d7c0:	2300      	moveq	r3, #0
 800d7c2:	b2da      	uxtb	r2, r3
 800d7c4:	4b03      	ldr	r3, [pc, #12]	; (800d7d4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800d7c6:	701a      	strb	r2, [r3, #0]
    }
 800d7c8:	bf00      	nop
 800d7ca:	370c      	adds	r7, #12
 800d7cc:	46bd      	mov	sp, r7
 800d7ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7d2:	4770      	bx	lr
 800d7d4:	240016af 	.word	0x240016af

0800d7d8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800d7d8:	b480      	push	{r7}
 800d7da:	b083      	sub	sp, #12
 800d7dc:	af00      	add	r7, sp, #0
 800d7de:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d7e0:	2300      	movs	r3, #0
    }
 800d7e2:	4618      	mov	r0, r3
 800d7e4:	370c      	adds	r7, #12
 800d7e6:	46bd      	mov	sp, r7
 800d7e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ec:	4770      	bx	lr

0800d7ee <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800d7ee:	b580      	push	{r7, lr}
 800d7f0:	b082      	sub	sp, #8
 800d7f2:	af00      	add	r7, sp, #0
 800d7f4:	6078      	str	r0, [r7, #4]
 800d7f6:	460b      	mov	r3, r1
 800d7f8:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800d7fa:	687b      	ldr	r3, [r7, #4]
 800d7fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d7fe:	2b00      	cmp	r3, #0
 800d800:	d004      	beq.n	800d80c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800d802:	687b      	ldr	r3, [r7, #4]
 800d804:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d806:	887a      	ldrh	r2, [r7, #2]
 800d808:	4610      	mov	r0, r2
 800d80a:	4798      	blx	r3
        }
    }
 800d80c:	bf00      	nop
 800d80e:	3708      	adds	r7, #8
 800d810:	46bd      	mov	sp, r7
 800d812:	bd80      	pop	{r7, pc}

0800d814 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800d814:	b580      	push	{r7, lr}
 800d816:	b082      	sub	sp, #8
 800d818:	af00      	add	r7, sp, #0
 800d81a:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800d81c:	687b      	ldr	r3, [r7, #4]
 800d81e:	685a      	ldr	r2, [r3, #4]
 800d820:	687b      	ldr	r3, [r7, #4]
 800d822:	685b      	ldr	r3, [r3, #4]
 800d824:	681b      	ldr	r3, [r3, #0]
 800d826:	3318      	adds	r3, #24
 800d828:	681b      	ldr	r3, [r3, #0]
 800d82a:	4610      	mov	r0, r2
 800d82c:	4798      	blx	r3
 800d82e:	4603      	mov	r3, r0
    }
 800d830:	4618      	mov	r0, r3
 800d832:	3708      	adds	r7, #8
 800d834:	46bd      	mov	sp, r7
 800d836:	bd80      	pop	{r7, pc}

0800d838 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800d838:	b480      	push	{r7}
 800d83a:	b085      	sub	sp, #20
 800d83c:	af00      	add	r7, sp, #0
 800d83e:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800d840:	687b      	ldr	r3, [r7, #4]
 800d842:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800d84c:	429a      	cmp	r2, r3
 800d84e:	d011      	beq.n	800d874 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800d850:	4b14      	ldr	r3, [pc, #80]	; (800d8a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d852:	781b      	ldrb	r3, [r3, #0]
 800d854:	2b00      	cmp	r3, #0
 800d856:	d11e      	bne.n	800d896 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800d858:	4b13      	ldr	r3, [pc, #76]	; (800d8a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d85a:	881b      	ldrh	r3, [r3, #0]
 800d85c:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800d85e:	4b13      	ldr	r3, [pc, #76]	; (800d8ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d860:	881a      	ldrh	r2, [r3, #0]
 800d862:	4b11      	ldr	r3, [pc, #68]	; (800d8a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d864:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800d866:	4a11      	ldr	r2, [pc, #68]	; (800d8ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d868:	89bb      	ldrh	r3, [r7, #12]
 800d86a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800d86c:	4b0d      	ldr	r3, [pc, #52]	; (800d8a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d86e:	2201      	movs	r2, #1
 800d870:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800d872:	e010      	b.n	800d896 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800d874:	4b0b      	ldr	r3, [pc, #44]	; (800d8a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d876:	781b      	ldrb	r3, [r3, #0]
 800d878:	2b00      	cmp	r3, #0
 800d87a:	d00c      	beq.n	800d896 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800d87c:	4b0a      	ldr	r3, [pc, #40]	; (800d8a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d87e:	881b      	ldrh	r3, [r3, #0]
 800d880:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800d882:	4b0a      	ldr	r3, [pc, #40]	; (800d8ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d884:	881a      	ldrh	r2, [r3, #0]
 800d886:	4b08      	ldr	r3, [pc, #32]	; (800d8a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d888:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800d88a:	4a08      	ldr	r2, [pc, #32]	; (800d8ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d88c:	89fb      	ldrh	r3, [r7, #14]
 800d88e:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800d890:	4b04      	ldr	r3, [pc, #16]	; (800d8a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d892:	2200      	movs	r2, #0
 800d894:	701a      	strb	r2, [r3, #0]
    }
 800d896:	bf00      	nop
 800d898:	3714      	adds	r7, #20
 800d89a:	46bd      	mov	sp, r7
 800d89c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8a0:	4770      	bx	lr
 800d8a2:	bf00      	nop
 800d8a4:	240016a8 	.word	0x240016a8
 800d8a8:	240016a6 	.word	0x240016a6
 800d8ac:	240016a4 	.word	0x240016a4

0800d8b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800d8b0:	b580      	push	{r7, lr}
 800d8b2:	b082      	sub	sp, #8
 800d8b4:	af00      	add	r7, sp, #0
 800d8b6:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800d8b8:	687b      	ldr	r3, [r7, #4]
 800d8ba:	4618      	mov	r0, r3
 800d8bc:	f002 fe6f 	bl	801059e <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800d8c0:	bf00      	nop
 800d8c2:	3708      	adds	r7, #8
 800d8c4:	46bd      	mov	sp, r7
 800d8c6:	bd80      	pop	{r7, pc}

0800d8c8 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800d8c8:	b580      	push	{r7, lr}
 800d8ca:	b082      	sub	sp, #8
 800d8cc:	af00      	add	r7, sp, #0
 800d8ce:	6078      	str	r0, [r7, #4]
 800d8d0:	4a05      	ldr	r2, [pc, #20]	; (800d8e8 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800d8d2:	687b      	ldr	r3, [r7, #4]
 800d8d4:	601a      	str	r2, [r3, #0]
 800d8d6:	687b      	ldr	r3, [r7, #4]
 800d8d8:	4618      	mov	r0, r3
 800d8da:	f7ff fe99 	bl	800d610 <_ZN8touchgfx3HALD1Ev>
 800d8de:	687b      	ldr	r3, [r7, #4]
 800d8e0:	4618      	mov	r0, r3
 800d8e2:	3708      	adds	r7, #8
 800d8e4:	46bd      	mov	sp, r7
 800d8e6:	bd80      	pop	{r7, pc}
 800d8e8:	08025b80 	.word	0x08025b80

0800d8ec <_ZN20TouchGFXGeneratedHALD0Ev>:
 800d8ec:	b580      	push	{r7, lr}
 800d8ee:	b082      	sub	sp, #8
 800d8f0:	af00      	add	r7, sp, #0
 800d8f2:	6078      	str	r0, [r7, #4]
 800d8f4:	6878      	ldr	r0, [r7, #4]
 800d8f6:	f7ff ffe7 	bl	800d8c8 <_ZN20TouchGFXGeneratedHALD1Ev>
 800d8fa:	217c      	movs	r1, #124	; 0x7c
 800d8fc:	6878      	ldr	r0, [r7, #4]
 800d8fe:	f016 f828 	bl	8023952 <_ZdlPvj>
 800d902:	687b      	ldr	r3, [r7, #4]
 800d904:	4618      	mov	r0, r3
 800d906:	3708      	adds	r7, #8
 800d908:	46bd      	mov	sp, r7
 800d90a:	bd80      	pop	{r7, pc}

0800d90c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800d90c:	b580      	push	{r7, lr}
 800d90e:	b082      	sub	sp, #8
 800d910:	af00      	add	r7, sp, #0
 800d912:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800d914:	687b      	ldr	r3, [r7, #4]
 800d916:	4618      	mov	r0, r3
 800d918:	f7ff ffca 	bl	800d8b0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800d91c:	bf00      	nop
 800d91e:	3708      	adds	r7, #8
 800d920:	46bd      	mov	sp, r7
 800d922:	bd80      	pop	{r7, pc}

0800d924 <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800d924:	b580      	push	{r7, lr}
 800d926:	b082      	sub	sp, #8
 800d928:	af00      	add	r7, sp, #0
 800d92a:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800d92c:	687b      	ldr	r3, [r7, #4]
 800d92e:	4618      	mov	r0, r3
 800d930:	f001 fb1e 	bl	800ef70 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800d934:	bf00      	nop
 800d936:	3708      	adds	r7, #8
 800d938:	46bd      	mov	sp, r7
 800d93a:	bd80      	pop	{r7, pc}

0800d93c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800d93c:	b580      	push	{r7, lr}
 800d93e:	b082      	sub	sp, #8
 800d940:	af00      	add	r7, sp, #0
 800d942:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800d944:	687b      	ldr	r3, [r7, #4]
 800d946:	4618      	mov	r0, r3
 800d948:	f001 fbc2 	bl	800f0d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800d94c:	4603      	mov	r3, r0
}
 800d94e:	4618      	mov	r0, r3
 800d950:	3708      	adds	r7, #8
 800d952:	46bd      	mov	sp, r7
 800d954:	bd80      	pop	{r7, pc}

0800d956 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800d956:	b580      	push	{r7, lr}
 800d958:	b082      	sub	sp, #8
 800d95a:	af00      	add	r7, sp, #0
 800d95c:	6078      	str	r0, [r7, #4]
 800d95e:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800d960:	687b      	ldr	r3, [r7, #4]
 800d962:	6839      	ldr	r1, [r7, #0]
 800d964:	4618      	mov	r0, r3
 800d966:	f001 fbc1 	bl	800f0ec <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800d96a:	bf00      	nop
 800d96c:	3708      	adds	r7, #8
 800d96e:	46bd      	mov	sp, r7
 800d970:	bd80      	pop	{r7, pc}

0800d972 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800d972:	b580      	push	{r7, lr}
 800d974:	b082      	sub	sp, #8
 800d976:	af00      	add	r7, sp, #0
 800d978:	6078      	str	r0, [r7, #4]
 800d97a:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800d97c:	687b      	ldr	r3, [r7, #4]
 800d97e:	6839      	ldr	r1, [r7, #0]
 800d980:	4618      	mov	r0, r3
 800d982:	f001 fbc9 	bl	800f118 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800d986:	bf00      	nop
 800d988:	3708      	adds	r7, #8
 800d98a:	46bd      	mov	sp, r7
 800d98c:	bd80      	pop	{r7, pc}

0800d98e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800d98e:	b580      	push	{r7, lr}
 800d990:	b084      	sub	sp, #16
 800d992:	af00      	add	r7, sp, #0
 800d994:	60f8      	str	r0, [r7, #12]
 800d996:	60b9      	str	r1, [r7, #8]
 800d998:	607a      	str	r2, [r7, #4]
 800d99a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800d99c:	68f8      	ldr	r0, [r7, #12]
 800d99e:	683b      	ldr	r3, [r7, #0]
 800d9a0:	687a      	ldr	r2, [r7, #4]
 800d9a2:	68b9      	ldr	r1, [r7, #8]
 800d9a4:	f001 fbc6 	bl	800f134 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800d9a8:	4603      	mov	r3, r0
}
 800d9aa:	4618      	mov	r0, r3
 800d9ac:	3710      	adds	r7, #16
 800d9ae:	46bd      	mov	sp, r7
 800d9b0:	bd80      	pop	{r7, pc}

0800d9b2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800d9b2:	b580      	push	{r7, lr}
 800d9b4:	b082      	sub	sp, #8
 800d9b6:	af00      	add	r7, sp, #0
 800d9b8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800d9ba:	687b      	ldr	r3, [r7, #4]
 800d9bc:	4618      	mov	r0, r3
 800d9be:	f001 fb11 	bl	800efe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800d9c2:	bf00      	nop
 800d9c4:	3708      	adds	r7, #8
 800d9c6:	46bd      	mov	sp, r7
 800d9c8:	bd80      	pop	{r7, pc}

0800d9ca <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800d9ca:	b580      	push	{r7, lr}
 800d9cc:	b082      	sub	sp, #8
 800d9ce:	af00      	add	r7, sp, #0
 800d9d0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800d9d2:	687b      	ldr	r3, [r7, #4]
 800d9d4:	4618      	mov	r0, r3
 800d9d6:	f001 fb15 	bl	800f004 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800d9da:	bf00      	nop
 800d9dc:	3708      	adds	r7, #8
 800d9de:	46bd      	mov	sp, r7
 800d9e0:	bd80      	pop	{r7, pc}

0800d9e2 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800d9e2:	b580      	push	{r7, lr}
 800d9e4:	b082      	sub	sp, #8
 800d9e6:	af00      	add	r7, sp, #0
 800d9e8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800d9ea:	687b      	ldr	r3, [r7, #4]
 800d9ec:	4618      	mov	r0, r3
 800d9ee:	f001 fb17 	bl	800f020 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800d9f2:	bf00      	nop
 800d9f4:	3708      	adds	r7, #8
 800d9f6:	46bd      	mov	sp, r7
 800d9f8:	bd80      	pop	{r7, pc}

0800d9fa <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800d9fa:	b580      	push	{r7, lr}
 800d9fc:	b082      	sub	sp, #8
 800d9fe:	af00      	add	r7, sp, #0
 800da00:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	4618      	mov	r0, r3
 800da06:	f001 fb19 	bl	800f03c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800da0a:	bf00      	nop
 800da0c:	3708      	adds	r7, #8
 800da0e:	46bd      	mov	sp, r7
 800da10:	bd80      	pop	{r7, pc}

0800da12 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800da12:	b580      	push	{r7, lr}
 800da14:	b082      	sub	sp, #8
 800da16:	af00      	add	r7, sp, #0
 800da18:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800da1a:	687b      	ldr	r3, [r7, #4]
 800da1c:	4618      	mov	r0, r3
 800da1e:	f001 fb3b 	bl	800f098 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800da22:	4603      	mov	r3, r0
}
 800da24:	4618      	mov	r0, r3
 800da26:	3708      	adds	r7, #8
 800da28:	46bd      	mov	sp, r7
 800da2a:	bd80      	pop	{r7, pc}

0800da2c <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800da2c:	b580      	push	{r7, lr}
 800da2e:	b082      	sub	sp, #8
 800da30:	af00      	add	r7, sp, #0
 800da32:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800da34:	687b      	ldr	r3, [r7, #4]
 800da36:	4618      	mov	r0, r3
 800da38:	f001 fb3b 	bl	800f0b2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800da3c:	bf00      	nop
 800da3e:	3708      	adds	r7, #8
 800da40:	46bd      	mov	sp, r7
 800da42:	bd80      	pop	{r7, pc}

0800da44 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800da44:	b580      	push	{r7, lr}
 800da46:	b082      	sub	sp, #8
 800da48:	af00      	add	r7, sp, #0
 800da4a:	6078      	str	r0, [r7, #4]
 800da4c:	4a05      	ldr	r2, [pc, #20]	; (800da64 <_ZN11TouchGFXHALD1Ev+0x20>)
 800da4e:	687b      	ldr	r3, [r7, #4]
 800da50:	601a      	str	r2, [r3, #0]
 800da52:	687b      	ldr	r3, [r7, #4]
 800da54:	4618      	mov	r0, r3
 800da56:	f7ff ff37 	bl	800d8c8 <_ZN20TouchGFXGeneratedHALD1Ev>
 800da5a:	687b      	ldr	r3, [r7, #4]
 800da5c:	4618      	mov	r0, r3
 800da5e:	3708      	adds	r7, #8
 800da60:	46bd      	mov	sp, r7
 800da62:	bd80      	pop	{r7, pc}
 800da64:	08025960 	.word	0x08025960

0800da68 <_ZN11TouchGFXHALD0Ev>:
 800da68:	b580      	push	{r7, lr}
 800da6a:	b082      	sub	sp, #8
 800da6c:	af00      	add	r7, sp, #0
 800da6e:	6078      	str	r0, [r7, #4]
 800da70:	6878      	ldr	r0, [r7, #4]
 800da72:	f7ff ffe7 	bl	800da44 <_ZN11TouchGFXHALD1Ev>
 800da76:	217c      	movs	r1, #124	; 0x7c
 800da78:	6878      	ldr	r0, [r7, #4]
 800da7a:	f015 ff6a 	bl	8023952 <_ZdlPvj>
 800da7e:	687b      	ldr	r3, [r7, #4]
 800da80:	4618      	mov	r0, r3
 800da82:	3708      	adds	r7, #8
 800da84:	46bd      	mov	sp, r7
 800da86:	bd80      	pop	{r7, pc}

0800da88 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800da88:	b480      	push	{r7}
 800da8a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800da8c:	4b05      	ldr	r3, [pc, #20]	; (800daa4 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800da8e:	2200      	movs	r2, #0
 800da90:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800da92:	4b05      	ldr	r3, [pc, #20]	; (800daa8 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800da94:	2200      	movs	r2, #0
 800da96:	601a      	str	r2, [r3, #0]
}
 800da98:	bf00      	nop
 800da9a:	46bd      	mov	sp, r7
 800da9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daa0:	4770      	bx	lr
 800daa2:	bf00      	nop
 800daa4:	240004f4 	.word	0x240004f4
 800daa8:	240004f8 	.word	0x240004f8

0800daac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800daac:	b480      	push	{r7}
 800daae:	af00      	add	r7, sp, #0
    while (fb_sem);
 800dab0:	bf00      	nop
 800dab2:	4b08      	ldr	r3, [pc, #32]	; (800dad4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800dab4:	681b      	ldr	r3, [r3, #0]
 800dab6:	2b00      	cmp	r3, #0
 800dab8:	bf14      	ite	ne
 800daba:	2301      	movne	r3, #1
 800dabc:	2300      	moveq	r3, #0
 800dabe:	b2db      	uxtb	r3, r3
 800dac0:	2b00      	cmp	r3, #0
 800dac2:	d1f6      	bne.n	800dab2 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800dac4:	4b03      	ldr	r3, [pc, #12]	; (800dad4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800dac6:	2201      	movs	r2, #1
 800dac8:	601a      	str	r2, [r3, #0]
}
 800daca:	bf00      	nop
 800dacc:	46bd      	mov	sp, r7
 800dace:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dad2:	4770      	bx	lr
 800dad4:	240004f4 	.word	0x240004f4

0800dad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800dad8:	b480      	push	{r7}
 800dada:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800dadc:	4b03      	ldr	r3, [pc, #12]	; (800daec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800dade:	2200      	movs	r2, #0
 800dae0:	601a      	str	r2, [r3, #0]
}
 800dae2:	bf00      	nop
 800dae4:	46bd      	mov	sp, r7
 800dae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daea:	4770      	bx	lr
 800daec:	240004f4 	.word	0x240004f4

0800daf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800daf0:	b480      	push	{r7}
 800daf2:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800daf4:	4b03      	ldr	r3, [pc, #12]	; (800db04 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800daf6:	2201      	movs	r2, #1
 800daf8:	601a      	str	r2, [r3, #0]
}
 800dafa:	bf00      	nop
 800dafc:	46bd      	mov	sp, r7
 800dafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db02:	4770      	bx	lr
 800db04:	240004f4 	.word	0x240004f4

0800db08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800db08:	b480      	push	{r7}
 800db0a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800db0c:	4b03      	ldr	r3, [pc, #12]	; (800db1c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800db0e:	2200      	movs	r2, #0
 800db10:	601a      	str	r2, [r3, #0]
}
 800db12:	bf00      	nop
 800db14:	46bd      	mov	sp, r7
 800db16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db1a:	4770      	bx	lr
 800db1c:	240004f4 	.word	0x240004f4

0800db20 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800db20:	b480      	push	{r7}
 800db22:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800db24:	4b03      	ldr	r3, [pc, #12]	; (800db34 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800db26:	2201      	movs	r2, #1
 800db28:	601a      	str	r2, [r3, #0]
}
 800db2a:	bf00      	nop
 800db2c:	46bd      	mov	sp, r7
 800db2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db32:	4770      	bx	lr
 800db34:	240004f8 	.word	0x240004f8

0800db38 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800db38:	b480      	push	{r7}
 800db3a:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800db3c:	4b03      	ldr	r3, [pc, #12]	; (800db4c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800db3e:	2200      	movs	r2, #0
 800db40:	601a      	str	r2, [r3, #0]
}
 800db42:	bf00      	nop
 800db44:	46bd      	mov	sp, r7
 800db46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db4a:	4770      	bx	lr
 800db4c:	240004f8 	.word	0x240004f8

0800db50 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800db50:	b480      	push	{r7}
 800db52:	af00      	add	r7, sp, #0
    return vsync_sem;
 800db54:	4b05      	ldr	r3, [pc, #20]	; (800db6c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800db56:	681b      	ldr	r3, [r3, #0]
 800db58:	2b00      	cmp	r3, #0
 800db5a:	bf14      	ite	ne
 800db5c:	2301      	movne	r3, #1
 800db5e:	2300      	moveq	r3, #0
 800db60:	b2db      	uxtb	r3, r3
}
 800db62:	4618      	mov	r0, r3
 800db64:	46bd      	mov	sp, r7
 800db66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db6a:	4770      	bx	lr
 800db6c:	240004f8 	.word	0x240004f8

0800db70 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800db70:	b580      	push	{r7, lr}
 800db72:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800db74:	4b0a      	ldr	r3, [pc, #40]	; (800dba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800db76:	681b      	ldr	r3, [r3, #0]
 800db78:	2b00      	cmp	r3, #0
 800db7a:	bf14      	ite	ne
 800db7c:	2301      	movne	r3, #1
 800db7e:	2300      	moveq	r3, #0
 800db80:	b2db      	uxtb	r3, r3
 800db82:	2b00      	cmp	r3, #0
 800db84:	d00a      	beq.n	800db9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800db86:	4b06      	ldr	r3, [pc, #24]	; (800dba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800db88:	2200      	movs	r2, #0
 800db8a:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800db8c:	f7fd f944 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800db90:	4603      	mov	r3, r0
 800db92:	681a      	ldr	r2, [r3, #0]
 800db94:	3270      	adds	r2, #112	; 0x70
 800db96:	6812      	ldr	r2, [r2, #0]
 800db98:	4618      	mov	r0, r3
 800db9a:	4790      	blx	r2
    }
}
 800db9c:	bf00      	nop
 800db9e:	bd80      	pop	{r7, pc}
 800dba0:	240004f8 	.word	0x240004f8

0800dba4 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800dba4:	b580      	push	{r7, lr}
 800dba6:	b082      	sub	sp, #8
 800dba8:	af00      	add	r7, sp, #0
 800dbaa:	4603      	mov	r3, r0
 800dbac:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800dbae:	88fb      	ldrh	r3, [r7, #6]
 800dbb0:	4618      	mov	r0, r3
 800dbb2:	f002 f9bd 	bl	800ff30 <HAL_Delay>
}
 800dbb6:	bf00      	nop
 800dbb8:	3708      	adds	r7, #8
 800dbba:	46bd      	mov	sp, r7
 800dbbc:	bd80      	pop	{r7, pc}
	...

0800dbc0 <__NVIC_EnableIRQ>:
{
 800dbc0:	b480      	push	{r7}
 800dbc2:	b083      	sub	sp, #12
 800dbc4:	af00      	add	r7, sp, #0
 800dbc6:	4603      	mov	r3, r0
 800dbc8:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800dbca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800dbce:	2b00      	cmp	r3, #0
 800dbd0:	db0b      	blt.n	800dbea <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800dbd2:	88fb      	ldrh	r3, [r7, #6]
 800dbd4:	f003 021f 	and.w	r2, r3, #31
 800dbd8:	4907      	ldr	r1, [pc, #28]	; (800dbf8 <__NVIC_EnableIRQ+0x38>)
 800dbda:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800dbde:	095b      	lsrs	r3, r3, #5
 800dbe0:	2001      	movs	r0, #1
 800dbe2:	fa00 f202 	lsl.w	r2, r0, r2
 800dbe6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800dbea:	bf00      	nop
 800dbec:	370c      	adds	r7, #12
 800dbee:	46bd      	mov	sp, r7
 800dbf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbf4:	4770      	bx	lr
 800dbf6:	bf00      	nop
 800dbf8:	e000e100 	.word	0xe000e100

0800dbfc <__NVIC_DisableIRQ>:
{
 800dbfc:	b480      	push	{r7}
 800dbfe:	b083      	sub	sp, #12
 800dc00:	af00      	add	r7, sp, #0
 800dc02:	4603      	mov	r3, r0
 800dc04:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800dc06:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800dc0a:	2b00      	cmp	r3, #0
 800dc0c:	db12      	blt.n	800dc34 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800dc0e:	88fb      	ldrh	r3, [r7, #6]
 800dc10:	f003 021f 	and.w	r2, r3, #31
 800dc14:	490a      	ldr	r1, [pc, #40]	; (800dc40 <__NVIC_DisableIRQ+0x44>)
 800dc16:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800dc1a:	095b      	lsrs	r3, r3, #5
 800dc1c:	2001      	movs	r0, #1
 800dc1e:	fa00 f202 	lsl.w	r2, r0, r2
 800dc22:	3320      	adds	r3, #32
 800dc24:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800dc28:	f3bf 8f4f 	dsb	sy
}
 800dc2c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800dc2e:	f3bf 8f6f 	isb	sy
}
 800dc32:	bf00      	nop
}
 800dc34:	bf00      	nop
 800dc36:	370c      	adds	r7, #12
 800dc38:	46bd      	mov	sp, r7
 800dc3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc3e:	4770      	bx	lr
 800dc40:	e000e100 	.word	0xe000e100

0800dc44 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800dc44:	b480      	push	{r7}
 800dc46:	b083      	sub	sp, #12
 800dc48:	af00      	add	r7, sp, #0
 800dc4a:	6078      	str	r0, [r7, #4]
        : color(0)
 800dc4c:	687b      	ldr	r3, [r7, #4]
 800dc4e:	2200      	movs	r2, #0
 800dc50:	601a      	str	r2, [r3, #0]
    }
 800dc52:	687b      	ldr	r3, [r7, #4]
 800dc54:	4618      	mov	r0, r3
 800dc56:	370c      	adds	r7, #12
 800dc58:	46bd      	mov	sp, r7
 800dc5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc5e:	4770      	bx	lr

0800dc60 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800dc60:	b480      	push	{r7}
 800dc62:	b083      	sub	sp, #12
 800dc64:	af00      	add	r7, sp, #0
 800dc66:	6078      	str	r0, [r7, #4]
        return color;
 800dc68:	687b      	ldr	r3, [r7, #4]
 800dc6a:	681b      	ldr	r3, [r3, #0]
    }
 800dc6c:	4618      	mov	r0, r3
 800dc6e:	370c      	adds	r7, #12
 800dc70:	46bd      	mov	sp, r7
 800dc72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc76:	4770      	bx	lr

0800dc78 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800dc78:	b480      	push	{r7}
 800dc7a:	b083      	sub	sp, #12
 800dc7c:	af00      	add	r7, sp, #0
 800dc7e:	6078      	str	r0, [r7, #4]
    {
 800dc80:	4a04      	ldr	r2, [pc, #16]	; (800dc94 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800dc82:	687b      	ldr	r3, [r7, #4]
 800dc84:	601a      	str	r2, [r3, #0]
    }
 800dc86:	687b      	ldr	r3, [r7, #4]
 800dc88:	4618      	mov	r0, r3
 800dc8a:	370c      	adds	r7, #12
 800dc8c:	46bd      	mov	sp, r7
 800dc8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc92:	4770      	bx	lr
 800dc94:	08025a88 	.word	0x08025a88

0800dc98 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800dc98:	b580      	push	{r7, lr}
 800dc9a:	b082      	sub	sp, #8
 800dc9c:	af00      	add	r7, sp, #0
 800dc9e:	6078      	str	r0, [r7, #4]
    }
 800dca0:	6878      	ldr	r0, [r7, #4]
 800dca2:	f7ff ffe9 	bl	800dc78 <_ZN8touchgfx9DMA_QueueD1Ev>
 800dca6:	2104      	movs	r1, #4
 800dca8:	6878      	ldr	r0, [r7, #4]
 800dcaa:	f015 fe52 	bl	8023952 <_ZdlPvj>
 800dcae:	687b      	ldr	r3, [r7, #4]
 800dcb0:	4618      	mov	r0, r3
 800dcb2:	3708      	adds	r7, #8
 800dcb4:	46bd      	mov	sp, r7
 800dcb6:	bd80      	pop	{r7, pc}

0800dcb8 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800dcb8:	b580      	push	{r7, lr}
 800dcba:	b082      	sub	sp, #8
 800dcbc:	af00      	add	r7, sp, #0
 800dcbe:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800dcc0:	687b      	ldr	r3, [r7, #4]
 800dcc2:	681b      	ldr	r3, [r3, #0]
 800dcc4:	3344      	adds	r3, #68	; 0x44
 800dcc6:	681b      	ldr	r3, [r3, #0]
 800dcc8:	6878      	ldr	r0, [r7, #4]
 800dcca:	4798      	blx	r3
    }
 800dccc:	bf00      	nop
 800dcce:	3708      	adds	r7, #8
 800dcd0:	46bd      	mov	sp, r7
 800dcd2:	bd80      	pop	{r7, pc}

0800dcd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800dcd4:	b480      	push	{r7}
 800dcd6:	b083      	sub	sp, #12
 800dcd8:	af00      	add	r7, sp, #0
 800dcda:	6078      	str	r0, [r7, #4]
    {
 800dcdc:	4a04      	ldr	r2, [pc, #16]	; (800dcf0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800dcde:	687b      	ldr	r3, [r7, #4]
 800dce0:	601a      	str	r2, [r3, #0]
    }
 800dce2:	687b      	ldr	r3, [r7, #4]
 800dce4:	4618      	mov	r0, r3
 800dce6:	370c      	adds	r7, #12
 800dce8:	46bd      	mov	sp, r7
 800dcea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcee:	4770      	bx	lr
 800dcf0:	08025e00 	.word	0x08025e00

0800dcf4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800dcf4:	b580      	push	{r7, lr}
 800dcf6:	b082      	sub	sp, #8
 800dcf8:	af00      	add	r7, sp, #0
 800dcfa:	6078      	str	r0, [r7, #4]
    }
 800dcfc:	6878      	ldr	r0, [r7, #4]
 800dcfe:	f7ff ffe9 	bl	800dcd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800dd02:	210c      	movs	r1, #12
 800dd04:	6878      	ldr	r0, [r7, #4]
 800dd06:	f015 fe24 	bl	8023952 <_ZdlPvj>
 800dd0a:	687b      	ldr	r3, [r7, #4]
 800dd0c:	4618      	mov	r0, r3
 800dd0e:	3708      	adds	r7, #8
 800dd10:	46bd      	mov	sp, r7
 800dd12:	bd80      	pop	{r7, pc}

0800dd14 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800dd14:	b480      	push	{r7}
 800dd16:	b083      	sub	sp, #12
 800dd18:	af00      	add	r7, sp, #0
 800dd1a:	6078      	str	r0, [r7, #4]
 800dd1c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800dd1e:	4a09      	ldr	r2, [pc, #36]	; (800dd44 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800dd20:	687b      	ldr	r3, [r7, #4]
 800dd22:	601a      	str	r2, [r3, #0]
 800dd24:	687b      	ldr	r3, [r7, #4]
 800dd26:	683a      	ldr	r2, [r7, #0]
 800dd28:	605a      	str	r2, [r3, #4]
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	2200      	movs	r2, #0
 800dd2e:	721a      	strb	r2, [r3, #8]
 800dd30:	687b      	ldr	r3, [r7, #4]
 800dd32:	2200      	movs	r2, #0
 800dd34:	725a      	strb	r2, [r3, #9]
    {
    }
 800dd36:	687b      	ldr	r3, [r7, #4]
 800dd38:	4618      	mov	r0, r3
 800dd3a:	370c      	adds	r7, #12
 800dd3c:	46bd      	mov	sp, r7
 800dd3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd42:	4770      	bx	lr
 800dd44:	08025e00 	.word	0x08025e00

0800dd48 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800dd48:	b480      	push	{r7}
 800dd4a:	b083      	sub	sp, #12
 800dd4c:	af00      	add	r7, sp, #0
 800dd4e:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800dd50:	2301      	movs	r3, #1
    }
 800dd52:	4618      	mov	r0, r3
 800dd54:	370c      	adds	r7, #12
 800dd56:	46bd      	mov	sp, r7
 800dd58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd5c:	4770      	bx	lr

0800dd5e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800dd5e:	b580      	push	{r7, lr}
 800dd60:	b082      	sub	sp, #8
 800dd62:	af00      	add	r7, sp, #0
 800dd64:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800dd66:	687a      	ldr	r2, [r7, #4]
 800dd68:	687b      	ldr	r3, [r7, #4]
 800dd6a:	681b      	ldr	r3, [r3, #0]
 800dd6c:	3328      	adds	r3, #40	; 0x28
 800dd6e:	681b      	ldr	r3, [r3, #0]
 800dd70:	4610      	mov	r0, r2
 800dd72:	4798      	blx	r3
    }
 800dd74:	bf00      	nop
 800dd76:	3708      	adds	r7, #8
 800dd78:	46bd      	mov	sp, r7
 800dd7a:	bd80      	pop	{r7, pc}

0800dd7c <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800dd7c:	b580      	push	{r7, lr}
 800dd7e:	b082      	sub	sp, #8
 800dd80:	af00      	add	r7, sp, #0
 800dd82:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800dd84:	687b      	ldr	r3, [r7, #4]
 800dd86:	685a      	ldr	r2, [r3, #4]
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	685b      	ldr	r3, [r3, #4]
 800dd8c:	681b      	ldr	r3, [r3, #0]
 800dd8e:	3314      	adds	r3, #20
 800dd90:	681b      	ldr	r3, [r3, #0]
 800dd92:	4610      	mov	r0, r2
 800dd94:	4798      	blx	r3
    }
 800dd96:	bf00      	nop
 800dd98:	3708      	adds	r7, #8
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	bd80      	pop	{r7, pc}

0800dd9e <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
    static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
    {
 800dd9e:	b580      	push	{r7, lr}
 800dda0:	b082      	sub	sp, #8
 800dda2:	af00      	add	r7, sp, #0
 800dda4:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        HAL::getInstance()->signalDMAInterrupt();
 800dda6:	f7fd f837 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800ddaa:	4603      	mov	r3, r0
 800ddac:	4618      	mov	r0, r3
 800ddae:	f7ff ffe5 	bl	800dd7c <_ZN8touchgfx3HAL18signalDMAInterruptEv>
    }
 800ddb2:	bf00      	nop
 800ddb4:	3708      	adds	r7, #8
 800ddb6:	46bd      	mov	sp, r7
 800ddb8:	bd80      	pop	{r7, pc}

0800ddba <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800ddba:	b580      	push	{r7, lr}
 800ddbc:	b082      	sub	sp, #8
 800ddbe:	af00      	add	r7, sp, #0
 800ddc0:	6078      	str	r0, [r7, #4]
 800ddc2:	687b      	ldr	r3, [r7, #4]
 800ddc4:	330c      	adds	r3, #12
 800ddc6:	4618      	mov	r0, r3
 800ddc8:	f7ff ff3c 	bl	800dc44 <_ZN8touchgfx9colortypeC1Ev>
 800ddcc:	687b      	ldr	r3, [r7, #4]
 800ddce:	4618      	mov	r0, r3
 800ddd0:	3708      	adds	r7, #8
 800ddd2:	46bd      	mov	sp, r7
 800ddd4:	bd80      	pop	{r7, pc}
	...

0800ddd8 <_ZN8STM32DMAC1Ev>:
}

STM32DMA::STM32DMA()
 800ddd8:	b5b0      	push	{r4, r5, r7, lr}
 800ddda:	b082      	sub	sp, #8
 800dddc:	af00      	add	r7, sp, #0
 800ddde:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800dde0:	687a      	ldr	r2, [r7, #4]
 800dde2:	687b      	ldr	r3, [r7, #4]
 800dde4:	330c      	adds	r3, #12
 800dde6:	4619      	mov	r1, r3
 800dde8:	4610      	mov	r0, r2
 800ddea:	f7ff ff93 	bl	800dd14 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800ddee:	4a0e      	ldr	r2, [pc, #56]	; (800de28 <_ZN8STM32DMAC1Ev+0x50>)
 800ddf0:	687b      	ldr	r3, [r7, #4]
 800ddf2:	601a      	str	r2, [r3, #0]
 800ddf4:	687b      	ldr	r3, [r7, #4]
 800ddf6:	f103 000c 	add.w	r0, r3, #12
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	3320      	adds	r3, #32
 800ddfe:	2260      	movs	r2, #96	; 0x60
 800de00:	4619      	mov	r1, r3
 800de02:	f003 faa9 	bl	8011358 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800de06:	687b      	ldr	r3, [r7, #4]
 800de08:	3320      	adds	r3, #32
 800de0a:	245f      	movs	r4, #95	; 0x5f
 800de0c:	461d      	mov	r5, r3
 800de0e:	e004      	b.n	800de1a <_ZN8STM32DMAC1Ev+0x42>
 800de10:	4628      	mov	r0, r5
 800de12:	f7ff ffd2 	bl	800ddba <_ZN8touchgfx6BlitOpC1Ev>
 800de16:	3524      	adds	r5, #36	; 0x24
 800de18:	3c01      	subs	r4, #1
 800de1a:	2c00      	cmp	r4, #0
 800de1c:	daf8      	bge.n	800de10 <_ZN8STM32DMAC1Ev+0x38>
{
}
 800de1e:	687b      	ldr	r3, [r7, #4]
 800de20:	4618      	mov	r0, r3
 800de22:	3708      	adds	r7, #8
 800de24:	46bd      	mov	sp, r7
 800de26:	bdb0      	pop	{r4, r5, r7, pc}
 800de28:	08025a38 	.word	0x08025a38

0800de2c <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 800de2c:	b580      	push	{r7, lr}
 800de2e:	b082      	sub	sp, #8
 800de30:	af00      	add	r7, sp, #0
 800de32:	6078      	str	r0, [r7, #4]
 800de34:	4a09      	ldr	r2, [pc, #36]	; (800de5c <_ZN8STM32DMAD1Ev+0x30>)
 800de36:	687b      	ldr	r3, [r7, #4]
 800de38:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800de3a:	205a      	movs	r0, #90	; 0x5a
 800de3c:	f7ff fede 	bl	800dbfc <__NVIC_DisableIRQ>
STM32DMA::~STM32DMA()
 800de40:	687b      	ldr	r3, [r7, #4]
 800de42:	330c      	adds	r3, #12
 800de44:	4618      	mov	r0, r3
 800de46:	f000 facb 	bl	800e3e0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	4618      	mov	r0, r3
 800de4e:	f7ff ff41 	bl	800dcd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800de52:	687b      	ldr	r3, [r7, #4]
 800de54:	4618      	mov	r0, r3
 800de56:	3708      	adds	r7, #8
 800de58:	46bd      	mov	sp, r7
 800de5a:	bd80      	pop	{r7, pc}
 800de5c:	08025a38 	.word	0x08025a38

0800de60 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800de60:	b580      	push	{r7, lr}
 800de62:	b082      	sub	sp, #8
 800de64:	af00      	add	r7, sp, #0
 800de66:	6078      	str	r0, [r7, #4]
}
 800de68:	6878      	ldr	r0, [r7, #4]
 800de6a:	f7ff ffdf 	bl	800de2c <_ZN8STM32DMAD1Ev>
 800de6e:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800de72:	6878      	ldr	r0, [r7, #4]
 800de74:	f015 fd6d 	bl	8023952 <_ZdlPvj>
 800de78:	687b      	ldr	r3, [r7, #4]
 800de7a:	4618      	mov	r0, r3
 800de7c:	3708      	adds	r7, #8
 800de7e:	46bd      	mov	sp, r7
 800de80:	bd80      	pop	{r7, pc}
	...

0800de84 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800de84:	b580      	push	{r7, lr}
 800de86:	b084      	sub	sp, #16
 800de88:	af00      	add	r7, sp, #0
 800de8a:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800de8c:	4b12      	ldr	r3, [pc, #72]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800de8e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800de92:	4a11      	ldr	r2, [pc, #68]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800de94:	f043 0310 	orr.w	r3, r3, #16
 800de98:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 800de9c:	4b0e      	ldr	r3, [pc, #56]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800de9e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800dea2:	f003 0310 	and.w	r3, r3, #16
 800dea6:	60fb      	str	r3, [r7, #12]
 800dea8:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800deaa:	4b0b      	ldr	r3, [pc, #44]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800deac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800deae:	4a0a      	ldr	r2, [pc, #40]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800deb0:	f043 0310 	orr.w	r3, r3, #16
 800deb4:	67d3      	str	r3, [r2, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800deb6:	4b08      	ldr	r3, [pc, #32]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800deb8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800deba:	4a07      	ldr	r2, [pc, #28]	; (800ded8 <_ZN8STM32DMA10initializeEv+0x54>)
 800debc:	f023 0310 	bic.w	r3, r3, #16
 800dec0:	67d3      	str	r3, [r2, #124]	; 0x7c

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800dec2:	4b06      	ldr	r3, [pc, #24]	; (800dedc <_ZN8STM32DMA10initializeEv+0x58>)
 800dec4:	4a06      	ldr	r2, [pc, #24]	; (800dee0 <_ZN8STM32DMA10initializeEv+0x5c>)
 800dec6:	621a      	str	r2, [r3, #32]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
 800dec8:	205a      	movs	r0, #90	; 0x5a
 800deca:	f7ff fe79 	bl	800dbc0 <__NVIC_EnableIRQ>
}
 800dece:	bf00      	nop
 800ded0:	3710      	adds	r7, #16
 800ded2:	46bd      	mov	sp, r7
 800ded4:	bd80      	pop	{r7, pc}
 800ded6:	bf00      	nop
 800ded8:	58024400 	.word	0x58024400
 800dedc:	24000138 	.word	0x24000138
 800dee0:	0800dd9f 	.word	0x0800dd9f

0800dee4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800dee4:	b580      	push	{r7, lr}
 800dee6:	b084      	sub	sp, #16
 800dee8:	af00      	add	r7, sp, #0
 800deea:	6078      	str	r0, [r7, #4]
 800deec:	460b      	mov	r3, r1
 800deee:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800def0:	2300      	movs	r3, #0
 800def2:	60fb      	str	r3, [r7, #12]

    switch (format)
 800def4:	78fb      	ldrb	r3, [r7, #3]
 800def6:	2b0b      	cmp	r3, #11
 800def8:	d826      	bhi.n	800df48 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800defa:	a201      	add	r2, pc, #4	; (adr r2, 800df00 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800defc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800df00:	0800df3d 	.word	0x0800df3d
 800df04:	0800df37 	.word	0x0800df37
 800df08:	0800df31 	.word	0x0800df31
 800df0c:	0800df49 	.word	0x0800df49
 800df10:	0800df49 	.word	0x0800df49
 800df14:	0800df49 	.word	0x0800df49
 800df18:	0800df49 	.word	0x0800df49
 800df1c:	0800df43 	.word	0x0800df43
 800df20:	0800df43 	.word	0x0800df43
 800df24:	0800df43 	.word	0x0800df43
 800df28:	0800df43 	.word	0x0800df43
 800df2c:	0800df43 	.word	0x0800df43
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800df30:	2300      	movs	r3, #0
 800df32:	60fb      	str	r3, [r7, #12]
        break;
 800df34:	e00e      	b.n	800df54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800df36:	2301      	movs	r3, #1
 800df38:	60fb      	str	r3, [r7, #12]
        break;
 800df3a:	e00b      	b.n	800df54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800df3c:	2302      	movs	r3, #2
 800df3e:	60fb      	str	r3, [r7, #12]
        break;
 800df40:	e008      	b.n	800df54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800df42:	2305      	movs	r3, #5
 800df44:	60fb      	str	r3, [r7, #12]
        break;
 800df46:	e005      	b.n	800df54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800df48:	4b05      	ldr	r3, [pc, #20]	; (800df60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800df4a:	4a06      	ldr	r2, [pc, #24]	; (800df64 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800df4c:	2165      	movs	r1, #101	; 0x65
 800df4e:	4806      	ldr	r0, [pc, #24]	; (800df68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800df50:	f015 fd2e 	bl	80239b0 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800df54:	68fb      	ldr	r3, [r7, #12]
}
 800df56:	4618      	mov	r0, r3
 800df58:	3710      	adds	r7, #16
 800df5a:	46bd      	mov	sp, r7
 800df5c:	bd80      	pop	{r7, pc}
 800df5e:	bf00      	nop
 800df60:	0802522c 	.word	0x0802522c
 800df64:	08025248 	.word	0x08025248
 800df68:	08025294 	.word	0x08025294

0800df6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800df6c:	b580      	push	{r7, lr}
 800df6e:	b084      	sub	sp, #16
 800df70:	af00      	add	r7, sp, #0
 800df72:	6078      	str	r0, [r7, #4]
 800df74:	460b      	mov	r3, r1
 800df76:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800df78:	2300      	movs	r3, #0
 800df7a:	60fb      	str	r3, [r7, #12]

    switch (format)
 800df7c:	78fb      	ldrb	r3, [r7, #3]
 800df7e:	2b0a      	cmp	r3, #10
 800df80:	d821      	bhi.n	800dfc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800df82:	a201      	add	r2, pc, #4	; (adr r2, 800df88 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800df84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800df88:	0800dfc1 	.word	0x0800dfc1
 800df8c:	0800dfbb 	.word	0x0800dfbb
 800df90:	0800dfb5 	.word	0x0800dfb5
 800df94:	0800dfc7 	.word	0x0800dfc7
 800df98:	0800dfc7 	.word	0x0800dfc7
 800df9c:	0800dfc7 	.word	0x0800dfc7
 800dfa0:	0800dfc7 	.word	0x0800dfc7
 800dfa4:	0800dfbb 	.word	0x0800dfbb
 800dfa8:	0800dfbb 	.word	0x0800dfbb
 800dfac:	0800dfbb 	.word	0x0800dfbb
 800dfb0:	0800dfbb 	.word	0x0800dfbb
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800dfb4:	2300      	movs	r3, #0
 800dfb6:	60fb      	str	r3, [r7, #12]
        break;
 800dfb8:	e00b      	b.n	800dfd2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800dfba:	2301      	movs	r3, #1
 800dfbc:	60fb      	str	r3, [r7, #12]
        break;
 800dfbe:	e008      	b.n	800dfd2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800dfc0:	2302      	movs	r3, #2
 800dfc2:	60fb      	str	r3, [r7, #12]
        break;
 800dfc4:	e005      	b.n	800dfd2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800dfc6:	4b05      	ldr	r3, [pc, #20]	; (800dfdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800dfc8:	4a05      	ldr	r2, [pc, #20]	; (800dfe0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800dfca:	2186      	movs	r1, #134	; 0x86
 800dfcc:	4805      	ldr	r0, [pc, #20]	; (800dfe4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800dfce:	f015 fcef 	bl	80239b0 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800dfd2:	68fb      	ldr	r3, [r7, #12]
}
 800dfd4:	4618      	mov	r0, r3
 800dfd6:	3710      	adds	r7, #16
 800dfd8:	46bd      	mov	sp, r7
 800dfda:	bd80      	pop	{r7, pc}
 800dfdc:	0802522c 	.word	0x0802522c
 800dfe0:	080252c0 	.word	0x080252c0
 800dfe4:	08025294 	.word	0x08025294

0800dfe8 <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 800dfe8:	b480      	push	{r7}
 800dfea:	b083      	sub	sp, #12
 800dfec:	af00      	add	r7, sp, #0
 800dfee:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800dff0:	f240 33ef 	movw	r3, #1007	; 0x3ef
}
 800dff4:	4618      	mov	r0, r3
 800dff6:	370c      	adds	r7, #12
 800dff8:	46bd      	mov	sp, r7
 800dffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dffe:	4770      	bx	lr

0800e000 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800e000:	b590      	push	{r4, r7, lr}
 800e002:	b089      	sub	sp, #36	; 0x24
 800e004:	af00      	add	r7, sp, #0
 800e006:	6078      	str	r0, [r7, #4]
 800e008:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800e00a:	683b      	ldr	r3, [r7, #0]
 800e00c:	7f5b      	ldrb	r3, [r3, #29]
 800e00e:	4619      	mov	r1, r3
 800e010:	6878      	ldr	r0, [r7, #4]
 800e012:	f7ff ff67 	bl	800dee4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e016:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800e018:	683b      	ldr	r3, [r7, #0]
 800e01a:	7f9b      	ldrb	r3, [r3, #30]
 800e01c:	4619      	mov	r1, r3
 800e01e:	6878      	ldr	r0, [r7, #4]
 800e020:	f7ff ff60 	bl	800dee4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e024:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800e026:	683b      	ldr	r3, [r7, #0]
 800e028:	7f9b      	ldrb	r3, [r3, #30]
 800e02a:	4619      	mov	r1, r3
 800e02c:	6878      	ldr	r0, [r7, #4]
 800e02e:	f7ff ff9d 	bl	800df6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e032:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e034:	683b      	ldr	r3, [r7, #0]
 800e036:	8b5b      	ldrh	r3, [r3, #26]
 800e038:	461a      	mov	r2, r3
 800e03a:	683b      	ldr	r3, [r7, #0]
 800e03c:	8a9b      	ldrh	r3, [r3, #20]
 800e03e:	1ad2      	subs	r2, r2, r3
 800e040:	4b92      	ldr	r3, [pc, #584]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e042:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e044:	683b      	ldr	r3, [r7, #0]
 800e046:	8b5b      	ldrh	r3, [r3, #26]
 800e048:	461a      	mov	r2, r3
 800e04a:	683b      	ldr	r3, [r7, #0]
 800e04c:	8a9b      	ldrh	r3, [r3, #20]
 800e04e:	1ad2      	subs	r2, r2, r3
 800e050:	4b8e      	ldr	r3, [pc, #568]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e052:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800e054:	683b      	ldr	r3, [r7, #0]
 800e056:	8b1b      	ldrh	r3, [r3, #24]
 800e058:	461a      	mov	r2, r3
 800e05a:	683b      	ldr	r3, [r7, #0]
 800e05c:	8a9b      	ldrh	r3, [r3, #20]
 800e05e:	1ad2      	subs	r2, r2, r3
 800e060:	4b8a      	ldr	r3, [pc, #552]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e062:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800e064:	4a89      	ldr	r2, [pc, #548]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e066:	693b      	ldr	r3, [r7, #16]
 800e068:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800e06a:	683b      	ldr	r3, [r7, #0]
 800e06c:	8adb      	ldrh	r3, [r3, #22]
 800e06e:	461a      	mov	r2, r3
 800e070:	683b      	ldr	r3, [r7, #0]
 800e072:	8a9b      	ldrh	r3, [r3, #20]
 800e074:	041b      	lsls	r3, r3, #16
 800e076:	431a      	orrs	r2, r3
 800e078:	4b84      	ldr	r3, [pc, #528]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e07a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e07c:	683b      	ldr	r3, [r7, #0]
 800e07e:	691a      	ldr	r2, [r3, #16]
 800e080:	4b82      	ldr	r3, [pc, #520]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e082:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800e084:	683b      	ldr	r3, [r7, #0]
 800e086:	685a      	ldr	r2, [r3, #4]
 800e088:	4b80      	ldr	r3, [pc, #512]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e08a:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800e08c:	683b      	ldr	r3, [r7, #0]
 800e08e:	681b      	ldr	r3, [r3, #0]
 800e090:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e094:	d036      	beq.n	800e104 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
 800e096:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e09a:	f200 80e2 	bhi.w	800e262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x262>
 800e09e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800e0a2:	d014      	beq.n	800e0ce <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xce>
 800e0a4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800e0a8:	f200 80db 	bhi.w	800e262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x262>
 800e0ac:	2b80      	cmp	r3, #128	; 0x80
 800e0ae:	d059      	beq.n	800e164 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>
 800e0b0:	2b80      	cmp	r3, #128	; 0x80
 800e0b2:	f200 80d6 	bhi.w	800e262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x262>
 800e0b6:	2b40      	cmp	r3, #64	; 0x40
 800e0b8:	f000 80be 	beq.w	800e238 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x238>
 800e0bc:	2b40      	cmp	r3, #64	; 0x40
 800e0be:	f200 80d0 	bhi.w	800e262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x262>
 800e0c2:	2b04      	cmp	r3, #4
 800e0c4:	d039      	beq.n	800e13a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13a>
 800e0c6:	2b20      	cmp	r3, #32
 800e0c8:	f000 80b6 	beq.w	800e238 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x238>
 800e0cc:	e0c9      	b.n	800e262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x262>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e0ce:	683b      	ldr	r3, [r7, #0]
 800e0d0:	7f1b      	ldrb	r3, [r3, #28]
 800e0d2:	061b      	lsls	r3, r3, #24
 800e0d4:	4619      	mov	r1, r3
 800e0d6:	4a6d      	ldr	r2, [pc, #436]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e0d8:	4b6d      	ldr	r3, [pc, #436]	; (800e290 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800e0da:	430b      	orrs	r3, r1
 800e0dc:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800e0de:	683b      	ldr	r3, [r7, #0]
 800e0e0:	330c      	adds	r3, #12
 800e0e2:	4c6a      	ldr	r4, [pc, #424]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e0e4:	4618      	mov	r0, r3
 800e0e6:	f7ff fdbb 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e0ea:	4603      	mov	r3, r0
 800e0ec:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e0ee:	4a67      	ldr	r2, [pc, #412]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e0f0:	697b      	ldr	r3, [r7, #20]
 800e0f2:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e0f4:	683b      	ldr	r3, [r7, #0]
 800e0f6:	691a      	ldr	r2, [r3, #16]
 800e0f8:	4b64      	ldr	r3, [pc, #400]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e0fa:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800e0fc:	4b63      	ldr	r3, [pc, #396]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e0fe:	4a65      	ldr	r2, [pc, #404]	; (800e294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e100:	601a      	str	r2, [r3, #0]
        break;
 800e102:	e0da      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e104:	683b      	ldr	r3, [r7, #0]
 800e106:	7f1b      	ldrb	r3, [r3, #28]
 800e108:	061b      	lsls	r3, r3, #24
 800e10a:	4619      	mov	r1, r3
 800e10c:	4a5f      	ldr	r2, [pc, #380]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e10e:	4b62      	ldr	r3, [pc, #392]	; (800e298 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800e110:	430b      	orrs	r3, r1
 800e112:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800e114:	683b      	ldr	r3, [r7, #0]
 800e116:	330c      	adds	r3, #12
 800e118:	4c5c      	ldr	r4, [pc, #368]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e11a:	4618      	mov	r0, r3
 800e11c:	f7ff fda0 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e120:	4603      	mov	r3, r0
 800e122:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e124:	4a59      	ldr	r2, [pc, #356]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e126:	697b      	ldr	r3, [r7, #20]
 800e128:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e12a:	683b      	ldr	r3, [r7, #0]
 800e12c:	691a      	ldr	r2, [r3, #16]
 800e12e:	4b57      	ldr	r3, [pc, #348]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e130:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800e132:	4b56      	ldr	r3, [pc, #344]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e134:	4a57      	ldr	r2, [pc, #348]	; (800e294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e136:	601a      	str	r2, [r3, #0]
        break;
 800e138:	e0bf      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e13a:	683b      	ldr	r3, [r7, #0]
 800e13c:	7f1b      	ldrb	r3, [r3, #28]
 800e13e:	061b      	lsls	r3, r3, #24
 800e140:	461a      	mov	r2, r3
 800e142:	69bb      	ldr	r3, [r7, #24]
 800e144:	4313      	orrs	r3, r2
 800e146:	4a51      	ldr	r2, [pc, #324]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e148:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e14c:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e14e:	4a4f      	ldr	r2, [pc, #316]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e150:	697b      	ldr	r3, [r7, #20]
 800e152:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e154:	683b      	ldr	r3, [r7, #0]
 800e156:	691a      	ldr	r2, [r3, #16]
 800e158:	4b4c      	ldr	r3, [pc, #304]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e15a:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800e15c:	4b4b      	ldr	r3, [pc, #300]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e15e:	4a4d      	ldr	r2, [pc, #308]	; (800e294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e160:	601a      	str	r2, [r3, #0]
        break;
 800e162:	e0aa      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_L8:
        {
            bool blend = true;
 800e164:	2301      	movs	r3, #1
 800e166:	77fb      	strb	r3, [r7, #31]
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800e168:	683b      	ldr	r3, [r7, #0]
 800e16a:	689b      	ldr	r3, [r3, #8]
 800e16c:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800e16e:	68fb      	ldr	r3, [r7, #12]
 800e170:	1d1a      	adds	r2, r3, #4
 800e172:	4b46      	ldr	r3, [pc, #280]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e174:	62da      	str	r2, [r3, #44]	; 0x2c

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e176:	683b      	ldr	r3, [r7, #0]
 800e178:	7f1b      	ldrb	r3, [r3, #28]
 800e17a:	061b      	lsls	r3, r3, #24
 800e17c:	461a      	mov	r2, r3
 800e17e:	69bb      	ldr	r3, [r7, #24]
 800e180:	4313      	orrs	r3, r2
 800e182:	4a42      	ldr	r2, [pc, #264]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e184:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e188:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e18a:	4a40      	ldr	r2, [pc, #256]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e18c:	697b      	ldr	r3, [r7, #20]
 800e18e:	6253      	str	r3, [r2, #36]	; 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e190:	683b      	ldr	r3, [r7, #0]
 800e192:	691a      	ldr	r2, [r3, #16]
 800e194:	4b3d      	ldr	r3, [pc, #244]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e196:	615a      	str	r2, [r3, #20]

            /* Configure CLUT */
            switch ((Bitmap::ClutFormat)palette->format)
 800e198:	68fb      	ldr	r3, [r7, #12]
 800e19a:	881b      	ldrh	r3, [r3, #0]
 800e19c:	b2db      	uxtb	r3, r3
 800e19e:	2b00      	cmp	r3, #0
 800e1a0:	d002      	beq.n	800e1a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
 800e1a2:	2b01      	cmp	r3, #1
 800e1a4:	d00d      	beq.n	800e1c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c2>
 800e1a6:	e020      	b.n	800e1ea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ea>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800e1a8:	4b38      	ldr	r3, [pc, #224]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1aa:	69da      	ldr	r2, [r3, #28]
 800e1ac:	4b3b      	ldr	r3, [pc, #236]	; (800e29c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800e1ae:	4013      	ands	r3, r2
 800e1b0:	68fa      	ldr	r2, [r7, #12]
 800e1b2:	8852      	ldrh	r2, [r2, #2]
 800e1b4:	3a01      	subs	r2, #1
 800e1b6:	0212      	lsls	r2, r2, #8
 800e1b8:	4611      	mov	r1, r2
 800e1ba:	4a34      	ldr	r2, [pc, #208]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1bc:	430b      	orrs	r3, r1
 800e1be:	61d3      	str	r3, [r2, #28]
                break;
 800e1c0:	e01a      	b.n	800e1f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f8>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if (blitOp.alpha == 255)
 800e1c2:	683b      	ldr	r3, [r7, #0]
 800e1c4:	7f1b      	ldrb	r3, [r3, #28]
 800e1c6:	2bff      	cmp	r3, #255	; 0xff
 800e1c8:	d101      	bne.n	800e1ce <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ce>
                {
                    blend = false;
 800e1ca:	2300      	movs	r3, #0
 800e1cc:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800e1ce:	4b2f      	ldr	r3, [pc, #188]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1d0:	69da      	ldr	r2, [r3, #28]
 800e1d2:	4b32      	ldr	r3, [pc, #200]	; (800e29c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800e1d4:	4013      	ands	r3, r2
 800e1d6:	68fa      	ldr	r2, [r7, #12]
 800e1d8:	8852      	ldrh	r2, [r2, #2]
 800e1da:	3a01      	subs	r2, #1
 800e1dc:	0212      	lsls	r2, r2, #8
 800e1de:	4313      	orrs	r3, r2
 800e1e0:	4a2a      	ldr	r2, [pc, #168]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1e2:	f043 0310 	orr.w	r3, r3, #16
 800e1e6:	61d3      	str	r3, [r2, #28]
                break;
 800e1e8:	e006      	b.n	800e1f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f8>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 800e1ea:	4b2d      	ldr	r3, [pc, #180]	; (800e2a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800e1ec:	4a2d      	ldr	r2, [pc, #180]	; (800e2a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800e1ee:	f44f 7188 	mov.w	r1, #272	; 0x110
 800e1f2:	482d      	ldr	r0, [pc, #180]	; (800e2a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800e1f4:	f015 fbdc 	bl	80239b0 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800e1f8:	4b24      	ldr	r3, [pc, #144]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1fa:	69db      	ldr	r3, [r3, #28]
 800e1fc:	4a23      	ldr	r2, [pc, #140]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e1fe:	f043 0320 	orr.w	r3, r3, #32
 800e202:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800e204:	bf00      	nop
 800e206:	4b21      	ldr	r3, [pc, #132]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e208:	69db      	ldr	r3, [r3, #28]
 800e20a:	f003 0320 	and.w	r3, r3, #32
 800e20e:	2b00      	cmp	r3, #0
 800e210:	bf14      	ite	ne
 800e212:	2301      	movne	r3, #1
 800e214:	2300      	moveq	r3, #0
 800e216:	b2db      	uxtb	r3, r3
 800e218:	2b00      	cmp	r3, #0
 800e21a:	d1f4      	bne.n	800e206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x206>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800e21c:	4b1b      	ldr	r3, [pc, #108]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e21e:	2210      	movs	r2, #16
 800e220:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if (blend)
 800e222:	7ffb      	ldrb	r3, [r7, #31]
 800e224:	2b00      	cmp	r3, #0
 800e226:	d003      	beq.n	800e230 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800e228:	4b18      	ldr	r3, [pc, #96]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e22a:	4a1a      	ldr	r2, [pc, #104]	; (800e294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e22c:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
            }
        }
        break;
 800e22e:	e044      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800e230:	4b16      	ldr	r3, [pc, #88]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e232:	4a1e      	ldr	r2, [pc, #120]	; (800e2ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800e234:	601a      	str	r2, [r3, #0]
        break;
 800e236:	e040      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e238:	683b      	ldr	r3, [r7, #0]
 800e23a:	7f1b      	ldrb	r3, [r3, #28]
 800e23c:	061b      	lsls	r3, r3, #24
 800e23e:	461a      	mov	r2, r3
 800e240:	69bb      	ldr	r3, [r7, #24]
 800e242:	4313      	orrs	r3, r2
 800e244:	4a11      	ldr	r2, [pc, #68]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e246:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e24a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e24c:	4a0f      	ldr	r2, [pc, #60]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e24e:	697b      	ldr	r3, [r7, #20]
 800e250:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e252:	683b      	ldr	r3, [r7, #0]
 800e254:	691a      	ldr	r2, [r3, #16]
 800e256:	4b0d      	ldr	r3, [pc, #52]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e258:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800e25a:	4b0c      	ldr	r3, [pc, #48]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e25c:	4a0d      	ldr	r2, [pc, #52]	; (800e294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800e25e:	601a      	str	r2, [r3, #0]
        break;
 800e260:	e02b      	b.n	800e2ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800e262:	683b      	ldr	r3, [r7, #0]
 800e264:	7f1b      	ldrb	r3, [r3, #28]
 800e266:	061b      	lsls	r3, r3, #24
 800e268:	461a      	mov	r2, r3
 800e26a:	69bb      	ldr	r3, [r7, #24]
 800e26c:	4313      	orrs	r3, r2
 800e26e:	4a07      	ldr	r2, [pc, #28]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e270:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800e274:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800e276:	683b      	ldr	r3, [r7, #0]
 800e278:	7f5a      	ldrb	r2, [r3, #29]
 800e27a:	683b      	ldr	r3, [r7, #0]
 800e27c:	7f9b      	ldrb	r3, [r3, #30]
 800e27e:	429a      	cmp	r2, r3
 800e280:	d016      	beq.n	800e2b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800e282:	4b02      	ldr	r3, [pc, #8]	; (800e28c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 800e284:	4a09      	ldr	r2, [pc, #36]	; (800e2ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800e286:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
        }
        break;
 800e288:	e016      	b.n	800e2b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b8>
 800e28a:	bf00      	nop
 800e28c:	52001000 	.word	0x52001000
 800e290:	0002000a 	.word	0x0002000a
 800e294:	00020201 	.word	0x00020201
 800e298:	00020009 	.word	0x00020009
 800e29c:	ffff00ef 	.word	0xffff00ef
 800e2a0:	0802530c 	.word	0x0802530c
 800e2a4:	08025328 	.word	0x08025328
 800e2a8:	08025294 	.word	0x08025294
 800e2ac:	00010201 	.word	0x00010201
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800e2b0:	4b04      	ldr	r3, [pc, #16]	; (800e2c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c4>)
 800e2b2:	f240 2201 	movw	r2, #513	; 0x201
 800e2b6:	601a      	str	r2, [r3, #0]
        break;
 800e2b8:	bf00      	nop
    }
}
 800e2ba:	bf00      	nop
 800e2bc:	3724      	adds	r7, #36	; 0x24
 800e2be:	46bd      	mov	sp, r7
 800e2c0:	bd90      	pop	{r4, r7, pc}
 800e2c2:	bf00      	nop
 800e2c4:	52001000 	.word	0x52001000

0800e2c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800e2c8:	b590      	push	{r4, r7, lr}
 800e2ca:	b085      	sub	sp, #20
 800e2cc:	af00      	add	r7, sp, #0
 800e2ce:	6078      	str	r0, [r7, #4]
 800e2d0:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800e2d2:	683b      	ldr	r3, [r7, #0]
 800e2d4:	7f9b      	ldrb	r3, [r3, #30]
 800e2d6:	4619      	mov	r1, r3
 800e2d8:	6878      	ldr	r0, [r7, #4]
 800e2da:	f7ff fe47 	bl	800df6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800e2de:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800e2e0:	4a3b      	ldr	r2, [pc, #236]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e2e2:	68fb      	ldr	r3, [r7, #12]
 800e2e4:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800e2e6:	683b      	ldr	r3, [r7, #0]
 800e2e8:	8adb      	ldrh	r3, [r3, #22]
 800e2ea:	461a      	mov	r2, r3
 800e2ec:	683b      	ldr	r3, [r7, #0]
 800e2ee:	8a9b      	ldrh	r3, [r3, #20]
 800e2f0:	041b      	lsls	r3, r3, #16
 800e2f2:	431a      	orrs	r2, r3
 800e2f4:	4b36      	ldr	r3, [pc, #216]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e2f6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e2f8:	683b      	ldr	r3, [r7, #0]
 800e2fa:	691a      	ldr	r2, [r3, #16]
 800e2fc:	4b34      	ldr	r3, [pc, #208]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e2fe:	63da      	str	r2, [r3, #60]	; 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e300:	683b      	ldr	r3, [r7, #0]
 800e302:	8b5b      	ldrh	r3, [r3, #26]
 800e304:	461a      	mov	r2, r3
 800e306:	683b      	ldr	r3, [r7, #0]
 800e308:	8a9b      	ldrh	r3, [r3, #20]
 800e30a:	1ad2      	subs	r2, r2, r3
 800e30c:	4b30      	ldr	r3, [pc, #192]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e30e:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800e310:	683b      	ldr	r3, [r7, #0]
 800e312:	681b      	ldr	r3, [r3, #0]
 800e314:	2b08      	cmp	r3, #8
 800e316:	d12e      	bne.n	800e376 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xae>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e318:	683b      	ldr	r3, [r7, #0]
 800e31a:	8b5b      	ldrh	r3, [r3, #26]
 800e31c:	461a      	mov	r2, r3
 800e31e:	683b      	ldr	r3, [r7, #0]
 800e320:	8a9b      	ldrh	r3, [r3, #20]
 800e322:	1ad2      	subs	r2, r2, r3
 800e324:	4b2a      	ldr	r3, [pc, #168]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e326:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800e328:	683b      	ldr	r3, [r7, #0]
 800e32a:	8b5b      	ldrh	r3, [r3, #26]
 800e32c:	461a      	mov	r2, r3
 800e32e:	683b      	ldr	r3, [r7, #0]
 800e330:	8a9b      	ldrh	r3, [r3, #20]
 800e332:	1ad2      	subs	r2, r2, r3
 800e334:	4b26      	ldr	r3, [pc, #152]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e336:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800e338:	4a25      	ldr	r2, [pc, #148]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e33a:	68fb      	ldr	r3, [r7, #12]
 800e33c:	6253      	str	r3, [r2, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800e33e:	683b      	ldr	r3, [r7, #0]
 800e340:	7f1b      	ldrb	r3, [r3, #28]
 800e342:	061b      	lsls	r3, r3, #24
 800e344:	4619      	mov	r1, r3
 800e346:	4a22      	ldr	r2, [pc, #136]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e348:	4b22      	ldr	r3, [pc, #136]	; (800e3d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>)
 800e34a:	430b      	orrs	r3, r1
 800e34c:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800e34e:	683b      	ldr	r3, [r7, #0]
 800e350:	330c      	adds	r3, #12
 800e352:	4c1f      	ldr	r4, [pc, #124]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e354:	4618      	mov	r0, r3
 800e356:	f7ff fc83 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e35a:	4603      	mov	r3, r0
 800e35c:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e35e:	683b      	ldr	r3, [r7, #0]
 800e360:	691a      	ldr	r2, [r3, #16]
 800e362:	4b1b      	ldr	r3, [pc, #108]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e364:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800e366:	683b      	ldr	r3, [r7, #0]
 800e368:	691a      	ldr	r2, [r3, #16]
 800e36a:	4b19      	ldr	r3, [pc, #100]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e36c:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800e36e:	4b18      	ldr	r3, [pc, #96]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e370:	4a19      	ldr	r2, [pc, #100]	; (800e3d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>)
 800e372:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
    }
}
 800e374:	e027      	b.n	800e3c6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfe>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800e376:	4a16      	ldr	r2, [pc, #88]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e378:	68fb      	ldr	r3, [r7, #12]
 800e37a:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800e37c:	4b14      	ldr	r3, [pc, #80]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e37e:	2200      	movs	r2, #0
 800e380:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800e382:	683b      	ldr	r3, [r7, #0]
 800e384:	330c      	adds	r3, #12
 800e386:	4618      	mov	r0, r3
 800e388:	f7ff fc6a 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e38c:	4603      	mov	r3, r0
 800e38e:	0a1b      	lsrs	r3, r3, #8
 800e390:	f403 4478 	and.w	r4, r3, #63488	; 0xf800
 800e394:	683b      	ldr	r3, [r7, #0]
 800e396:	330c      	adds	r3, #12
 800e398:	4618      	mov	r0, r3
 800e39a:	f7ff fc61 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e39e:	4603      	mov	r3, r0
 800e3a0:	095b      	lsrs	r3, r3, #5
 800e3a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800e3a6:	431c      	orrs	r4, r3
 800e3a8:	683b      	ldr	r3, [r7, #0]
 800e3aa:	330c      	adds	r3, #12
 800e3ac:	4618      	mov	r0, r3
 800e3ae:	f7ff fc57 	bl	800dc60 <_ZNK8touchgfx9colortypecvmEv>
 800e3b2:	4603      	mov	r3, r0
 800e3b4:	08db      	lsrs	r3, r3, #3
 800e3b6:	f003 031f 	and.w	r3, r3, #31
 800e3ba:	4a05      	ldr	r2, [pc, #20]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e3bc:	4323      	orrs	r3, r4
 800e3be:	6393      	str	r3, [r2, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800e3c0:	4b03      	ldr	r3, [pc, #12]	; (800e3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800e3c2:	4a06      	ldr	r2, [pc, #24]	; (800e3dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x114>)
 800e3c4:	601a      	str	r2, [r3, #0]
}
 800e3c6:	bf00      	nop
 800e3c8:	3714      	adds	r7, #20
 800e3ca:	46bd      	mov	sp, r7
 800e3cc:	bd90      	pop	{r4, r7, pc}
 800e3ce:	bf00      	nop
 800e3d0:	52001000 	.word	0x52001000
 800e3d4:	00010009 	.word	0x00010009
 800e3d8:	00020201 	.word	0x00020201
 800e3dc:	00030201 	.word	0x00030201

0800e3e0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800e3e0:	b580      	push	{r7, lr}
 800e3e2:	b082      	sub	sp, #8
 800e3e4:	af00      	add	r7, sp, #0
 800e3e6:	6078      	str	r0, [r7, #4]
 800e3e8:	4a05      	ldr	r2, [pc, #20]	; (800e400 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	601a      	str	r2, [r3, #0]
 800e3ee:	687b      	ldr	r3, [r7, #4]
 800e3f0:	4618      	mov	r0, r3
 800e3f2:	f7ff fc41 	bl	800dc78 <_ZN8touchgfx9DMA_QueueD1Ev>
 800e3f6:	687b      	ldr	r3, [r7, #4]
 800e3f8:	4618      	mov	r0, r3
 800e3fa:	3708      	adds	r7, #8
 800e3fc:	46bd      	mov	sp, r7
 800e3fe:	bd80      	pop	{r7, pc}
 800e400:	08025e50 	.word	0x08025e50

0800e404 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800e404:	b580      	push	{r7, lr}
 800e406:	b082      	sub	sp, #8
 800e408:	af00      	add	r7, sp, #0
 800e40a:	6078      	str	r0, [r7, #4]
 800e40c:	6878      	ldr	r0, [r7, #4]
 800e40e:	f7ff ffe7 	bl	800e3e0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e412:	2114      	movs	r1, #20
 800e414:	6878      	ldr	r0, [r7, #4]
 800e416:	f015 fa9c 	bl	8023952 <_ZdlPvj>
 800e41a:	687b      	ldr	r3, [r7, #4]
 800e41c:	4618      	mov	r0, r3
 800e41e:	3708      	adds	r7, #8
 800e420:	46bd      	mov	sp, r7
 800e422:	bd80      	pop	{r7, pc}

0800e424 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800e424:	b480      	push	{r7}
 800e426:	b083      	sub	sp, #12
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800e42c:	4a04      	ldr	r2, [pc, #16]	; (800e440 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800e42e:	687b      	ldr	r3, [r7, #4]
 800e430:	6013      	str	r3, [r2, #0]
    }
 800e432:	bf00      	nop
 800e434:	370c      	adds	r7, #12
 800e436:	46bd      	mov	sp, r7
 800e438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e43c:	4770      	bx	lr
 800e43e:	bf00      	nop
 800e440:	2400170c 	.word	0x2400170c

0800e444 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800e444:	b480      	push	{r7}
 800e446:	b085      	sub	sp, #20
 800e448:	af00      	add	r7, sp, #0
 800e44a:	60f8      	str	r0, [r7, #12]
 800e44c:	60b9      	str	r1, [r7, #8]
 800e44e:	607a      	str	r2, [r7, #4]
 800e450:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800e452:	4a0b      	ldr	r2, [pc, #44]	; (800e480 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800e454:	68fb      	ldr	r3, [r7, #12]
 800e456:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800e458:	68fb      	ldr	r3, [r7, #12]
 800e45a:	68ba      	ldr	r2, [r7, #8]
 800e45c:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800e45e:	68fb      	ldr	r3, [r7, #12]
 800e460:	687a      	ldr	r2, [r7, #4]
 800e462:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800e464:	68fb      	ldr	r3, [r7, #12]
 800e466:	683a      	ldr	r2, [r7, #0]
 800e468:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800e46a:	68fb      	ldr	r3, [r7, #12]
 800e46c:	69ba      	ldr	r2, [r7, #24]
 800e46e:	611a      	str	r2, [r3, #16]
    {
    }
 800e470:	68fb      	ldr	r3, [r7, #12]
 800e472:	4618      	mov	r0, r3
 800e474:	3714      	adds	r7, #20
 800e476:	46bd      	mov	sp, r7
 800e478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e47c:	4770      	bx	lr
 800e47e:	bf00      	nop
 800e480:	08025b70 	.word	0x08025b70

0800e484 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800e484:	b480      	push	{r7}
 800e486:	b083      	sub	sp, #12
 800e488:	af00      	add	r7, sp, #0
 800e48a:	6078      	str	r0, [r7, #4]
    {
 800e48c:	4a04      	ldr	r2, [pc, #16]	; (800e4a0 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800e48e:	687b      	ldr	r3, [r7, #4]
 800e490:	601a      	str	r2, [r3, #0]
    }
 800e492:	687b      	ldr	r3, [r7, #4]
 800e494:	4618      	mov	r0, r3
 800e496:	370c      	adds	r7, #12
 800e498:	46bd      	mov	sp, r7
 800e49a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e49e:	4770      	bx	lr
 800e4a0:	08025b70 	.word	0x08025b70

0800e4a4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800e4a4:	b580      	push	{r7, lr}
 800e4a6:	b082      	sub	sp, #8
 800e4a8:	af00      	add	r7, sp, #0
 800e4aa:	6078      	str	r0, [r7, #4]
    }
 800e4ac:	6878      	ldr	r0, [r7, #4]
 800e4ae:	f7ff ffe9 	bl	800e484 <_ZN8touchgfx7MVPHeapD1Ev>
 800e4b2:	2114      	movs	r1, #20
 800e4b4:	6878      	ldr	r0, [r7, #4]
 800e4b6:	f015 fa4c 	bl	8023952 <_ZdlPvj>
 800e4ba:	687b      	ldr	r3, [r7, #4]
 800e4bc:	4618      	mov	r0, r3
 800e4be:	3708      	adds	r7, #8
 800e4c0:	46bd      	mov	sp, r7
 800e4c2:	bd80      	pop	{r7, pc}

0800e4c4 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800e4c4:	b480      	push	{r7}
 800e4c6:	b083      	sub	sp, #12
 800e4c8:	af00      	add	r7, sp, #0
 800e4ca:	6078      	str	r0, [r7, #4]
    {
 800e4cc:	4a04      	ldr	r2, [pc, #16]	; (800e4e0 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800e4ce:	687b      	ldr	r3, [r7, #4]
 800e4d0:	601a      	str	r2, [r3, #0]
    }
 800e4d2:	687b      	ldr	r3, [r7, #4]
 800e4d4:	4618      	mov	r0, r3
 800e4d6:	370c      	adds	r7, #12
 800e4d8:	46bd      	mov	sp, r7
 800e4da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4de:	4770      	bx	lr
 800e4e0:	08026050 	.word	0x08026050

0800e4e4 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800e4e4:	b580      	push	{r7, lr}
 800e4e6:	b082      	sub	sp, #8
 800e4e8:	af00      	add	r7, sp, #0
 800e4ea:	6078      	str	r0, [r7, #4]
    }
 800e4ec:	6878      	ldr	r0, [r7, #4]
 800e4ee:	f7ff ffe9 	bl	800e4c4 <_ZN8touchgfx3LCDD1Ev>
 800e4f2:	2108      	movs	r1, #8
 800e4f4:	6878      	ldr	r0, [r7, #4]
 800e4f6:	f015 fa2c 	bl	8023952 <_ZdlPvj>
 800e4fa:	687b      	ldr	r3, [r7, #4]
 800e4fc:	4618      	mov	r0, r3
 800e4fe:	3708      	adds	r7, #8
 800e500:	46bd      	mov	sp, r7
 800e502:	bd80      	pop	{r7, pc}

0800e504 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800e504:	b480      	push	{r7}
 800e506:	b083      	sub	sp, #12
 800e508:	af00      	add	r7, sp, #0
 800e50a:	6078      	str	r0, [r7, #4]
            : startX(0),
 800e50c:	687b      	ldr	r3, [r7, #4]
 800e50e:	2200      	movs	r2, #0
 800e510:	801a      	strh	r2, [r3, #0]
              startY(0),
 800e512:	687b      	ldr	r3, [r7, #4]
 800e514:	2200      	movs	r2, #0
 800e516:	805a      	strh	r2, [r3, #2]
              downX(0),
 800e518:	687b      	ldr	r3, [r7, #4]
 800e51a:	2200      	movs	r2, #0
 800e51c:	809a      	strh	r2, [r3, #4]
              downY(0),
 800e51e:	687b      	ldr	r3, [r7, #4]
 800e520:	2200      	movs	r2, #0
 800e522:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800e524:	687b      	ldr	r3, [r7, #4]
 800e526:	2200      	movs	r2, #0
 800e528:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800e52a:	687b      	ldr	r3, [r7, #4]
 800e52c:	2200      	movs	r2, #0
 800e52e:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	2200      	movs	r2, #0
 800e534:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800e536:	687b      	ldr	r3, [r7, #4]
 800e538:	2200      	movs	r2, #0
 800e53a:	739a      	strb	r2, [r3, #14]
        {
        }
 800e53c:	687b      	ldr	r3, [r7, #4]
 800e53e:	4618      	mov	r0, r3
 800e540:	370c      	adds	r7, #12
 800e542:	46bd      	mov	sp, r7
 800e544:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e548:	4770      	bx	lr

0800e54a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800e54a:	b580      	push	{r7, lr}
 800e54c:	b082      	sub	sp, #8
 800e54e:	af00      	add	r7, sp, #0
 800e550:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800e552:	687b      	ldr	r3, [r7, #4]
 800e554:	4618      	mov	r0, r3
 800e556:	f7ff ffd5 	bl	800e504 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800e55a:	687b      	ldr	r3, [r7, #4]
 800e55c:	2200      	movs	r2, #0
 800e55e:	611a      	str	r2, [r3, #16]
 800e560:	687b      	ldr	r3, [r7, #4]
 800e562:	2200      	movs	r2, #0
 800e564:	829a      	strh	r2, [r3, #20]
    {
    }
 800e566:	687b      	ldr	r3, [r7, #4]
 800e568:	4618      	mov	r0, r3
 800e56a:	3708      	adds	r7, #8
 800e56c:	46bd      	mov	sp, r7
 800e56e:	bd80      	pop	{r7, pc}

0800e570 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800e570:	b580      	push	{r7, lr}
 800e572:	b084      	sub	sp, #16
 800e574:	af00      	add	r7, sp, #0
 800e576:	60f8      	str	r0, [r7, #12]
 800e578:	60b9      	str	r1, [r7, #8]
 800e57a:	607a      	str	r2, [r7, #4]
 800e57c:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800e57e:	4a55      	ldr	r2, [pc, #340]	; (800e6d4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800e580:	68fb      	ldr	r3, [r7, #12]
 800e582:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800e584:	68fb      	ldr	r3, [r7, #12]
 800e586:	68ba      	ldr	r2, [r7, #8]
 800e588:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800e58a:	68fb      	ldr	r3, [r7, #12]
 800e58c:	687a      	ldr	r2, [r7, #4]
 800e58e:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800e590:	68fb      	ldr	r3, [r7, #12]
 800e592:	683a      	ldr	r2, [r7, #0]
 800e594:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800e596:	68fb      	ldr	r3, [r7, #12]
 800e598:	2200      	movs	r2, #0
 800e59a:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800e59c:	68fb      	ldr	r3, [r7, #12]
 800e59e:	2200      	movs	r2, #0
 800e5a0:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800e5a2:	68fb      	ldr	r3, [r7, #12]
 800e5a4:	2200      	movs	r2, #0
 800e5a6:	619a      	str	r2, [r3, #24]
          gestures(),
 800e5a8:	68fb      	ldr	r3, [r7, #12]
 800e5aa:	331c      	adds	r3, #28
 800e5ac:	4618      	mov	r0, r3
 800e5ae:	f7ff ffcc 	bl	800e54a <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800e5b2:	68fb      	ldr	r3, [r7, #12]
 800e5b4:	2200      	movs	r2, #0
 800e5b6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 800e5ba:	68fb      	ldr	r3, [r7, #12]
 800e5bc:	2200      	movs	r2, #0
 800e5be:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 800e5c0:	68fb      	ldr	r3, [r7, #12]
 800e5c2:	2200      	movs	r2, #0
 800e5c4:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 800e5c6:	68fb      	ldr	r3, [r7, #12]
 800e5c8:	2200      	movs	r2, #0
 800e5ca:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 800e5cc:	68fb      	ldr	r3, [r7, #12]
 800e5ce:	2200      	movs	r2, #0
 800e5d0:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800e5d2:	68fb      	ldr	r3, [r7, #12]
 800e5d4:	2200      	movs	r2, #0
 800e5d6:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 800e5da:	68fb      	ldr	r3, [r7, #12]
 800e5dc:	2201      	movs	r2, #1
 800e5de:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 800e5e2:	68fb      	ldr	r3, [r7, #12]
 800e5e4:	2200      	movs	r2, #0
 800e5e6:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 800e5ea:	68fb      	ldr	r3, [r7, #12]
 800e5ec:	2200      	movs	r2, #0
 800e5ee:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 800e5f2:	68fb      	ldr	r3, [r7, #12]
 800e5f4:	2200      	movs	r2, #0
 800e5f6:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 800e5f8:	68fb      	ldr	r3, [r7, #12]
 800e5fa:	3350      	adds	r3, #80	; 0x50
 800e5fc:	4618      	mov	r0, r3
 800e5fe:	f7fd fa34 	bl	800ba6a <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800e602:	68fb      	ldr	r3, [r7, #12]
 800e604:	2200      	movs	r2, #0
 800e606:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 800e60a:	68fb      	ldr	r3, [r7, #12]
 800e60c:	2200      	movs	r2, #0
 800e60e:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 800e610:	68fb      	ldr	r3, [r7, #12]
 800e612:	2200      	movs	r2, #0
 800e614:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 800e616:	68fb      	ldr	r3, [r7, #12]
 800e618:	2200      	movs	r2, #0
 800e61a:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 800e61c:	68fb      	ldr	r3, [r7, #12]
 800e61e:	2201      	movs	r2, #1
 800e620:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 800e624:	68fb      	ldr	r3, [r7, #12]
 800e626:	2200      	movs	r2, #0
 800e628:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 800e62c:	68fb      	ldr	r3, [r7, #12]
 800e62e:	2200      	movs	r2, #0
 800e630:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 800e634:	68fb      	ldr	r3, [r7, #12]
 800e636:	2201      	movs	r2, #1
 800e638:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 800e63c:	68fb      	ldr	r3, [r7, #12]
 800e63e:	2200      	movs	r2, #0
 800e640:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 800e644:	68fb      	ldr	r3, [r7, #12]
 800e646:	2200      	movs	r2, #0
 800e648:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 800e64c:	68fb      	ldr	r3, [r7, #12]
 800e64e:	2200      	movs	r2, #0
 800e650:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 800e654:	68fb      	ldr	r3, [r7, #12]
 800e656:	2200      	movs	r2, #0
 800e658:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 800e65c:	68fb      	ldr	r3, [r7, #12]
 800e65e:	2200      	movs	r2, #0
 800e660:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 800e664:	68fb      	ldr	r3, [r7, #12]
 800e666:	2200      	movs	r2, #0
 800e668:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800e66a:	68fb      	ldr	r3, [r7, #12]
 800e66c:	2200      	movs	r2, #0
 800e66e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 800e672:	68fb      	ldr	r3, [r7, #12]
 800e674:	2200      	movs	r2, #0
 800e676:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 800e67a:	68fb      	ldr	r3, [r7, #12]
 800e67c:	2201      	movs	r2, #1
 800e67e:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 800e682:	68fb      	ldr	r3, [r7, #12]
 800e684:	2201      	movs	r2, #1
 800e686:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 800e68a:	4a13      	ldr	r2, [pc, #76]	; (800e6d8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800e68c:	68fb      	ldr	r3, [r7, #12]
 800e68e:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800e690:	4a12      	ldr	r2, [pc, #72]	; (800e6dc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e692:	8b3b      	ldrh	r3, [r7, #24]
 800e694:	8013      	strh	r3, [r2, #0]
 800e696:	4b11      	ldr	r3, [pc, #68]	; (800e6dc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e698:	881a      	ldrh	r2, [r3, #0]
 800e69a:	4b11      	ldr	r3, [pc, #68]	; (800e6e0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800e69c:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800e69e:	4a11      	ldr	r2, [pc, #68]	; (800e6e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e6a0:	8bbb      	ldrh	r3, [r7, #28]
 800e6a2:	8013      	strh	r3, [r2, #0]
 800e6a4:	4b0f      	ldr	r3, [pc, #60]	; (800e6e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e6a6:	881a      	ldrh	r2, [r3, #0]
 800e6a8:	4b0f      	ldr	r3, [pc, #60]	; (800e6e8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800e6aa:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800e6ac:	4b0f      	ldr	r3, [pc, #60]	; (800e6ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800e6ae:	2200      	movs	r2, #0
 800e6b0:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800e6b2:	8b3a      	ldrh	r2, [r7, #24]
 800e6b4:	8bbb      	ldrh	r3, [r7, #28]
 800e6b6:	429a      	cmp	r2, r3
 800e6b8:	bf34      	ite	cc
 800e6ba:	2301      	movcc	r3, #1
 800e6bc:	2300      	movcs	r3, #0
 800e6be:	b2db      	uxtb	r3, r3
 800e6c0:	461a      	mov	r2, r3
 800e6c2:	68fb      	ldr	r3, [r7, #12]
 800e6c4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800e6c8:	68fb      	ldr	r3, [r7, #12]
 800e6ca:	4618      	mov	r0, r3
 800e6cc:	3710      	adds	r7, #16
 800e6ce:	46bd      	mov	sp, r7
 800e6d0:	bd80      	pop	{r7, pc}
 800e6d2:	bf00      	nop
 800e6d4:	08025d28 	.word	0x08025d28
 800e6d8:	240016b0 	.word	0x240016b0
 800e6dc:	240016a4 	.word	0x240016a4
 800e6e0:	240016aa 	.word	0x240016aa
 800e6e4:	240016a6 	.word	0x240016a6
 800e6e8:	240016ac 	.word	0x240016ac
 800e6ec:	240016a8 	.word	0x240016a8

0800e6f0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800e6f0:	b580      	push	{r7, lr}
 800e6f2:	b082      	sub	sp, #8
 800e6f4:	af00      	add	r7, sp, #0
 800e6f6:	6078      	str	r0, [r7, #4]
 800e6f8:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreen1ScreenNoTransition();
 800e6fa:	683b      	ldr	r3, [r7, #0]
 800e6fc:	4618      	mov	r0, r3
 800e6fe:	f7fc fd87 	bl	800b210 <_ZN23FrontendApplicationBase29gotoscreen1ScreenNoTransitionEv>
    }
 800e702:	bf00      	nop
 800e704:	3708      	adds	r7, #8
 800e706:	46bd      	mov	sp, r7
 800e708:	bd80      	pop	{r7, pc}
	...

0800e70c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800e70c:	b580      	push	{r7, lr}
 800e70e:	b086      	sub	sp, #24
 800e710:	af02      	add	r7, sp, #8
 800e712:	60f8      	str	r0, [r7, #12]
 800e714:	60b9      	str	r1, [r7, #8]
 800e716:	607a      	str	r2, [r7, #4]
 800e718:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800e71a:	68f8      	ldr	r0, [r7, #12]
 800e71c:	69bb      	ldr	r3, [r7, #24]
 800e71e:	9300      	str	r3, [sp, #0]
 800e720:	683b      	ldr	r3, [r7, #0]
 800e722:	687a      	ldr	r2, [r7, #4]
 800e724:	68b9      	ldr	r1, [r7, #8]
 800e726:	f7ff fe8d 	bl	800e444 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800e72a:	4a04      	ldr	r2, [pc, #16]	; (800e73c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800e72c:	68fb      	ldr	r3, [r7, #12]
 800e72e:	601a      	str	r2, [r3, #0]
    {

    }
 800e730:	68fb      	ldr	r3, [r7, #12]
 800e732:	4618      	mov	r0, r3
 800e734:	3710      	adds	r7, #16
 800e736:	46bd      	mov	sp, r7
 800e738:	bd80      	pop	{r7, pc}
 800e73a:	bf00      	nop
 800e73c:	08025b5c 	.word	0x08025b5c

0800e740 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800e740:	b580      	push	{r7, lr}
 800e742:	af00      	add	r7, sp, #0
 800e744:	4801      	ldr	r0, [pc, #4]	; (800e74c <__tcf_0+0xc>)
 800e746:	f000 f969 	bl	800ea1c <_ZN12FrontendHeapD1Ev>
 800e74a:	bd80      	pop	{r7, pc}
 800e74c:	240004fc 	.word	0x240004fc

0800e750 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800e750:	b580      	push	{r7, lr}
 800e752:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800e754:	4b11      	ldr	r3, [pc, #68]	; (800e79c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e756:	681b      	ldr	r3, [r3, #0]
 800e758:	f3bf 8f5b 	dmb	ish
 800e75c:	f003 0301 	and.w	r3, r3, #1
 800e760:	2b00      	cmp	r3, #0
 800e762:	bf0c      	ite	eq
 800e764:	2301      	moveq	r3, #1
 800e766:	2300      	movne	r3, #0
 800e768:	b2db      	uxtb	r3, r3
 800e76a:	2b00      	cmp	r3, #0
 800e76c:	d013      	beq.n	800e796 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e76e:	480b      	ldr	r0, [pc, #44]	; (800e79c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e770:	f015 f8f1 	bl	8023956 <__cxa_guard_acquire>
 800e774:	4603      	mov	r3, r0
 800e776:	2b00      	cmp	r3, #0
 800e778:	bf14      	ite	ne
 800e77a:	2301      	movne	r3, #1
 800e77c:	2300      	moveq	r3, #0
 800e77e:	b2db      	uxtb	r3, r3
 800e780:	2b00      	cmp	r3, #0
 800e782:	d008      	beq.n	800e796 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e784:	4806      	ldr	r0, [pc, #24]	; (800e7a0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800e786:	f000 f867 	bl	800e858 <_ZN12FrontendHeapC1Ev>
 800e78a:	4806      	ldr	r0, [pc, #24]	; (800e7a4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800e78c:	f015 f92e 	bl	80239ec <atexit>
 800e790:	4802      	ldr	r0, [pc, #8]	; (800e79c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e792:	f015 f8ec 	bl	802396e <__cxa_guard_release>
        return instance;
 800e796:	4b02      	ldr	r3, [pc, #8]	; (800e7a0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800e798:	4618      	mov	r0, r3
 800e79a:	bd80      	pop	{r7, pc}
 800e79c:	2400079c 	.word	0x2400079c
 800e7a0:	240004fc 	.word	0x240004fc
 800e7a4:	0800e741 	.word	0x0800e741

0800e7a8 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800e7a8:	b580      	push	{r7, lr}
 800e7aa:	b082      	sub	sp, #8
 800e7ac:	af00      	add	r7, sp, #0
 800e7ae:	6078      	str	r0, [r7, #4]
 800e7b0:	4a05      	ldr	r2, [pc, #20]	; (800e7c8 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800e7b2:	687b      	ldr	r3, [r7, #4]
 800e7b4:	601a      	str	r2, [r3, #0]
 800e7b6:	687b      	ldr	r3, [r7, #4]
 800e7b8:	4618      	mov	r0, r3
 800e7ba:	f7ff fe63 	bl	800e484 <_ZN8touchgfx7MVPHeapD1Ev>
 800e7be:	687b      	ldr	r3, [r7, #4]
 800e7c0:	4618      	mov	r0, r3
 800e7c2:	3708      	adds	r7, #8
 800e7c4:	46bd      	mov	sp, r7
 800e7c6:	bd80      	pop	{r7, pc}
 800e7c8:	08025b5c 	.word	0x08025b5c

0800e7cc <_ZN16FrontendHeapBaseD0Ev>:
 800e7cc:	b580      	push	{r7, lr}
 800e7ce:	b082      	sub	sp, #8
 800e7d0:	af00      	add	r7, sp, #0
 800e7d2:	6078      	str	r0, [r7, #4]
 800e7d4:	6878      	ldr	r0, [r7, #4]
 800e7d6:	f7ff ffe7 	bl	800e7a8 <_ZN16FrontendHeapBaseD1Ev>
 800e7da:	2114      	movs	r1, #20
 800e7dc:	6878      	ldr	r0, [r7, #4]
 800e7de:	f015 f8b8 	bl	8023952 <_ZdlPvj>
 800e7e2:	687b      	ldr	r3, [r7, #4]
 800e7e4:	4618      	mov	r0, r3
 800e7e6:	3708      	adds	r7, #8
 800e7e8:	46bd      	mov	sp, r7
 800e7ea:	bd80      	pop	{r7, pc}

0800e7ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800e7ec:	b580      	push	{r7, lr}
 800e7ee:	b082      	sub	sp, #8
 800e7f0:	af00      	add	r7, sp, #0
 800e7f2:	6078      	str	r0, [r7, #4]
 800e7f4:	687b      	ldr	r3, [r7, #4]
 800e7f6:	4618      	mov	r0, r3
 800e7f8:	f001 fc2c 	bl	8010054 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e7fc:	4a03      	ldr	r2, [pc, #12]	; (800e80c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e7fe:	687b      	ldr	r3, [r7, #4]
 800e800:	601a      	str	r2, [r3, #0]
 800e802:	687b      	ldr	r3, [r7, #4]
 800e804:	4618      	mov	r0, r3
 800e806:	3708      	adds	r7, #8
 800e808:	46bd      	mov	sp, r7
 800e80a:	bd80      	pop	{r7, pc}
 800e80c:	08025b28 	.word	0x08025b28

0800e810 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e810:	b580      	push	{r7, lr}
 800e812:	b082      	sub	sp, #8
 800e814:	af00      	add	r7, sp, #0
 800e816:	6078      	str	r0, [r7, #4]
 800e818:	687b      	ldr	r3, [r7, #4]
 800e81a:	4618      	mov	r0, r3
 800e81c:	f001 fc1a 	bl	8010054 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e820:	4a03      	ldr	r2, [pc, #12]	; (800e830 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e822:	687b      	ldr	r3, [r7, #4]
 800e824:	601a      	str	r2, [r3, #0]
 800e826:	687b      	ldr	r3, [r7, #4]
 800e828:	4618      	mov	r0, r3
 800e82a:	3708      	adds	r7, #8
 800e82c:	46bd      	mov	sp, r7
 800e82e:	bd80      	pop	{r7, pc}
 800e830:	08025af4 	.word	0x08025af4

0800e834 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e834:	b580      	push	{r7, lr}
 800e836:	b082      	sub	sp, #8
 800e838:	af00      	add	r7, sp, #0
 800e83a:	6078      	str	r0, [r7, #4]
 800e83c:	687b      	ldr	r3, [r7, #4]
 800e83e:	4618      	mov	r0, r3
 800e840:	f001 fc08 	bl	8010054 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e844:	4a03      	ldr	r2, [pc, #12]	; (800e854 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	601a      	str	r2, [r3, #0]
 800e84a:	687b      	ldr	r3, [r7, #4]
 800e84c:	4618      	mov	r0, r3
 800e84e:	3708      	adds	r7, #8
 800e850:	46bd      	mov	sp, r7
 800e852:	bd80      	pop	{r7, pc}
 800e854:	08025ac0 	.word	0x08025ac0

0800e858 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e858:	b590      	push	{r4, r7, lr}
 800e85a:	b085      	sub	sp, #20
 800e85c:	af02      	add	r7, sp, #8
 800e85e:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800e860:	6878      	ldr	r0, [r7, #4]
 800e862:	687b      	ldr	r3, [r7, #4]
 800e864:	f103 0114 	add.w	r1, r3, #20
 800e868:	687b      	ldr	r3, [r7, #4]
 800e86a:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800e86e:	687b      	ldr	r3, [r7, #4]
 800e870:	f503 7496 	add.w	r4, r3, #300	; 0x12c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e874:	687b      	ldr	r3, [r7, #4]
 800e876:	f503 73a2 	add.w	r3, r3, #324	; 0x144
                     app(model, *this)
 800e87a:	9300      	str	r3, [sp, #0]
 800e87c:	4623      	mov	r3, r4
 800e87e:	f7ff ff45 	bl	800e70c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800e882:	4a18      	ldr	r2, [pc, #96]	; (800e8e4 <_ZN12FrontendHeapC1Ev+0x8c>)
 800e884:	687b      	ldr	r3, [r7, #4]
 800e886:	601a      	str	r2, [r3, #0]
 800e888:	687b      	ldr	r3, [r7, #4]
 800e88a:	3314      	adds	r3, #20
 800e88c:	4618      	mov	r0, r3
 800e88e:	f7ff ffad 	bl	800e7ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e892:	687b      	ldr	r3, [r7, #4]
 800e894:	332c      	adds	r3, #44	; 0x2c
 800e896:	4618      	mov	r0, r3
 800e898:	f7ff ffba 	bl	800e810 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e89c:	687b      	ldr	r3, [r7, #4]
 800e89e:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e8a2:	4618      	mov	r0, r3
 800e8a4:	f7ff ffc6 	bl	800e834 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e8a8:	687b      	ldr	r3, [r7, #4]
 800e8aa:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 800e8ae:	4618      	mov	r0, r3
 800e8b0:	f7fe fbee 	bl	800d090 <_ZN5ModelC1Ev>
 800e8b4:	687b      	ldr	r3, [r7, #4]
 800e8b6:	f503 70a2 	add.w	r0, r3, #324	; 0x144
 800e8ba:	687b      	ldr	r3, [r7, #4]
 800e8bc:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 800e8c0:	687a      	ldr	r2, [r7, #4]
 800e8c2:	4619      	mov	r1, r3
 800e8c4:	f7fe fbce 	bl	800d064 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800e8c8:	687a      	ldr	r2, [r7, #4]
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800e8d0:	4619      	mov	r1, r3
 800e8d2:	4610      	mov	r0, r2
 800e8d4:	f7ff ff0c 	bl	800e6f0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800e8d8:	687b      	ldr	r3, [r7, #4]
 800e8da:	4618      	mov	r0, r3
 800e8dc:	370c      	adds	r7, #12
 800e8de:	46bd      	mov	sp, r7
 800e8e0:	bd90      	pop	{r4, r7, pc}
 800e8e2:	bf00      	nop
 800e8e4:	08025aac 	.word	0x08025aac

0800e8e8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800e8e8:	b580      	push	{r7, lr}
 800e8ea:	b086      	sub	sp, #24
 800e8ec:	af02      	add	r7, sp, #8
 800e8ee:	60f8      	str	r0, [r7, #12]
 800e8f0:	60b9      	str	r1, [r7, #8]
 800e8f2:	607a      	str	r2, [r7, #4]
 800e8f4:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800e8f6:	68f8      	ldr	r0, [r7, #12]
 800e8f8:	8bbb      	ldrh	r3, [r7, #28]
 800e8fa:	9301      	str	r3, [sp, #4]
 800e8fc:	8b3b      	ldrh	r3, [r7, #24]
 800e8fe:	9300      	str	r3, [sp, #0]
 800e900:	683b      	ldr	r3, [r7, #0]
 800e902:	687a      	ldr	r2, [r7, #4]
 800e904:	68b9      	ldr	r1, [r7, #8]
 800e906:	f7ff fe33 	bl	800e570 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800e90a:	4a04      	ldr	r2, [pc, #16]	; (800e91c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e90c:	68fb      	ldr	r3, [r7, #12]
 800e90e:	601a      	str	r2, [r3, #0]
    }
 800e910:	68fb      	ldr	r3, [r7, #12]
 800e912:	4618      	mov	r0, r3
 800e914:	3710      	adds	r7, #16
 800e916:	46bd      	mov	sp, r7
 800e918:	bd80      	pop	{r7, pc}
 800e91a:	bf00      	nop
 800e91c:	08025b80 	.word	0x08025b80

0800e920 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800e920:	b580      	push	{r7, lr}
 800e922:	b086      	sub	sp, #24
 800e924:	af02      	add	r7, sp, #8
 800e926:	60f8      	str	r0, [r7, #12]
 800e928:	60b9      	str	r1, [r7, #8]
 800e92a:	607a      	str	r2, [r7, #4]
 800e92c:	603b      	str	r3, [r7, #0]
 800e92e:	68f8      	ldr	r0, [r7, #12]
 800e930:	8bbb      	ldrh	r3, [r7, #28]
 800e932:	9301      	str	r3, [sp, #4]
 800e934:	8b3b      	ldrh	r3, [r7, #24]
 800e936:	9300      	str	r3, [sp, #0]
 800e938:	683b      	ldr	r3, [r7, #0]
 800e93a:	687a      	ldr	r2, [r7, #4]
 800e93c:	68b9      	ldr	r1, [r7, #8]
 800e93e:	f7ff ffd3 	bl	800e8e8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800e942:	4a04      	ldr	r2, [pc, #16]	; (800e954 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e944:	68fb      	ldr	r3, [r7, #12]
 800e946:	601a      	str	r2, [r3, #0]
    }
 800e948:	68fb      	ldr	r3, [r7, #12]
 800e94a:	4618      	mov	r0, r3
 800e94c:	3710      	adds	r7, #16
 800e94e:	46bd      	mov	sp, r7
 800e950:	bd80      	pop	{r7, pc}
 800e952:	bf00      	nop
 800e954:	08025960 	.word	0x08025960

0800e958 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800e958:	b480      	push	{r7}
 800e95a:	b083      	sub	sp, #12
 800e95c:	af00      	add	r7, sp, #0
 800e95e:	6078      	str	r0, [r7, #4]
 800e960:	4a04      	ldr	r2, [pc, #16]	; (800e974 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	601a      	str	r2, [r3, #0]
 800e966:	687b      	ldr	r3, [r7, #4]
 800e968:	4618      	mov	r0, r3
 800e96a:	370c      	adds	r7, #12
 800e96c:	46bd      	mov	sp, r7
 800e96e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e972:	4770      	bx	lr
 800e974:	08025948 	.word	0x08025948

0800e978 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800e978:	b580      	push	{r7, lr}
 800e97a:	b082      	sub	sp, #8
 800e97c:	af00      	add	r7, sp, #0
 800e97e:	6078      	str	r0, [r7, #4]
 800e980:	687b      	ldr	r3, [r7, #4]
 800e982:	4618      	mov	r0, r3
 800e984:	f7ff ffe8 	bl	800e958 <_ZN8touchgfx15TouchControllerC1Ev>
 800e988:	4a03      	ldr	r2, [pc, #12]	; (800e998 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800e98a:	687b      	ldr	r3, [r7, #4]
 800e98c:	601a      	str	r2, [r3, #0]
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	4618      	mov	r0, r3
 800e992:	3708      	adds	r7, #8
 800e994:	46bd      	mov	sp, r7
 800e996:	bd80      	pop	{r7, pc}
 800e998:	08025930 	.word	0x08025930

0800e99c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 1024, 600);

void touchgfx_init()
{
 800e99c:	b590      	push	{r4, r7, lr}
 800e99e:	b085      	sub	sp, #20
 800e9a0:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800e9a2:	f7fe f92f 	bl	800cc04 <_ZN14BitmapDatabase11getInstanceEv>
 800e9a6:	4604      	mov	r4, r0
 800e9a8:	f7fe f936 	bl	800cc18 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800e9ac:	4603      	mov	r3, r0
 800e9ae:	4619      	mov	r1, r3
 800e9b0:	2300      	movs	r3, #0
 800e9b2:	9300      	str	r3, [sp, #0]
 800e9b4:	2300      	movs	r3, #0
 800e9b6:	2200      	movs	r2, #0
 800e9b8:	4620      	mov	r0, r4
 800e9ba:	f007 fb6f 	bl	801609c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800e9be:	4809      	ldr	r0, [pc, #36]	; (800e9e4 <touchgfx_init+0x48>)
 800e9c0:	f7ff fd30 	bl	800e424 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800e9c4:	2000      	movs	r0, #0
 800e9c6:	f7fe fa6b 	bl	800cea0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800e9ca:	4807      	ldr	r0, [pc, #28]	; (800e9e8 <touchgfx_init+0x4c>)
 800e9cc:	f007 face 	bl	8015f6c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800e9d0:	f7ff febe 	bl	800e750 <_ZN12FrontendHeap11getInstanceEv>
 800e9d4:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800e9d6:	4805      	ldr	r0, [pc, #20]	; (800e9ec <touchgfx_init+0x50>)
 800e9d8:	f7fe ffa4 	bl	800d924 <_ZN11TouchGFXHAL10initializeEv>
}
 800e9dc:	bf00      	nop
 800e9de:	370c      	adds	r7, #12
 800e9e0:	46bd      	mov	sp, r7
 800e9e2:	bd90      	pop	{r4, r7, pc}
 800e9e4:	240015c8 	.word	0x240015c8
 800e9e8:	24000014 	.word	0x24000014
 800e9ec:	240015cc 	.word	0x240015cc

0800e9f0 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800e9f0:	b480      	push	{r7}
 800e9f2:	af00      	add	r7, sp, #0
}
 800e9f4:	bf00      	nop
 800e9f6:	46bd      	mov	sp, r7
 800e9f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9fc:	4770      	bx	lr
	...

0800ea00 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800ea00:	b580      	push	{r7, lr}
 800ea02:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800ea04:	f7ff f8a4 	bl	800db50 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800ea08:	4603      	mov	r3, r0
 800ea0a:	2b00      	cmp	r3, #0
 800ea0c:	d002      	beq.n	800ea14 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800ea0e:	4802      	ldr	r0, [pc, #8]	; (800ea18 <touchgfx_taskEntry+0x18>)
 800ea10:	f7fe fe7a 	bl	800d708 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800ea14:	bf00      	nop
 800ea16:	bd80      	pop	{r7, pc}
 800ea18:	240015cc 	.word	0x240015cc

0800ea1c <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800ea1c:	b580      	push	{r7, lr}
 800ea1e:	b082      	sub	sp, #8
 800ea20:	af00      	add	r7, sp, #0
 800ea22:	6078      	str	r0, [r7, #4]
 800ea24:	4a10      	ldr	r2, [pc, #64]	; (800ea68 <_ZN12FrontendHeapD1Ev+0x4c>)
 800ea26:	687b      	ldr	r3, [r7, #4]
 800ea28:	601a      	str	r2, [r3, #0]
 800ea2a:	687b      	ldr	r3, [r7, #4]
 800ea2c:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ea30:	4618      	mov	r0, r3
 800ea32:	f7fe fae1 	bl	800cff8 <_ZN19FrontendApplicationD1Ev>
 800ea36:	687b      	ldr	r3, [r7, #4]
 800ea38:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800ea3c:	4618      	mov	r0, r3
 800ea3e:	f000 f827 	bl	800ea90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ea42:	687b      	ldr	r3, [r7, #4]
 800ea44:	332c      	adds	r3, #44	; 0x2c
 800ea46:	4618      	mov	r0, r3
 800ea48:	f000 f844 	bl	800ead4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ea4c:	687b      	ldr	r3, [r7, #4]
 800ea4e:	3314      	adds	r3, #20
 800ea50:	4618      	mov	r0, r3
 800ea52:	f000 f863 	bl	800eb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ea56:	687b      	ldr	r3, [r7, #4]
 800ea58:	4618      	mov	r0, r3
 800ea5a:	f7ff fea5 	bl	800e7a8 <_ZN16FrontendHeapBaseD1Ev>
 800ea5e:	687b      	ldr	r3, [r7, #4]
 800ea60:	4618      	mov	r0, r3
 800ea62:	3708      	adds	r7, #8
 800ea64:	46bd      	mov	sp, r7
 800ea66:	bd80      	pop	{r7, pc}
 800ea68:	08025aac 	.word	0x08025aac

0800ea6c <_ZN12FrontendHeapD0Ev>:
 800ea6c:	b580      	push	{r7, lr}
 800ea6e:	b082      	sub	sp, #8
 800ea70:	af00      	add	r7, sp, #0
 800ea72:	6078      	str	r0, [r7, #4]
 800ea74:	6878      	ldr	r0, [r7, #4]
 800ea76:	f7ff ffd1 	bl	800ea1c <_ZN12FrontendHeapD1Ev>
 800ea7a:	f44f 7128 	mov.w	r1, #672	; 0x2a0
 800ea7e:	6878      	ldr	r0, [r7, #4]
 800ea80:	f014 ff67 	bl	8023952 <_ZdlPvj>
 800ea84:	687b      	ldr	r3, [r7, #4]
 800ea86:	4618      	mov	r0, r3
 800ea88:	3708      	adds	r7, #8
 800ea8a:	46bd      	mov	sp, r7
 800ea8c:	bd80      	pop	{r7, pc}
	...

0800ea90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800ea90:	b580      	push	{r7, lr}
 800ea92:	b082      	sub	sp, #8
 800ea94:	af00      	add	r7, sp, #0
 800ea96:	6078      	str	r0, [r7, #4]
 800ea98:	4a05      	ldr	r2, [pc, #20]	; (800eab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800ea9a:	687b      	ldr	r3, [r7, #4]
 800ea9c:	601a      	str	r2, [r3, #0]
 800ea9e:	687b      	ldr	r3, [r7, #4]
 800eaa0:	4618      	mov	r0, r3
 800eaa2:	f001 fad6 	bl	8010052 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800eaa6:	687b      	ldr	r3, [r7, #4]
 800eaa8:	4618      	mov	r0, r3
 800eaaa:	3708      	adds	r7, #8
 800eaac:	46bd      	mov	sp, r7
 800eaae:	bd80      	pop	{r7, pc}
 800eab0:	08025ac0 	.word	0x08025ac0

0800eab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800eab4:	b580      	push	{r7, lr}
 800eab6:	b082      	sub	sp, #8
 800eab8:	af00      	add	r7, sp, #0
 800eaba:	6078      	str	r0, [r7, #4]
 800eabc:	6878      	ldr	r0, [r7, #4]
 800eabe:	f7ff ffe7 	bl	800ea90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eac2:	2114      	movs	r1, #20
 800eac4:	6878      	ldr	r0, [r7, #4]
 800eac6:	f014 ff44 	bl	8023952 <_ZdlPvj>
 800eaca:	687b      	ldr	r3, [r7, #4]
 800eacc:	4618      	mov	r0, r3
 800eace:	3708      	adds	r7, #8
 800ead0:	46bd      	mov	sp, r7
 800ead2:	bd80      	pop	{r7, pc}

0800ead4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800ead4:	b580      	push	{r7, lr}
 800ead6:	b082      	sub	sp, #8
 800ead8:	af00      	add	r7, sp, #0
 800eada:	6078      	str	r0, [r7, #4]
 800eadc:	4a05      	ldr	r2, [pc, #20]	; (800eaf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800eade:	687b      	ldr	r3, [r7, #4]
 800eae0:	601a      	str	r2, [r3, #0]
 800eae2:	687b      	ldr	r3, [r7, #4]
 800eae4:	4618      	mov	r0, r3
 800eae6:	f001 fab4 	bl	8010052 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800eaea:	687b      	ldr	r3, [r7, #4]
 800eaec:	4618      	mov	r0, r3
 800eaee:	3708      	adds	r7, #8
 800eaf0:	46bd      	mov	sp, r7
 800eaf2:	bd80      	pop	{r7, pc}
 800eaf4:	08025af4 	.word	0x08025af4

0800eaf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800eaf8:	b580      	push	{r7, lr}
 800eafa:	b082      	sub	sp, #8
 800eafc:	af00      	add	r7, sp, #0
 800eafe:	6078      	str	r0, [r7, #4]
 800eb00:	6878      	ldr	r0, [r7, #4]
 800eb02:	f7ff ffe7 	bl	800ead4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eb06:	f44f 7180 	mov.w	r1, #256	; 0x100
 800eb0a:	6878      	ldr	r0, [r7, #4]
 800eb0c:	f014 ff21 	bl	8023952 <_ZdlPvj>
 800eb10:	687b      	ldr	r3, [r7, #4]
 800eb12:	4618      	mov	r0, r3
 800eb14:	3708      	adds	r7, #8
 800eb16:	46bd      	mov	sp, r7
 800eb18:	bd80      	pop	{r7, pc}
	...

0800eb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800eb1c:	b580      	push	{r7, lr}
 800eb1e:	b082      	sub	sp, #8
 800eb20:	af00      	add	r7, sp, #0
 800eb22:	6078      	str	r0, [r7, #4]
 800eb24:	4a05      	ldr	r2, [pc, #20]	; (800eb3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800eb26:	687b      	ldr	r3, [r7, #4]
 800eb28:	601a      	str	r2, [r3, #0]
 800eb2a:	687b      	ldr	r3, [r7, #4]
 800eb2c:	4618      	mov	r0, r3
 800eb2e:	f001 fa90 	bl	8010052 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800eb32:	687b      	ldr	r3, [r7, #4]
 800eb34:	4618      	mov	r0, r3
 800eb36:	3708      	adds	r7, #8
 800eb38:	46bd      	mov	sp, r7
 800eb3a:	bd80      	pop	{r7, pc}
 800eb3c:	08025b28 	.word	0x08025b28

0800eb40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800eb40:	b580      	push	{r7, lr}
 800eb42:	b082      	sub	sp, #8
 800eb44:	af00      	add	r7, sp, #0
 800eb46:	6078      	str	r0, [r7, #4]
 800eb48:	6878      	ldr	r0, [r7, #4]
 800eb4a:	f7ff ffe7 	bl	800eb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eb4e:	2118      	movs	r1, #24
 800eb50:	6878      	ldr	r0, [r7, #4]
 800eb52:	f014 fefe 	bl	8023952 <_ZdlPvj>
 800eb56:	687b      	ldr	r3, [r7, #4]
 800eb58:	4618      	mov	r0, r3
 800eb5a:	3708      	adds	r7, #8
 800eb5c:	46bd      	mov	sp, r7
 800eb5e:	bd80      	pop	{r7, pc}

0800eb60 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800eb60:	b580      	push	{r7, lr}
 800eb62:	b082      	sub	sp, #8
 800eb64:	af00      	add	r7, sp, #0
 800eb66:	6078      	str	r0, [r7, #4]
 800eb68:	4a05      	ldr	r2, [pc, #20]	; (800eb80 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	601a      	str	r2, [r3, #0]
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	4618      	mov	r0, r3
 800eb72:	f7ff fca7 	bl	800e4c4 <_ZN8touchgfx3LCDD1Ev>
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	4618      	mov	r0, r3
 800eb7a:	3708      	adds	r7, #8
 800eb7c:	46bd      	mov	sp, r7
 800eb7e:	bd80      	pop	{r7, pc}
 800eb80:	080264b8 	.word	0x080264b8

0800eb84 <_ZN8touchgfx8LCD16bppD0Ev>:
 800eb84:	b580      	push	{r7, lr}
 800eb86:	b082      	sub	sp, #8
 800eb88:	af00      	add	r7, sp, #0
 800eb8a:	6078      	str	r0, [r7, #4]
 800eb8c:	6878      	ldr	r0, [r7, #4]
 800eb8e:	f7ff ffe7 	bl	800eb60 <_ZN8touchgfx8LCD16bppD1Ev>
 800eb92:	2184      	movs	r1, #132	; 0x84
 800eb94:	6878      	ldr	r0, [r7, #4]
 800eb96:	f014 fedc 	bl	8023952 <_ZdlPvj>
 800eb9a:	687b      	ldr	r3, [r7, #4]
 800eb9c:	4618      	mov	r0, r3
 800eb9e:	3708      	adds	r7, #8
 800eba0:	46bd      	mov	sp, r7
 800eba2:	bd80      	pop	{r7, pc}

0800eba4 <_Z41__static_initialization_and_destruction_0ii>:
 800eba4:	b580      	push	{r7, lr}
 800eba6:	b084      	sub	sp, #16
 800eba8:	af02      	add	r7, sp, #8
 800ebaa:	6078      	str	r0, [r7, #4]
 800ebac:	6039      	str	r1, [r7, #0]
 800ebae:	687b      	ldr	r3, [r7, #4]
 800ebb0:	2b01      	cmp	r3, #1
 800ebb2:	d119      	bne.n	800ebe8 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800ebb4:	683b      	ldr	r3, [r7, #0]
 800ebb6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ebba:	4293      	cmp	r3, r2
 800ebbc:	d114      	bne.n	800ebe8 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800ebbe:	4818      	ldr	r0, [pc, #96]	; (800ec20 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ebc0:	f7ff feda 	bl	800e978 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800ebc4:	4817      	ldr	r0, [pc, #92]	; (800ec24 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ebc6:	f7ff f907 	bl	800ddd8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800ebca:	4817      	ldr	r0, [pc, #92]	; (800ec28 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ebcc:	f00b fd38 	bl	801a640 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 1024, 600);
 800ebd0:	f44f 7316 	mov.w	r3, #600	; 0x258
 800ebd4:	9301      	str	r3, [sp, #4]
 800ebd6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ebda:	9300      	str	r3, [sp, #0]
 800ebdc:	4b10      	ldr	r3, [pc, #64]	; (800ec20 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ebde:	4a12      	ldr	r2, [pc, #72]	; (800ec28 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ebe0:	4910      	ldr	r1, [pc, #64]	; (800ec24 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ebe2:	4812      	ldr	r0, [pc, #72]	; (800ec2c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800ebe4:	f7ff fe9c 	bl	800e920 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800ebe8:	687b      	ldr	r3, [r7, #4]
 800ebea:	2b00      	cmp	r3, #0
 800ebec:	d113      	bne.n	800ec16 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800ebee:	683b      	ldr	r3, [r7, #0]
 800ebf0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ebf4:	4293      	cmp	r3, r2
 800ebf6:	d10e      	bne.n	800ec16 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800ebf8:	480c      	ldr	r0, [pc, #48]	; (800ec2c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800ebfa:	f7fe ff23 	bl	800da44 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800ebfe:	480c      	ldr	r0, [pc, #48]	; (800ec30 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800ec00:	f7fb fd6a 	bl	800a6d8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800ec04:	4808      	ldr	r0, [pc, #32]	; (800ec28 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ec06:	f7ff ffab 	bl	800eb60 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800ec0a:	4806      	ldr	r0, [pc, #24]	; (800ec24 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ec0c:	f7ff f90e 	bl	800de2c <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800ec10:	4803      	ldr	r0, [pc, #12]	; (800ec20 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ec12:	f7fe fc7f 	bl	800d514 <_ZN20STM32TouchControllerD1Ev>
}
 800ec16:	bf00      	nop
 800ec18:	3708      	adds	r7, #8
 800ec1a:	46bd      	mov	sp, r7
 800ec1c:	bd80      	pop	{r7, pc}
 800ec1e:	bf00      	nop
 800ec20:	240007a0 	.word	0x240007a0
 800ec24:	240007a4 	.word	0x240007a4
 800ec28:	24001544 	.word	0x24001544
 800ec2c:	240015cc 	.word	0x240015cc
 800ec30:	24000014 	.word	0x24000014

0800ec34 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800ec34:	b480      	push	{r7}
 800ec36:	b083      	sub	sp, #12
 800ec38:	af00      	add	r7, sp, #0
 800ec3a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800ec3c:	2301      	movs	r3, #1
    }
 800ec3e:	4618      	mov	r0, r3
 800ec40:	370c      	adds	r7, #12
 800ec42:	46bd      	mov	sp, r7
 800ec44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec48:	4770      	bx	lr

0800ec4a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800ec4a:	b480      	push	{r7}
 800ec4c:	b083      	sub	sp, #12
 800ec4e:	af00      	add	r7, sp, #0
 800ec50:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800ec52:	230c      	movs	r3, #12
    }
 800ec54:	4618      	mov	r0, r3
 800ec56:	370c      	adds	r7, #12
 800ec58:	46bd      	mov	sp, r7
 800ec5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec5e:	4770      	bx	lr

0800ec60 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800ec60:	b480      	push	{r7}
 800ec62:	b083      	sub	sp, #12
 800ec64:	af00      	add	r7, sp, #0
 800ec66:	6078      	str	r0, [r7, #4]
 800ec68:	460b      	mov	r3, r1
 800ec6a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800ec6c:	887a      	ldrh	r2, [r7, #2]
 800ec6e:	4613      	mov	r3, r2
 800ec70:	005b      	lsls	r3, r3, #1
 800ec72:	4413      	add	r3, r2
 800ec74:	009b      	lsls	r3, r3, #2
 800ec76:	3308      	adds	r3, #8
 800ec78:	687a      	ldr	r2, [r7, #4]
 800ec7a:	4413      	add	r3, r2
    }
 800ec7c:	4618      	mov	r0, r3
 800ec7e:	370c      	adds	r7, #12
 800ec80:	46bd      	mov	sp, r7
 800ec82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec86:	4770      	bx	lr

0800ec88 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800ec88:	b480      	push	{r7}
 800ec8a:	b083      	sub	sp, #12
 800ec8c:	af00      	add	r7, sp, #0
 800ec8e:	6078      	str	r0, [r7, #4]
 800ec90:	460b      	mov	r3, r1
 800ec92:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800ec94:	887a      	ldrh	r2, [r7, #2]
 800ec96:	4613      	mov	r3, r2
 800ec98:	005b      	lsls	r3, r3, #1
 800ec9a:	4413      	add	r3, r2
 800ec9c:	009b      	lsls	r3, r3, #2
 800ec9e:	3308      	adds	r3, #8
 800eca0:	687a      	ldr	r2, [r7, #4]
 800eca2:	4413      	add	r3, r2
    }
 800eca4:	4618      	mov	r0, r3
 800eca6:	370c      	adds	r7, #12
 800eca8:	46bd      	mov	sp, r7
 800ecaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecae:	4770      	bx	lr

0800ecb0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ecb0:	b480      	push	{r7}
 800ecb2:	b083      	sub	sp, #12
 800ecb4:	af00      	add	r7, sp, #0
 800ecb6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ecb8:	2301      	movs	r3, #1
    }
 800ecba:	4618      	mov	r0, r3
 800ecbc:	370c      	adds	r7, #12
 800ecbe:	46bd      	mov	sp, r7
 800ecc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecc4:	4770      	bx	lr

0800ecc6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800ecc6:	b480      	push	{r7}
 800ecc8:	b083      	sub	sp, #12
 800ecca:	af00      	add	r7, sp, #0
 800eccc:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800ecce:	23f8      	movs	r3, #248	; 0xf8
    }
 800ecd0:	4618      	mov	r0, r3
 800ecd2:	370c      	adds	r7, #12
 800ecd4:	46bd      	mov	sp, r7
 800ecd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecda:	4770      	bx	lr

0800ecdc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800ecdc:	b480      	push	{r7}
 800ecde:	b083      	sub	sp, #12
 800ece0:	af00      	add	r7, sp, #0
 800ece2:	6078      	str	r0, [r7, #4]
 800ece4:	460b      	mov	r3, r1
 800ece6:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ece8:	887a      	ldrh	r2, [r7, #2]
 800ecea:	4613      	mov	r3, r2
 800ecec:	015b      	lsls	r3, r3, #5
 800ecee:	1a9b      	subs	r3, r3, r2
 800ecf0:	00db      	lsls	r3, r3, #3
 800ecf2:	3308      	adds	r3, #8
 800ecf4:	687a      	ldr	r2, [r7, #4]
 800ecf6:	4413      	add	r3, r2
    }
 800ecf8:	4618      	mov	r0, r3
 800ecfa:	370c      	adds	r7, #12
 800ecfc:	46bd      	mov	sp, r7
 800ecfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed02:	4770      	bx	lr

0800ed04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800ed04:	b480      	push	{r7}
 800ed06:	b083      	sub	sp, #12
 800ed08:	af00      	add	r7, sp, #0
 800ed0a:	6078      	str	r0, [r7, #4]
 800ed0c:	460b      	mov	r3, r1
 800ed0e:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ed10:	887a      	ldrh	r2, [r7, #2]
 800ed12:	4613      	mov	r3, r2
 800ed14:	015b      	lsls	r3, r3, #5
 800ed16:	1a9b      	subs	r3, r3, r2
 800ed18:	00db      	lsls	r3, r3, #3
 800ed1a:	3308      	adds	r3, #8
 800ed1c:	687a      	ldr	r2, [r7, #4]
 800ed1e:	4413      	add	r3, r2
    }
 800ed20:	4618      	mov	r0, r3
 800ed22:	370c      	adds	r7, #12
 800ed24:	46bd      	mov	sp, r7
 800ed26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed2a:	4770      	bx	lr

0800ed2c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ed2c:	b480      	push	{r7}
 800ed2e:	b083      	sub	sp, #12
 800ed30:	af00      	add	r7, sp, #0
 800ed32:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ed34:	2301      	movs	r3, #1
    }
 800ed36:	4618      	mov	r0, r3
 800ed38:	370c      	adds	r7, #12
 800ed3a:	46bd      	mov	sp, r7
 800ed3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed40:	4770      	bx	lr

0800ed42 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800ed42:	b480      	push	{r7}
 800ed44:	b083      	sub	sp, #12
 800ed46:	af00      	add	r7, sp, #0
 800ed48:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800ed4a:	2310      	movs	r3, #16
    }
 800ed4c:	4618      	mov	r0, r3
 800ed4e:	370c      	adds	r7, #12
 800ed50:	46bd      	mov	sp, r7
 800ed52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed56:	4770      	bx	lr

0800ed58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800ed58:	b480      	push	{r7}
 800ed5a:	b083      	sub	sp, #12
 800ed5c:	af00      	add	r7, sp, #0
 800ed5e:	6078      	str	r0, [r7, #4]
 800ed60:	460b      	mov	r3, r1
 800ed62:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ed64:	887b      	ldrh	r3, [r7, #2]
 800ed66:	011b      	lsls	r3, r3, #4
 800ed68:	3308      	adds	r3, #8
 800ed6a:	687a      	ldr	r2, [r7, #4]
 800ed6c:	4413      	add	r3, r2
    }
 800ed6e:	4618      	mov	r0, r3
 800ed70:	370c      	adds	r7, #12
 800ed72:	46bd      	mov	sp, r7
 800ed74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed78:	4770      	bx	lr

0800ed7a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800ed7a:	b480      	push	{r7}
 800ed7c:	b083      	sub	sp, #12
 800ed7e:	af00      	add	r7, sp, #0
 800ed80:	6078      	str	r0, [r7, #4]
 800ed82:	460b      	mov	r3, r1
 800ed84:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ed86:	887b      	ldrh	r3, [r7, #2]
 800ed88:	011b      	lsls	r3, r3, #4
 800ed8a:	3308      	adds	r3, #8
 800ed8c:	687a      	ldr	r2, [r7, #4]
 800ed8e:	4413      	add	r3, r2
    }
 800ed90:	4618      	mov	r0, r3
 800ed92:	370c      	adds	r7, #12
 800ed94:	46bd      	mov	sp, r7
 800ed96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed9a:	4770      	bx	lr

0800ed9c <_GLOBAL__sub_I_touchgfx_init>:
 800ed9c:	b580      	push	{r7, lr}
 800ed9e:	af00      	add	r7, sp, #0
 800eda0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eda4:	2001      	movs	r0, #1
 800eda6:	f7ff fefd 	bl	800eba4 <_Z41__static_initialization_and_destruction_0ii>
 800edaa:	bd80      	pop	{r7, pc}

0800edac <_GLOBAL__sub_D_touchgfx_init>:
 800edac:	b580      	push	{r7, lr}
 800edae:	af00      	add	r7, sp, #0
 800edb0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800edb4:	2000      	movs	r0, #0
 800edb6:	f7ff fef5 	bl	800eba4 <_Z41__static_initialization_and_destruction_0ii>
 800edba:	bd80      	pop	{r7, pc}

0800edbc <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800edbc:	b580      	push	{r7, lr}
 800edbe:	b082      	sub	sp, #8
 800edc0:	af00      	add	r7, sp, #0
 800edc2:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800edc4:	687b      	ldr	r3, [r7, #4]
 800edc6:	681b      	ldr	r3, [r3, #0]
 800edc8:	3320      	adds	r3, #32
 800edca:	681b      	ldr	r3, [r3, #0]
 800edcc:	6878      	ldr	r0, [r7, #4]
 800edce:	4798      	blx	r3
    }
 800edd0:	bf00      	nop
 800edd2:	3708      	adds	r7, #8
 800edd4:	46bd      	mov	sp, r7
 800edd6:	bd80      	pop	{r7, pc}

0800edd8 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800edd8:	b480      	push	{r7}
 800edda:	b083      	sub	sp, #12
 800eddc:	af00      	add	r7, sp, #0
 800edde:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800ede0:	687b      	ldr	r3, [r7, #4]
 800ede2:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 800ede6:	3301      	adds	r3, #1
 800ede8:	b2da      	uxtb	r2, r3
 800edea:	687b      	ldr	r3, [r7, #4]
 800edec:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 800edf0:	bf00      	nop
 800edf2:	370c      	adds	r7, #12
 800edf4:	46bd      	mov	sp, r7
 800edf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edfa:	4770      	bx	lr

0800edfc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800edfc:	b580      	push	{r7, lr}
 800edfe:	b082      	sub	sp, #8
 800ee00:	af00      	add	r7, sp, #0
 800ee02:	6078      	str	r0, [r7, #4]
 800ee04:	460b      	mov	r3, r1
 800ee06:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800ee08:	78fb      	ldrb	r3, [r7, #3]
 800ee0a:	2b00      	cmp	r3, #0
 800ee0c:	d002      	beq.n	800ee14 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800ee0e:	78fb      	ldrb	r3, [r7, #3]
 800ee10:	2b02      	cmp	r3, #2
 800ee12:	d105      	bne.n	800ee20 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800ee14:	687b      	ldr	r3, [r7, #4]
 800ee16:	78fa      	ldrb	r2, [r7, #3]
 800ee18:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800ee1c:	2301      	movs	r3, #1
 800ee1e:	e027      	b.n	800ee70 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800ee20:	78fb      	ldrb	r3, [r7, #3]
 800ee22:	2b01      	cmp	r3, #1
 800ee24:	d123      	bne.n	800ee6e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800ee26:	687b      	ldr	r3, [r7, #4]
 800ee28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ee2a:	2b00      	cmp	r3, #0
 800ee2c:	d014      	beq.n	800ee58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	681b      	ldr	r3, [r3, #0]
 800ee32:	339c      	adds	r3, #156	; 0x9c
 800ee34:	681b      	ldr	r3, [r3, #0]
 800ee36:	6878      	ldr	r0, [r7, #4]
 800ee38:	4798      	blx	r3
 800ee3a:	4603      	mov	r3, r0
 800ee3c:	461a      	mov	r2, r3
 800ee3e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ee42:	429a      	cmp	r2, r3
 800ee44:	d008      	beq.n	800ee58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ee46:	4b0c      	ldr	r3, [pc, #48]	; (800ee78 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800ee48:	781b      	ldrb	r3, [r3, #0]
 800ee4a:	f083 0301 	eor.w	r3, r3, #1
 800ee4e:	b2db      	uxtb	r3, r3
 800ee50:	2b00      	cmp	r3, #0
 800ee52:	d001      	beq.n	800ee58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ee54:	2301      	movs	r3, #1
 800ee56:	e000      	b.n	800ee5a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800ee58:	2300      	movs	r3, #0
 800ee5a:	2b00      	cmp	r3, #0
 800ee5c:	d005      	beq.n	800ee6a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800ee5e:	687b      	ldr	r3, [r7, #4]
 800ee60:	78fa      	ldrb	r2, [r7, #3]
 800ee62:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800ee66:	2301      	movs	r3, #1
 800ee68:	e002      	b.n	800ee70 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800ee6a:	2300      	movs	r3, #0
 800ee6c:	e000      	b.n	800ee70 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800ee6e:	2300      	movs	r3, #0
    }
 800ee70:	4618      	mov	r0, r3
 800ee72:	3708      	adds	r7, #8
 800ee74:	46bd      	mov	sp, r7
 800ee76:	bd80      	pop	{r7, pc}
 800ee78:	240016ae 	.word	0x240016ae

0800ee7c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void (*delayF)(uint16_t))
 800ee7c:	b480      	push	{r7}
 800ee7e:	b083      	sub	sp, #12
 800ee80:	af00      	add	r7, sp, #0
 800ee82:	6078      	str	r0, [r7, #4]
 800ee84:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800ee86:	687b      	ldr	r3, [r7, #4]
 800ee88:	683a      	ldr	r2, [r7, #0]
 800ee8a:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800ee8c:	bf00      	nop
 800ee8e:	370c      	adds	r7, #12
 800ee90:	46bd      	mov	sp, r7
 800ee92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee96:	4770      	bx	lr

0800ee98 <__NVIC_EnableIRQ>:
{
 800ee98:	b480      	push	{r7}
 800ee9a:	b083      	sub	sp, #12
 800ee9c:	af00      	add	r7, sp, #0
 800ee9e:	4603      	mov	r3, r0
 800eea0:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800eea2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800eea6:	2b00      	cmp	r3, #0
 800eea8:	db0b      	blt.n	800eec2 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800eeaa:	88fb      	ldrh	r3, [r7, #6]
 800eeac:	f003 021f 	and.w	r2, r3, #31
 800eeb0:	4907      	ldr	r1, [pc, #28]	; (800eed0 <__NVIC_EnableIRQ+0x38>)
 800eeb2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800eeb6:	095b      	lsrs	r3, r3, #5
 800eeb8:	2001      	movs	r0, #1
 800eeba:	fa00 f202 	lsl.w	r2, r0, r2
 800eebe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800eec2:	bf00      	nop
 800eec4:	370c      	adds	r7, #12
 800eec6:	46bd      	mov	sp, r7
 800eec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eecc:	4770      	bx	lr
 800eece:	bf00      	nop
 800eed0:	e000e100 	.word	0xe000e100

0800eed4 <__NVIC_DisableIRQ>:
{
 800eed4:	b480      	push	{r7}
 800eed6:	b083      	sub	sp, #12
 800eed8:	af00      	add	r7, sp, #0
 800eeda:	4603      	mov	r3, r0
 800eedc:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800eede:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800eee2:	2b00      	cmp	r3, #0
 800eee4:	db12      	blt.n	800ef0c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800eee6:	88fb      	ldrh	r3, [r7, #6]
 800eee8:	f003 021f 	and.w	r2, r3, #31
 800eeec:	490a      	ldr	r1, [pc, #40]	; (800ef18 <__NVIC_DisableIRQ+0x44>)
 800eeee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800eef2:	095b      	lsrs	r3, r3, #5
 800eef4:	2001      	movs	r0, #1
 800eef6:	fa00 f202 	lsl.w	r2, r0, r2
 800eefa:	3320      	adds	r3, #32
 800eefc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800ef00:	f3bf 8f4f 	dsb	sy
}
 800ef04:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800ef06:	f3bf 8f6f 	isb	sy
}
 800ef0a:	bf00      	nop
}
 800ef0c:	bf00      	nop
 800ef0e:	370c      	adds	r7, #12
 800ef10:	46bd      	mov	sp, r7
 800ef12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef16:	4770      	bx	lr
 800ef18:	e000e100 	.word	0xe000e100

0800ef1c <__NVIC_SetPriority>:
{
 800ef1c:	b480      	push	{r7}
 800ef1e:	b083      	sub	sp, #12
 800ef20:	af00      	add	r7, sp, #0
 800ef22:	4603      	mov	r3, r0
 800ef24:	6039      	str	r1, [r7, #0]
 800ef26:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800ef28:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	db0a      	blt.n	800ef46 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ef30:	683b      	ldr	r3, [r7, #0]
 800ef32:	b2da      	uxtb	r2, r3
 800ef34:	490c      	ldr	r1, [pc, #48]	; (800ef68 <__NVIC_SetPriority+0x4c>)
 800ef36:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ef3a:	0112      	lsls	r2, r2, #4
 800ef3c:	b2d2      	uxtb	r2, r2
 800ef3e:	440b      	add	r3, r1
 800ef40:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800ef44:	e00a      	b.n	800ef5c <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ef46:	683b      	ldr	r3, [r7, #0]
 800ef48:	b2da      	uxtb	r2, r3
 800ef4a:	4908      	ldr	r1, [pc, #32]	; (800ef6c <__NVIC_SetPriority+0x50>)
 800ef4c:	88fb      	ldrh	r3, [r7, #6]
 800ef4e:	f003 030f 	and.w	r3, r3, #15
 800ef52:	3b04      	subs	r3, #4
 800ef54:	0112      	lsls	r2, r2, #4
 800ef56:	b2d2      	uxtb	r2, r2
 800ef58:	440b      	add	r3, r1
 800ef5a:	761a      	strb	r2, [r3, #24]
}
 800ef5c:	bf00      	nop
 800ef5e:	370c      	adds	r7, #12
 800ef60:	46bd      	mov	sp, r7
 800ef62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef66:	4770      	bx	lr
 800ef68:	e000e100 	.word	0xe000e100
 800ef6c:	e000ed00 	.word	0xe000ed00

0800ef70 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
static uint16_t lcd_int_active_line;
static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800ef70:	b5b0      	push	{r4, r5, r7, lr}
 800ef72:	b082      	sub	sp, #8
 800ef74:	af00      	add	r7, sp, #0
 800ef76:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800ef78:	687b      	ldr	r3, [r7, #4]
 800ef7a:	4618      	mov	r0, r3
 800ef7c:	f001 fb65 	bl	801064a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800ef80:	687d      	ldr	r5, [r7, #4]
 800ef82:	687b      	ldr	r3, [r7, #4]
 800ef84:	681b      	ldr	r3, [r3, #0]
 800ef86:	3364      	adds	r3, #100	; 0x64
 800ef88:	681c      	ldr	r4, [r3, #0]
 800ef8a:	f004 fbbf 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 800ef8e:	4603      	mov	r3, r0
 800ef90:	4619      	mov	r1, r3
 800ef92:	4628      	mov	r0, r5
 800ef94:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	4910      	ldr	r1, [pc, #64]	; (800efdc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
 800ef9a:	4618      	mov	r0, r3
 800ef9c:	f7ff ff6e 	bl	800ee7c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800efa0:	687b      	ldr	r3, [r7, #4]
 800efa2:	2101      	movs	r1, #1
 800efa4:	4618      	mov	r0, r3
 800efa6:	f7ff ff29 	bl	800edfc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
    enableLCDControllerInterrupt();
 800efaa:	687b      	ldr	r3, [r7, #4]
 800efac:	681b      	ldr	r3, [r3, #0]
 800efae:	3380      	adds	r3, #128	; 0x80
 800efb0:	681b      	ldr	r3, [r3, #0]
 800efb2:	6878      	ldr	r0, [r7, #4]
 800efb4:	4798      	blx	r3
    enableInterrupts();
 800efb6:	687b      	ldr	r3, [r7, #4]
 800efb8:	681b      	ldr	r3, [r3, #0]
 800efba:	3378      	adds	r3, #120	; 0x78
 800efbc:	681b      	ldr	r3, [r3, #0]
 800efbe:	6878      	ldr	r0, [r7, #4]
 800efc0:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)0xc0100000, (void*)0, (void*)0);
 800efc2:	6878      	ldr	r0, [r7, #4]
 800efc4:	687b      	ldr	r3, [r7, #4]
 800efc6:	681b      	ldr	r3, [r3, #0]
 800efc8:	3388      	adds	r3, #136	; 0x88
 800efca:	681c      	ldr	r4, [r3, #0]
 800efcc:	2300      	movs	r3, #0
 800efce:	2200      	movs	r2, #0
 800efd0:	4903      	ldr	r1, [pc, #12]	; (800efe0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
 800efd2:	47a0      	blx	r4
}
 800efd4:	bf00      	nop
 800efd6:	3708      	adds	r7, #8
 800efd8:	46bd      	mov	sp, r7
 800efda:	bdb0      	pop	{r4, r5, r7, pc}
 800efdc:	0800dba5 	.word	0x0800dba5
 800efe0:	c0100000 	.word	0xc0100000

0800efe4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800efe4:	b580      	push	{r7, lr}
 800efe6:	b082      	sub	sp, #8
 800efe8:	af00      	add	r7, sp, #0
 800efea:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800efec:	2109      	movs	r1, #9
 800efee:	205a      	movs	r0, #90	; 0x5a
 800eff0:	f7ff ff94 	bl	800ef1c <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800eff4:	2109      	movs	r1, #9
 800eff6:	2058      	movs	r0, #88	; 0x58
 800eff8:	f7ff ff90 	bl	800ef1c <__NVIC_SetPriority>
}
 800effc:	bf00      	nop
 800effe:	3708      	adds	r7, #8
 800f000:	46bd      	mov	sp, r7
 800f002:	bd80      	pop	{r7, pc}

0800f004 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800f004:	b580      	push	{r7, lr}
 800f006:	b082      	sub	sp, #8
 800f008:	af00      	add	r7, sp, #0
 800f00a:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800f00c:	205a      	movs	r0, #90	; 0x5a
 800f00e:	f7ff ff43 	bl	800ee98 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800f012:	2058      	movs	r0, #88	; 0x58
 800f014:	f7ff ff40 	bl	800ee98 <__NVIC_EnableIRQ>
}
 800f018:	bf00      	nop
 800f01a:	3708      	adds	r7, #8
 800f01c:	46bd      	mov	sp, r7
 800f01e:	bd80      	pop	{r7, pc}

0800f020 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800f020:	b580      	push	{r7, lr}
 800f022:	b082      	sub	sp, #8
 800f024:	af00      	add	r7, sp, #0
 800f026:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800f028:	205a      	movs	r0, #90	; 0x5a
 800f02a:	f7ff ff53 	bl	800eed4 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800f02e:	2058      	movs	r0, #88	; 0x58
 800f030:	f7ff ff50 	bl	800eed4 <__NVIC_DisableIRQ>
}
 800f034:	bf00      	nop
 800f036:	3708      	adds	r7, #8
 800f038:	46bd      	mov	sp, r7
 800f03a:	bd80      	pop	{r7, pc}

0800f03c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800f03c:	b480      	push	{r7}
 800f03e:	b083      	sub	sp, #12
 800f040:	af00      	add	r7, sp, #0
 800f042:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800f044:	4b11      	ldr	r3, [pc, #68]	; (800f08c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800f046:	68db      	ldr	r3, [r3, #12]
 800f048:	b29b      	uxth	r3, r3
 800f04a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800f04e:	b29b      	uxth	r3, r3
 800f050:	3b01      	subs	r3, #1
 800f052:	b29a      	uxth	r2, r3
 800f054:	4b0e      	ldr	r3, [pc, #56]	; (800f090 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800f056:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800f058:	4b0c      	ldr	r3, [pc, #48]	; (800f08c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800f05a:	691b      	ldr	r3, [r3, #16]
 800f05c:	b29b      	uxth	r3, r3
 800f05e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800f062:	b29b      	uxth	r3, r3
 800f064:	3b01      	subs	r3, #1
 800f066:	b29a      	uxth	r2, r3
 800f068:	4b0a      	ldr	r3, [pc, #40]	; (800f094 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800f06a:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800f06c:	4b08      	ldr	r3, [pc, #32]	; (800f090 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800f06e:	881a      	ldrh	r2, [r3, #0]
 800f070:	4b06      	ldr	r3, [pc, #24]	; (800f08c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800f072:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800f074:	4b05      	ldr	r3, [pc, #20]	; (800f08c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800f076:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f078:	4a04      	ldr	r2, [pc, #16]	; (800f08c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800f07a:	f043 0301 	orr.w	r3, r3, #1
 800f07e:	6353      	str	r3, [r2, #52]	; 0x34
}
 800f080:	bf00      	nop
 800f082:	370c      	adds	r7, #12
 800f084:	46bd      	mov	sp, r7
 800f086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f08a:	4770      	bx	lr
 800f08c:	50001000 	.word	0x50001000
 800f090:	24001648 	.word	0x24001648
 800f094:	2400164a 	.word	0x2400164a

0800f098 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800f098:	b580      	push	{r7, lr}
 800f09a:	b082      	sub	sp, #8
 800f09c:	af00      	add	r7, sp, #0
 800f09e:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800f0a0:	687b      	ldr	r3, [r7, #4]
 800f0a2:	4618      	mov	r0, r3
 800f0a4:	f001 fab8 	bl	8010618 <_ZN8touchgfx3HAL10beginFrameEv>
 800f0a8:	4603      	mov	r3, r0
}
 800f0aa:	4618      	mov	r0, r3
 800f0ac:	3708      	adds	r7, #8
 800f0ae:	46bd      	mov	sp, r7
 800f0b0:	bd80      	pop	{r7, pc}

0800f0b2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800f0b2:	b580      	push	{r7, lr}
 800f0b4:	b082      	sub	sp, #8
 800f0b6:	af00      	add	r7, sp, #0
 800f0b8:	6078      	str	r0, [r7, #4]
    HAL::endFrame();
 800f0ba:	687b      	ldr	r3, [r7, #4]
 800f0bc:	4618      	mov	r0, r3
 800f0be:	f001 fab7 	bl	8010630 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800f0c2:	f7fe fd39 	bl	800db38 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800f0c6:	bf00      	nop
 800f0c8:	3708      	adds	r7, #8
 800f0ca:	46bd      	mov	sp, r7
 800f0cc:	bd80      	pop	{r7, pc}
	...

0800f0d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800f0d0:	b480      	push	{r7}
 800f0d2:	b083      	sub	sp, #12
 800f0d4:	af00      	add	r7, sp, #0
 800f0d6:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800f0d8:	4b03      	ldr	r3, [pc, #12]	; (800f0e8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800f0da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800f0dc:	4618      	mov	r0, r3
 800f0de:	370c      	adds	r7, #12
 800f0e0:	46bd      	mov	sp, r7
 800f0e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0e6:	4770      	bx	lr
 800f0e8:	50001084 	.word	0x50001084

0800f0ec <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800f0ec:	b480      	push	{r7}
 800f0ee:	b083      	sub	sp, #12
 800f0f0:	af00      	add	r7, sp, #0
 800f0f2:	6078      	str	r0, [r7, #4]
 800f0f4:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800f0f6:	4a06      	ldr	r2, [pc, #24]	; (800f110 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800f0f8:	683b      	ldr	r3, [r7, #0]
 800f0fa:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800f0fc:	4b05      	ldr	r3, [pc, #20]	; (800f114 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800f0fe:	2201      	movs	r2, #1
 800f100:	625a      	str	r2, [r3, #36]	; 0x24
}
 800f102:	bf00      	nop
 800f104:	370c      	adds	r7, #12
 800f106:	46bd      	mov	sp, r7
 800f108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f10c:	4770      	bx	lr
 800f10e:	bf00      	nop
 800f110:	50001084 	.word	0x50001084
 800f114:	50001000 	.word	0x50001000

0800f118 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800f118:	b580      	push	{r7, lr}
 800f11a:	b082      	sub	sp, #8
 800f11c:	af00      	add	r7, sp, #0
 800f11e:	6078      	str	r0, [r7, #4]
 800f120:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800f122:	687b      	ldr	r3, [r7, #4]
 800f124:	6839      	ldr	r1, [r7, #0]
 800f126:	4618      	mov	r0, r3
 800f128:	f001 fa3f 	bl	80105aa <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800f12c:	bf00      	nop
 800f12e:	3708      	adds	r7, #8
 800f130:	46bd      	mov	sp, r7
 800f132:	bd80      	pop	{r7, pc}

0800f134 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800f134:	b580      	push	{r7, lr}
 800f136:	b084      	sub	sp, #16
 800f138:	af00      	add	r7, sp, #0
 800f13a:	60f8      	str	r0, [r7, #12]
 800f13c:	60b9      	str	r1, [r7, #8]
 800f13e:	607a      	str	r2, [r7, #4]
 800f140:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800f142:	68f8      	ldr	r0, [r7, #12]
 800f144:	683b      	ldr	r3, [r7, #0]
 800f146:	687a      	ldr	r2, [r7, #4]
 800f148:	68b9      	ldr	r1, [r7, #8]
 800f14a:	f001 fba0 	bl	801088e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800f14e:	4603      	mov	r3, r0
}
 800f150:	4618      	mov	r0, r3
 800f152:	3710      	adds	r7, #16
 800f154:	46bd      	mov	sp, r7
 800f156:	bd80      	pop	{r7, pc}

0800f158 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800f158:	b480      	push	{r7}
 800f15a:	b085      	sub	sp, #20
 800f15c:	af00      	add	r7, sp, #0
 800f15e:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800f160:	4b0d      	ldr	r3, [pc, #52]	; (800f198 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800f162:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f164:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800f166:	4b0c      	ldr	r3, [pc, #48]	; (800f198 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800f168:	68db      	ldr	r3, [r3, #12]
 800f16a:	b29b      	uxth	r3, r3
 800f16c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800f170:	b29b      	uxth	r3, r3
 800f172:	3301      	adds	r3, #1
 800f174:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 800f176:	89fa      	ldrh	r2, [r7, #14]
 800f178:	89bb      	ldrh	r3, [r7, #12]
 800f17a:	429a      	cmp	r2, r3
 800f17c:	d304      	bcc.n	800f188 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x30>
 800f17e:	89fa      	ldrh	r2, [r7, #14]
 800f180:	89bb      	ldrh	r3, [r7, #12]
 800f182:	1ad3      	subs	r3, r2, r3
 800f184:	b29b      	uxth	r3, r3
 800f186:	e000      	b.n	800f18a <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
 800f188:	2300      	movs	r3, #0
}
 800f18a:	4618      	mov	r0, r3
 800f18c:	3714      	adds	r7, #20
 800f18e:	46bd      	mov	sp, r7
 800f190:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f194:	4770      	bx	lr
 800f196:	bf00      	nop
 800f198:	50001000 	.word	0x50001000

0800f19c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800f19c:	b480      	push	{r7}
 800f19e:	b087      	sub	sp, #28
 800f1a0:	af00      	add	r7, sp, #0
 800f1a2:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800f1a4:	4b25      	ldr	r3, [pc, #148]	; (800f23c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1a6:	695b      	ldr	r3, [r3, #20]
 800f1a8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800f1ac:	2b00      	cmp	r3, #0
 800f1ae:	bf14      	ite	ne
 800f1b0:	2301      	movne	r3, #1
 800f1b2:	2300      	moveq	r3, #0
 800f1b4:	b2db      	uxtb	r3, r3
 800f1b6:	2b00      	cmp	r3, #0
 800f1b8:	d03a      	beq.n	800f230 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800f1ba:	4b20      	ldr	r3, [pc, #128]	; (800f23c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1bc:	2200      	movs	r2, #0
 800f1be:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800f1c2:	f3bf 8f4f 	dsb	sy
}
 800f1c6:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800f1c8:	4b1c      	ldr	r3, [pc, #112]	; (800f23c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f1ce:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800f1d0:	697b      	ldr	r3, [r7, #20]
 800f1d2:	0b5b      	lsrs	r3, r3, #13
 800f1d4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800f1d8:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800f1da:	697b      	ldr	r3, [r7, #20]
 800f1dc:	08db      	lsrs	r3, r3, #3
 800f1de:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f1e2:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f1e4:	693b      	ldr	r3, [r7, #16]
 800f1e6:	015a      	lsls	r2, r3, #5
 800f1e8:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800f1ec:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800f1ee:	68fa      	ldr	r2, [r7, #12]
 800f1f0:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f1f2:	4912      	ldr	r1, [pc, #72]	; (800f23c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1f4:	4313      	orrs	r3, r2
 800f1f6:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800f1fa:	68fb      	ldr	r3, [r7, #12]
 800f1fc:	1e5a      	subs	r2, r3, #1
 800f1fe:	60fa      	str	r2, [r7, #12]
 800f200:	2b00      	cmp	r3, #0
 800f202:	bf14      	ite	ne
 800f204:	2301      	movne	r3, #1
 800f206:	2300      	moveq	r3, #0
 800f208:	b2db      	uxtb	r3, r3
 800f20a:	2b00      	cmp	r3, #0
 800f20c:	d1ea      	bne.n	800f1e4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 800f20e:	693b      	ldr	r3, [r7, #16]
 800f210:	1e5a      	subs	r2, r3, #1
 800f212:	613a      	str	r2, [r7, #16]
 800f214:	2b00      	cmp	r3, #0
 800f216:	bf14      	ite	ne
 800f218:	2301      	movne	r3, #1
 800f21a:	2300      	moveq	r3, #0
 800f21c:	b2db      	uxtb	r3, r3
 800f21e:	2b00      	cmp	r3, #0
 800f220:	d1db      	bne.n	800f1da <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800f222:	f3bf 8f4f 	dsb	sy
}
 800f226:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f228:	f3bf 8f6f 	isb	sy
}
 800f22c:	bf00      	nop
}
 800f22e:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800f230:	bf00      	nop
 800f232:	371c      	adds	r7, #28
 800f234:	46bd      	mov	sp, r7
 800f236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f23a:	4770      	bx	lr
 800f23c:	e000ed00 	.word	0xe000ed00

0800f240 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800f240:	b480      	push	{r7}
 800f242:	b087      	sub	sp, #28
 800f244:	af00      	add	r7, sp, #0
 800f246:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800f248:	4b25      	ldr	r3, [pc, #148]	; (800f2e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f24a:	695b      	ldr	r3, [r3, #20]
 800f24c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800f250:	2b00      	cmp	r3, #0
 800f252:	bf14      	ite	ne
 800f254:	2301      	movne	r3, #1
 800f256:	2300      	moveq	r3, #0
 800f258:	b2db      	uxtb	r3, r3
 800f25a:	2b00      	cmp	r3, #0
 800f25c:	d03a      	beq.n	800f2d4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800f25e:	4b20      	ldr	r3, [pc, #128]	; (800f2e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f260:	2200      	movs	r2, #0
 800f262:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800f266:	f3bf 8f4f 	dsb	sy
}
 800f26a:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800f26c:	4b1c      	ldr	r3, [pc, #112]	; (800f2e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f26e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f272:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800f274:	697b      	ldr	r3, [r7, #20]
 800f276:	0b5b      	lsrs	r3, r3, #13
 800f278:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800f27c:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800f27e:	697b      	ldr	r3, [r7, #20]
 800f280:	08db      	lsrs	r3, r3, #3
 800f282:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f286:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f288:	693b      	ldr	r3, [r7, #16]
 800f28a:	015a      	lsls	r2, r3, #5
 800f28c:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800f290:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800f292:	68fa      	ldr	r2, [r7, #12]
 800f294:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f296:	4912      	ldr	r1, [pc, #72]	; (800f2e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f298:	4313      	orrs	r3, r2
 800f29a:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800f29e:	68fb      	ldr	r3, [r7, #12]
 800f2a0:	1e5a      	subs	r2, r3, #1
 800f2a2:	60fa      	str	r2, [r7, #12]
 800f2a4:	2b00      	cmp	r3, #0
 800f2a6:	bf14      	ite	ne
 800f2a8:	2301      	movne	r3, #1
 800f2aa:	2300      	moveq	r3, #0
 800f2ac:	b2db      	uxtb	r3, r3
 800f2ae:	2b00      	cmp	r3, #0
 800f2b0:	d1ea      	bne.n	800f288 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 800f2b2:	693b      	ldr	r3, [r7, #16]
 800f2b4:	1e5a      	subs	r2, r3, #1
 800f2b6:	613a      	str	r2, [r7, #16]
 800f2b8:	2b00      	cmp	r3, #0
 800f2ba:	bf14      	ite	ne
 800f2bc:	2301      	movne	r3, #1
 800f2be:	2300      	moveq	r3, #0
 800f2c0:	b2db      	uxtb	r3, r3
 800f2c2:	2b00      	cmp	r3, #0
 800f2c4:	d1db      	bne.n	800f27e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800f2c6:	f3bf 8f4f 	dsb	sy
}
 800f2ca:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f2cc:	f3bf 8f6f 	isb	sy
}
 800f2d0:	bf00      	nop
}
 800f2d2:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800f2d4:	bf00      	nop
 800f2d6:	371c      	adds	r7, #28
 800f2d8:	46bd      	mov	sp, r7
 800f2da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2de:	4770      	bx	lr
 800f2e0:	e000ed00 	.word	0xe000ed00

0800f2e4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800f2e4:	b580      	push	{r7, lr}
 800f2e6:	b082      	sub	sp, #8
 800f2e8:	af00      	add	r7, sp, #0
 800f2ea:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 800f2ec:	f7fb fd94 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800f2f0:	4603      	mov	r3, r0
 800f2f2:	2b00      	cmp	r3, #0
 800f2f4:	bf0c      	ite	eq
 800f2f6:	2301      	moveq	r3, #1
 800f2f8:	2300      	movne	r3, #0
 800f2fa:	b2db      	uxtb	r3, r3
 800f2fc:	2b00      	cmp	r3, #0
 800f2fe:	d132      	bne.n	800f366 <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800f300:	4b1b      	ldr	r3, [pc, #108]	; (800f370 <HAL_LTDC_LineEventCallback+0x8c>)
 800f302:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f304:	4a1b      	ldr	r2, [pc, #108]	; (800f374 <HAL_LTDC_LineEventCallback+0x90>)
 800f306:	8812      	ldrh	r2, [r2, #0]
 800f308:	4293      	cmp	r3, r2
 800f30a:	bf0c      	ite	eq
 800f30c:	2301      	moveq	r3, #1
 800f30e:	2300      	movne	r3, #0
 800f310:	b2db      	uxtb	r3, r3
 800f312:	2b00      	cmp	r3, #0
 800f314:	d017      	beq.n	800f346 <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800f316:	4b18      	ldr	r3, [pc, #96]	; (800f378 <HAL_LTDC_LineEventCallback+0x94>)
 800f318:	881b      	ldrh	r3, [r3, #0]
 800f31a:	4619      	mov	r1, r3
 800f31c:	6878      	ldr	r0, [r7, #4]
 800f31e:	f7f4 f921 	bl	8003564 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800f322:	f7fb fd79 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800f326:	4603      	mov	r3, r0
 800f328:	4618      	mov	r0, r3
 800f32a:	f7ff fd55 	bl	800edd8 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800f32e:	f7fe fbf7 	bl	800db20 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800f332:	f7fb fd71 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800f336:	4603      	mov	r3, r0
 800f338:	4618      	mov	r0, r3
 800f33a:	f001 fed3 	bl	80110e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800f33e:	2000      	movs	r0, #0
 800f340:	f7fe f912 	bl	800d568 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f344:	e010      	b.n	800f368 <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800f346:	4b0b      	ldr	r3, [pc, #44]	; (800f374 <HAL_LTDC_LineEventCallback+0x90>)
 800f348:	881b      	ldrh	r3, [r3, #0]
 800f34a:	4619      	mov	r1, r3
 800f34c:	6878      	ldr	r0, [r7, #4]
 800f34e:	f7f4 f909 	bl	8003564 <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 800f352:	f7fb fd61 	bl	800ae18 <_ZN8touchgfx3HAL11getInstanceEv>
 800f356:	4603      	mov	r3, r0
 800f358:	4618      	mov	r0, r3
 800f35a:	f7ff fd2f 	bl	800edbc <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800f35e:	2000      	movs	r0, #0
 800f360:	f7fe f91e 	bl	800d5a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f364:	e000      	b.n	800f368 <HAL_LTDC_LineEventCallback+0x84>
            return;
 800f366:	bf00      	nop
        }
    }
 800f368:	3708      	adds	r7, #8
 800f36a:	46bd      	mov	sp, r7
 800f36c:	bd80      	pop	{r7, pc}
 800f36e:	bf00      	nop
 800f370:	50001000 	.word	0x50001000
 800f374:	24001648 	.word	0x24001648
 800f378:	2400164a 	.word	0x2400164a

0800f37c <QSPI_Send_CMD>:
//	addressMode:地址模式; QSPI_ADDRESS_NONE,QSPI_ADDRESS_1_LINE,QSPI_ADDRESS_2_LINE,QSPI_ADDRESS_4_LINE
//	addressSize:地址长度;QSPI_ADDRESS_8_BITS,QSPI_ADDRESS_16_BITS,QSPI_ADDRESS_24_BITS,QSPI_ADDRESS_32_BITS
//	dataMode:数据模式; QSPI_DATA_NONE,QSPI_DATA_1_LINE,QSPI_DATA_2_LINE,QSPI_DATA_4_LINE

void QSPI_Send_CMD(uint32_t instruction,uint32_t address,uint32_t dummyCycles,uint32_t instructionMode,uint32_t addressMode,uint32_t addressSize,uint32_t dataMode)
{
 800f37c:	b580      	push	{r7, lr}
 800f37e:	b092      	sub	sp, #72	; 0x48
 800f380:	af00      	add	r7, sp, #0
 800f382:	60f8      	str	r0, [r7, #12]
 800f384:	60b9      	str	r1, [r7, #8]
 800f386:	607a      	str	r2, [r7, #4]
 800f388:	603b      	str	r3, [r7, #0]
    QSPI_CommandTypeDef Cmdhandler;

    Cmdhandler.Instruction=instruction;                 	//指令
 800f38a:	68fb      	ldr	r3, [r7, #12]
 800f38c:	613b      	str	r3, [r7, #16]
    Cmdhandler.Address=address;                            	//地址
 800f38e:	68bb      	ldr	r3, [r7, #8]
 800f390:	617b      	str	r3, [r7, #20]
    Cmdhandler.DummyCycles=dummyCycles;                     //设置空指令周期数
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	627b      	str	r3, [r7, #36]	; 0x24
    Cmdhandler.InstructionMode=instructionMode;				//指令模式
 800f396:	683b      	ldr	r3, [r7, #0]
 800f398:	62bb      	str	r3, [r7, #40]	; 0x28
    Cmdhandler.AddressMode=addressMode;   					//地址模式
 800f39a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800f39c:	62fb      	str	r3, [r7, #44]	; 0x2c
    Cmdhandler.AddressSize=addressSize;   					//地址长度
 800f39e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800f3a0:	61fb      	str	r3, [r7, #28]
    Cmdhandler.DataMode=dataMode;             				//数据模式
 800f3a2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800f3a4:	637b      	str	r3, [r7, #52]	; 0x34
    Cmdhandler.SIOOMode=QSPI_SIOO_INST_EVERY_CMD;       	//每次都发送指令
 800f3a6:	2300      	movs	r3, #0
 800f3a8:	647b      	str	r3, [r7, #68]	; 0x44
    Cmdhandler.AlternateByteMode=QSPI_ALTERNATE_BYTES_NONE; //无交替字节
 800f3aa:	2300      	movs	r3, #0
 800f3ac:	633b      	str	r3, [r7, #48]	; 0x30
    Cmdhandler.DdrMode=QSPI_DDR_MODE_DISABLE;           	//关闭DDR模式
 800f3ae:	2300      	movs	r3, #0
 800f3b0:	63fb      	str	r3, [r7, #60]	; 0x3c
    Cmdhandler.DdrHoldHalfCycle=QSPI_DDR_HHC_ANALOG_DELAY;
 800f3b2:	2300      	movs	r3, #0
 800f3b4:	643b      	str	r3, [r7, #64]	; 0x40

    HAL_QSPI_Command(&hqspi,&Cmdhandler,5000);
 800f3b6:	f107 0310 	add.w	r3, r7, #16
 800f3ba:	f241 3288 	movw	r2, #5000	; 0x1388
 800f3be:	4619      	mov	r1, r3
 800f3c0:	4803      	ldr	r0, [pc, #12]	; (800f3d0 <QSPI_Send_CMD+0x54>)
 800f3c2:	f7f4 fb4f 	bl	8003a64 <HAL_QSPI_Command>
}
 800f3c6:	bf00      	nop
 800f3c8:	3748      	adds	r7, #72	; 0x48
 800f3ca:	46bd      	mov	sp, r7
 800f3cc:	bd80      	pop	{r7, pc}
 800f3ce:	bf00      	nop
 800f3d0:	24000248 	.word	0x24000248

0800f3d4 <QSPI_Receive>:
//buf:接收数据缓冲区首地址
//datalen:要传输的数据长度
//返回值:0,正常
//    其他,错误代码
uint8_t QSPI_Receive(uint8_t* buf,uint32_t datalen)
{
 800f3d4:	b580      	push	{r7, lr}
 800f3d6:	b082      	sub	sp, #8
 800f3d8:	af00      	add	r7, sp, #0
 800f3da:	6078      	str	r0, [r7, #4]
 800f3dc:	6039      	str	r1, [r7, #0]
	hqspi.Instance->DLR=datalen-1;                           //配置数据长度
 800f3de:	4b0a      	ldr	r3, [pc, #40]	; (800f408 <QSPI_Receive+0x34>)
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	683a      	ldr	r2, [r7, #0]
 800f3e4:	3a01      	subs	r2, #1
 800f3e6:	611a      	str	r2, [r3, #16]
    if(HAL_QSPI_Receive(&hqspi,buf,5000)==HAL_OK) return 0;  //接收数据
 800f3e8:	f241 3288 	movw	r2, #5000	; 0x1388
 800f3ec:	6879      	ldr	r1, [r7, #4]
 800f3ee:	4806      	ldr	r0, [pc, #24]	; (800f408 <QSPI_Receive+0x34>)
 800f3f0:	f7f4 fc28 	bl	8003c44 <HAL_QSPI_Receive>
 800f3f4:	4603      	mov	r3, r0
 800f3f6:	2b00      	cmp	r3, #0
 800f3f8:	d101      	bne.n	800f3fe <QSPI_Receive+0x2a>
 800f3fa:	2300      	movs	r3, #0
 800f3fc:	e000      	b.n	800f400 <QSPI_Receive+0x2c>
    else return 1;
 800f3fe:	2301      	movs	r3, #1
}
 800f400:	4618      	mov	r0, r3
 800f402:	3708      	adds	r7, #8
 800f404:	46bd      	mov	sp, r7
 800f406:	bd80      	pop	{r7, pc}
 800f408:	24000248 	.word	0x24000248

0800f40c <QSPI_Transmit>:
//buf:发送数据缓冲区首地址
//datalen:要传输的数据长度
//返回值:0,正常
//    其他,错误代码
uint8_t QSPI_Transmit(uint8_t* buf,uint32_t datalen)
{
 800f40c:	b580      	push	{r7, lr}
 800f40e:	b082      	sub	sp, #8
 800f410:	af00      	add	r7, sp, #0
 800f412:	6078      	str	r0, [r7, #4]
 800f414:	6039      	str	r1, [r7, #0]
	hqspi.Instance->DLR=datalen-1;                            //配置数据长度
 800f416:	4b0a      	ldr	r3, [pc, #40]	; (800f440 <QSPI_Transmit+0x34>)
 800f418:	681b      	ldr	r3, [r3, #0]
 800f41a:	683a      	ldr	r2, [r7, #0]
 800f41c:	3a01      	subs	r2, #1
 800f41e:	611a      	str	r2, [r3, #16]
    if(HAL_QSPI_Transmit(&hqspi,buf,5000)==HAL_OK) return 0;  //发送数据
 800f420:	f241 3288 	movw	r2, #5000	; 0x1388
 800f424:	6879      	ldr	r1, [r7, #4]
 800f426:	4806      	ldr	r0, [pc, #24]	; (800f440 <QSPI_Transmit+0x34>)
 800f428:	f7f4 fb7a 	bl	8003b20 <HAL_QSPI_Transmit>
 800f42c:	4603      	mov	r3, r0
 800f42e:	2b00      	cmp	r3, #0
 800f430:	d101      	bne.n	800f436 <QSPI_Transmit+0x2a>
 800f432:	2300      	movs	r3, #0
 800f434:	e000      	b.n	800f438 <QSPI_Transmit+0x2c>
    else return 1;
 800f436:	2301      	movs	r3, #1
}
 800f438:	4618      	mov	r0, r3
 800f43a:	3708      	adds	r7, #8
 800f43c:	46bd      	mov	sp, r7
 800f43e:	bd80      	pop	{r7, pc}
 800f440:	24000248 	.word	0x24000248

0800f444 <W25QXX_ReadSR>:
//BIT7      6    5    4   3   2   1   0
//HOLD/RST  DRV1 DRV0 (R) (R) WPS ADP ADS
//regno:状态寄存器号，范:1~3
//返回值:状态寄存器值
uint8_t W25QXX_ReadSR(uint8_t regno)
{
 800f444:	b580      	push	{r7, lr}
 800f446:	b088      	sub	sp, #32
 800f448:	af04      	add	r7, sp, #16
 800f44a:	4603      	mov	r3, r0
 800f44c:	71fb      	strb	r3, [r7, #7]
	uint8_t byte=0,command=0;
 800f44e:	2300      	movs	r3, #0
 800f450:	73bb      	strb	r3, [r7, #14]
 800f452:	2300      	movs	r3, #0
 800f454:	73fb      	strb	r3, [r7, #15]
    switch(regno)
 800f456:	79fb      	ldrb	r3, [r7, #7]
 800f458:	2b03      	cmp	r3, #3
 800f45a:	d00c      	beq.n	800f476 <W25QXX_ReadSR+0x32>
 800f45c:	2b03      	cmp	r3, #3
 800f45e:	dc0d      	bgt.n	800f47c <W25QXX_ReadSR+0x38>
 800f460:	2b01      	cmp	r3, #1
 800f462:	d002      	beq.n	800f46a <W25QXX_ReadSR+0x26>
 800f464:	2b02      	cmp	r3, #2
 800f466:	d003      	beq.n	800f470 <W25QXX_ReadSR+0x2c>
 800f468:	e008      	b.n	800f47c <W25QXX_ReadSR+0x38>
    {
        case 1:
            command=W25X_ReadStatusReg1;    //读状态寄存器1指令
 800f46a:	2305      	movs	r3, #5
 800f46c:	73fb      	strb	r3, [r7, #15]
            break;
 800f46e:	e008      	b.n	800f482 <W25QXX_ReadSR+0x3e>
        case 2:
            command=W25X_ReadStatusReg2;    //读状态寄存器2指令
 800f470:	2335      	movs	r3, #53	; 0x35
 800f472:	73fb      	strb	r3, [r7, #15]
            break;
 800f474:	e005      	b.n	800f482 <W25QXX_ReadSR+0x3e>
        case 3:
            command=W25X_ReadStatusReg3;    //读状态寄存器3指令
 800f476:	2315      	movs	r3, #21
 800f478:	73fb      	strb	r3, [r7, #15]
            break;
 800f47a:	e002      	b.n	800f482 <W25QXX_ReadSR+0x3e>
        default:
            command=W25X_ReadStatusReg1;
 800f47c:	2305      	movs	r3, #5
 800f47e:	73fb      	strb	r3, [r7, #15]
            break;
 800f480:	bf00      	nop
    }
	if(W25QXX_QPI_MODE)QSPI_Send_CMD(command,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_4_LINES);	//QPI,写command指令,地址为0,4线传数据_8位地址_无地址_4线传输指令,无空周期,1个字节数据
 800f482:	4b16      	ldr	r3, [pc, #88]	; (800f4dc <W25QXX_ReadSR+0x98>)
 800f484:	781b      	ldrb	r3, [r3, #0]
 800f486:	2b00      	cmp	r3, #0
 800f488:	d00e      	beq.n	800f4a8 <W25QXX_ReadSR+0x64>
 800f48a:	7bf8      	ldrb	r0, [r7, #15]
 800f48c:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800f490:	9302      	str	r3, [sp, #8]
 800f492:	2300      	movs	r3, #0
 800f494:	9301      	str	r3, [sp, #4]
 800f496:	2300      	movs	r3, #0
 800f498:	9300      	str	r3, [sp, #0]
 800f49a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f49e:	2200      	movs	r2, #0
 800f4a0:	2100      	movs	r1, #0
 800f4a2:	f7ff ff6b 	bl	800f37c <QSPI_Send_CMD>
 800f4a6:	e00d      	b.n	800f4c4 <W25QXX_ReadSR+0x80>
	else QSPI_Send_CMD(command,0,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_1_LINE);				//SPI,写command指令,地址为0,单线传数据_8位地址_无地址_单线传输指令,无空周期,1个字节数据
 800f4a8:	7bf8      	ldrb	r0, [r7, #15]
 800f4aa:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800f4ae:	9302      	str	r3, [sp, #8]
 800f4b0:	2300      	movs	r3, #0
 800f4b2:	9301      	str	r3, [sp, #4]
 800f4b4:	2300      	movs	r3, #0
 800f4b6:	9300      	str	r3, [sp, #0]
 800f4b8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f4bc:	2200      	movs	r2, #0
 800f4be:	2100      	movs	r1, #0
 800f4c0:	f7ff ff5c 	bl	800f37c <QSPI_Send_CMD>
	QSPI_Receive(&byte,1);
 800f4c4:	f107 030e 	add.w	r3, r7, #14
 800f4c8:	2101      	movs	r1, #1
 800f4ca:	4618      	mov	r0, r3
 800f4cc:	f7ff ff82 	bl	800f3d4 <QSPI_Receive>
	return byte;
 800f4d0:	7bbb      	ldrb	r3, [r7, #14]
}
 800f4d2:	4618      	mov	r0, r3
 800f4d4:	3710      	adds	r7, #16
 800f4d6:	46bd      	mov	sp, r7
 800f4d8:	bd80      	pop	{r7, pc}
 800f4da:	bf00      	nop
 800f4dc:	2400164c 	.word	0x2400164c

0800f4e0 <W25QXX_Write_SR>:

//写W25QXX状态寄存器
void W25QXX_Write_SR(uint8_t regno,uint8_t sr)
{
 800f4e0:	b580      	push	{r7, lr}
 800f4e2:	b088      	sub	sp, #32
 800f4e4:	af04      	add	r7, sp, #16
 800f4e6:	4603      	mov	r3, r0
 800f4e8:	460a      	mov	r2, r1
 800f4ea:	71fb      	strb	r3, [r7, #7]
 800f4ec:	4613      	mov	r3, r2
 800f4ee:	71bb      	strb	r3, [r7, #6]
    uint8_t command=0;
 800f4f0:	2300      	movs	r3, #0
 800f4f2:	73fb      	strb	r3, [r7, #15]
    switch(regno)
 800f4f4:	79fb      	ldrb	r3, [r7, #7]
 800f4f6:	2b03      	cmp	r3, #3
 800f4f8:	d00c      	beq.n	800f514 <W25QXX_Write_SR+0x34>
 800f4fa:	2b03      	cmp	r3, #3
 800f4fc:	dc0d      	bgt.n	800f51a <W25QXX_Write_SR+0x3a>
 800f4fe:	2b01      	cmp	r3, #1
 800f500:	d002      	beq.n	800f508 <W25QXX_Write_SR+0x28>
 800f502:	2b02      	cmp	r3, #2
 800f504:	d003      	beq.n	800f50e <W25QXX_Write_SR+0x2e>
 800f506:	e008      	b.n	800f51a <W25QXX_Write_SR+0x3a>
    {
        case 1:
            command=W25X_WriteStatusReg1;    //写状态寄存器1指令
 800f508:	2301      	movs	r3, #1
 800f50a:	73fb      	strb	r3, [r7, #15]
            break;
 800f50c:	e008      	b.n	800f520 <W25QXX_Write_SR+0x40>
        case 2:
            command=W25X_WriteStatusReg2;    //写状态寄存器2指令
 800f50e:	2331      	movs	r3, #49	; 0x31
 800f510:	73fb      	strb	r3, [r7, #15]
            break;
 800f512:	e005      	b.n	800f520 <W25QXX_Write_SR+0x40>
        case 3:
            command=W25X_WriteStatusReg3;    //写状态寄存器3指令
 800f514:	2311      	movs	r3, #17
 800f516:	73fb      	strb	r3, [r7, #15]
            break;
 800f518:	e002      	b.n	800f520 <W25QXX_Write_SR+0x40>
        default:
            command=W25X_WriteStatusReg1;
 800f51a:	2301      	movs	r3, #1
 800f51c:	73fb      	strb	r3, [r7, #15]
            break;
 800f51e:	bf00      	nop
    }
	if(W25QXX_QPI_MODE)QSPI_Send_CMD(command,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_4_LINES);	//QPI,写command指令,地址为0,4线传数据_8位地址_无地址_4线传输指令,无空周期,1个字节数据
 800f520:	4b14      	ldr	r3, [pc, #80]	; (800f574 <W25QXX_Write_SR+0x94>)
 800f522:	781b      	ldrb	r3, [r3, #0]
 800f524:	2b00      	cmp	r3, #0
 800f526:	d00e      	beq.n	800f546 <W25QXX_Write_SR+0x66>
 800f528:	7bf8      	ldrb	r0, [r7, #15]
 800f52a:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800f52e:	9302      	str	r3, [sp, #8]
 800f530:	2300      	movs	r3, #0
 800f532:	9301      	str	r3, [sp, #4]
 800f534:	2300      	movs	r3, #0
 800f536:	9300      	str	r3, [sp, #0]
 800f538:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f53c:	2200      	movs	r2, #0
 800f53e:	2100      	movs	r1, #0
 800f540:	f7ff ff1c 	bl	800f37c <QSPI_Send_CMD>
 800f544:	e00d      	b.n	800f562 <W25QXX_Write_SR+0x82>
	else QSPI_Send_CMD(command,0,0, QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_1_LINE);				//SPI,写command指令,地址为0,单线传数据_8位地址_无地址_单线传输指令,无空周期,1个字节数据
 800f546:	7bf8      	ldrb	r0, [r7, #15]
 800f548:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800f54c:	9302      	str	r3, [sp, #8]
 800f54e:	2300      	movs	r3, #0
 800f550:	9301      	str	r3, [sp, #4]
 800f552:	2300      	movs	r3, #0
 800f554:	9300      	str	r3, [sp, #0]
 800f556:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f55a:	2200      	movs	r2, #0
 800f55c:	2100      	movs	r1, #0
 800f55e:	f7ff ff0d 	bl	800f37c <QSPI_Send_CMD>
	QSPI_Transmit(&sr,1);
 800f562:	1dbb      	adds	r3, r7, #6
 800f564:	2101      	movs	r1, #1
 800f566:	4618      	mov	r0, r3
 800f568:	f7ff ff50 	bl	800f40c <QSPI_Transmit>
}
 800f56c:	bf00      	nop
 800f56e:	3710      	adds	r7, #16
 800f570:	46bd      	mov	sp, r7
 800f572:	bd80      	pop	{r7, pc}
 800f574:	2400164c 	.word	0x2400164c

0800f578 <W25QXX_Qspi_Enable>:

//W25QXX进入QSPI模式
void W25QXX_Qspi_Enable(void)
{
 800f578:	b580      	push	{r7, lr}
 800f57a:	b086      	sub	sp, #24
 800f57c:	af04      	add	r7, sp, #16
	uint8_t stareg2;
	stareg2=W25QXX_ReadSR(2);		//先读出状态寄存器2的原始值
 800f57e:	2002      	movs	r0, #2
 800f580:	f7ff ff60 	bl	800f444 <W25QXX_ReadSR>
 800f584:	4603      	mov	r3, r0
 800f586:	71fb      	strb	r3, [r7, #7]
	if((stareg2&0X02)==0)			//QE位未使能
 800f588:	79fb      	ldrb	r3, [r7, #7]
 800f58a:	f003 0302 	and.w	r3, r3, #2
 800f58e:	2b00      	cmp	r3, #0
 800f590:	d10a      	bne.n	800f5a8 <W25QXX_Qspi_Enable+0x30>
	{
		W25QXX_Write_Enable();		//写使能
 800f592:	f000 f81f 	bl	800f5d4 <W25QXX_Write_Enable>
		stareg2|=1<<1;				//使能QE位
 800f596:	79fb      	ldrb	r3, [r7, #7]
 800f598:	f043 0302 	orr.w	r3, r3, #2
 800f59c:	71fb      	strb	r3, [r7, #7]
		W25QXX_Write_SR(2,stareg2);	//写状态寄存器2
 800f59e:	79fb      	ldrb	r3, [r7, #7]
 800f5a0:	4619      	mov	r1, r3
 800f5a2:	2002      	movs	r0, #2
 800f5a4:	f7ff ff9c 	bl	800f4e0 <W25QXX_Write_SR>
	}
	QSPI_Send_CMD(W25X_EnterQPIMode,0,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_NONE);//写command指令,地址为0,无数据_8位地址_无地址_单线传输指令,无空周期,0个字节数据
 800f5a8:	2300      	movs	r3, #0
 800f5aa:	9302      	str	r3, [sp, #8]
 800f5ac:	2300      	movs	r3, #0
 800f5ae:	9301      	str	r3, [sp, #4]
 800f5b0:	2300      	movs	r3, #0
 800f5b2:	9300      	str	r3, [sp, #0]
 800f5b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f5b8:	2200      	movs	r2, #0
 800f5ba:	2100      	movs	r1, #0
 800f5bc:	2038      	movs	r0, #56	; 0x38
 800f5be:	f7ff fedd 	bl	800f37c <QSPI_Send_CMD>
	W25QXX_QPI_MODE=1;				//标记QSPI模式
 800f5c2:	4b03      	ldr	r3, [pc, #12]	; (800f5d0 <W25QXX_Qspi_Enable+0x58>)
 800f5c4:	2201      	movs	r2, #1
 800f5c6:	701a      	strb	r2, [r3, #0]
}
 800f5c8:	bf00      	nop
 800f5ca:	3708      	adds	r7, #8
 800f5cc:	46bd      	mov	sp, r7
 800f5ce:	bd80      	pop	{r7, pc}
 800f5d0:	2400164c 	.word	0x2400164c

0800f5d4 <W25QXX_Write_Enable>:

//W25QXX写使能
//将S1寄存器的WEL置位
void W25QXX_Write_Enable(void)
{
 800f5d4:	b580      	push	{r7, lr}
 800f5d6:	b084      	sub	sp, #16
 800f5d8:	af04      	add	r7, sp, #16
	if(W25QXX_QPI_MODE)QSPI_Send_CMD(W25X_WriteEnable,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_NONE);	//QPI,写使能指令,地址为0,无数据_8位地址_无地址_4线传输指令,无空周期,0个字节数据
 800f5da:	4b11      	ldr	r3, [pc, #68]	; (800f620 <W25QXX_Write_Enable+0x4c>)
 800f5dc:	781b      	ldrb	r3, [r3, #0]
 800f5de:	2b00      	cmp	r3, #0
 800f5e0:	d00d      	beq.n	800f5fe <W25QXX_Write_Enable+0x2a>
 800f5e2:	2300      	movs	r3, #0
 800f5e4:	9302      	str	r3, [sp, #8]
 800f5e6:	2300      	movs	r3, #0
 800f5e8:	9301      	str	r3, [sp, #4]
 800f5ea:	2300      	movs	r3, #0
 800f5ec:	9300      	str	r3, [sp, #0]
 800f5ee:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f5f2:	2200      	movs	r2, #0
 800f5f4:	2100      	movs	r1, #0
 800f5f6:	2006      	movs	r0, #6
 800f5f8:	f7ff fec0 	bl	800f37c <QSPI_Send_CMD>
	else QSPI_Send_CMD(W25X_WriteEnable,0,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_NONE);				//SPI,写使能指令,地址为0,无数据_8位地址_无地址_单线传输指令,无空周期,0个字节数据
}
 800f5fc:	e00c      	b.n	800f618 <W25QXX_Write_Enable+0x44>
	else QSPI_Send_CMD(W25X_WriteEnable,0,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_NONE);				//SPI,写使能指令,地址为0,无数据_8位地址_无地址_单线传输指令,无空周期,0个字节数据
 800f5fe:	2300      	movs	r3, #0
 800f600:	9302      	str	r3, [sp, #8]
 800f602:	2300      	movs	r3, #0
 800f604:	9301      	str	r3, [sp, #4]
 800f606:	2300      	movs	r3, #0
 800f608:	9300      	str	r3, [sp, #0]
 800f60a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f60e:	2200      	movs	r2, #0
 800f610:	2100      	movs	r1, #0
 800f612:	2006      	movs	r0, #6
 800f614:	f7ff feb2 	bl	800f37c <QSPI_Send_CMD>
}
 800f618:	bf00      	nop
 800f61a:	46bd      	mov	sp, r7
 800f61c:	bd80      	pop	{r7, pc}
 800f61e:	bf00      	nop
 800f620:	2400164c 	.word	0x2400164c

0800f624 <W25QXX_ReadID>:
//0XEF15,表示芯片型号为W25Q32
//0XEF16,表示芯片型号为W25Q64
//0XEF17,表示芯片型号为W25Q128
//0XEF18,表示芯片型号为W25Q256
uint16_t W25QXX_ReadID(void)
{
 800f624:	b580      	push	{r7, lr}
 800f626:	b086      	sub	sp, #24
 800f628:	af04      	add	r7, sp, #16
	uint8_t temp[2];
	uint16_t deviceid;
	if(W25QXX_QPI_MODE)QSPI_Send_CMD(W25X_ManufactDeviceID,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_4_LINES,QSPI_ADDRESS_24_BITS,QSPI_DATA_4_LINES);//QPI,读id,地址为0,4线传输数据_24位地址_4线传输地址_4线传输指令,无空周期,2个字节数据
 800f62a:	4b1b      	ldr	r3, [pc, #108]	; (800f698 <W25QXX_ReadID+0x74>)
 800f62c:	781b      	ldrb	r3, [r3, #0]
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d010      	beq.n	800f654 <W25QXX_ReadID+0x30>
 800f632:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800f636:	9302      	str	r3, [sp, #8]
 800f638:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800f63c:	9301      	str	r3, [sp, #4]
 800f63e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800f642:	9300      	str	r3, [sp, #0]
 800f644:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f648:	2200      	movs	r2, #0
 800f64a:	2100      	movs	r1, #0
 800f64c:	2090      	movs	r0, #144	; 0x90
 800f64e:	f7ff fe95 	bl	800f37c <QSPI_Send_CMD>
 800f652:	e00f      	b.n	800f674 <W25QXX_ReadID+0x50>
	else QSPI_Send_CMD(W25X_ManufactDeviceID,0,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_1_LINE,QSPI_ADDRESS_24_BITS,QSPI_DATA_1_LINE);			//SPI,读id,地址为0,单线传输数据_24位地址_单线传输地址_单线传输指令,无空周期,2个字节数据
 800f654:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800f658:	9302      	str	r3, [sp, #8]
 800f65a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800f65e:	9301      	str	r3, [sp, #4]
 800f660:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f664:	9300      	str	r3, [sp, #0]
 800f666:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f66a:	2200      	movs	r2, #0
 800f66c:	2100      	movs	r1, #0
 800f66e:	2090      	movs	r0, #144	; 0x90
 800f670:	f7ff fe84 	bl	800f37c <QSPI_Send_CMD>
	QSPI_Receive(temp,2);
 800f674:	1d3b      	adds	r3, r7, #4
 800f676:	2102      	movs	r1, #2
 800f678:	4618      	mov	r0, r3
 800f67a:	f7ff feab 	bl	800f3d4 <QSPI_Receive>
	deviceid=(temp[0]<<8)|temp[1];
 800f67e:	793b      	ldrb	r3, [r7, #4]
 800f680:	021b      	lsls	r3, r3, #8
 800f682:	b21a      	sxth	r2, r3
 800f684:	797b      	ldrb	r3, [r7, #5]
 800f686:	b21b      	sxth	r3, r3
 800f688:	4313      	orrs	r3, r2
 800f68a:	b21b      	sxth	r3, r3
 800f68c:	80fb      	strh	r3, [r7, #6]
	return deviceid;
 800f68e:	88fb      	ldrh	r3, [r7, #6]
}
 800f690:	4618      	mov	r0, r3
 800f692:	3708      	adds	r7, #8
 800f694:	46bd      	mov	sp, r7
 800f696:	bd80      	pop	{r7, pc}
 800f698:	2400164c 	.word	0x2400164c

0800f69c <W25QXX_Init>:

//初始化SPI FLASH的IO口
void W25QXX_Init(void)
{
 800f69c:	b580      	push	{r7, lr}
 800f69e:	b086      	sub	sp, #24
 800f6a0:	af04      	add	r7, sp, #16
    uint8_t temp;
//	QSPI_Init();					//初始化QSPI
 	W25QXX_Qspi_Enable();			//使能QSPI模式
 800f6a2:	f7ff ff69 	bl	800f578 <W25QXX_Qspi_Enable>
	W25QXX_TYPE=W25QXX_ReadID();	//读取FLASH ID.
 800f6a6:	f7ff ffbd 	bl	800f624 <W25QXX_ReadID>
 800f6aa:	4603      	mov	r3, r0
 800f6ac:	461a      	mov	r2, r3
 800f6ae:	4b1e      	ldr	r3, [pc, #120]	; (800f728 <W25QXX_Init+0x8c>)
 800f6b0:	801a      	strh	r2, [r3, #0]
//	printf("ID:%x\r\n",W25QXX_TYPE);
	if(W25QXX_TYPE==W25Q256)        //SPI FLASH为W25Q256
 800f6b2:	4b1d      	ldr	r3, [pc, #116]	; (800f728 <W25QXX_Init+0x8c>)
 800f6b4:	881b      	ldrh	r3, [r3, #0]
 800f6b6:	f64e 7218 	movw	r2, #61208	; 0xef18
 800f6ba:	4293      	cmp	r3, r2
 800f6bc:	d12f      	bne.n	800f71e <W25QXX_Init+0x82>
    {
        temp=W25QXX_ReadSR(3);      //读取状态寄存器3，判断地址模式
 800f6be:	2003      	movs	r0, #3
 800f6c0:	f7ff fec0 	bl	800f444 <W25QXX_ReadSR>
 800f6c4:	4603      	mov	r3, r0
 800f6c6:	71fb      	strb	r3, [r7, #7]
        if((temp&0X01)==0)			//如果不是4字节地址模式,则进入4字节地址模式
 800f6c8:	79fb      	ldrb	r3, [r7, #7]
 800f6ca:	f003 0301 	and.w	r3, r3, #1
 800f6ce:	2b00      	cmp	r3, #0
 800f6d0:	d10e      	bne.n	800f6f0 <W25QXX_Init+0x54>
		{
			W25QXX_Write_Enable();	//写使能
 800f6d2:	f7ff ff7f 	bl	800f5d4 <W25QXX_Write_Enable>
			QSPI_Send_CMD(W25X_Enable4ByteAddr,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_NONE);//QPI,使能4字节地址指令,地址为0,无数据_8位地址_无地址_4线传输指令,无空周期,0个字节数据
 800f6d6:	2300      	movs	r3, #0
 800f6d8:	9302      	str	r3, [sp, #8]
 800f6da:	2300      	movs	r3, #0
 800f6dc:	9301      	str	r3, [sp, #4]
 800f6de:	2300      	movs	r3, #0
 800f6e0:	9300      	str	r3, [sp, #0]
 800f6e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f6e6:	2200      	movs	r2, #0
 800f6e8:	2100      	movs	r1, #0
 800f6ea:	20b7      	movs	r0, #183	; 0xb7
 800f6ec:	f7ff fe46 	bl	800f37c <QSPI_Send_CMD>
		}
		W25QXX_Write_Enable();		//写使能
 800f6f0:	f7ff ff70 	bl	800f5d4 <W25QXX_Write_Enable>
		QSPI_Send_CMD(W25X_SetReadParam,0,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE,QSPI_ADDRESS_8_BITS,QSPI_DATA_4_LINES); 		//QPI,设置读参数指令,地址为0,4线传数据_8位地址_无地址_4线传输指令,无空周期,1个字节数据
 800f6f4:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800f6f8:	9302      	str	r3, [sp, #8]
 800f6fa:	2300      	movs	r3, #0
 800f6fc:	9301      	str	r3, [sp, #4]
 800f6fe:	2300      	movs	r3, #0
 800f700:	9300      	str	r3, [sp, #0]
 800f702:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f706:	2200      	movs	r2, #0
 800f708:	2100      	movs	r1, #0
 800f70a:	20c0      	movs	r0, #192	; 0xc0
 800f70c:	f7ff fe36 	bl	800f37c <QSPI_Send_CMD>
		temp=3<<4;					//设置P4&P5=11,8个dummy clocks,104M
 800f710:	2330      	movs	r3, #48	; 0x30
 800f712:	71fb      	strb	r3, [r7, #7]
		QSPI_Transmit(&temp,1);		//发送1个字节
 800f714:	1dfb      	adds	r3, r7, #7
 800f716:	2101      	movs	r1, #1
 800f718:	4618      	mov	r0, r3
 800f71a:	f7ff fe77 	bl	800f40c <QSPI_Transmit>
    }
}
 800f71e:	bf00      	nop
 800f720:	3708      	adds	r7, #8
 800f722:	46bd      	mov	sp, r7
 800f724:	bd80      	pop	{r7, pc}
 800f726:	bf00      	nop
 800f728:	24000018 	.word	0x24000018

0800f72c <SDRAM_SendCommand>:




static int SDRAM_SendCommand(uint32_t CommandMode, uint32_t Bank, uint32_t RefreshNum, uint32_t RegVal)
{
 800f72c:	b580      	push	{r7, lr}
 800f72e:	b08a      	sub	sp, #40	; 0x28
 800f730:	af00      	add	r7, sp, #0
 800f732:	60f8      	str	r0, [r7, #12]
 800f734:	60b9      	str	r1, [r7, #8]
 800f736:	607a      	str	r2, [r7, #4]
 800f738:	603b      	str	r3, [r7, #0]
    uint32_t CommandTarget;
    FMC_SDRAM_CommandTypeDef Command;

    if (Bank == 1) {
 800f73a:	68bb      	ldr	r3, [r7, #8]
 800f73c:	2b01      	cmp	r3, #1
 800f73e:	d102      	bne.n	800f746 <SDRAM_SendCommand+0x1a>
        CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1;
 800f740:	2310      	movs	r3, #16
 800f742:	627b      	str	r3, [r7, #36]	; 0x24
 800f744:	e004      	b.n	800f750 <SDRAM_SendCommand+0x24>
    } else if (Bank == 2) {
 800f746:	68bb      	ldr	r3, [r7, #8]
 800f748:	2b02      	cmp	r3, #2
 800f74a:	d101      	bne.n	800f750 <SDRAM_SendCommand+0x24>
        CommandTarget = FMC_SDRAM_CMD_TARGET_BANK2;
 800f74c:	2308      	movs	r3, #8
 800f74e:	627b      	str	r3, [r7, #36]	; 0x24
    }

    Command.CommandMode = CommandMode;
 800f750:	68fb      	ldr	r3, [r7, #12]
 800f752:	617b      	str	r3, [r7, #20]
    Command.CommandTarget = CommandTarget;
 800f754:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f756:	61bb      	str	r3, [r7, #24]
    Command.AutoRefreshNumber = RefreshNum;
 800f758:	687b      	ldr	r3, [r7, #4]
 800f75a:	61fb      	str	r3, [r7, #28]
    Command.ModeRegisterDefinition = RegVal;
 800f75c:	683b      	ldr	r3, [r7, #0]
 800f75e:	623b      	str	r3, [r7, #32]

    if (HAL_SDRAM_SendCommand(&hsdram1, &Command, 0x1000) != HAL_OK) {
 800f760:	f107 0314 	add.w	r3, r7, #20
 800f764:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800f768:	4619      	mov	r1, r3
 800f76a:	4807      	ldr	r0, [pc, #28]	; (800f788 <SDRAM_SendCommand+0x5c>)
 800f76c:	f7f7 fb20 	bl	8006db0 <HAL_SDRAM_SendCommand>
 800f770:	4603      	mov	r3, r0
 800f772:	2b00      	cmp	r3, #0
 800f774:	d002      	beq.n	800f77c <SDRAM_SendCommand+0x50>
        return -1;
 800f776:	f04f 33ff 	mov.w	r3, #4294967295
 800f77a:	e000      	b.n	800f77e <SDRAM_SendCommand+0x52>
    }

    return 0;
 800f77c:	2300      	movs	r3, #0
}
 800f77e:	4618      	mov	r0, r3
 800f780:	3728      	adds	r7, #40	; 0x28
 800f782:	46bd      	mov	sp, r7
 800f784:	bd80      	pop	{r7, pc}
 800f786:	bf00      	nop
 800f788:	24000408 	.word	0x24000408

0800f78c <SDRAM_Init>:



void SDRAM_Init(void)
{
 800f78c:	b580      	push	{r7, lr}
 800f78e:	b082      	sub	sp, #8
 800f790:	af00      	add	r7, sp, #0
    uint32_t temp;

    /* 1. 时钟使能命令 */
    SDRAM_SendCommand(FMC_SDRAM_CMD_CLK_ENABLE, 1, 1, 0);
 800f792:	2300      	movs	r3, #0
 800f794:	2201      	movs	r2, #1
 800f796:	2101      	movs	r1, #1
 800f798:	2001      	movs	r0, #1
 800f79a:	f7ff ffc7 	bl	800f72c <SDRAM_SendCommand>

    /* 2. 延时，至少100us */
    HAL_Delay(1);
 800f79e:	2001      	movs	r0, #1
 800f7a0:	f000 fbc6 	bl	800ff30 <HAL_Delay>

    /* 3. SDRAM全部预充电命令 */
    SDRAM_SendCommand(FMC_SDRAM_CMD_PALL, 1, 1, 0);
 800f7a4:	2300      	movs	r3, #0
 800f7a6:	2201      	movs	r2, #1
 800f7a8:	2101      	movs	r1, #1
 800f7aa:	2002      	movs	r0, #2
 800f7ac:	f7ff ffbe 	bl	800f72c <SDRAM_SendCommand>

    /* 4. 自动刷新命令 */
    SDRAM_SendCommand(FMC_SDRAM_CMD_AUTOREFRESH_MODE, 1, 8, 0);
 800f7b0:	2300      	movs	r3, #0
 800f7b2:	2208      	movs	r2, #8
 800f7b4:	2101      	movs	r1, #1
 800f7b6:	2003      	movs	r0, #3
 800f7b8:	f7ff ffb8 	bl	800f72c <SDRAM_SendCommand>

    /* 5. 配置SDRAM模式寄存器 */
    temp = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1            |          //设置突发长度：1
 800f7bc:	f44f 730c 	mov.w	r3, #560	; 0x230
 800f7c0:	607b      	str	r3, [r7, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL     |          //设置突发类型：连续
                     SDRAM_MODEREG_CAS_LATENCY_3             |          //设置CL值：3
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD   |          //设置操作模式：标准
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;              //设置突发写模式：单点访问
    SDRAM_SendCommand(FMC_SDRAM_CMD_LOAD_MODE, 1, 1, temp);
 800f7c2:	687b      	ldr	r3, [r7, #4]
 800f7c4:	2201      	movs	r2, #1
 800f7c6:	2101      	movs	r1, #1
 800f7c8:	2004      	movs	r0, #4
 800f7ca:	f7ff ffaf 	bl	800f72c <SDRAM_SendCommand>
    /*
        SDRAM refresh period / Number of rows）*SDRAM时钟速度 – 20
      = 64000(64 ms) / 4096 *108MHz - 20
      = 1667.5 取值1668
    */
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, 1668);
 800f7ce:	f240 6184 	movw	r1, #1668	; 0x684
 800f7d2:	4803      	ldr	r0, [pc, #12]	; (800f7e0 <SDRAM_Init+0x54>)
 800f7d4:	f7f7 fb21 	bl	8006e1a <HAL_SDRAM_ProgramRefreshRate>
}
 800f7d8:	bf00      	nop
 800f7da:	3708      	adds	r7, #8
 800f7dc:	46bd      	mov	sp, r7
 800f7de:	bd80      	pop	{r7, pc}
 800f7e0:	24000408 	.word	0x24000408

0800f7e4 <soft_IIC_Init>:
#include "soft_IIC.h"
#include "user_delay.h"


void soft_IIC_Init(void)
{
 800f7e4:	b580      	push	{r7, lr}
 800f7e6:	af00      	add	r7, sp, #0

//	user_delay_init(400);
    iic_stop(); /* 停止总线上所有设备 */
 800f7e8:	f000 f82c 	bl	800f844 <iic_stop>
}
 800f7ec:	bf00      	nop
 800f7ee:	bd80      	pop	{r7, pc}

0800f7f0 <iic_delay>:
 * @brief       IIC延时函数,用于控制IIC读写速度
 * @param       无
 * @retval      无
 */
static void iic_delay(void)
{
 800f7f0:	b580      	push	{r7, lr}
 800f7f2:	af00      	add	r7, sp, #0
	user_delay_us(1); /* 2us的延时, 读写速度在250Khz以内 */
 800f7f4:	2001      	movs	r0, #1
 800f7f6:	f000 fb27 	bl	800fe48 <user_delay_us>
}
 800f7fa:	bf00      	nop
 800f7fc:	bd80      	pop	{r7, pc}
	...

0800f800 <iic_start>:
 * @brief       产生IIC起始信号
 * @param       无
 * @retval      无
 */
void iic_start(void)
{
 800f800:	b580      	push	{r7, lr}
 800f802:	af00      	add	r7, sp, #0
    IIC_SDA(1);
 800f804:	2201      	movs	r2, #1
 800f806:	2108      	movs	r1, #8
 800f808:	480c      	ldr	r0, [pc, #48]	; (800f83c <iic_start+0x3c>)
 800f80a:	f7f3 fccb 	bl	80031a4 <HAL_GPIO_WritePin>
    IIC_SCL(1);
 800f80e:	2201      	movs	r2, #1
 800f810:	2140      	movs	r1, #64	; 0x40
 800f812:	480b      	ldr	r0, [pc, #44]	; (800f840 <iic_start+0x40>)
 800f814:	f7f3 fcc6 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f818:	f7ff ffea 	bl	800f7f0 <iic_delay>
    IIC_SDA(0); /* START信号: 当SCL为高时, SDA从高变成低, 表示起始信号 */
 800f81c:	2200      	movs	r2, #0
 800f81e:	2108      	movs	r1, #8
 800f820:	4806      	ldr	r0, [pc, #24]	; (800f83c <iic_start+0x3c>)
 800f822:	f7f3 fcbf 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f826:	f7ff ffe3 	bl	800f7f0 <iic_delay>
    IIC_SCL(0); /* 钳住I2C总线，准备发送或接收数据 */
 800f82a:	2200      	movs	r2, #0
 800f82c:	2140      	movs	r1, #64	; 0x40
 800f82e:	4804      	ldr	r0, [pc, #16]	; (800f840 <iic_start+0x40>)
 800f830:	f7f3 fcb8 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f834:	f7ff ffdc 	bl	800f7f0 <iic_delay>
}
 800f838:	bf00      	nop
 800f83a:	bd80      	pop	{r7, pc}
 800f83c:	58022000 	.word	0x58022000
 800f840:	58021c00 	.word	0x58021c00

0800f844 <iic_stop>:
 * @brief       产生IIC停止信号
 * @param       无
 * @retval      无
 */
void iic_stop(void)
{
 800f844:	b580      	push	{r7, lr}
 800f846:	af00      	add	r7, sp, #0
    IIC_SDA(0); /* STOP信号: 当SCL为高时, SDA从低变成高, 表示停止信号 */
 800f848:	2200      	movs	r2, #0
 800f84a:	2108      	movs	r1, #8
 800f84c:	480a      	ldr	r0, [pc, #40]	; (800f878 <iic_stop+0x34>)
 800f84e:	f7f3 fca9 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f852:	f7ff ffcd 	bl	800f7f0 <iic_delay>
    IIC_SCL(1);
 800f856:	2201      	movs	r2, #1
 800f858:	2140      	movs	r1, #64	; 0x40
 800f85a:	4808      	ldr	r0, [pc, #32]	; (800f87c <iic_stop+0x38>)
 800f85c:	f7f3 fca2 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f860:	f7ff ffc6 	bl	800f7f0 <iic_delay>
    IIC_SDA(1); /* 发送I2C总线结束信号 */
 800f864:	2201      	movs	r2, #1
 800f866:	2108      	movs	r1, #8
 800f868:	4803      	ldr	r0, [pc, #12]	; (800f878 <iic_stop+0x34>)
 800f86a:	f7f3 fc9b 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f86e:	f7ff ffbf 	bl	800f7f0 <iic_delay>
}
 800f872:	bf00      	nop
 800f874:	bd80      	pop	{r7, pc}
 800f876:	bf00      	nop
 800f878:	58022000 	.word	0x58022000
 800f87c:	58021c00 	.word	0x58021c00

0800f880 <iic_wait_ack>:
 * @param       无
 * @retval      1，接收应答失败
 *              0，接收应答成功
 */
uint8_t iic_wait_ack(void)
{
 800f880:	b580      	push	{r7, lr}
 800f882:	b082      	sub	sp, #8
 800f884:	af00      	add	r7, sp, #0
    uint8_t waittime = 0;
 800f886:	2300      	movs	r3, #0
 800f888:	71fb      	strb	r3, [r7, #7]
    uint8_t rack = 0;
 800f88a:	2300      	movs	r3, #0
 800f88c:	71bb      	strb	r3, [r7, #6]

    IIC_SDA(1); /* 主机释放SDA线(此时外部器件可以拉低SDA线) */
 800f88e:	2201      	movs	r2, #1
 800f890:	2108      	movs	r1, #8
 800f892:	4815      	ldr	r0, [pc, #84]	; (800f8e8 <iic_wait_ack+0x68>)
 800f894:	f7f3 fc86 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f898:	f7ff ffaa 	bl	800f7f0 <iic_delay>
    IIC_SCL(1); /* SCL=1, 此时从机可以返回ACK */
 800f89c:	2201      	movs	r2, #1
 800f89e:	2140      	movs	r1, #64	; 0x40
 800f8a0:	4812      	ldr	r0, [pc, #72]	; (800f8ec <iic_wait_ack+0x6c>)
 800f8a2:	f7f3 fc7f 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f8a6:	f7ff ffa3 	bl	800f7f0 <iic_delay>

    while (IIC_READ_SDA) /* 等待应答 */
 800f8aa:	e00a      	b.n	800f8c2 <iic_wait_ack+0x42>
    {
        waittime++;
 800f8ac:	79fb      	ldrb	r3, [r7, #7]
 800f8ae:	3301      	adds	r3, #1
 800f8b0:	71fb      	strb	r3, [r7, #7]

        if (waittime > 250)
 800f8b2:	79fb      	ldrb	r3, [r7, #7]
 800f8b4:	2bfa      	cmp	r3, #250	; 0xfa
 800f8b6:	d904      	bls.n	800f8c2 <iic_wait_ack+0x42>
        {
            iic_stop();
 800f8b8:	f7ff ffc4 	bl	800f844 <iic_stop>
            rack = 1;
 800f8bc:	2301      	movs	r3, #1
 800f8be:	71bb      	strb	r3, [r7, #6]
            break;
 800f8c0:	e006      	b.n	800f8d0 <iic_wait_ack+0x50>
    while (IIC_READ_SDA) /* 等待应答 */
 800f8c2:	2108      	movs	r1, #8
 800f8c4:	4808      	ldr	r0, [pc, #32]	; (800f8e8 <iic_wait_ack+0x68>)
 800f8c6:	f7f3 fc55 	bl	8003174 <HAL_GPIO_ReadPin>
 800f8ca:	4603      	mov	r3, r0
 800f8cc:	2b00      	cmp	r3, #0
 800f8ce:	d1ed      	bne.n	800f8ac <iic_wait_ack+0x2c>
        }
    }

    IIC_SCL(0); /* SCL=0, 结束ACK检查 */
 800f8d0:	2200      	movs	r2, #0
 800f8d2:	2140      	movs	r1, #64	; 0x40
 800f8d4:	4805      	ldr	r0, [pc, #20]	; (800f8ec <iic_wait_ack+0x6c>)
 800f8d6:	f7f3 fc65 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f8da:	f7ff ff89 	bl	800f7f0 <iic_delay>
    return rack;
 800f8de:	79bb      	ldrb	r3, [r7, #6]
}
 800f8e0:	4618      	mov	r0, r3
 800f8e2:	3708      	adds	r7, #8
 800f8e4:	46bd      	mov	sp, r7
 800f8e6:	bd80      	pop	{r7, pc}
 800f8e8:	58022000 	.word	0x58022000
 800f8ec:	58021c00 	.word	0x58021c00

0800f8f0 <iic_ack>:
 * @brief       产生ACK应答
 * @param       无
 * @retval      无
 */
void iic_ack(void)
{
 800f8f0:	b580      	push	{r7, lr}
 800f8f2:	af00      	add	r7, sp, #0
    IIC_SDA(0); /* SCL 0 -> 1 时 SDA = 0,表示应答 */
 800f8f4:	2200      	movs	r2, #0
 800f8f6:	2108      	movs	r1, #8
 800f8f8:	480d      	ldr	r0, [pc, #52]	; (800f930 <iic_ack+0x40>)
 800f8fa:	f7f3 fc53 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f8fe:	f7ff ff77 	bl	800f7f0 <iic_delay>
    IIC_SCL(1); /* 产生一个时钟 */
 800f902:	2201      	movs	r2, #1
 800f904:	2140      	movs	r1, #64	; 0x40
 800f906:	480b      	ldr	r0, [pc, #44]	; (800f934 <iic_ack+0x44>)
 800f908:	f7f3 fc4c 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f90c:	f7ff ff70 	bl	800f7f0 <iic_delay>
    IIC_SCL(0);
 800f910:	2200      	movs	r2, #0
 800f912:	2140      	movs	r1, #64	; 0x40
 800f914:	4807      	ldr	r0, [pc, #28]	; (800f934 <iic_ack+0x44>)
 800f916:	f7f3 fc45 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f91a:	f7ff ff69 	bl	800f7f0 <iic_delay>
    IIC_SDA(1); /* 主机释放SDA线 */
 800f91e:	2201      	movs	r2, #1
 800f920:	2108      	movs	r1, #8
 800f922:	4803      	ldr	r0, [pc, #12]	; (800f930 <iic_ack+0x40>)
 800f924:	f7f3 fc3e 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f928:	f7ff ff62 	bl	800f7f0 <iic_delay>
}
 800f92c:	bf00      	nop
 800f92e:	bd80      	pop	{r7, pc}
 800f930:	58022000 	.word	0x58022000
 800f934:	58021c00 	.word	0x58021c00

0800f938 <iic_nack>:
 * @brief       不产生ACK应答
 * @param       无
 * @retval      无
 */
void iic_nack(void)
{
 800f938:	b580      	push	{r7, lr}
 800f93a:	af00      	add	r7, sp, #0
    IIC_SDA(1); /* SCL 0 -> 1  时 SDA = 1,表示不应答 */
 800f93c:	2201      	movs	r2, #1
 800f93e:	2108      	movs	r1, #8
 800f940:	480a      	ldr	r0, [pc, #40]	; (800f96c <iic_nack+0x34>)
 800f942:	f7f3 fc2f 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f946:	f7ff ff53 	bl	800f7f0 <iic_delay>
    IIC_SCL(1); /* 产生一个时钟 */
 800f94a:	2201      	movs	r2, #1
 800f94c:	2140      	movs	r1, #64	; 0x40
 800f94e:	4808      	ldr	r0, [pc, #32]	; (800f970 <iic_nack+0x38>)
 800f950:	f7f3 fc28 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f954:	f7ff ff4c 	bl	800f7f0 <iic_delay>
    IIC_SCL(0);
 800f958:	2200      	movs	r2, #0
 800f95a:	2140      	movs	r1, #64	; 0x40
 800f95c:	4804      	ldr	r0, [pc, #16]	; (800f970 <iic_nack+0x38>)
 800f95e:	f7f3 fc21 	bl	80031a4 <HAL_GPIO_WritePin>
    iic_delay();
 800f962:	f7ff ff45 	bl	800f7f0 <iic_delay>
}
 800f966:	bf00      	nop
 800f968:	bd80      	pop	{r7, pc}
 800f96a:	bf00      	nop
 800f96c:	58022000 	.word	0x58022000
 800f970:	58021c00 	.word	0x58021c00

0800f974 <iic_send_byte>:
 * @brief       IIC发送一个字节
 * @param       data: 要发送的数据
 * @retval      无
 */
void iic_send_byte(uint8_t data)
{
 800f974:	b580      	push	{r7, lr}
 800f976:	b084      	sub	sp, #16
 800f978:	af00      	add	r7, sp, #0
 800f97a:	4603      	mov	r3, r0
 800f97c:	71fb      	strb	r3, [r7, #7]
    uint8_t t;

    for (t = 0; t < 8; t++)
 800f97e:	2300      	movs	r3, #0
 800f980:	73fb      	strb	r3, [r7, #15]
 800f982:	e022      	b.n	800f9ca <iic_send_byte+0x56>
    {
        IIC_SDA((data & 0x80) >> 7); /* 高位先发送 */
 800f984:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800f988:	2b00      	cmp	r3, #0
 800f98a:	da05      	bge.n	800f998 <iic_send_byte+0x24>
 800f98c:	2201      	movs	r2, #1
 800f98e:	2108      	movs	r1, #8
 800f990:	4814      	ldr	r0, [pc, #80]	; (800f9e4 <iic_send_byte+0x70>)
 800f992:	f7f3 fc07 	bl	80031a4 <HAL_GPIO_WritePin>
 800f996:	e004      	b.n	800f9a2 <iic_send_byte+0x2e>
 800f998:	2200      	movs	r2, #0
 800f99a:	2108      	movs	r1, #8
 800f99c:	4811      	ldr	r0, [pc, #68]	; (800f9e4 <iic_send_byte+0x70>)
 800f99e:	f7f3 fc01 	bl	80031a4 <HAL_GPIO_WritePin>
        iic_delay();
 800f9a2:	f7ff ff25 	bl	800f7f0 <iic_delay>
        IIC_SCL(1);
 800f9a6:	2201      	movs	r2, #1
 800f9a8:	2140      	movs	r1, #64	; 0x40
 800f9aa:	480f      	ldr	r0, [pc, #60]	; (800f9e8 <iic_send_byte+0x74>)
 800f9ac:	f7f3 fbfa 	bl	80031a4 <HAL_GPIO_WritePin>
        iic_delay();
 800f9b0:	f7ff ff1e 	bl	800f7f0 <iic_delay>
        IIC_SCL(0);
 800f9b4:	2200      	movs	r2, #0
 800f9b6:	2140      	movs	r1, #64	; 0x40
 800f9b8:	480b      	ldr	r0, [pc, #44]	; (800f9e8 <iic_send_byte+0x74>)
 800f9ba:	f7f3 fbf3 	bl	80031a4 <HAL_GPIO_WritePin>
        data <<= 1; /* 左移1位,用于下一次发送 */
 800f9be:	79fb      	ldrb	r3, [r7, #7]
 800f9c0:	005b      	lsls	r3, r3, #1
 800f9c2:	71fb      	strb	r3, [r7, #7]
    for (t = 0; t < 8; t++)
 800f9c4:	7bfb      	ldrb	r3, [r7, #15]
 800f9c6:	3301      	adds	r3, #1
 800f9c8:	73fb      	strb	r3, [r7, #15]
 800f9ca:	7bfb      	ldrb	r3, [r7, #15]
 800f9cc:	2b07      	cmp	r3, #7
 800f9ce:	d9d9      	bls.n	800f984 <iic_send_byte+0x10>
    }
    IIC_SDA(1); /* 发送完成, 主机释放SDA线 */
 800f9d0:	2201      	movs	r2, #1
 800f9d2:	2108      	movs	r1, #8
 800f9d4:	4803      	ldr	r0, [pc, #12]	; (800f9e4 <iic_send_byte+0x70>)
 800f9d6:	f7f3 fbe5 	bl	80031a4 <HAL_GPIO_WritePin>
}
 800f9da:	bf00      	nop
 800f9dc:	3710      	adds	r7, #16
 800f9de:	46bd      	mov	sp, r7
 800f9e0:	bd80      	pop	{r7, pc}
 800f9e2:	bf00      	nop
 800f9e4:	58022000 	.word	0x58022000
 800f9e8:	58021c00 	.word	0x58021c00

0800f9ec <iic_read_byte>:
 * @brief       IIC读取一个字节
 * @param       ack:  ack=1时，发送ack; ack=0时，发送nack
 * @retval      接收到的数据
 */
uint8_t iic_read_byte(uint8_t ack)
{
 800f9ec:	b580      	push	{r7, lr}
 800f9ee:	b084      	sub	sp, #16
 800f9f0:	af00      	add	r7, sp, #0
 800f9f2:	4603      	mov	r3, r0
 800f9f4:	71fb      	strb	r3, [r7, #7]
    uint8_t i, receive = 0;
 800f9f6:	2300      	movs	r3, #0
 800f9f8:	73bb      	strb	r3, [r7, #14]

    for (i = 0; i < 8; i++) /* 接收1个字节数据 */
 800f9fa:	2300      	movs	r3, #0
 800f9fc:	73fb      	strb	r3, [r7, #15]
 800f9fe:	e01d      	b.n	800fa3c <iic_read_byte+0x50>
    {
        receive <<= 1; /* 高位先输出,所以先收到的数据位要左移 */
 800fa00:	7bbb      	ldrb	r3, [r7, #14]
 800fa02:	005b      	lsls	r3, r3, #1
 800fa04:	73bb      	strb	r3, [r7, #14]
        IIC_SCL(1);
 800fa06:	2201      	movs	r2, #1
 800fa08:	2140      	movs	r1, #64	; 0x40
 800fa0a:	4814      	ldr	r0, [pc, #80]	; (800fa5c <iic_read_byte+0x70>)
 800fa0c:	f7f3 fbca 	bl	80031a4 <HAL_GPIO_WritePin>
        iic_delay();
 800fa10:	f7ff feee 	bl	800f7f0 <iic_delay>

        if (IIC_READ_SDA)
 800fa14:	2108      	movs	r1, #8
 800fa16:	4812      	ldr	r0, [pc, #72]	; (800fa60 <iic_read_byte+0x74>)
 800fa18:	f7f3 fbac 	bl	8003174 <HAL_GPIO_ReadPin>
 800fa1c:	4603      	mov	r3, r0
 800fa1e:	2b00      	cmp	r3, #0
 800fa20:	d002      	beq.n	800fa28 <iic_read_byte+0x3c>
        {
            receive++;
 800fa22:	7bbb      	ldrb	r3, [r7, #14]
 800fa24:	3301      	adds	r3, #1
 800fa26:	73bb      	strb	r3, [r7, #14]
        }

        IIC_SCL(0);
 800fa28:	2200      	movs	r2, #0
 800fa2a:	2140      	movs	r1, #64	; 0x40
 800fa2c:	480b      	ldr	r0, [pc, #44]	; (800fa5c <iic_read_byte+0x70>)
 800fa2e:	f7f3 fbb9 	bl	80031a4 <HAL_GPIO_WritePin>
        iic_delay();
 800fa32:	f7ff fedd 	bl	800f7f0 <iic_delay>
    for (i = 0; i < 8; i++) /* 接收1个字节数据 */
 800fa36:	7bfb      	ldrb	r3, [r7, #15]
 800fa38:	3301      	adds	r3, #1
 800fa3a:	73fb      	strb	r3, [r7, #15]
 800fa3c:	7bfb      	ldrb	r3, [r7, #15]
 800fa3e:	2b07      	cmp	r3, #7
 800fa40:	d9de      	bls.n	800fa00 <iic_read_byte+0x14>
    }

    if (!ack)
 800fa42:	79fb      	ldrb	r3, [r7, #7]
 800fa44:	2b00      	cmp	r3, #0
 800fa46:	d102      	bne.n	800fa4e <iic_read_byte+0x62>
    {
        iic_nack(); /* 发送nACK */
 800fa48:	f7ff ff76 	bl	800f938 <iic_nack>
 800fa4c:	e001      	b.n	800fa52 <iic_read_byte+0x66>
    }
    else
    {
        iic_ack(); /* 发送ACK */
 800fa4e:	f7ff ff4f 	bl	800f8f0 <iic_ack>
    }

    return receive;
 800fa52:	7bbb      	ldrb	r3, [r7, #14]
}
 800fa54:	4618      	mov	r0, r3
 800fa56:	3710      	adds	r7, #16
 800fa58:	46bd      	mov	sp, r7
 800fa5a:	bd80      	pop	{r7, pc}
 800fa5c:	58021c00 	.word	0x58021c00
 800fa60:	58022000 	.word	0x58022000

0800fa64 <touch_hw_reset>:
 * @brief       RGB LCD模块触摸硬件复位
 * @param       addr: 复位后使用的IIC通讯地址
 * @retval      无
 */
static void touch_hw_reset(uint8_t addr)
{
 800fa64:	b580      	push	{r7, lr}
 800fa66:	b088      	sub	sp, #32
 800fa68:	af00      	add	r7, sp, #0
 800fa6a:	4603      	mov	r3, r0
 800fa6c:	71fb      	strb	r3, [r7, #7]
    GPIO_InitTypeDef gpio_init_struct = {0};
 800fa6e:	f107 030c 	add.w	r3, r7, #12
 800fa72:	2200      	movs	r2, #0
 800fa74:	601a      	str	r2, [r3, #0]
 800fa76:	605a      	str	r2, [r3, #4]
 800fa78:	609a      	str	r2, [r3, #8]
 800fa7a:	60da      	str	r2, [r3, #12]
 800fa7c:	611a      	str	r2, [r3, #16]

    /* 配置PEN引脚为输出 */
    gpio_init_struct.Pin    = TP_PEN_Pin;
 800fa7e:	2380      	movs	r3, #128	; 0x80
 800fa80:	60fb      	str	r3, [r7, #12]
    gpio_init_struct.Mode   = GPIO_MODE_OUTPUT_PP;
 800fa82:	2301      	movs	r3, #1
 800fa84:	613b      	str	r3, [r7, #16]
    gpio_init_struct.Pull   = GPIO_PULLUP;
 800fa86:	2301      	movs	r3, #1
 800fa88:	617b      	str	r3, [r7, #20]
    gpio_init_struct.Speed  = GPIO_SPEED_FREQ_HIGH;
 800fa8a:	2302      	movs	r3, #2
 800fa8c:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(TP_PEN_GPIO_Port, &gpio_init_struct);
 800fa8e:	f107 030c 	add.w	r3, r7, #12
 800fa92:	4619      	mov	r1, r3
 800fa94:	482b      	ldr	r0, [pc, #172]	; (800fb44 <touch_hw_reset+0xe0>)
 800fa96:	f7f3 f9bd 	bl	8002e14 <HAL_GPIO_Init>

    switch (addr)
 800fa9a:	79fb      	ldrb	r3, [r7, #7]
 800fa9c:	2b28      	cmp	r3, #40	; 0x28
 800fa9e:	d002      	beq.n	800faa6 <touch_hw_reset+0x42>
 800faa0:	2bba      	cmp	r3, #186	; 0xba
 800faa2:	d01d      	beq.n	800fae0 <touch_hw_reset+0x7c>
            HAL_Delay(10);
            break;
       }
        default:
        {
            break;
 800faa4:	e034      	b.n	800fb10 <touch_hw_reset+0xac>
             HAL_GPIO_WritePin(TP_CS_GPIO_Port, TP_CS_Pin, GPIO_PIN_RESET);
 800faa6:	2200      	movs	r2, #0
 800faa8:	f44f 7180 	mov.w	r1, #256	; 0x100
 800faac:	4826      	ldr	r0, [pc, #152]	; (800fb48 <touch_hw_reset+0xe4>)
 800faae:	f7f3 fb79 	bl	80031a4 <HAL_GPIO_WritePin>
             HAL_GPIO_WritePin(TP_PEN_GPIO_Port, TP_PEN_Pin, GPIO_PIN_RESET);
 800fab2:	2200      	movs	r2, #0
 800fab4:	2180      	movs	r1, #128	; 0x80
 800fab6:	4823      	ldr	r0, [pc, #140]	; (800fb44 <touch_hw_reset+0xe0>)
 800fab8:	f7f3 fb74 	bl	80031a4 <HAL_GPIO_WritePin>
             HAL_GPIO_WritePin(TP_PEN_GPIO_Port, TP_PEN_Pin, GPIO_PIN_SET);
 800fabc:	2201      	movs	r2, #1
 800fabe:	2180      	movs	r1, #128	; 0x80
 800fac0:	4820      	ldr	r0, [pc, #128]	; (800fb44 <touch_hw_reset+0xe0>)
 800fac2:	f7f3 fb6f 	bl	80031a4 <HAL_GPIO_WritePin>
             HAL_Delay(1);
 800fac6:	2001      	movs	r0, #1
 800fac8:	f000 fa32 	bl	800ff30 <HAL_Delay>
             HAL_GPIO_WritePin(TP_CS_GPIO_Port, TP_CS_Pin, GPIO_PIN_SET);
 800facc:	2201      	movs	r2, #1
 800face:	f44f 7180 	mov.w	r1, #256	; 0x100
 800fad2:	481d      	ldr	r0, [pc, #116]	; (800fb48 <touch_hw_reset+0xe4>)
 800fad4:	f7f3 fb66 	bl	80031a4 <HAL_GPIO_WritePin>
             HAL_Delay(10);
 800fad8:	200a      	movs	r0, #10
 800fada:	f000 fa29 	bl	800ff30 <HAL_Delay>
            break;
 800fade:	e017      	b.n	800fb10 <touch_hw_reset+0xac>
            HAL_GPIO_WritePin(TP_CS_GPIO_Port, TP_CS_Pin, GPIO_PIN_RESET);
 800fae0:	2200      	movs	r2, #0
 800fae2:	f44f 7180 	mov.w	r1, #256	; 0x100
 800fae6:	4818      	ldr	r0, [pc, #96]	; (800fb48 <touch_hw_reset+0xe4>)
 800fae8:	f7f3 fb5c 	bl	80031a4 <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(TP_PEN_GPIO_Port, TP_PEN_Pin, GPIO_PIN_RESET);
 800faec:	2200      	movs	r2, #0
 800faee:	2180      	movs	r1, #128	; 0x80
 800faf0:	4814      	ldr	r0, [pc, #80]	; (800fb44 <touch_hw_reset+0xe0>)
 800faf2:	f7f3 fb57 	bl	80031a4 <HAL_GPIO_WritePin>
            HAL_Delay(1);
 800faf6:	2001      	movs	r0, #1
 800faf8:	f000 fa1a 	bl	800ff30 <HAL_Delay>
            HAL_GPIO_WritePin(TP_CS_GPIO_Port, TP_CS_Pin, GPIO_PIN_SET);
 800fafc:	2201      	movs	r2, #1
 800fafe:	f44f 7180 	mov.w	r1, #256	; 0x100
 800fb02:	4811      	ldr	r0, [pc, #68]	; (800fb48 <touch_hw_reset+0xe4>)
 800fb04:	f7f3 fb4e 	bl	80031a4 <HAL_GPIO_WritePin>
            HAL_Delay(10);
 800fb08:	200a      	movs	r0, #10
 800fb0a:	f000 fa11 	bl	800ff30 <HAL_Delay>
            break;
 800fb0e:	bf00      	nop
        }
    }
    /* 重新配置PEN引脚为输入 */
    gpio_init_struct.Pin    = TP_PEN_Pin;
 800fb10:	2380      	movs	r3, #128	; 0x80
 800fb12:	60fb      	str	r3, [r7, #12]
    gpio_init_struct.Mode   = GPIO_MODE_INPUT;
 800fb14:	2300      	movs	r3, #0
 800fb16:	613b      	str	r3, [r7, #16]
    gpio_init_struct.Pull   = GPIO_NOPULL;
 800fb18:	2300      	movs	r3, #0
 800fb1a:	617b      	str	r3, [r7, #20]
    gpio_init_struct.Speed  = GPIO_SPEED_FREQ_HIGH;
 800fb1c:	2302      	movs	r3, #2
 800fb1e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(TP_PEN_GPIO_Port, &gpio_init_struct);
 800fb20:	f107 030c 	add.w	r3, r7, #12
 800fb24:	4619      	mov	r1, r3
 800fb26:	4807      	ldr	r0, [pc, #28]	; (800fb44 <touch_hw_reset+0xe0>)
 800fb28:	f7f3 f974 	bl	8002e14 <HAL_GPIO_Init>

    touch_iic_addr = addr>>1;
 800fb2c:	79fb      	ldrb	r3, [r7, #7]
 800fb2e:	085b      	lsrs	r3, r3, #1
 800fb30:	b2da      	uxtb	r2, r3
 800fb32:	4b06      	ldr	r3, [pc, #24]	; (800fb4c <touch_hw_reset+0xe8>)
 800fb34:	701a      	strb	r2, [r3, #0]
    HAL_Delay(100);
 800fb36:	2064      	movs	r0, #100	; 0x64
 800fb38:	f000 f9fa 	bl	800ff30 <HAL_Delay>
}
 800fb3c:	bf00      	nop
 800fb3e:	3720      	adds	r7, #32
 800fb40:	46bd      	mov	sp, r7
 800fb42:	bd80      	pop	{r7, pc}
 800fb44:	58021c00 	.word	0x58021c00
 800fb48:	58022000 	.word	0x58022000
 800fb4c:	2400164d 	.word	0x2400164d

0800fb50 <touch_write_reg>:
 *              len: 待写入数据的长度
 * @retval      1  : 写ATK-RGBLCD模块触摸寄存器成功
 *              0: 写ATK-RGBLCD模块触摸寄存器失败
 */
static uint8_t touch_write_reg(uint16_t reg, uint8_t *buf, uint8_t len)
{
 800fb50:	b580      	push	{r7, lr}
 800fb52:	b084      	sub	sp, #16
 800fb54:	af00      	add	r7, sp, #0
 800fb56:	4603      	mov	r3, r0
 800fb58:	6039      	str	r1, [r7, #0]
 800fb5a:	80fb      	strh	r3, [r7, #6]
 800fb5c:	4613      	mov	r3, r2
 800fb5e:	717b      	strb	r3, [r7, #5]
    uint8_t buf_index;
    uint8_t ret;

    iic_start();
 800fb60:	f7ff fe4e 	bl	800f800 <iic_start>
    iic_send_byte((touch_iic_addr << 1) | 0);
 800fb64:	4b1f      	ldr	r3, [pc, #124]	; (800fbe4 <touch_write_reg+0x94>)
 800fb66:	781b      	ldrb	r3, [r3, #0]
 800fb68:	005b      	lsls	r3, r3, #1
 800fb6a:	b2db      	uxtb	r3, r3
 800fb6c:	4618      	mov	r0, r3
 800fb6e:	f7ff ff01 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fb72:	f7ff fe85 	bl	800f880 <iic_wait_ack>
    iic_send_byte((uint8_t)(reg >> 8) & 0xFF);
 800fb76:	88fb      	ldrh	r3, [r7, #6]
 800fb78:	0a1b      	lsrs	r3, r3, #8
 800fb7a:	b29b      	uxth	r3, r3
 800fb7c:	b2db      	uxtb	r3, r3
 800fb7e:	4618      	mov	r0, r3
 800fb80:	f7ff fef8 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fb84:	f7ff fe7c 	bl	800f880 <iic_wait_ack>
    iic_send_byte((uint8_t)reg & 0xFF);
 800fb88:	88fb      	ldrh	r3, [r7, #6]
 800fb8a:	b2db      	uxtb	r3, r3
 800fb8c:	4618      	mov	r0, r3
 800fb8e:	f7ff fef1 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fb92:	f7ff fe75 	bl	800f880 <iic_wait_ack>

    for (buf_index=0; buf_index<len; buf_index++)
 800fb96:	2300      	movs	r3, #0
 800fb98:	73fb      	strb	r3, [r7, #15]
 800fb9a:	e010      	b.n	800fbbe <touch_write_reg+0x6e>
    {
        iic_send_byte(buf[buf_index]);
 800fb9c:	7bfb      	ldrb	r3, [r7, #15]
 800fb9e:	683a      	ldr	r2, [r7, #0]
 800fba0:	4413      	add	r3, r2
 800fba2:	781b      	ldrb	r3, [r3, #0]
 800fba4:	4618      	mov	r0, r3
 800fba6:	f7ff fee5 	bl	800f974 <iic_send_byte>
        ret = iic_wait_ack();
 800fbaa:	f7ff fe69 	bl	800f880 <iic_wait_ack>
 800fbae:	4603      	mov	r3, r0
 800fbb0:	73bb      	strb	r3, [r7, #14]
        if (ret != 0)
 800fbb2:	7bbb      	ldrb	r3, [r7, #14]
 800fbb4:	2b00      	cmp	r3, #0
 800fbb6:	d107      	bne.n	800fbc8 <touch_write_reg+0x78>
    for (buf_index=0; buf_index<len; buf_index++)
 800fbb8:	7bfb      	ldrb	r3, [r7, #15]
 800fbba:	3301      	adds	r3, #1
 800fbbc:	73fb      	strb	r3, [r7, #15]
 800fbbe:	7bfa      	ldrb	r2, [r7, #15]
 800fbc0:	797b      	ldrb	r3, [r7, #5]
 800fbc2:	429a      	cmp	r2, r3
 800fbc4:	d3ea      	bcc.n	800fb9c <touch_write_reg+0x4c>
 800fbc6:	e000      	b.n	800fbca <touch_write_reg+0x7a>
        {
            break;
 800fbc8:	bf00      	nop
        }
    }

    iic_stop();
 800fbca:	f7ff fe3b 	bl	800f844 <iic_stop>

    if (ret != 0)
 800fbce:	7bbb      	ldrb	r3, [r7, #14]
 800fbd0:	2b00      	cmp	r3, #0
 800fbd2:	d001      	beq.n	800fbd8 <touch_write_reg+0x88>
    {
        return 0;
 800fbd4:	2300      	movs	r3, #0
 800fbd6:	e000      	b.n	800fbda <touch_write_reg+0x8a>
    }

    return 1;
 800fbd8:	2301      	movs	r3, #1
}
 800fbda:	4618      	mov	r0, r3
 800fbdc:	3710      	adds	r7, #16
 800fbde:	46bd      	mov	sp, r7
 800fbe0:	bd80      	pop	{r7, pc}
 800fbe2:	bf00      	nop
 800fbe4:	2400164d 	.word	0x2400164d

0800fbe8 <touch_read_reg>:
 *              buf: 读取的数据
 *              len: 待读取数据的长度
 * @retval      无
 */
static void touch_read_reg(uint16_t reg, uint8_t *buf, uint8_t len)
{
 800fbe8:	b590      	push	{r4, r7, lr}
 800fbea:	b085      	sub	sp, #20
 800fbec:	af00      	add	r7, sp, #0
 800fbee:	4603      	mov	r3, r0
 800fbf0:	6039      	str	r1, [r7, #0]
 800fbf2:	80fb      	strh	r3, [r7, #6]
 800fbf4:	4613      	mov	r3, r2
 800fbf6:	717b      	strb	r3, [r7, #5]
    uint8_t buf_index;

    iic_start();
 800fbf8:	f7ff fe02 	bl	800f800 <iic_start>
    iic_send_byte((touch_iic_addr << 1) | 0);
 800fbfc:	4b24      	ldr	r3, [pc, #144]	; (800fc90 <touch_read_reg+0xa8>)
 800fbfe:	781b      	ldrb	r3, [r3, #0]
 800fc00:	005b      	lsls	r3, r3, #1
 800fc02:	b2db      	uxtb	r3, r3
 800fc04:	4618      	mov	r0, r3
 800fc06:	f7ff feb5 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fc0a:	f7ff fe39 	bl	800f880 <iic_wait_ack>
    iic_send_byte((uint8_t)(reg >> 8) & 0xFF);
 800fc0e:	88fb      	ldrh	r3, [r7, #6]
 800fc10:	0a1b      	lsrs	r3, r3, #8
 800fc12:	b29b      	uxth	r3, r3
 800fc14:	b2db      	uxtb	r3, r3
 800fc16:	4618      	mov	r0, r3
 800fc18:	f7ff feac 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fc1c:	f7ff fe30 	bl	800f880 <iic_wait_ack>
    iic_send_byte((uint8_t)reg & 0xFF);
 800fc20:	88fb      	ldrh	r3, [r7, #6]
 800fc22:	b2db      	uxtb	r3, r3
 800fc24:	4618      	mov	r0, r3
 800fc26:	f7ff fea5 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fc2a:	f7ff fe29 	bl	800f880 <iic_wait_ack>
    iic_start();
 800fc2e:	f7ff fde7 	bl	800f800 <iic_start>
    iic_send_byte((touch_iic_addr << 1) | 1);
 800fc32:	4b17      	ldr	r3, [pc, #92]	; (800fc90 <touch_read_reg+0xa8>)
 800fc34:	781b      	ldrb	r3, [r3, #0]
 800fc36:	005b      	lsls	r3, r3, #1
 800fc38:	b25b      	sxtb	r3, r3
 800fc3a:	f043 0301 	orr.w	r3, r3, #1
 800fc3e:	b25b      	sxtb	r3, r3
 800fc40:	b2db      	uxtb	r3, r3
 800fc42:	4618      	mov	r0, r3
 800fc44:	f7ff fe96 	bl	800f974 <iic_send_byte>
    iic_wait_ack();
 800fc48:	f7ff fe1a 	bl	800f880 <iic_wait_ack>

    for (buf_index=0; buf_index<len - 1; buf_index++)
 800fc4c:	2300      	movs	r3, #0
 800fc4e:	73fb      	strb	r3, [r7, #15]
 800fc50:	e00a      	b.n	800fc68 <touch_read_reg+0x80>
    {
        buf[buf_index] = iic_read_byte(1);
 800fc52:	7bfb      	ldrb	r3, [r7, #15]
 800fc54:	683a      	ldr	r2, [r7, #0]
 800fc56:	18d4      	adds	r4, r2, r3
 800fc58:	2001      	movs	r0, #1
 800fc5a:	f7ff fec7 	bl	800f9ec <iic_read_byte>
 800fc5e:	4603      	mov	r3, r0
 800fc60:	7023      	strb	r3, [r4, #0]
    for (buf_index=0; buf_index<len - 1; buf_index++)
 800fc62:	7bfb      	ldrb	r3, [r7, #15]
 800fc64:	3301      	adds	r3, #1
 800fc66:	73fb      	strb	r3, [r7, #15]
 800fc68:	7bfa      	ldrb	r2, [r7, #15]
 800fc6a:	797b      	ldrb	r3, [r7, #5]
 800fc6c:	3b01      	subs	r3, #1
 800fc6e:	429a      	cmp	r2, r3
 800fc70:	dbef      	blt.n	800fc52 <touch_read_reg+0x6a>
    }

    buf[buf_index] = iic_read_byte(0);
 800fc72:	7bfb      	ldrb	r3, [r7, #15]
 800fc74:	683a      	ldr	r2, [r7, #0]
 800fc76:	18d4      	adds	r4, r2, r3
 800fc78:	2000      	movs	r0, #0
 800fc7a:	f7ff feb7 	bl	800f9ec <iic_read_byte>
 800fc7e:	4603      	mov	r3, r0
 800fc80:	7023      	strb	r3, [r4, #0]

    iic_stop();
 800fc82:	f7ff fddf 	bl	800f844 <iic_stop>
}
 800fc86:	bf00      	nop
 800fc88:	3714      	adds	r7, #20
 800fc8a:	46bd      	mov	sp, r7
 800fc8c:	bd90      	pop	{r4, r7, pc}
 800fc8e:	bf00      	nop
 800fc90:	2400164d 	.word	0x2400164d

0800fc94 <touch_sw_reset>:

static void touch_sw_reset(void)
{
 800fc94:	b580      	push	{r7, lr}
 800fc96:	b082      	sub	sp, #8
 800fc98:	af00      	add	r7, sp, #0
    uint8_t dat;

    dat = 0x02;
 800fc9a:	2302      	movs	r3, #2
 800fc9c:	71fb      	strb	r3, [r7, #7]
    touch_write_reg(REG_CTRL, &dat, 1);
 800fc9e:	1dfb      	adds	r3, r7, #7
 800fca0:	2201      	movs	r2, #1
 800fca2:	4619      	mov	r1, r3
 800fca4:	f248 0040 	movw	r0, #32832	; 0x8040
 800fca8:	f7ff ff52 	bl	800fb50 <touch_write_reg>
    HAL_Delay(10);
 800fcac:	200a      	movs	r0, #10
 800fcae:	f000 f93f 	bl	800ff30 <HAL_Delay>

    dat = 0x00;
 800fcb2:	2300      	movs	r3, #0
 800fcb4:	71fb      	strb	r3, [r7, #7]
    touch_write_reg(REG_CTRL, &dat, 1);
 800fcb6:	1dfb      	adds	r3, r7, #7
 800fcb8:	2201      	movs	r2, #1
 800fcba:	4619      	mov	r1, r3
 800fcbc:	f248 0040 	movw	r0, #32832	; 0x8040
 800fcc0:	f7ff ff46 	bl	800fb50 <touch_write_reg>
}
 800fcc4:	bf00      	nop
 800fcc6:	3708      	adds	r7, #8
 800fcc8:	46bd      	mov	sp, r7
 800fcca:	bd80      	pop	{r7, pc}

0800fccc <touch_get_pid>:
 * @brief       获取RGB LCD模块触摸的PID
 * @param       pid: 获取到的PID（ASCII）
 * @retval      无
 */
static void touch_get_pid(char *pid)
{
 800fccc:	b580      	push	{r7, lr}
 800fcce:	b082      	sub	sp, #8
 800fcd0:	af00      	add	r7, sp, #0
 800fcd2:	6078      	str	r0, [r7, #4]
    touch_read_reg(REG_PID, (uint8_t *)pid, 4);
 800fcd4:	2204      	movs	r2, #4
 800fcd6:	6879      	ldr	r1, [r7, #4]
 800fcd8:	f248 1040 	movw	r0, #33088	; 0x8140
 800fcdc:	f7ff ff84 	bl	800fbe8 <touch_read_reg>
    pid[4] = '\0';
 800fce0:	687b      	ldr	r3, [r7, #4]
 800fce2:	3304      	adds	r3, #4
 800fce4:	2200      	movs	r2, #0
 800fce6:	701a      	strb	r2, [r3, #0]
}
 800fce8:	bf00      	nop
 800fcea:	3708      	adds	r7, #8
 800fcec:	46bd      	mov	sp, r7
 800fcee:	bd80      	pop	{r7, pc}

0800fcf0 <touch_Scanf>:
/*
	功能：触摸扫描，判断当前是否被触摸

*/
void touch_Scanf(void)
{
 800fcf0:	b580      	push	{r7, lr}
 800fcf2:	b082      	sub	sp, #8
 800fcf4:	af00      	add	r7, sp, #0
	static uint8_t timer=0;
	uint8_t i=0;
 800fcf6:	2300      	movs	r3, #0
 800fcf8:	71fb      	strb	r3, [r7, #7]
	uint8_t _temp;	//中间变量
	uint8_t data_temp[6];	//中间变量

	timer++;
 800fcfa:	4b3f      	ldr	r3, [pc, #252]	; (800fdf8 <touch_Scanf+0x108>)
 800fcfc:	781b      	ldrb	r3, [r3, #0]
 800fcfe:	3301      	adds	r3, #1
 800fd00:	b2da      	uxtb	r2, r3
 800fd02:	4b3d      	ldr	r3, [pc, #244]	; (800fdf8 <touch_Scanf+0x108>)
 800fd04:	701a      	strb	r2, [r3, #0]
	if(timer<10) //坐标信息10ms刷新周期
 800fd06:	4b3c      	ldr	r3, [pc, #240]	; (800fdf8 <touch_Scanf+0x108>)
 800fd08:	781b      	ldrb	r3, [r3, #0]
 800fd0a:	2b09      	cmp	r3, #9
 800fd0c:	d970      	bls.n	800fdf0 <touch_Scanf+0x100>
	{
		return;
	}
	timer=0;
 800fd0e:	4b3a      	ldr	r3, [pc, #232]	; (800fdf8 <touch_Scanf+0x108>)
 800fd10:	2200      	movs	r2, #0
 800fd12:	701a      	strb	r2, [r3, #0]

	touch_read_reg(REG_TPINFO, &_temp, 1);
 800fd14:	1dbb      	adds	r3, r7, #6
 800fd16:	2201      	movs	r2, #1
 800fd18:	4619      	mov	r1, r3
 800fd1a:	f248 104e 	movw	r0, #33102	; 0x814e
 800fd1e:	f7ff ff63 	bl	800fbe8 <touch_read_reg>

	User_Touch.state = (_temp & 0x80);	//触摸状态
 800fd22:	79bb      	ldrb	r3, [r7, #6]
 800fd24:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800fd28:	b2da      	uxtb	r2, r3
 800fd2a:	4b34      	ldr	r3, [pc, #208]	; (800fdfc <touch_Scanf+0x10c>)
 800fd2c:	701a      	strb	r2, [r3, #0]
	User_Touch.num = (_temp & 0x0f);	//获取触摸点数
 800fd2e:	79bb      	ldrb	r3, [r7, #6]
 800fd30:	f003 030f 	and.w	r3, r3, #15
 800fd34:	b2da      	uxtb	r2, r3
 800fd36:	4b31      	ldr	r3, [pc, #196]	; (800fdfc <touch_Scanf+0x10c>)
 800fd38:	705a      	strb	r2, [r3, #1]

	if(User_Touch.state) //有触摸，并读出数据
 800fd3a:	4b30      	ldr	r3, [pc, #192]	; (800fdfc <touch_Scanf+0x10c>)
 800fd3c:	781b      	ldrb	r3, [r3, #0]
 800fd3e:	2b00      	cmp	r3, #0
 800fd40:	d057      	beq.n	800fdf2 <touch_Scanf+0x102>
	{
		for(i=0; i<User_Touch.num; i++)
 800fd42:	2300      	movs	r3, #0
 800fd44:	71fb      	strb	r3, [r7, #7]
 800fd46:	e044      	b.n	800fdd2 <touch_Scanf+0xe2>
		//读出触摸点数的所有数据
		{
			touch_read_reg(REG_TP1+i*8, data_temp, 6);	//读出触摸x坐标的低8位
 800fd48:	79fa      	ldrb	r2, [r7, #7]
 800fd4a:	f241 032a 	movw	r3, #4138	; 0x102a
 800fd4e:	4413      	add	r3, r2
 800fd50:	b29b      	uxth	r3, r3
 800fd52:	00db      	lsls	r3, r3, #3
 800fd54:	b29b      	uxth	r3, r3
 800fd56:	4639      	mov	r1, r7
 800fd58:	2206      	movs	r2, #6
 800fd5a:	4618      	mov	r0, r3
 800fd5c:	f7ff ff44 	bl	800fbe8 <touch_read_reg>
			User_Touch.point[i].x  = (uint16_t)(data_temp[1] << 8) | data_temp[0];
 800fd60:	787b      	ldrb	r3, [r7, #1]
 800fd62:	b29b      	uxth	r3, r3
 800fd64:	021b      	lsls	r3, r3, #8
 800fd66:	b299      	uxth	r1, r3
 800fd68:	783b      	ldrb	r3, [r7, #0]
 800fd6a:	b29b      	uxth	r3, r3
 800fd6c:	79fa      	ldrb	r2, [r7, #7]
 800fd6e:	430b      	orrs	r3, r1
 800fd70:	b298      	uxth	r0, r3
 800fd72:	4922      	ldr	r1, [pc, #136]	; (800fdfc <touch_Scanf+0x10c>)
 800fd74:	4613      	mov	r3, r2
 800fd76:	005b      	lsls	r3, r3, #1
 800fd78:	4413      	add	r3, r2
 800fd7a:	005b      	lsls	r3, r3, #1
 800fd7c:	440b      	add	r3, r1
 800fd7e:	3302      	adds	r3, #2
 800fd80:	4602      	mov	r2, r0
 800fd82:	801a      	strh	r2, [r3, #0]
			User_Touch.point[i].y  = (uint16_t)(data_temp[3] << 8) | data_temp[2];
 800fd84:	78fb      	ldrb	r3, [r7, #3]
 800fd86:	b29b      	uxth	r3, r3
 800fd88:	021b      	lsls	r3, r3, #8
 800fd8a:	b299      	uxth	r1, r3
 800fd8c:	78bb      	ldrb	r3, [r7, #2]
 800fd8e:	b29b      	uxth	r3, r3
 800fd90:	79fa      	ldrb	r2, [r7, #7]
 800fd92:	430b      	orrs	r3, r1
 800fd94:	b298      	uxth	r0, r3
 800fd96:	4919      	ldr	r1, [pc, #100]	; (800fdfc <touch_Scanf+0x10c>)
 800fd98:	4613      	mov	r3, r2
 800fd9a:	005b      	lsls	r3, r3, #1
 800fd9c:	4413      	add	r3, r2
 800fd9e:	005b      	lsls	r3, r3, #1
 800fda0:	440b      	add	r3, r1
 800fda2:	3304      	adds	r3, #4
 800fda4:	4602      	mov	r2, r0
 800fda6:	801a      	strh	r2, [r3, #0]
			User_Touch.point[i].size  = (uint16_t)(data_temp[5] << 8) | data_temp[4];
 800fda8:	797b      	ldrb	r3, [r7, #5]
 800fdaa:	b29b      	uxth	r3, r3
 800fdac:	021b      	lsls	r3, r3, #8
 800fdae:	b299      	uxth	r1, r3
 800fdb0:	793b      	ldrb	r3, [r7, #4]
 800fdb2:	b29b      	uxth	r3, r3
 800fdb4:	79fa      	ldrb	r2, [r7, #7]
 800fdb6:	430b      	orrs	r3, r1
 800fdb8:	b298      	uxth	r0, r3
 800fdba:	4910      	ldr	r1, [pc, #64]	; (800fdfc <touch_Scanf+0x10c>)
 800fdbc:	4613      	mov	r3, r2
 800fdbe:	005b      	lsls	r3, r3, #1
 800fdc0:	4413      	add	r3, r2
 800fdc2:	005b      	lsls	r3, r3, #1
 800fdc4:	440b      	add	r3, r1
 800fdc6:	3306      	adds	r3, #6
 800fdc8:	4602      	mov	r2, r0
 800fdca:	801a      	strh	r2, [r3, #0]
		for(i=0; i<User_Touch.num; i++)
 800fdcc:	79fb      	ldrb	r3, [r7, #7]
 800fdce:	3301      	adds	r3, #1
 800fdd0:	71fb      	strb	r3, [r7, #7]
 800fdd2:	4b0a      	ldr	r3, [pc, #40]	; (800fdfc <touch_Scanf+0x10c>)
 800fdd4:	785b      	ldrb	r3, [r3, #1]
 800fdd6:	79fa      	ldrb	r2, [r7, #7]
 800fdd8:	429a      	cmp	r2, r3
 800fdda:	d3b5      	bcc.n	800fd48 <touch_Scanf+0x58>
		}
		_temp = 0;
 800fddc:	2300      	movs	r3, #0
 800fdde:	71bb      	strb	r3, [r7, #6]
		touch_write_reg(REG_TPINFO, &_temp, 1);//清除数据标志位
 800fde0:	1dbb      	adds	r3, r7, #6
 800fde2:	2201      	movs	r2, #1
 800fde4:	4619      	mov	r1, r3
 800fde6:	f248 104e 	movw	r0, #33102	; 0x814e
 800fdea:	f7ff feb1 	bl	800fb50 <touch_write_reg>
 800fdee:	e000      	b.n	800fdf2 <touch_Scanf+0x102>
		return;
 800fdf0:	bf00      	nop
	}
}
 800fdf2:	3708      	adds	r7, #8
 800fdf4:	46bd      	mov	sp, r7
 800fdf6:	bd80      	pop	{r7, pc}
 800fdf8:	24001670 	.word	0x24001670
 800fdfc:	24001650 	.word	0x24001650

0800fe00 <touch_init>:


void touch_init(void)
{
 800fe00:	b580      	push	{r7, lr}
 800fe02:	b082      	sub	sp, #8
 800fe04:	af00      	add	r7, sp, #0
	char pid[5];
	soft_IIC_Init();  //IIC初始化
 800fe06:	f7ff fced 	bl	800f7e4 <soft_IIC_Init>
	touch_hw_reset(0x28);
 800fe0a:	2028      	movs	r0, #40	; 0x28
 800fe0c:	f7ff fe2a 	bl	800fa64 <touch_hw_reset>
	touch_get_pid(pid);
 800fe10:	463b      	mov	r3, r7
 800fe12:	4618      	mov	r0, r3
 800fe14:	f7ff ff5a 	bl	800fccc <touch_get_pid>
	touch_sw_reset();
 800fe18:	f7ff ff3c 	bl	800fc94 <touch_sw_reset>
}
 800fe1c:	bf00      	nop
 800fe1e:	3708      	adds	r7, #8
 800fe20:	46bd      	mov	sp, r7
 800fe22:	bd80      	pop	{r7, pc}

0800fe24 <user_delay_init>:
 */
#include "user_delay.h"

static uint32_t g_fac_us = 0; /* us延时倍乘数 */
void user_delay_init(uint16_t sysclk)
{
 800fe24:	b580      	push	{r7, lr}
 800fe26:	b082      	sub	sp, #8
 800fe28:	af00      	add	r7, sp, #0
 800fe2a:	4603      	mov	r3, r0
 800fe2c:	80fb      	strh	r3, [r7, #6]

    HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK); /* SYSTICK使用外部时钟源,频率为HCLK */
 800fe2e:	2004      	movs	r0, #4
 800fe30:	f7f1 ff5c 	bl	8001cec <HAL_SYSTICK_CLKSourceConfig>
    g_fac_us = sysclk;                                   /* 不论是否使用OS,g_fac_us都需要使用 */
 800fe34:	88fb      	ldrh	r3, [r7, #6]
 800fe36:	4a03      	ldr	r2, [pc, #12]	; (800fe44 <user_delay_init+0x20>)
 800fe38:	6013      	str	r3, [r2, #0]

}
 800fe3a:	bf00      	nop
 800fe3c:	3708      	adds	r7, #8
 800fe3e:	46bd      	mov	sp, r7
 800fe40:	bd80      	pop	{r7, pc}
 800fe42:	bf00      	nop
 800fe44:	24001674 	.word	0x24001674

0800fe48 <user_delay_us>:
 * @param       nus: 要延时的us数.
 * @note        nus取值范围 : 0~190887435(最大值即 2^32 / fac_us @fac_us = 21)
 * @retval      无
 */
void user_delay_us(uint32_t nus)
{
 800fe48:	b480      	push	{r7}
 800fe4a:	b089      	sub	sp, #36	; 0x24
 800fe4c:	af00      	add	r7, sp, #0
 800fe4e:	6078      	str	r0, [r7, #4]
    uint32_t ticks;
    uint32_t told, tnow, tcnt = 0;
 800fe50:	2300      	movs	r3, #0
 800fe52:	61bb      	str	r3, [r7, #24]
    uint32_t reload = SysTick->LOAD; /* LOAD的值 */
 800fe54:	4b19      	ldr	r3, [pc, #100]	; (800febc <user_delay_us+0x74>)
 800fe56:	685b      	ldr	r3, [r3, #4]
 800fe58:	617b      	str	r3, [r7, #20]
    ticks = nus * g_fac_us;          /* 需要的节拍数 */
 800fe5a:	4b19      	ldr	r3, [pc, #100]	; (800fec0 <user_delay_us+0x78>)
 800fe5c:	681a      	ldr	r2, [r3, #0]
 800fe5e:	687b      	ldr	r3, [r7, #4]
 800fe60:	fb02 f303 	mul.w	r3, r2, r3
 800fe64:	613b      	str	r3, [r7, #16]
    told = SysTick->VAL;             /* 刚进入时的计数器值 */
 800fe66:	4b15      	ldr	r3, [pc, #84]	; (800febc <user_delay_us+0x74>)
 800fe68:	689b      	ldr	r3, [r3, #8]
 800fe6a:	61fb      	str	r3, [r7, #28]
    while (1)
    {
        tnow = SysTick->VAL;
 800fe6c:	4b13      	ldr	r3, [pc, #76]	; (800febc <user_delay_us+0x74>)
 800fe6e:	689b      	ldr	r3, [r3, #8]
 800fe70:	60fb      	str	r3, [r7, #12]
        if (tnow != told)
 800fe72:	68fa      	ldr	r2, [r7, #12]
 800fe74:	69fb      	ldr	r3, [r7, #28]
 800fe76:	429a      	cmp	r2, r3
 800fe78:	d0f8      	beq.n	800fe6c <user_delay_us+0x24>
        {
            if (tnow < told)
 800fe7a:	68fa      	ldr	r2, [r7, #12]
 800fe7c:	69fb      	ldr	r3, [r7, #28]
 800fe7e:	429a      	cmp	r2, r3
 800fe80:	d206      	bcs.n	800fe90 <user_delay_us+0x48>
            {
                tcnt += told - tnow; /* 这里注意一下SYSTICK是一个递减的计数器就可以了 */
 800fe82:	69fa      	ldr	r2, [r7, #28]
 800fe84:	68fb      	ldr	r3, [r7, #12]
 800fe86:	1ad3      	subs	r3, r2, r3
 800fe88:	69ba      	ldr	r2, [r7, #24]
 800fe8a:	4413      	add	r3, r2
 800fe8c:	61bb      	str	r3, [r7, #24]
 800fe8e:	e007      	b.n	800fea0 <user_delay_us+0x58>
            }
            else
            {
                tcnt += reload - tnow + told;
 800fe90:	697a      	ldr	r2, [r7, #20]
 800fe92:	68fb      	ldr	r3, [r7, #12]
 800fe94:	1ad2      	subs	r2, r2, r3
 800fe96:	69fb      	ldr	r3, [r7, #28]
 800fe98:	4413      	add	r3, r2
 800fe9a:	69ba      	ldr	r2, [r7, #24]
 800fe9c:	4413      	add	r3, r2
 800fe9e:	61bb      	str	r3, [r7, #24]
            }
            told = tnow;
 800fea0:	68fb      	ldr	r3, [r7, #12]
 800fea2:	61fb      	str	r3, [r7, #28]
            if (tcnt >= ticks)
 800fea4:	69ba      	ldr	r2, [r7, #24]
 800fea6:	693b      	ldr	r3, [r7, #16]
 800fea8:	429a      	cmp	r2, r3
 800feaa:	d200      	bcs.n	800feae <user_delay_us+0x66>
        tnow = SysTick->VAL;
 800feac:	e7de      	b.n	800fe6c <user_delay_us+0x24>
            {
                break; /* 时间超过/等于要延迟的时间,则退出 */
 800feae:	bf00      	nop
            }
        }
    }
}
 800feb0:	bf00      	nop
 800feb2:	3724      	adds	r7, #36	; 0x24
 800feb4:	46bd      	mov	sp, r7
 800feb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800feba:	4770      	bx	lr
 800febc:	e000e010 	.word	0xe000e010
 800fec0:	24001674 	.word	0x24001674

0800fec4 <user_delay_ms>:
// * @brief       延时nms
// * @param       nms: 要延时的ms数 (0< nms <= 65535)
// * @retval      无
// */
void user_delay_ms(uint16_t nms)
{
 800fec4:	b580      	push	{r7, lr}
 800fec6:	b084      	sub	sp, #16
 800fec8:	af00      	add	r7, sp, #0
 800feca:	4603      	mov	r3, r0
 800fecc:	80fb      	strh	r3, [r7, #6]
    uint32_t repeat = nms / 540; /*  这里用540,是考虑到可能有超频应用, 比如248M的时候,delay_us最大只能延时541ms左右了 */
 800fece:	88fb      	ldrh	r3, [r7, #6]
 800fed0:	4a15      	ldr	r2, [pc, #84]	; (800ff28 <user_delay_ms+0x64>)
 800fed2:	fba2 2303 	umull	r2, r3, r2, r3
 800fed6:	0a5b      	lsrs	r3, r3, #9
 800fed8:	b29b      	uxth	r3, r3
 800feda:	60fb      	str	r3, [r7, #12]
    uint32_t remain = nms % 540;
 800fedc:	88fb      	ldrh	r3, [r7, #6]
 800fede:	4a12      	ldr	r2, [pc, #72]	; (800ff28 <user_delay_ms+0x64>)
 800fee0:	fba2 1203 	umull	r1, r2, r2, r3
 800fee4:	0a52      	lsrs	r2, r2, #9
 800fee6:	f44f 7107 	mov.w	r1, #540	; 0x21c
 800feea:	fb01 f202 	mul.w	r2, r1, r2
 800feee:	1a9b      	subs	r3, r3, r2
 800fef0:	b29b      	uxth	r3, r3
 800fef2:	60bb      	str	r3, [r7, #8]

    while (repeat)
 800fef4:	e005      	b.n	800ff02 <user_delay_ms+0x3e>
    {
    	user_delay_us(540 * 1000); /* 利用delay_us 实现 540ms 延时 */
 800fef6:	480d      	ldr	r0, [pc, #52]	; (800ff2c <user_delay_ms+0x68>)
 800fef8:	f7ff ffa6 	bl	800fe48 <user_delay_us>
        repeat--;
 800fefc:	68fb      	ldr	r3, [r7, #12]
 800fefe:	3b01      	subs	r3, #1
 800ff00:	60fb      	str	r3, [r7, #12]
    while (repeat)
 800ff02:	68fb      	ldr	r3, [r7, #12]
 800ff04:	2b00      	cmp	r3, #0
 800ff06:	d1f6      	bne.n	800fef6 <user_delay_ms+0x32>
    }

    if (remain)
 800ff08:	68bb      	ldr	r3, [r7, #8]
 800ff0a:	2b00      	cmp	r3, #0
 800ff0c:	d007      	beq.n	800ff1e <user_delay_ms+0x5a>
    {
    	user_delay_us(remain * 1000); /* 利用delay_us, 把尾数延时(remain ms)给做了 */
 800ff0e:	68bb      	ldr	r3, [r7, #8]
 800ff10:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ff14:	fb02 f303 	mul.w	r3, r2, r3
 800ff18:	4618      	mov	r0, r3
 800ff1a:	f7ff ff95 	bl	800fe48 <user_delay_us>
    }
}
 800ff1e:	bf00      	nop
 800ff20:	3710      	adds	r7, #16
 800ff22:	46bd      	mov	sp, r7
 800ff24:	bd80      	pop	{r7, pc}
 800ff26:	bf00      	nop
 800ff28:	f2b9d649 	.word	0xf2b9d649
 800ff2c:	00083d60 	.word	0x00083d60

0800ff30 <HAL_Delay>:
 * @note        HAL库的延时默认用Systick，如果我们没有开Systick的中断会导致调用这个延时后无法退出
 * @param       Delay : 要延时的毫秒数
 * @retval      None
 */
void HAL_Delay(uint32_t Delay)
{
 800ff30:	b580      	push	{r7, lr}
 800ff32:	b082      	sub	sp, #8
 800ff34:	af00      	add	r7, sp, #0
 800ff36:	6078      	str	r0, [r7, #4]
	user_delay_ms(Delay);
 800ff38:	687b      	ldr	r3, [r7, #4]
 800ff3a:	b29b      	uxth	r3, r3
 800ff3c:	4618      	mov	r0, r3
 800ff3e:	f7ff ffc1 	bl	800fec4 <user_delay_ms>
}
 800ff42:	bf00      	nop
 800ff44:	3708      	adds	r7, #8
 800ff46:	46bd      	mov	sp, r7
 800ff48:	bd80      	pop	{r7, pc}
	...

0800ff4c <_write>:
  HAL_UART_Receive(&huart1, &ch, 1, 0xffff);
  return ch;
}


int _write(int32_t file, uint8_t *ptr, int32_t len) {
 800ff4c:	b580      	push	{r7, lr}
 800ff4e:	b084      	sub	sp, #16
 800ff50:	af00      	add	r7, sp, #0
 800ff52:	60f8      	str	r0, [r7, #12]
 800ff54:	60b9      	str	r1, [r7, #8]
 800ff56:	607a      	str	r2, [r7, #4]
	HAL_UART_Transmit(&huart1, ptr, len, HAL_MAX_DELAY);
 800ff58:	687b      	ldr	r3, [r7, #4]
 800ff5a:	b29a      	uxth	r2, r3
 800ff5c:	f04f 33ff 	mov.w	r3, #4294967295
 800ff60:	68b9      	ldr	r1, [r7, #8]
 800ff62:	4804      	ldr	r0, [pc, #16]	; (800ff74 <_write+0x28>)
 800ff64:	f7f7 fc56 	bl	8007814 <HAL_UART_Transmit>
  return len;
 800ff68:	687b      	ldr	r3, [r7, #4]
}
 800ff6a:	4618      	mov	r0, r3
 800ff6c:	3710      	adds	r7, #16
 800ff6e:	46bd      	mov	sp, r7
 800ff70:	bd80      	pop	{r7, pc}
 800ff72:	bf00      	nop
 800ff74:	240002e0 	.word	0x240002e0

0800ff78 <log_com_uart_init>:

void log_com_uart_init(void)
{
 800ff78:	b580      	push	{r7, lr}
 800ff7a:	af00      	add	r7, sp, #0

  HAL_UART_Transmit_IT(&huart1, (uint8_t *)StaMessages, sizeof(StaMessages));
 800ff7c:	2204      	movs	r2, #4
 800ff7e:	4905      	ldr	r1, [pc, #20]	; (800ff94 <log_com_uart_init+0x1c>)
 800ff80:	4805      	ldr	r0, [pc, #20]	; (800ff98 <log_com_uart_init+0x20>)
 800ff82:	f7f7 fcd5 	bl	8007930 <HAL_UART_Transmit_IT>
  HAL_UART_Receive_IT(&huart1, (uint8_t *)uart1_RxBuffer, 1); // 调用中断接收函数，接收长度设为1，接收一个字节进一次中断
 800ff86:	2201      	movs	r2, #1
 800ff88:	4904      	ldr	r1, [pc, #16]	; (800ff9c <log_com_uart_init+0x24>)
 800ff8a:	4803      	ldr	r0, [pc, #12]	; (800ff98 <log_com_uart_init+0x20>)
 800ff8c:	f7f7 fd64 	bl	8007a58 <HAL_UART_Receive_IT>
}
 800ff90:	bf00      	nop
 800ff92:	bd80      	pop	{r7, pc}
 800ff94:	24001678 	.word	0x24001678
 800ff98:	240002e0 	.word	0x240002e0
 800ff9c:	2400167c 	.word	0x2400167c

0800ffa0 <HAL_UART_RxCpltCallback>:
  HAL_UART_Transmit_IT(&huart2, (uint8_t *)StaMessages, sizeof(StaMessages));
  HAL_UART_Receive_IT(&huart2, (uint8_t *)uart2_RxBuffer, 1); // 调用中断接收函数，接收长度设为1，接收一个字节进一次中断
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800ffa0:	b580      	push	{r7, lr}
 800ffa2:	b082      	sub	sp, #8
 800ffa4:	af00      	add	r7, sp, #0
 800ffa6:	6078      	str	r0, [r7, #4]
  UNUSED(huart);
  if(huart->Instance == USART1)
 800ffa8:	687b      	ldr	r3, [r7, #4]
 800ffaa:	681b      	ldr	r3, [r3, #0]
 800ffac:	4a11      	ldr	r2, [pc, #68]	; (800fff4 <HAL_UART_RxCpltCallback+0x54>)
 800ffae:	4293      	cmp	r3, r2
 800ffb0:	d10b      	bne.n	800ffca <HAL_UART_RxCpltCallback+0x2a>
  {
	  HAL_UART_Transmit(&huart1, (uint8_t *)uart1_RxBuffer, 1, 0xFFFF); // 发送接收到的数据
 800ffb2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ffb6:	2201      	movs	r2, #1
 800ffb8:	490f      	ldr	r1, [pc, #60]	; (800fff8 <HAL_UART_RxCpltCallback+0x58>)
 800ffba:	4810      	ldr	r0, [pc, #64]	; (800fffc <HAL_UART_RxCpltCallback+0x5c>)
 800ffbc:	f7f7 fc2a 	bl	8007814 <HAL_UART_Transmit>
	  HAL_UART_Receive_IT(&huart1, (uint8_t *)uart1_RxBuffer, 1);       // 再开启接收中断（因为里面中断只会触发一次，因此需要再次开启）
 800ffc0:	2201      	movs	r2, #1
 800ffc2:	490d      	ldr	r1, [pc, #52]	; (800fff8 <HAL_UART_RxCpltCallback+0x58>)
 800ffc4:	480d      	ldr	r0, [pc, #52]	; (800fffc <HAL_UART_RxCpltCallback+0x5c>)
 800ffc6:	f7f7 fd47 	bl	8007a58 <HAL_UART_Receive_IT>
  }
  if(huart->Instance == USART2)
 800ffca:	687b      	ldr	r3, [r7, #4]
 800ffcc:	681b      	ldr	r3, [r3, #0]
 800ffce:	4a0c      	ldr	r2, [pc, #48]	; (8010000 <HAL_UART_RxCpltCallback+0x60>)
 800ffd0:	4293      	cmp	r3, r2
 800ffd2:	d10b      	bne.n	800ffec <HAL_UART_RxCpltCallback+0x4c>
  {
	  HAL_UART_Transmit(&huart2, (uint8_t *)uart2_RxBuffer, 1, 0xFFFF); // 发送接收到的数据
 800ffd4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ffd8:	2201      	movs	r2, #1
 800ffda:	490a      	ldr	r1, [pc, #40]	; (8010004 <HAL_UART_RxCpltCallback+0x64>)
 800ffdc:	480a      	ldr	r0, [pc, #40]	; (8010008 <HAL_UART_RxCpltCallback+0x68>)
 800ffde:	f7f7 fc19 	bl	8007814 <HAL_UART_Transmit>
	  HAL_UART_Receive_IT(&huart2, (uint8_t *)uart2_RxBuffer, 1);       // 再开启接收中断（因为里面中断只会触发一次，因此需要再次开启）
 800ffe2:	2201      	movs	r2, #1
 800ffe4:	4907      	ldr	r1, [pc, #28]	; (8010004 <HAL_UART_RxCpltCallback+0x64>)
 800ffe6:	4808      	ldr	r0, [pc, #32]	; (8010008 <HAL_UART_RxCpltCallback+0x68>)
 800ffe8:	f7f7 fd36 	bl	8007a58 <HAL_UART_Receive_IT>
  }

}
 800ffec:	bf00      	nop
 800ffee:	3708      	adds	r7, #8
 800fff0:	46bd      	mov	sp, r7
 800fff2:	bd80      	pop	{r7, pc}
 800fff4:	40011000 	.word	0x40011000
 800fff8:	2400167c 	.word	0x2400167c
 800fffc:	240002e0 	.word	0x240002e0
 8010000:	40004400 	.word	0x40004400
 8010004:	24001690 	.word	0x24001690
 8010008:	24000374 	.word	0x24000374

0801000c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 801000c:	8880      	ldrh	r0, [r0, #4]
 801000e:	4770      	bx	lr

08010010 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8010010:	b570      	push	{r4, r5, r6, lr}
 8010012:	6803      	ldr	r3, [r0, #0]
 8010014:	460c      	mov	r4, r1
 8010016:	2100      	movs	r1, #0
 8010018:	4605      	mov	r5, r0
 801001a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801001c:	4798      	blx	r3
 801001e:	4606      	mov	r6, r0
 8010020:	682b      	ldr	r3, [r5, #0]
 8010022:	4628      	mov	r0, r5
 8010024:	1ba4      	subs	r4, r4, r6
 8010026:	6a1b      	ldr	r3, [r3, #32]
 8010028:	b2a4      	uxth	r4, r4
 801002a:	4798      	blx	r3
 801002c:	fbb4 f0f0 	udiv	r0, r4, r0
 8010030:	bd70      	pop	{r4, r5, r6, pc}

08010032 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8010032:	2300      	movs	r3, #0
 8010034:	8083      	strh	r3, [r0, #4]
 8010036:	4770      	bx	lr

08010038 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010038:	b510      	push	{r4, lr}
 801003a:	6803      	ldr	r3, [r0, #0]
 801003c:	4604      	mov	r4, r0
 801003e:	8881      	ldrh	r1, [r0, #4]
 8010040:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010042:	4798      	blx	r3
 8010044:	88a3      	ldrh	r3, [r4, #4]
 8010046:	3301      	adds	r3, #1
 8010048:	80a3      	strh	r3, [r4, #4]
 801004a:	bd10      	pop	{r4, pc}

0801004c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 801004c:	6803      	ldr	r3, [r0, #0]
 801004e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010050:	4718      	bx	r3

08010052 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8010052:	4770      	bx	lr

08010054 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010054:	4a02      	ldr	r2, [pc, #8]	; (8010060 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010056:	6002      	str	r2, [r0, #0]
 8010058:	2200      	movs	r2, #0
 801005a:	8082      	strh	r2, [r0, #4]
 801005c:	4770      	bx	lr
 801005e:	bf00      	nop
 8010060:	08025c58 	.word	0x08025c58

08010064 <_ZN8touchgfx9Container13getFirstChildEv>:
 8010064:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010066:	4770      	bx	lr

08010068 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010068:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801006a:	2000      	movs	r0, #0
 801006c:	b12b      	cbz	r3, 801007a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 801006e:	b920      	cbnz	r0, 801007a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010070:	1a5a      	subs	r2, r3, r1
 8010072:	699b      	ldr	r3, [r3, #24]
 8010074:	4250      	negs	r0, r2
 8010076:	4150      	adcs	r0, r2
 8010078:	e7f8      	b.n	801006c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801007a:	4770      	bx	lr

0801007c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 801007c:	2300      	movs	r3, #0
 801007e:	6148      	str	r0, [r1, #20]
 8010080:	618b      	str	r3, [r1, #24]
 8010082:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010084:	b913      	cbnz	r3, 801008c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010086:	6281      	str	r1, [r0, #40]	; 0x28
 8010088:	4770      	bx	lr
 801008a:	4613      	mov	r3, r2
 801008c:	699a      	ldr	r2, [r3, #24]
 801008e:	2a00      	cmp	r2, #0
 8010090:	d1fb      	bne.n	801008a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010092:	6199      	str	r1, [r3, #24]
 8010094:	4770      	bx	lr

08010096 <_ZN8touchgfx9Container9removeAllEv>:
 8010096:	2200      	movs	r2, #0
 8010098:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801009a:	b123      	cbz	r3, 80100a6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 801009c:	6999      	ldr	r1, [r3, #24]
 801009e:	6281      	str	r1, [r0, #40]	; 0x28
 80100a0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80100a4:	e7f8      	b.n	8010098 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80100a6:	4770      	bx	lr

080100a8 <_ZN8touchgfx9Container6unlinkEv>:
 80100a8:	2300      	movs	r3, #0
 80100aa:	6283      	str	r3, [r0, #40]	; 0x28
 80100ac:	4770      	bx	lr

080100ae <_ZNK8touchgfx9Container12getSolidRectEv>:
 80100ae:	2200      	movs	r2, #0
 80100b0:	8002      	strh	r2, [r0, #0]
 80100b2:	8042      	strh	r2, [r0, #2]
 80100b4:	8082      	strh	r2, [r0, #4]
 80100b6:	80c2      	strh	r2, [r0, #6]
 80100b8:	4770      	bx	lr

080100ba <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80100ba:	b570      	push	{r4, r5, r6, lr}
 80100bc:	460d      	mov	r5, r1
 80100be:	4616      	mov	r6, r2
 80100c0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80100c2:	b13c      	cbz	r4, 80100d4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80100c4:	6823      	ldr	r3, [r4, #0]
 80100c6:	4620      	mov	r0, r4
 80100c8:	4632      	mov	r2, r6
 80100ca:	4629      	mov	r1, r5
 80100cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80100ce:	4798      	blx	r3
 80100d0:	69a4      	ldr	r4, [r4, #24]
 80100d2:	e7f6      	b.n	80100c2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80100d4:	bd70      	pop	{r4, r5, r6, pc}

080100d6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80100d6:	b538      	push	{r3, r4, r5, lr}
 80100d8:	460d      	mov	r5, r1
 80100da:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80100dc:	b134      	cbz	r4, 80100ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80100de:	682b      	ldr	r3, [r5, #0]
 80100e0:	4621      	mov	r1, r4
 80100e2:	4628      	mov	r0, r5
 80100e4:	689b      	ldr	r3, [r3, #8]
 80100e6:	4798      	blx	r3
 80100e8:	69a4      	ldr	r4, [r4, #24]
 80100ea:	e7f7      	b.n	80100dc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80100ec:	bd38      	pop	{r3, r4, r5, pc}

080100ee <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80100ee:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80100f0:	b19b      	cbz	r3, 801011a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80100f2:	428b      	cmp	r3, r1
 80100f4:	d109      	bne.n	801010a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80100f6:	699a      	ldr	r2, [r3, #24]
 80100f8:	2100      	movs	r1, #0
 80100fa:	6159      	str	r1, [r3, #20]
 80100fc:	6282      	str	r2, [r0, #40]	; 0x28
 80100fe:	b902      	cbnz	r2, 8010102 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010100:	4770      	bx	lr
 8010102:	6199      	str	r1, [r3, #24]
 8010104:	4770      	bx	lr
 8010106:	4613      	mov	r3, r2
 8010108:	b13a      	cbz	r2, 801011a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801010a:	699a      	ldr	r2, [r3, #24]
 801010c:	428a      	cmp	r2, r1
 801010e:	d1fa      	bne.n	8010106 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010110:	698a      	ldr	r2, [r1, #24]
 8010112:	619a      	str	r2, [r3, #24]
 8010114:	2300      	movs	r3, #0
 8010116:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801011a:	4770      	bx	lr

0801011c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 801011c:	b410      	push	{r4}
 801011e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010120:	4604      	mov	r4, r0
 8010122:	b92b      	cbnz	r3, 8010130 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010124:	6803      	ldr	r3, [r0, #0]
 8010126:	4611      	mov	r1, r2
 8010128:	f85d 4b04 	ldr.w	r4, [sp], #4
 801012c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801012e:	4718      	bx	r3
 8010130:	b941      	cbnz	r1, 8010144 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010132:	6193      	str	r3, [r2, #24]
 8010134:	6282      	str	r2, [r0, #40]	; 0x28
 8010136:	6154      	str	r4, [r2, #20]
 8010138:	f85d 4b04 	ldr.w	r4, [sp], #4
 801013c:	4770      	bx	lr
 801013e:	4603      	mov	r3, r0
 8010140:	2800      	cmp	r0, #0
 8010142:	d0f9      	beq.n	8010138 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010144:	4299      	cmp	r1, r3
 8010146:	6998      	ldr	r0, [r3, #24]
 8010148:	d1f9      	bne.n	801013e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801014a:	6190      	str	r0, [r2, #24]
 801014c:	618a      	str	r2, [r1, #24]
 801014e:	e7f2      	b.n	8010136 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010150 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010154:	461f      	mov	r7, r3
 8010156:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801015a:	460d      	mov	r5, r1
 801015c:	4616      	mov	r6, r2
 801015e:	b103      	cbz	r3, 8010162 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010160:	6038      	str	r0, [r7, #0]
 8010162:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010164:	b314      	cbz	r4, 80101ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010166:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801016a:	b1eb      	cbz	r3, 80101a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801016c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010170:	428d      	cmp	r5, r1
 8010172:	db19      	blt.n	80101a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010174:	b289      	uxth	r1, r1
 8010176:	8923      	ldrh	r3, [r4, #8]
 8010178:	440b      	add	r3, r1
 801017a:	b21b      	sxth	r3, r3
 801017c:	429d      	cmp	r5, r3
 801017e:	da13      	bge.n	80101a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010180:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010184:	4296      	cmp	r6, r2
 8010186:	db0f      	blt.n	80101a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010188:	b292      	uxth	r2, r2
 801018a:	8963      	ldrh	r3, [r4, #10]
 801018c:	4413      	add	r3, r2
 801018e:	b21b      	sxth	r3, r3
 8010190:	429e      	cmp	r6, r3
 8010192:	da09      	bge.n	80101a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010194:	6823      	ldr	r3, [r4, #0]
 8010196:	1ab2      	subs	r2, r6, r2
 8010198:	1a69      	subs	r1, r5, r1
 801019a:	4620      	mov	r0, r4
 801019c:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80101a0:	b212      	sxth	r2, r2
 80101a2:	463b      	mov	r3, r7
 80101a4:	b209      	sxth	r1, r1
 80101a6:	47c0      	blx	r8
 80101a8:	69a4      	ldr	r4, [r4, #24]
 80101aa:	e7db      	b.n	8010164 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80101ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080101b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80101b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101b4:	4c6d      	ldr	r4, [pc, #436]	; (801036c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 80101b6:	b0a1      	sub	sp, #132	; 0x84
 80101b8:	4606      	mov	r6, r0
 80101ba:	6824      	ldr	r4, [r4, #0]
 80101bc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80101be:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80101c2:	2400      	movs	r4, #0
 80101c4:	9303      	str	r3, [sp, #12]
 80101c6:	802c      	strh	r4, [r5, #0]
 80101c8:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80101ca:	802c      	strh	r4, [r5, #0]
 80101cc:	601c      	str	r4, [r3, #0]
 80101ce:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80101d2:	f7ff ffbd 	bl	8010150 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80101d6:	f1b9 0f03 	cmp.w	r9, #3
 80101da:	f340 80c1 	ble.w	8010360 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 80101de:	4631      	mov	r1, r6
 80101e0:	a80c      	add	r0, sp, #48	; 0x30
 80101e2:	f004 fba7 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80101e6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80101ea:	9306      	str	r3, [sp, #24]
 80101ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80101f0:	9307      	str	r3, [sp, #28]
 80101f2:	9b03      	ldr	r3, [sp, #12]
 80101f4:	f8d3 a000 	ldr.w	sl, [r3]
 80101f8:	f1ba 0f00 	cmp.w	sl, #0
 80101fc:	f000 80b3 	beq.w	8010366 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 8010200:	4651      	mov	r1, sl
 8010202:	a810      	add	r0, sp, #64	; 0x40
 8010204:	f004 fb96 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010208:	2002      	movs	r0, #2
 801020a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 801020e:	9b01      	ldr	r3, [sp, #4]
 8010210:	9a06      	ldr	r2, [sp, #24]
 8010212:	fb91 f1f0 	sdiv	r1, r1, r0
 8010216:	189d      	adds	r5, r3, r2
 8010218:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801021c:	9a07      	ldr	r2, [sp, #28]
 801021e:	4419      	add	r1, r3
 8010220:	9b02      	ldr	r3, [sp, #8]
 8010222:	4413      	add	r3, r2
 8010224:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010228:	1a6d      	subs	r5, r5, r1
 801022a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801022e:	fb92 f2f0 	sdiv	r2, r2, r0
 8010232:	440a      	add	r2, r1
 8010234:	1a9b      	subs	r3, r3, r2
 8010236:	435b      	muls	r3, r3
 8010238:	fb05 3505 	mla	r5, r5, r5, r3
 801023c:	4f4c      	ldr	r7, [pc, #304]	; (8010370 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801023e:	ac10      	add	r4, sp, #64	; 0x40
 8010240:	f1b9 0f0c 	cmp.w	r9, #12
 8010244:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010246:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010248:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801024a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801024c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801024e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010250:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010254:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010258:	f04f 0303 	mov.w	r3, #3
 801025c:	bfd8      	it	le
 801025e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010262:	f04f 0400 	mov.w	r4, #0
 8010266:	f8cd 9000 	str.w	r9, [sp]
 801026a:	bfcc      	ite	gt
 801026c:	4698      	movgt	r8, r3
 801026e:	fb92 f8f3 	sdivle	r8, r2, r3
 8010272:	1c63      	adds	r3, r4, #1
 8010274:	aa10      	add	r2, sp, #64	; 0x40
 8010276:	f004 0401 	and.w	r4, r4, #1
 801027a:	f04f 0b00 	mov.w	fp, #0
 801027e:	9308      	str	r3, [sp, #32]
 8010280:	9b00      	ldr	r3, [sp, #0]
 8010282:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010286:	fb93 f3f8 	sdiv	r3, r3, r8
 801028a:	3404      	adds	r4, #4
 801028c:	b29b      	uxth	r3, r3
 801028e:	9304      	str	r3, [sp, #16]
 8010290:	9a04      	ldr	r2, [sp, #16]
 8010292:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010296:	fb13 f302 	smulbb	r3, r3, r2
 801029a:	9a01      	ldr	r2, [sp, #4]
 801029c:	b29b      	uxth	r3, r3
 801029e:	1899      	adds	r1, r3, r2
 80102a0:	9305      	str	r3, [sp, #20]
 80102a2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80102a6:	b209      	sxth	r1, r1
 80102a8:	4299      	cmp	r1, r3
 80102aa:	db4d      	blt.n	8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102ac:	8932      	ldrh	r2, [r6, #8]
 80102ae:	4413      	add	r3, r2
 80102b0:	b21b      	sxth	r3, r3
 80102b2:	4299      	cmp	r1, r3
 80102b4:	da48      	bge.n	8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102b6:	9b04      	ldr	r3, [sp, #16]
 80102b8:	6827      	ldr	r7, [r4, #0]
 80102ba:	fb17 f703 	smulbb	r7, r7, r3
 80102be:	9b02      	ldr	r3, [sp, #8]
 80102c0:	b2bf      	uxth	r7, r7
 80102c2:	18fa      	adds	r2, r7, r3
 80102c4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80102c8:	b212      	sxth	r2, r2
 80102ca:	429a      	cmp	r2, r3
 80102cc:	db3c      	blt.n	8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102ce:	8970      	ldrh	r0, [r6, #10]
 80102d0:	4403      	add	r3, r0
 80102d2:	b21b      	sxth	r3, r3
 80102d4:	429a      	cmp	r2, r3
 80102d6:	da37      	bge.n	8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102d8:	2300      	movs	r3, #0
 80102da:	4630      	mov	r0, r6
 80102dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80102de:	ab0b      	add	r3, sp, #44	; 0x2c
 80102e0:	f7ff ff36 	bl	8010150 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80102e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80102e6:	b37a      	cbz	r2, 8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102e8:	4552      	cmp	r2, sl
 80102ea:	d02d      	beq.n	8010348 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80102ec:	4611      	mov	r1, r2
 80102ee:	a80e      	add	r0, sp, #56	; 0x38
 80102f0:	9209      	str	r2, [sp, #36]	; 0x24
 80102f2:	f004 fb1f 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80102f6:	f04f 0e02 	mov.w	lr, #2
 80102fa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80102fe:	9a06      	ldr	r2, [sp, #24]
 8010300:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010304:	9b01      	ldr	r3, [sp, #4]
 8010306:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801030a:	4413      	add	r3, r2
 801030c:	9a07      	ldr	r2, [sp, #28]
 801030e:	fb91 f1fe 	sdiv	r1, r1, lr
 8010312:	fb9c fcfe 	sdiv	ip, ip, lr
 8010316:	4401      	add	r1, r0
 8010318:	1a58      	subs	r0, r3, r1
 801031a:	9b02      	ldr	r3, [sp, #8]
 801031c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010320:	4413      	add	r3, r2
 8010322:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010324:	448c      	add	ip, r1
 8010326:	eba3 030c 	sub.w	r3, r3, ip
 801032a:	435b      	muls	r3, r3
 801032c:	fb00 3300 	mla	r3, r0, r0, r3
 8010330:	42ab      	cmp	r3, r5
 8010332:	d208      	bcs.n	8010346 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010334:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010336:	461d      	mov	r5, r3
 8010338:	9803      	ldr	r0, [sp, #12]
 801033a:	6001      	str	r1, [r0, #0]
 801033c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801033e:	9805      	ldr	r0, [sp, #20]
 8010340:	8008      	strh	r0, [r1, #0]
 8010342:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010344:	800f      	strh	r7, [r1, #0]
 8010346:	4692      	mov	sl, r2
 8010348:	f10b 0b01 	add.w	fp, fp, #1
 801034c:	3408      	adds	r4, #8
 801034e:	f1bb 0f04 	cmp.w	fp, #4
 8010352:	d19d      	bne.n	8010290 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010354:	9b00      	ldr	r3, [sp, #0]
 8010356:	9c08      	ldr	r4, [sp, #32]
 8010358:	444b      	add	r3, r9
 801035a:	4544      	cmp	r4, r8
 801035c:	9300      	str	r3, [sp, #0]
 801035e:	d188      	bne.n	8010272 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010360:	b021      	add	sp, #132	; 0x84
 8010362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010366:	f04f 35ff 	mov.w	r5, #4294967295
 801036a:	e767      	b.n	801023c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 801036c:	240016b0 	.word	0x240016b0
 8010370:	08025368 	.word	0x08025368

08010374 <_ZN8touchgfx4RectaNERKS0_>:
 8010374:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010378:	f9b1 7000 	ldrsh.w	r7, [r1]
 801037c:	888c      	ldrh	r4, [r1, #4]
 801037e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010382:	443c      	add	r4, r7
 8010384:	b2a4      	uxth	r4, r4
 8010386:	fa0f f884 	sxth.w	r8, r4
 801038a:	45c1      	cmp	r9, r8
 801038c:	da2f      	bge.n	80103ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801038e:	8882      	ldrh	r2, [r0, #4]
 8010390:	444a      	add	r2, r9
 8010392:	b292      	uxth	r2, r2
 8010394:	fa0f fe82 	sxth.w	lr, r2
 8010398:	4577      	cmp	r7, lr
 801039a:	da28      	bge.n	80103ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801039c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80103a0:	88cb      	ldrh	r3, [r1, #6]
 80103a2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80103a6:	442b      	add	r3, r5
 80103a8:	b21b      	sxth	r3, r3
 80103aa:	429e      	cmp	r6, r3
 80103ac:	da1f      	bge.n	80103ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80103ae:	88c3      	ldrh	r3, [r0, #6]
 80103b0:	4433      	add	r3, r6
 80103b2:	b29b      	uxth	r3, r3
 80103b4:	fa0f fc83 	sxth.w	ip, r3
 80103b8:	4565      	cmp	r5, ip
 80103ba:	da18      	bge.n	80103ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80103bc:	454f      	cmp	r7, r9
 80103be:	bfb8      	it	lt
 80103c0:	464f      	movlt	r7, r9
 80103c2:	42b5      	cmp	r5, r6
 80103c4:	bfb8      	it	lt
 80103c6:	4635      	movlt	r5, r6
 80103c8:	45f0      	cmp	r8, lr
 80103ca:	bfd8      	it	le
 80103cc:	4622      	movle	r2, r4
 80103ce:	1bd2      	subs	r2, r2, r7
 80103d0:	8082      	strh	r2, [r0, #4]
 80103d2:	884a      	ldrh	r2, [r1, #2]
 80103d4:	88c9      	ldrh	r1, [r1, #6]
 80103d6:	8007      	strh	r7, [r0, #0]
 80103d8:	440a      	add	r2, r1
 80103da:	8045      	strh	r5, [r0, #2]
 80103dc:	b292      	uxth	r2, r2
 80103de:	b211      	sxth	r1, r2
 80103e0:	458c      	cmp	ip, r1
 80103e2:	bfa8      	it	ge
 80103e4:	4613      	movge	r3, r2
 80103e6:	1b5b      	subs	r3, r3, r5
 80103e8:	80c3      	strh	r3, [r0, #6]
 80103ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80103ee:	2300      	movs	r3, #0
 80103f0:	8003      	strh	r3, [r0, #0]
 80103f2:	8043      	strh	r3, [r0, #2]
 80103f4:	8083      	strh	r3, [r0, #4]
 80103f6:	80c3      	strh	r3, [r0, #6]
 80103f8:	e7f7      	b.n	80103ea <_ZN8touchgfx4RectaNERKS0_+0x76>

080103fa <_ZNK8touchgfx4Rect7isEmptyEv>:
 80103fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80103fe:	2b00      	cmp	r3, #0
 8010400:	dd06      	ble.n	8010410 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010402:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010406:	2800      	cmp	r0, #0
 8010408:	bfcc      	ite	gt
 801040a:	2000      	movgt	r0, #0
 801040c:	2001      	movle	r0, #1
 801040e:	4770      	bx	lr
 8010410:	2001      	movs	r0, #1
 8010412:	4770      	bx	lr

08010414 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010414:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010418:	2300      	movs	r3, #0
 801041a:	4604      	mov	r4, r0
 801041c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801041e:	8003      	strh	r3, [r0, #0]
 8010420:	8043      	strh	r3, [r0, #2]
 8010422:	8083      	strh	r3, [r0, #4]
 8010424:	80c3      	strh	r3, [r0, #6]
 8010426:	2d00      	cmp	r5, #0
 8010428:	d040      	beq.n	80104ac <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 801042a:	1d28      	adds	r0, r5, #4
 801042c:	f7ff ffe5 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8010430:	b988      	cbnz	r0, 8010456 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010432:	4620      	mov	r0, r4
 8010434:	f7ff ffe1 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8010438:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801043c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010440:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010444:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010448:	b138      	cbz	r0, 801045a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 801044a:	8022      	strh	r2, [r4, #0]
 801044c:	8063      	strh	r3, [r4, #2]
 801044e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010452:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010456:	69ad      	ldr	r5, [r5, #24]
 8010458:	e7e5      	b.n	8010426 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 801045a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801045e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010462:	4290      	cmp	r0, r2
 8010464:	4607      	mov	r7, r0
 8010466:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801046a:	460e      	mov	r6, r1
 801046c:	bfa8      	it	ge
 801046e:	4617      	movge	r7, r2
 8010470:	4299      	cmp	r1, r3
 8010472:	4472      	add	r2, lr
 8010474:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010478:	bfa8      	it	ge
 801047a:	461e      	movge	r6, r3
 801047c:	4440      	add	r0, r8
 801047e:	4471      	add	r1, lr
 8010480:	4463      	add	r3, ip
 8010482:	b200      	sxth	r0, r0
 8010484:	8027      	strh	r7, [r4, #0]
 8010486:	b212      	sxth	r2, r2
 8010488:	8066      	strh	r6, [r4, #2]
 801048a:	b209      	sxth	r1, r1
 801048c:	b21b      	sxth	r3, r3
 801048e:	4290      	cmp	r0, r2
 8010490:	bfac      	ite	ge
 8010492:	ebc7 0200 	rsbge	r2, r7, r0
 8010496:	ebc7 0202 	rsblt	r2, r7, r2
 801049a:	4299      	cmp	r1, r3
 801049c:	bfac      	ite	ge
 801049e:	ebc6 0301 	rsbge	r3, r6, r1
 80104a2:	ebc6 0303 	rsblt	r3, r6, r3
 80104a6:	80a2      	strh	r2, [r4, #4]
 80104a8:	80e3      	strh	r3, [r4, #6]
 80104aa:	e7d4      	b.n	8010456 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80104ac:	4620      	mov	r0, r4
 80104ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080104b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80104b2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80104b6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80104ba:	b383      	cbz	r3, 801051e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80104bc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80104be:	b374      	cbz	r4, 801051e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80104c0:	f9b1 5000 	ldrsh.w	r5, [r1]
 80104c4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80104c8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80104cc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80104d0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80104d4:	b303      	cbz	r3, 8010518 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80104d6:	4668      	mov	r0, sp
 80104d8:	1d21      	adds	r1, r4, #4
 80104da:	f8ad 5000 	strh.w	r5, [sp]
 80104de:	f8ad 6002 	strh.w	r6, [sp, #2]
 80104e2:	f8ad 7004 	strh.w	r7, [sp, #4]
 80104e6:	f8ad 8006 	strh.w	r8, [sp, #6]
 80104ea:	f7ff ff43 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 80104ee:	4668      	mov	r0, sp
 80104f0:	f7ff ff83 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 80104f4:	b980      	cbnz	r0, 8010518 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80104f6:	f8bd 3000 	ldrh.w	r3, [sp]
 80104fa:	4669      	mov	r1, sp
 80104fc:	88a2      	ldrh	r2, [r4, #4]
 80104fe:	4620      	mov	r0, r4
 8010500:	1a9b      	subs	r3, r3, r2
 8010502:	88e2      	ldrh	r2, [r4, #6]
 8010504:	f8ad 3000 	strh.w	r3, [sp]
 8010508:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801050c:	1a9b      	subs	r3, r3, r2
 801050e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010512:	6823      	ldr	r3, [r4, #0]
 8010514:	689b      	ldr	r3, [r3, #8]
 8010516:	4798      	blx	r3
 8010518:	69a4      	ldr	r4, [r4, #24]
 801051a:	2c00      	cmp	r4, #0
 801051c:	d1d8      	bne.n	80104d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801051e:	b002      	add	sp, #8
 8010520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010524 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010524:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010526:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801052a:	460d      	mov	r5, r1
 801052c:	4616      	mov	r6, r2
 801052e:	b323      	cbz	r3, 801057a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010530:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010532:	b314      	cbz	r4, 801057a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010534:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010538:	b1eb      	cbz	r3, 8010576 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801053a:	6828      	ldr	r0, [r5, #0]
 801053c:	466b      	mov	r3, sp
 801053e:	6869      	ldr	r1, [r5, #4]
 8010540:	c303      	stmia	r3!, {r0, r1}
 8010542:	4668      	mov	r0, sp
 8010544:	1d21      	adds	r1, r4, #4
 8010546:	f7ff ff15 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801054a:	4668      	mov	r0, sp
 801054c:	f7ff ff55 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8010550:	b988      	cbnz	r0, 8010576 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010552:	f8bd 3000 	ldrh.w	r3, [sp]
 8010556:	4669      	mov	r1, sp
 8010558:	88a2      	ldrh	r2, [r4, #4]
 801055a:	4620      	mov	r0, r4
 801055c:	1a9b      	subs	r3, r3, r2
 801055e:	88e2      	ldrh	r2, [r4, #6]
 8010560:	f8ad 3000 	strh.w	r3, [sp]
 8010564:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010568:	1a9b      	subs	r3, r3, r2
 801056a:	4632      	mov	r2, r6
 801056c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010570:	6823      	ldr	r3, [r4, #0]
 8010572:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010574:	4798      	blx	r3
 8010576:	69a4      	ldr	r4, [r4, #24]
 8010578:	e7db      	b.n	8010532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 801057a:	b002      	add	sp, #8
 801057c:	bd70      	pop	{r4, r5, r6, pc}

0801057e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 801057e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010582:	4770      	bx	lr

08010584 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8010584:	4770      	bx	lr

08010586 <_ZN8touchgfx3HAL10FlushCacheEv>:
 8010586:	4770      	bx	lr

08010588 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010588:	6803      	ldr	r3, [r0, #0]
 801058a:	b513      	push	{r0, r1, r4, lr}
 801058c:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010590:	2300      	movs	r3, #0
 8010592:	e9cd 3300 	strd	r3, r3, [sp]
 8010596:	466b      	mov	r3, sp
 8010598:	47a0      	blx	r4
 801059a:	b002      	add	sp, #8
 801059c:	bd10      	pop	{r4, pc}

0801059e <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 801059e:	2301      	movs	r3, #1
 80105a0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80105a4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80105a8:	4770      	bx	lr

080105aa <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80105aa:	2301      	movs	r3, #1
 80105ac:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80105b0:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80105b4:	4770      	bx	lr

080105b6 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80105b6:	6843      	ldr	r3, [r0, #4]
 80105b8:	2201      	movs	r2, #1
 80105ba:	725a      	strb	r2, [r3, #9]
 80105bc:	6840      	ldr	r0, [r0, #4]
 80105be:	6803      	ldr	r3, [r0, #0]
 80105c0:	691b      	ldr	r3, [r3, #16]
 80105c2:	4718      	bx	r3

080105c4 <_ZN8touchgfx3HAL8flushDMAEv>:
 80105c4:	6840      	ldr	r0, [r0, #4]
 80105c6:	6803      	ldr	r3, [r0, #0]
 80105c8:	689b      	ldr	r3, [r3, #8]
 80105ca:	4718      	bx	r3

080105cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80105cc:	b530      	push	{r4, r5, lr}
 80105ce:	b08b      	sub	sp, #44	; 0x2c
 80105d0:	6804      	ldr	r4, [r0, #0]
 80105d2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80105d6:	9509      	str	r5, [sp, #36]	; 0x24
 80105d8:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80105dc:	9508      	str	r5, [sp, #32]
 80105de:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80105e2:	9507      	str	r5, [sp, #28]
 80105e4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80105e8:	9506      	str	r5, [sp, #24]
 80105ea:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80105ee:	9505      	str	r5, [sp, #20]
 80105f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80105f4:	9504      	str	r5, [sp, #16]
 80105f6:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80105fa:	9503      	str	r5, [sp, #12]
 80105fc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010600:	9502      	str	r5, [sp, #8]
 8010602:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010606:	e9cd 3500 	strd	r3, r5, [sp]
 801060a:	4613      	mov	r3, r2
 801060c:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 801060e:	2200      	movs	r2, #0
 8010610:	47a0      	blx	r4
 8010612:	b00b      	add	sp, #44	; 0x2c
 8010614:	bd30      	pop	{r4, r5, pc}
	...

08010618 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010618:	4b04      	ldr	r3, [pc, #16]	; (801062c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801061a:	781b      	ldrb	r3, [r3, #0]
 801061c:	b123      	cbz	r3, 8010628 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801061e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010622:	f080 0001 	eor.w	r0, r0, #1
 8010626:	4770      	bx	lr
 8010628:	2001      	movs	r0, #1
 801062a:	4770      	bx	lr
 801062c:	240016ae 	.word	0x240016ae

08010630 <_ZN8touchgfx3HAL8endFrameEv>:
 8010630:	b510      	push	{r4, lr}
 8010632:	4604      	mov	r4, r0
 8010634:	6840      	ldr	r0, [r0, #4]
 8010636:	6803      	ldr	r3, [r0, #0]
 8010638:	689b      	ldr	r3, [r3, #8]
 801063a:	4798      	blx	r3
 801063c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010640:	b113      	cbz	r3, 8010648 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010642:	2301      	movs	r3, #1
 8010644:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010648:	bd10      	pop	{r4, pc}

0801064a <_ZN8touchgfx3HAL10initializeEv>:
 801064a:	b510      	push	{r4, lr}
 801064c:	4604      	mov	r4, r0
 801064e:	f7fd fa1b 	bl	800da88 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010652:	f7fc ff81 	bl	800d558 <_ZN8touchgfx4GPIO4initEv>
 8010656:	6860      	ldr	r0, [r4, #4]
 8010658:	6803      	ldr	r3, [r0, #0]
 801065a:	68db      	ldr	r3, [r3, #12]
 801065c:	4798      	blx	r3
 801065e:	68e0      	ldr	r0, [r4, #12]
 8010660:	6803      	ldr	r3, [r0, #0]
 8010662:	689b      	ldr	r3, [r3, #8]
 8010664:	4798      	blx	r3
 8010666:	6823      	ldr	r3, [r4, #0]
 8010668:	4620      	mov	r0, r4
 801066a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801066c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010670:	4718      	bx	r3

08010672 <_ZN8touchgfx3HAL9taskEntryEv>:
 8010672:	b508      	push	{r3, lr}
 8010674:	6803      	ldr	r3, [r0, #0]
 8010676:	4604      	mov	r4, r0
 8010678:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801067c:	4798      	blx	r3
 801067e:	6823      	ldr	r3, [r4, #0]
 8010680:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010682:	4620      	mov	r0, r4
 8010684:	4798      	blx	r3
 8010686:	f7fd fa73 	bl	800db70 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 801068a:	6823      	ldr	r3, [r4, #0]
 801068c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801068e:	e7f8      	b.n	8010682 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08010690 <_ZN8touchgfx3HAL4tickEv>:
 8010690:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010692:	6803      	ldr	r3, [r0, #0]
 8010694:	4604      	mov	r4, r0
 8010696:	4d5b      	ldr	r5, [pc, #364]	; (8010804 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010698:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801069c:	4798      	blx	r3
 801069e:	2800      	cmp	r0, #0
 80106a0:	f000 8095 	beq.w	80107ce <_ZN8touchgfx3HAL4tickEv+0x13e>
 80106a4:	2001      	movs	r0, #1
 80106a6:	2600      	movs	r6, #0
 80106a8:	f7fc ff5e 	bl	800d568 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80106ac:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80106b0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80106b4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80106b8:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80106bc:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80106c0:	b133      	cbz	r3, 80106d0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80106c2:	6823      	ldr	r3, [r4, #0]
 80106c4:	4620      	mov	r0, r4
 80106c6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80106ca:	4798      	blx	r3
 80106cc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80106d0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80106d4:	2601      	movs	r6, #1
 80106d6:	6862      	ldr	r2, [r4, #4]
 80106d8:	f083 0301 	eor.w	r3, r3, #1
 80106dc:	702e      	strb	r6, [r5, #0]
 80106de:	7253      	strb	r3, [r2, #9]
 80106e0:	f003 f814 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 80106e4:	6803      	ldr	r3, [r0, #0]
 80106e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80106e8:	4798      	blx	r3
 80106ea:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80106ee:	b90b      	cbnz	r3, 80106f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80106f0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80106f4:	f003 f80a 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 80106f8:	6803      	ldr	r3, [r0, #0]
 80106fa:	695b      	ldr	r3, [r3, #20]
 80106fc:	4798      	blx	r3
 80106fe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010700:	6803      	ldr	r3, [r0, #0]
 8010702:	691b      	ldr	r3, [r3, #16]
 8010704:	4798      	blx	r3
 8010706:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801070a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801070e:	3b01      	subs	r3, #1
 8010710:	b2db      	uxtb	r3, r3
 8010712:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010716:	b10a      	cbz	r2, 801071c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010718:	2b00      	cmp	r3, #0
 801071a:	d1eb      	bne.n	80106f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 801071c:	4a3a      	ldr	r2, [pc, #232]	; (8010808 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801071e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010722:	7813      	ldrb	r3, [r2, #0]
 8010724:	3301      	adds	r3, #1
 8010726:	b25b      	sxtb	r3, r3
 8010728:	4299      	cmp	r1, r3
 801072a:	7013      	strb	r3, [r2, #0]
 801072c:	dc10      	bgt.n	8010750 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801072e:	2300      	movs	r3, #0
 8010730:	68e0      	ldr	r0, [r4, #12]
 8010732:	a902      	add	r1, sp, #8
 8010734:	7013      	strb	r3, [r2, #0]
 8010736:	aa03      	add	r2, sp, #12
 8010738:	6803      	ldr	r3, [r0, #0]
 801073a:	68db      	ldr	r3, [r3, #12]
 801073c:	4798      	blx	r3
 801073e:	6823      	ldr	r3, [r4, #0]
 8010740:	2800      	cmp	r0, #0
 8010742:	d050      	beq.n	80107e6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010744:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010748:	4620      	mov	r0, r4
 801074a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801074e:	4798      	blx	r3
 8010750:	2300      	movs	r3, #0
 8010752:	6960      	ldr	r0, [r4, #20]
 8010754:	f88d 3007 	strb.w	r3, [sp, #7]
 8010758:	b158      	cbz	r0, 8010772 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801075a:	6803      	ldr	r3, [r0, #0]
 801075c:	f10d 0107 	add.w	r1, sp, #7
 8010760:	68db      	ldr	r3, [r3, #12]
 8010762:	4798      	blx	r3
 8010764:	b128      	cbz	r0, 8010772 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010766:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010768:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801076c:	6803      	ldr	r3, [r0, #0]
 801076e:	68db      	ldr	r3, [r3, #12]
 8010770:	4798      	blx	r3
 8010772:	f104 001c 	add.w	r0, r4, #28
 8010776:	f013 f837 	bl	80237e8 <_ZN8touchgfx8Gestures4tickEv>
 801077a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801077e:	b30b      	cbz	r3, 80107c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010780:	6920      	ldr	r0, [r4, #16]
 8010782:	6803      	ldr	r3, [r0, #0]
 8010784:	691b      	ldr	r3, [r3, #16]
 8010786:	4798      	blx	r3
 8010788:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801078a:	4606      	mov	r6, r0
 801078c:	b903      	cbnz	r3, 8010790 <_ZN8touchgfx3HAL4tickEv+0x100>
 801078e:	6760      	str	r0, [r4, #116]	; 0x74
 8010790:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010792:	4a1e      	ldr	r2, [pc, #120]	; (801080c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010794:	1af3      	subs	r3, r6, r3
 8010796:	4293      	cmp	r3, r2
 8010798:	d914      	bls.n	80107c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 801079a:	6920      	ldr	r0, [r4, #16]
 801079c:	6803      	ldr	r3, [r0, #0]
 801079e:	699b      	ldr	r3, [r3, #24]
 80107a0:	4798      	blx	r3
 80107a2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80107a4:	2264      	movs	r2, #100	; 0x64
 80107a6:	1af3      	subs	r3, r6, r3
 80107a8:	fbb3 f3f2 	udiv	r3, r3, r2
 80107ac:	fbb0 f0f3 	udiv	r0, r0, r3
 80107b0:	2800      	cmp	r0, #0
 80107b2:	dc1d      	bgt.n	80107f0 <_ZN8touchgfx3HAL4tickEv+0x160>
 80107b4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80107b8:	6920      	ldr	r0, [r4, #16]
 80107ba:	2100      	movs	r1, #0
 80107bc:	6803      	ldr	r3, [r0, #0]
 80107be:	69db      	ldr	r3, [r3, #28]
 80107c0:	4798      	blx	r3
 80107c2:	6766      	str	r6, [r4, #116]	; 0x74
 80107c4:	f002 ffa2 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 80107c8:	6803      	ldr	r3, [r0, #0]
 80107ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80107cc:	4798      	blx	r3
 80107ce:	6823      	ldr	r3, [r4, #0]
 80107d0:	4620      	mov	r0, r4
 80107d2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80107d6:	4798      	blx	r3
 80107d8:	2001      	movs	r0, #1
 80107da:	f7fc fee1 	bl	800d5a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80107de:	2300      	movs	r3, #0
 80107e0:	702b      	strb	r3, [r5, #0]
 80107e2:	b004      	add	sp, #16
 80107e4:	bd70      	pop	{r4, r5, r6, pc}
 80107e6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80107ea:	4620      	mov	r0, r4
 80107ec:	4798      	blx	r3
 80107ee:	e7af      	b.n	8010750 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80107f0:	2863      	cmp	r0, #99	; 0x63
 80107f2:	bfcb      	itete	gt
 80107f4:	2300      	movgt	r3, #0
 80107f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80107fa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80107fe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010802:	e7d9      	b.n	80107b8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010804:	240016b4 	.word	0x240016b4
 8010808:	240016b5 	.word	0x240016b5
 801080c:	05f5e100 	.word	0x05f5e100

08010810 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010810:	b510      	push	{r4, lr}
 8010812:	4604      	mov	r4, r0
 8010814:	f7fd f960 	bl	800dad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010818:	2200      	movs	r2, #0
 801081a:	6863      	ldr	r3, [r4, #4]
 801081c:	729a      	strb	r2, [r3, #10]
 801081e:	bd10      	pop	{r4, pc}

08010820 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010820:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010822:	301c      	adds	r0, #28
 8010824:	f012 bfde 	b.w	80237e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010828 <_ZN8touchgfx3HAL5touchEll>:
 8010828:	b530      	push	{r4, r5, lr}
 801082a:	b087      	sub	sp, #28
 801082c:	4604      	mov	r4, r0
 801082e:	a804      	add	r0, sp, #16
 8010830:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010834:	f002 fd5c 	bl	80132f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010838:	9b04      	ldr	r3, [sp, #16]
 801083a:	a906      	add	r1, sp, #24
 801083c:	a803      	add	r0, sp, #12
 801083e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010842:	9b05      	ldr	r3, [sp, #20]
 8010844:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010848:	f002 fda4 	bl	8013394 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801084c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010850:	f104 001c 	add.w	r0, r4, #28
 8010854:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010858:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801085c:	b189      	cbz	r1, 8010882 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801085e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010862:	9300      	str	r3, [sp, #0]
 8010864:	4613      	mov	r3, r2
 8010866:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 801086a:	462a      	mov	r2, r5
 801086c:	f012 ffca 	bl	8023804 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010870:	b128      	cbz	r0, 801087e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010872:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010876:	6623      	str	r3, [r4, #96]	; 0x60
 8010878:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801087c:	6663      	str	r3, [r4, #100]	; 0x64
 801087e:	b007      	add	sp, #28
 8010880:	bd30      	pop	{r4, r5, pc}
 8010882:	f012 ffff 	bl	8023884 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010886:	2301      	movs	r3, #1
 8010888:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801088c:	e7f1      	b.n	8010872 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801088e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801088e:	b510      	push	{r4, lr}
 8010890:	2b00      	cmp	r3, #0
 8010892:	d046      	beq.n	8010922 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010894:	ea81 0002 	eor.w	r0, r1, r2
 8010898:	07c4      	lsls	r4, r0, #31
 801089a:	d508      	bpl.n	80108ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801089c:	440b      	add	r3, r1
 801089e:	3a01      	subs	r2, #1
 80108a0:	428b      	cmp	r3, r1
 80108a2:	d93e      	bls.n	8010922 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80108a4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80108a8:	f801 0b01 	strb.w	r0, [r1], #1
 80108ac:	e7f8      	b.n	80108a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80108ae:	07d0      	lsls	r0, r2, #31
 80108b0:	bf42      	ittt	mi
 80108b2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80108b6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80108ba:	f801 0b01 	strbmi.w	r0, [r1], #1
 80108be:	2b01      	cmp	r3, #1
 80108c0:	d911      	bls.n	80108e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80108c2:	ea81 0402 	eor.w	r4, r1, r2
 80108c6:	4610      	mov	r0, r2
 80108c8:	07a4      	lsls	r4, r4, #30
 80108ca:	d022      	beq.n	8010912 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80108cc:	f023 0401 	bic.w	r4, r3, #1
 80108d0:	440c      	add	r4, r1
 80108d2:	428c      	cmp	r4, r1
 80108d4:	4602      	mov	r2, r0
 80108d6:	d904      	bls.n	80108e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80108d8:	8812      	ldrh	r2, [r2, #0]
 80108da:	3002      	adds	r0, #2
 80108dc:	f821 2b02 	strh.w	r2, [r1], #2
 80108e0:	e7f7      	b.n	80108d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80108e2:	f003 0301 	and.w	r3, r3, #1
 80108e6:	f023 0003 	bic.w	r0, r3, #3
 80108ea:	4408      	add	r0, r1
 80108ec:	4288      	cmp	r0, r1
 80108ee:	4614      	mov	r4, r2
 80108f0:	d904      	bls.n	80108fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80108f2:	6824      	ldr	r4, [r4, #0]
 80108f4:	3204      	adds	r2, #4
 80108f6:	f841 4b04 	str.w	r4, [r1], #4
 80108fa:	e7f7      	b.n	80108ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80108fc:	f003 0303 	and.w	r3, r3, #3
 8010900:	3a01      	subs	r2, #1
 8010902:	440b      	add	r3, r1
 8010904:	428b      	cmp	r3, r1
 8010906:	d90c      	bls.n	8010922 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010908:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801090c:	f801 0b01 	strb.w	r0, [r1], #1
 8010910:	e7f8      	b.n	8010904 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010912:	0790      	lsls	r0, r2, #30
 8010914:	d0e7      	beq.n	80108e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010916:	f832 0b02 	ldrh.w	r0, [r2], #2
 801091a:	3b02      	subs	r3, #2
 801091c:	f821 0b02 	strh.w	r0, [r1], #2
 8010920:	e7e1      	b.n	80108e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010922:	2001      	movs	r0, #1
 8010924:	bd10      	pop	{r4, pc}

08010926 <_ZN8touchgfx3HAL7noTouchEv>:
 8010926:	b510      	push	{r4, lr}
 8010928:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801092c:	4604      	mov	r4, r0
 801092e:	b153      	cbz	r3, 8010946 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010930:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010934:	2101      	movs	r1, #1
 8010936:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 801093a:	301c      	adds	r0, #28
 801093c:	f012 ffa2 	bl	8023884 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010940:	2300      	movs	r3, #0
 8010942:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010946:	bd10      	pop	{r4, pc}

08010948 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010948:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801094c:	b085      	sub	sp, #20
 801094e:	4604      	mov	r4, r0
 8010950:	2000      	movs	r0, #0
 8010952:	4699      	mov	r9, r3
 8010954:	ad04      	add	r5, sp, #16
 8010956:	460f      	mov	r7, r1
 8010958:	4690      	mov	r8, r2
 801095a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801095e:	69a0      	ldr	r0, [r4, #24]
 8010960:	6806      	ldr	r6, [r0, #0]
 8010962:	9501      	str	r5, [sp, #4]
 8010964:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010968:	9500      	str	r5, [sp, #0]
 801096a:	6835      	ldr	r5, [r6, #0]
 801096c:	47a8      	blx	r5
 801096e:	4d10      	ldr	r5, [pc, #64]	; (80109b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010970:	4606      	mov	r6, r0
 8010972:	f8a5 9000 	strh.w	r9, [r5]
 8010976:	f7fa fa5b 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 801097a:	6803      	ldr	r3, [r0, #0]
 801097c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801097e:	4798      	blx	r3
 8010980:	b128      	cbz	r0, 801098e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010982:	2801      	cmp	r0, #1
 8010984:	d00b      	beq.n	801099e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010986:	4630      	mov	r0, r6
 8010988:	b005      	add	sp, #20
 801098a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801098e:	882b      	ldrh	r3, [r5, #0]
 8010990:	fb08 7203 	mla	r2, r8, r3, r7
 8010994:	9b03      	ldr	r3, [sp, #12]
 8010996:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801099a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801099c:	e7f3      	b.n	8010986 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801099e:	882a      	ldrh	r2, [r5, #0]
 80109a0:	9b03      	ldr	r3, [sp, #12]
 80109a2:	fb08 7202 	mla	r2, r8, r2, r7
 80109a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80109aa:	1a9a      	subs	r2, r3, r2
 80109ac:	63e2      	str	r2, [r4, #60]	; 0x3c
 80109ae:	e7ea      	b.n	8010986 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80109b0:	240016aa 	.word	0x240016aa

080109b4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80109b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109b6:	b08b      	sub	sp, #44	; 0x2c
 80109b8:	4617      	mov	r7, r2
 80109ba:	4604      	mov	r4, r0
 80109bc:	460e      	mov	r6, r1
 80109be:	461d      	mov	r5, r3
 80109c0:	f7fa fa36 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 80109c4:	6803      	ldr	r3, [r0, #0]
 80109c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109c8:	4798      	blx	r3
 80109ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80109ce:	9007      	str	r0, [sp, #28]
 80109d0:	4631      	mov	r1, r6
 80109d2:	6822      	ldr	r2, [r4, #0]
 80109d4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80109d8:	4b0c      	ldr	r3, [pc, #48]	; (8010a0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80109da:	4620      	mov	r0, r4
 80109dc:	881b      	ldrh	r3, [r3, #0]
 80109de:	9306      	str	r3, [sp, #24]
 80109e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80109e4:	9305      	str	r3, [sp, #20]
 80109e6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80109ea:	9304      	str	r3, [sp, #16]
 80109ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80109f0:	9303      	str	r3, [sp, #12]
 80109f2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80109f6:	9302      	str	r3, [sp, #8]
 80109f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80109fc:	e9cd 5300 	strd	r5, r3, [sp]
 8010a00:	463b      	mov	r3, r7
 8010a02:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010a04:	2200      	movs	r2, #0
 8010a06:	47a8      	blx	r5
 8010a08:	b00b      	add	sp, #44	; 0x2c
 8010a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a0c:	240016aa 	.word	0x240016aa

08010a10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010a10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a14:	4698      	mov	r8, r3
 8010a16:	6803      	ldr	r3, [r0, #0]
 8010a18:	b08b      	sub	sp, #44	; 0x2c
 8010a1a:	4617      	mov	r7, r2
 8010a1c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010a1e:	460e      	mov	r6, r1
 8010a20:	4b13      	ldr	r3, [pc, #76]	; (8010a70 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010a22:	4604      	mov	r4, r0
 8010a24:	f8b3 9000 	ldrh.w	r9, [r3]
 8010a28:	f7fa fa02 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010a2c:	6803      	ldr	r3, [r0, #0]
 8010a2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a30:	4798      	blx	r3
 8010a32:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010a36:	2200      	movs	r2, #0
 8010a38:	4631      	mov	r1, r6
 8010a3a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010a3e:	2302      	movs	r3, #2
 8010a40:	4620      	mov	r0, r4
 8010a42:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010a46:	2301      	movs	r3, #1
 8010a48:	9305      	str	r3, [sp, #20]
 8010a4a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010a4e:	9304      	str	r3, [sp, #16]
 8010a50:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010a54:	9303      	str	r3, [sp, #12]
 8010a56:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010a5a:	9302      	str	r3, [sp, #8]
 8010a5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010a60:	e9cd 8300 	strd	r8, r3, [sp]
 8010a64:	463b      	mov	r3, r7
 8010a66:	47a8      	blx	r5
 8010a68:	b00b      	add	sp, #44	; 0x2c
 8010a6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a6e:	bf00      	nop
 8010a70:	240016aa 	.word	0x240016aa

08010a74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010a74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a78:	4698      	mov	r8, r3
 8010a7a:	6803      	ldr	r3, [r0, #0]
 8010a7c:	b087      	sub	sp, #28
 8010a7e:	460e      	mov	r6, r1
 8010a80:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010a82:	4617      	mov	r7, r2
 8010a84:	4b0f      	ldr	r3, [pc, #60]	; (8010ac4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010a86:	4604      	mov	r4, r0
 8010a88:	f8b3 9000 	ldrh.w	r9, [r3]
 8010a8c:	f7fa f9d0 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010a90:	6803      	ldr	r3, [r0, #0]
 8010a92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a94:	4798      	blx	r3
 8010a96:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010a9a:	463a      	mov	r2, r7
 8010a9c:	4631      	mov	r1, r6
 8010a9e:	f8cd 900c 	str.w	r9, [sp, #12]
 8010aa2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010aa6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010aaa:	4620      	mov	r0, r4
 8010aac:	9302      	str	r3, [sp, #8]
 8010aae:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010ab2:	9301      	str	r3, [sp, #4]
 8010ab4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010ab8:	9300      	str	r3, [sp, #0]
 8010aba:	4643      	mov	r3, r8
 8010abc:	47a8      	blx	r5
 8010abe:	b007      	add	sp, #28
 8010ac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010ac4:	240016aa 	.word	0x240016aa

08010ac8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010acc:	4604      	mov	r4, r0
 8010ace:	b08f      	sub	sp, #60	; 0x3c
 8010ad0:	4610      	mov	r0, r2
 8010ad2:	460d      	mov	r5, r1
 8010ad4:	4691      	mov	r9, r2
 8010ad6:	461e      	mov	r6, r3
 8010ad8:	f005 fa60 	bl	8015f9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010adc:	2800      	cmp	r0, #0
 8010ade:	f000 809d 	beq.w	8010c1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010ae2:	6823      	ldr	r3, [r4, #0]
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010c80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010aea:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010aee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010af0:	4798      	blx	r3
 8010af2:	6823      	ldr	r3, [r4, #0]
 8010af4:	4620      	mov	r0, r4
 8010af6:	f8df a18c 	ldr.w	sl, [pc, #396]	; 8010c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010afc:	4798      	blx	r3
 8010afe:	f8bb 3000 	ldrh.w	r3, [fp]
 8010b02:	4f5c      	ldr	r7, [pc, #368]	; (8010c74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010b04:	9301      	str	r3, [sp, #4]
 8010b06:	f8ba 3000 	ldrh.w	r3, [sl]
 8010b0a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010b0e:	4640      	mov	r0, r8
 8010b10:	9302      	str	r3, [sp, #8]
 8010b12:	883b      	ldrh	r3, [r7, #0]
 8010b14:	9303      	str	r3, [sp, #12]
 8010b16:	4b58      	ldr	r3, [pc, #352]	; (8010c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010b18:	881a      	ldrh	r2, [r3, #0]
 8010b1a:	9305      	str	r3, [sp, #20]
 8010b1c:	9204      	str	r2, [sp, #16]
 8010b1e:	f005 fad1 	bl	80160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010b22:	8038      	strh	r0, [r7, #0]
 8010b24:	4640      	mov	r0, r8
 8010b26:	f005 fb01 	bl	801612c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010b2a:	9b05      	ldr	r3, [sp, #20]
 8010b2c:	b280      	uxth	r0, r0
 8010b2e:	8018      	strh	r0, [r3, #0]
 8010b30:	4b52      	ldr	r3, [pc, #328]	; (8010c7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010b32:	781b      	ldrb	r3, [r3, #0]
 8010b34:	2b00      	cmp	r3, #0
 8010b36:	d174      	bne.n	8010c22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010b38:	883b      	ldrh	r3, [r7, #0]
 8010b3a:	f8aa 0000 	strh.w	r0, [sl]
 8010b3e:	f8ab 3000 	strh.w	r3, [fp]
 8010b42:	4648      	mov	r0, r9
 8010b44:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010b48:	f005 fa28 	bl	8015f9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010b4c:	2200      	movs	r2, #0
 8010b4e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010b52:	4611      	mov	r1, r2
 8010b54:	4628      	mov	r0, r5
 8010b56:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010b5a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010b5e:	f7fb f878 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
 8010b62:	2301      	movs	r3, #1
 8010b64:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010b68:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010b6c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010b70:	2b00      	cmp	r3, #0
 8010b72:	dd5c      	ble.n	8010c2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010b74:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010b78:	2b00      	cmp	r3, #0
 8010b7a:	dd58      	ble.n	8010c2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010b7c:	462a      	mov	r2, r5
 8010b7e:	ab0a      	add	r3, sp, #40	; 0x28
 8010b80:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010b84:	6851      	ldr	r1, [r2, #4]
 8010b86:	c303      	stmia	r3!, {r0, r1}
 8010b88:	4631      	mov	r1, r6
 8010b8a:	a80a      	add	r0, sp, #40	; 0x28
 8010b8c:	f7ff fbf2 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8010b90:	4b38      	ldr	r3, [pc, #224]	; (8010c74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010b92:	2100      	movs	r1, #0
 8010b94:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010b98:	4b37      	ldr	r3, [pc, #220]	; (8010c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010b9a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010b9e:	aa0a      	add	r2, sp, #40	; 0x28
 8010ba0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ba4:	910c      	str	r1, [sp, #48]	; 0x30
 8010ba6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010baa:	ab08      	add	r3, sp, #32
 8010bac:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010bb0:	e883 0003 	stmia.w	r3, {r0, r1}
 8010bb4:	4618      	mov	r0, r3
 8010bb6:	a90c      	add	r1, sp, #48	; 0x30
 8010bb8:	f7ff fbdc 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8010bbc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010bbe:	2b00      	cmp	r3, #0
 8010bc0:	d13c      	bne.n	8010c3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010bc2:	2000      	movs	r0, #0
 8010bc4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010bc8:	2600      	movs	r6, #0
 8010bca:	696b      	ldr	r3, [r5, #20]
 8010bcc:	a908      	add	r1, sp, #32
 8010bce:	682a      	ldr	r2, [r5, #0]
 8010bd0:	4628      	mov	r0, r5
 8010bd2:	9305      	str	r3, [sp, #20]
 8010bd4:	616e      	str	r6, [r5, #20]
 8010bd6:	6892      	ldr	r2, [r2, #8]
 8010bd8:	4790      	blx	r2
 8010bda:	9b05      	ldr	r3, [sp, #20]
 8010bdc:	4652      	mov	r2, sl
 8010bde:	4649      	mov	r1, r9
 8010be0:	616b      	str	r3, [r5, #20]
 8010be2:	4628      	mov	r0, r5
 8010be4:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010be8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010bec:	f7fb f831 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
 8010bf0:	9a01      	ldr	r2, [sp, #4]
 8010bf2:	4b23      	ldr	r3, [pc, #140]	; (8010c80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010bf4:	4620      	mov	r0, r4
 8010bf6:	801a      	strh	r2, [r3, #0]
 8010bf8:	9a02      	ldr	r2, [sp, #8]
 8010bfa:	4b22      	ldr	r3, [pc, #136]	; (8010c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010bfc:	801a      	strh	r2, [r3, #0]
 8010bfe:	9a03      	ldr	r2, [sp, #12]
 8010c00:	4b1c      	ldr	r3, [pc, #112]	; (8010c74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010c02:	801a      	strh	r2, [r3, #0]
 8010c04:	4b1c      	ldr	r3, [pc, #112]	; (8010c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010c06:	9a04      	ldr	r2, [sp, #16]
 8010c08:	801a      	strh	r2, [r3, #0]
 8010c0a:	6823      	ldr	r3, [r4, #0]
 8010c0c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010c10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010c12:	4798      	blx	r3
 8010c14:	6823      	ldr	r3, [r4, #0]
 8010c16:	4620      	mov	r0, r4
 8010c18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c1a:	4798      	blx	r3
 8010c1c:	b00f      	add	sp, #60	; 0x3c
 8010c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c22:	883b      	ldrh	r3, [r7, #0]
 8010c24:	f8ab 0000 	strh.w	r0, [fp]
 8010c28:	f8aa 3000 	strh.w	r3, [sl]
 8010c2c:	e789      	b.n	8010b42 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010c2e:	462a      	mov	r2, r5
 8010c30:	ab0a      	add	r3, sp, #40	; 0x28
 8010c32:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010c36:	6851      	ldr	r1, [r2, #4]
 8010c38:	c303      	stmia	r3!, {r0, r1}
 8010c3a:	e7a9      	b.n	8010b90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010c3c:	a807      	add	r0, sp, #28
 8010c3e:	f005 fbb1 	bl	80163a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010c42:	4606      	mov	r6, r0
 8010c44:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010c46:	6803      	ldr	r3, [r0, #0]
 8010c48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c4a:	4798      	blx	r3
 8010c4c:	4286      	cmp	r6, r0
 8010c4e:	d1b8      	bne.n	8010bc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010c50:	f7fa f8ee 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010c54:	6803      	ldr	r3, [r0, #0]
 8010c56:	4606      	mov	r6, r0
 8010c58:	a807      	add	r0, sp, #28
 8010c5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010c5c:	9305      	str	r3, [sp, #20]
 8010c5e:	f005 fba1 	bl	80163a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010c62:	9b05      	ldr	r3, [sp, #20]
 8010c64:	4601      	mov	r1, r0
 8010c66:	4630      	mov	r0, r6
 8010c68:	4798      	blx	r3
 8010c6a:	f080 0001 	eor.w	r0, r0, #1
 8010c6e:	b2c0      	uxtb	r0, r0
 8010c70:	e7a8      	b.n	8010bc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010c72:	bf00      	nop
 8010c74:	240016a4 	.word	0x240016a4
 8010c78:	240016a6 	.word	0x240016a6
 8010c7c:	240016a8 	.word	0x240016a8
 8010c80:	240016aa 	.word	0x240016aa
 8010c84:	240016ac 	.word	0x240016ac

08010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010c88:	4b07      	ldr	r3, [pc, #28]	; (8010ca8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010c8a:	b510      	push	{r4, lr}
 8010c8c:	781b      	ldrb	r3, [r3, #0]
 8010c8e:	4604      	mov	r4, r0
 8010c90:	b13b      	cbz	r3, 8010ca2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010c92:	6803      	ldr	r3, [r0, #0]
 8010c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c96:	4798      	blx	r3
 8010c98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010c9a:	4283      	cmp	r3, r0
 8010c9c:	d101      	bne.n	8010ca2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010c9e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010ca0:	bd10      	pop	{r4, pc}
 8010ca2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010ca4:	e7fc      	b.n	8010ca0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010ca6:	bf00      	nop
 8010ca8:	240016ae 	.word	0x240016ae

08010cac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010cac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cb0:	461d      	mov	r5, r3
 8010cb2:	b08a      	sub	sp, #40	; 0x28
 8010cb4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010cb8:	4690      	mov	r8, r2
 8010cba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010cbe:	2400      	movs	r4, #0
 8010cc0:	4607      	mov	r7, r0
 8010cc2:	fb06 8505 	mla	r5, r6, r5, r8
 8010cc6:	9404      	str	r4, [sp, #16]
 8010cc8:	f88d 4020 	strb.w	r4, [sp, #32]
 8010ccc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010cd0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010cd4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010cd8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010cdc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ce0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010ce4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ce8:	f7ff ffce 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010cec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010cf0:	6878      	ldr	r0, [r7, #4]
 8010cf2:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010cf6:	a901      	add	r1, sp, #4
 8010cf8:	9505      	str	r5, [sp, #20]
 8010cfa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010cfe:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010d02:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010d06:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010d0a:	6803      	ldr	r3, [r0, #0]
 8010d0c:	685b      	ldr	r3, [r3, #4]
 8010d0e:	4798      	blx	r3
 8010d10:	b00a      	add	sp, #40	; 0x28
 8010d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010d16 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010d16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d1a:	b08b      	sub	sp, #44	; 0x2c
 8010d1c:	2400      	movs	r4, #0
 8010d1e:	4691      	mov	r9, r2
 8010d20:	461d      	mov	r5, r3
 8010d22:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010d26:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010d2a:	4688      	mov	r8, r1
 8010d2c:	4607      	mov	r7, r0
 8010d2e:	9404      	str	r4, [sp, #16]
 8010d30:	fb06 9505 	mla	r5, r6, r5, r9
 8010d34:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010d38:	f7ff ffa6 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d3c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010d40:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010d44:	6878      	ldr	r0, [r7, #4]
 8010d46:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010d4a:	a901      	add	r1, sp, #4
 8010d4c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010d50:	9505      	str	r5, [sp, #20]
 8010d52:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010d56:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010d5a:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010d5e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010d62:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010d66:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010d6a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010d6e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010d72:	6803      	ldr	r3, [r0, #0]
 8010d74:	685b      	ldr	r3, [r3, #4]
 8010d76:	4798      	blx	r3
 8010d78:	b00b      	add	sp, #44	; 0x2c
 8010d7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010d80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010d80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d84:	b08a      	sub	sp, #40	; 0x28
 8010d86:	4698      	mov	r8, r3
 8010d88:	2300      	movs	r3, #0
 8010d8a:	4606      	mov	r6, r0
 8010d8c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010d90:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010d94:	2d0b      	cmp	r5, #11
 8010d96:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010d9a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010d9e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010da2:	9304      	str	r3, [sp, #16]
 8010da4:	d137      	bne.n	8010e16 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 8010da6:	2380      	movs	r3, #128	; 0x80
 8010da8:	f88d 0020 	strb.w	r0, [sp, #32]
 8010dac:	4630      	mov	r0, r6
 8010dae:	9203      	str	r2, [sp, #12]
 8010db0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010db4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010db8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010dbc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010dc0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010dc4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010dc8:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010dcc:	f7ff ff5c 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010dd0:	2c0b      	cmp	r4, #11
 8010dd2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010dd6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010dda:	bf94      	ite	ls
 8010ddc:	4b19      	ldrls	r3, [pc, #100]	; (8010e44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010dde:	2100      	movhi	r1, #0
 8010de0:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010de4:	bf98      	it	ls
 8010de6:	5d19      	ldrbls	r1, [r3, r4]
 8010de8:	fb02 8307 	mla	r3, r2, r7, r8
 8010dec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010df0:	10c9      	asrs	r1, r1, #3
 8010df2:	fb01 0003 	mla	r0, r1, r3, r0
 8010df6:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010dfa:	a901      	add	r1, sp, #4
 8010dfc:	9005      	str	r0, [sp, #20]
 8010dfe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010e02:	2300      	movs	r3, #0
 8010e04:	6870      	ldr	r0, [r6, #4]
 8010e06:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010e0a:	6803      	ldr	r3, [r0, #0]
 8010e0c:	685b      	ldr	r3, [r3, #4]
 8010e0e:	4798      	blx	r3
 8010e10:	b00a      	add	sp, #40	; 0x28
 8010e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e16:	2d02      	cmp	r5, #2
 8010e18:	d109      	bne.n	8010e2e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 8010e1a:	28ff      	cmp	r0, #255	; 0xff
 8010e1c:	d105      	bne.n	8010e2a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8010e1e:	f1bc 0f00 	cmp.w	ip, #0
 8010e22:	bf14      	ite	ne
 8010e24:	2340      	movne	r3, #64	; 0x40
 8010e26:	2320      	moveq	r3, #32
 8010e28:	e7be      	b.n	8010da8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010e2a:	2340      	movs	r3, #64	; 0x40
 8010e2c:	e7bc      	b.n	8010da8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010e2e:	28ff      	cmp	r0, #255	; 0xff
 8010e30:	d105      	bne.n	8010e3e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8010e32:	f1bc 0f00 	cmp.w	ip, #0
 8010e36:	bf14      	ite	ne
 8010e38:	2304      	movne	r3, #4
 8010e3a:	2301      	moveq	r3, #1
 8010e3c:	e7b4      	b.n	8010da8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010e3e:	2304      	movs	r3, #4
 8010e40:	e7b2      	b.n	8010da8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010e42:	bf00      	nop
 8010e44:	08025d14 	.word	0x08025d14

08010e48 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e4c:	b08b      	sub	sp, #44	; 0x2c
 8010e4e:	461d      	mov	r5, r3
 8010e50:	2400      	movs	r4, #0
 8010e52:	4688      	mov	r8, r1
 8010e54:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010e58:	4693      	mov	fp, r2
 8010e5a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010e5e:	4607      	mov	r7, r0
 8010e60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010e64:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010e68:	9404      	str	r4, [sp, #16]
 8010e6a:	bf14      	ite	ne
 8010e6c:	2308      	movne	r3, #8
 8010e6e:	2302      	moveq	r3, #2
 8010e70:	fb05 b50a 	mla	r5, r5, sl, fp
 8010e74:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010e78:	f7ff ff06 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e7c:	2e0b      	cmp	r6, #11
 8010e7e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010e82:	a901      	add	r1, sp, #4
 8010e84:	bf98      	it	ls
 8010e86:	4b13      	ldrls	r3, [pc, #76]	; (8010ed4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010e88:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010e8c:	bf98      	it	ls
 8010e8e:	5d9c      	ldrbls	r4, [r3, r6]
 8010e90:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010e94:	10e4      	asrs	r4, r4, #3
 8010e96:	f8cd 8010 	str.w	r8, [sp, #16]
 8010e9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010e9e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010ea2:	fb04 0405 	mla	r4, r4, r5, r0
 8010ea6:	6878      	ldr	r0, [r7, #4]
 8010ea8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010eac:	2300      	movs	r3, #0
 8010eae:	9405      	str	r4, [sp, #20]
 8010eb0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010eb4:	f88d 9020 	strb.w	r9, [sp, #32]
 8010eb8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010ebc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010ec0:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010ec4:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010ec8:	6803      	ldr	r3, [r0, #0]
 8010eca:	685b      	ldr	r3, [r3, #4]
 8010ecc:	4798      	blx	r3
 8010ece:	b00b      	add	sp, #44	; 0x2c
 8010ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ed4:	08025d14 	.word	0x08025d14

08010ed8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010edc:	461e      	mov	r6, r3
 8010ede:	4b0a      	ldr	r3, [pc, #40]	; (8010f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010ee0:	460f      	mov	r7, r1
 8010ee2:	4690      	mov	r8, r2
 8010ee4:	881d      	ldrh	r5, [r3, #0]
 8010ee6:	f7f9 ffa3 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010eee:	4798      	blx	r3
 8010ef0:	280b      	cmp	r0, #11
 8010ef2:	bf96      	itet	ls
 8010ef4:	4b05      	ldrls	r3, [pc, #20]	; (8010f0c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010ef6:	2400      	movhi	r4, #0
 8010ef8:	5c1c      	ldrbls	r4, [r3, r0]
 8010efa:	fb08 7005 	mla	r0, r8, r5, r7
 8010efe:	10e4      	asrs	r4, r4, #3
 8010f00:	fb04 6000 	mla	r0, r4, r0, r6
 8010f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f08:	240016aa 	.word	0x240016aa
 8010f0c:	08025d14 	.word	0x08025d14

08010f10 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010f10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f12:	b08b      	sub	sp, #44	; 0x2c
 8010f14:	461f      	mov	r7, r3
 8010f16:	4604      	mov	r4, r0
 8010f18:	4616      	mov	r6, r2
 8010f1a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010f1e:	2500      	movs	r5, #0
 8010f20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010f24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010f28:	9504      	str	r5, [sp, #16]
 8010f2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010f2e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010f32:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010f36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010f3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010f3e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010f42:	f88d 3020 	strb.w	r3, [sp, #32]
 8010f46:	f7ff fe9f 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f4a:	463a      	mov	r2, r7
 8010f4c:	4631      	mov	r1, r6
 8010f4e:	4603      	mov	r3, r0
 8010f50:	4620      	mov	r0, r4
 8010f52:	f7ff ffc1 	bl	8010ed8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010f56:	4b0e      	ldr	r3, [pc, #56]	; (8010f90 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010f58:	9005      	str	r0, [sp, #20]
 8010f5a:	881b      	ldrh	r3, [r3, #0]
 8010f5c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010f60:	f7f9 ff66 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010f64:	6803      	ldr	r3, [r0, #0]
 8010f66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f68:	4798      	blx	r3
 8010f6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010f6c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010f70:	a901      	add	r1, sp, #4
 8010f72:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010f76:	9304      	str	r3, [sp, #16]
 8010f78:	6860      	ldr	r0, [r4, #4]
 8010f7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010f7e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010f82:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010f86:	6803      	ldr	r3, [r0, #0]
 8010f88:	685b      	ldr	r3, [r3, #4]
 8010f8a:	4798      	blx	r3
 8010f8c:	b00b      	add	sp, #44	; 0x2c
 8010f8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f90:	240016aa 	.word	0x240016aa

08010f94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010f94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f96:	b08d      	sub	sp, #52	; 0x34
 8010f98:	2501      	movs	r5, #1
 8010f9a:	4604      	mov	r4, r0
 8010f9c:	466b      	mov	r3, sp
 8010f9e:	9503      	str	r5, [sp, #12]
 8010fa0:	e883 0006 	stmia.w	r3, {r1, r2}
 8010fa4:	2300      	movs	r3, #0
 8010fa6:	f8bd 6000 	ldrh.w	r6, [sp]
 8010faa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010fae:	9306      	str	r3, [sp, #24]
 8010fb0:	6803      	ldr	r3, [r0, #0]
 8010fb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010fb4:	4798      	blx	r3
 8010fb6:	463a      	mov	r2, r7
 8010fb8:	4631      	mov	r1, r6
 8010fba:	4603      	mov	r3, r0
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	f7ff ff8b 	bl	8010ed8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010fc2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010fc4:	9004      	str	r0, [sp, #16]
 8010fc6:	9307      	str	r3, [sp, #28]
 8010fc8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010fcc:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010fd0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010fd4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010fd8:	4b0e      	ldr	r3, [pc, #56]	; (8011014 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010fda:	881b      	ldrh	r3, [r3, #0]
 8010fdc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010fe0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010fe4:	f7f9 ff24 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8010fe8:	6803      	ldr	r3, [r0, #0]
 8010fea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010fec:	4798      	blx	r3
 8010fee:	23ff      	movs	r3, #255	; 0xff
 8010ff0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010ff4:	a903      	add	r1, sp, #12
 8010ff6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010ffa:	6860      	ldr	r0, [r4, #4]
 8010ffc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011000:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011004:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011008:	6803      	ldr	r3, [r0, #0]
 801100a:	685b      	ldr	r3, [r3, #4]
 801100c:	4798      	blx	r3
 801100e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011010:	b00d      	add	sp, #52	; 0x34
 8011012:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011014:	240016aa 	.word	0x240016aa

08011018 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801101c:	b08c      	sub	sp, #48	; 0x30
 801101e:	461e      	mov	r6, r3
 8011020:	2300      	movs	r3, #0
 8011022:	4604      	mov	r4, r0
 8011024:	466d      	mov	r5, sp
 8011026:	9306      	str	r3, [sp, #24]
 8011028:	6803      	ldr	r3, [r0, #0]
 801102a:	e885 0006 	stmia.w	r5, {r1, r2}
 801102e:	2501      	movs	r5, #1
 8011030:	f8bd 7000 	ldrh.w	r7, [sp]
 8011034:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011038:	9503      	str	r5, [sp, #12]
 801103a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801103c:	4798      	blx	r3
 801103e:	4642      	mov	r2, r8
 8011040:	4639      	mov	r1, r7
 8011042:	4603      	mov	r3, r0
 8011044:	4620      	mov	r0, r4
 8011046:	f7ff ff47 	bl	8010ed8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801104a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801104e:	9004      	str	r0, [sp, #16]
 8011050:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011054:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011058:	9607      	str	r6, [sp, #28]
 801105a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801105e:	4b10      	ldr	r3, [pc, #64]	; (80110a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011060:	881b      	ldrh	r3, [r3, #0]
 8011062:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011066:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011068:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801106c:	f7f9 fee0 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 8011070:	6803      	ldr	r3, [r0, #0]
 8011072:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011074:	4798      	blx	r3
 8011076:	23ff      	movs	r3, #255	; 0xff
 8011078:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801107c:	a903      	add	r1, sp, #12
 801107e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011082:	6860      	ldr	r0, [r4, #4]
 8011084:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011088:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801108c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011090:	6803      	ldr	r3, [r0, #0]
 8011092:	685b      	ldr	r3, [r3, #4]
 8011094:	4798      	blx	r3
 8011096:	4630      	mov	r0, r6
 8011098:	b00c      	add	sp, #48	; 0x30
 801109a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801109e:	bf00      	nop
 80110a0:	240016aa 	.word	0x240016aa

080110a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80110a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110a6:	b085      	sub	sp, #20
 80110a8:	4605      	mov	r5, r0
 80110aa:	ac02      	add	r4, sp, #8
 80110ac:	e884 0006 	stmia.w	r4, {r1, r2}
 80110b0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80110b4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80110b8:	f7ff fde6 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80110bc:	4631      	mov	r1, r6
 80110be:	4603      	mov	r3, r0
 80110c0:	463a      	mov	r2, r7
 80110c2:	4628      	mov	r0, r5
 80110c4:	f7ff ff08 	bl	8010ed8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80110c8:	4a05      	ldr	r2, [pc, #20]	; (80110e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80110ca:	682b      	ldr	r3, [r5, #0]
 80110cc:	8812      	ldrh	r2, [r2, #0]
 80110ce:	9200      	str	r2, [sp, #0]
 80110d0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80110d2:	4603      	mov	r3, r0
 80110d4:	4628      	mov	r0, r5
 80110d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80110da:	47b0      	blx	r6
 80110dc:	b005      	add	sp, #20
 80110de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80110e0:	240016aa 	.word	0x240016aa

080110e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80110e4:	b570      	push	{r4, r5, r6, lr}
 80110e6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80110ea:	4604      	mov	r4, r0
 80110ec:	b19b      	cbz	r3, 8011116 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80110ee:	2002      	movs	r0, #2
 80110f0:	f7fc fa72 	bl	800d5d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80110f4:	2300      	movs	r3, #0
 80110f6:	4620      	mov	r0, r4
 80110f8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80110fc:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011100:	6823      	ldr	r3, [r4, #0]
 8011102:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011106:	f7ff fdbf 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801110a:	4601      	mov	r1, r0
 801110c:	4620      	mov	r0, r4
 801110e:	462b      	mov	r3, r5
 8011110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011114:	4718      	bx	r3
 8011116:	bd70      	pop	{r4, r5, r6, pc}

08011118 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011118:	b538      	push	{r3, r4, r5, lr}
 801111a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801111e:	4604      	mov	r4, r0
 8011120:	460d      	mov	r5, r1
 8011122:	428b      	cmp	r3, r1
 8011124:	d006      	beq.n	8011134 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011126:	6803      	ldr	r3, [r0, #0]
 8011128:	b929      	cbnz	r1, 8011136 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801112a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801112e:	4798      	blx	r3
 8011130:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011134:	bd38      	pop	{r3, r4, r5, pc}
 8011136:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801113a:	e7f8      	b.n	801112e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801113c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801113c:	4b0d      	ldr	r3, [pc, #52]	; (8011174 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801113e:	b510      	push	{r4, lr}
 8011140:	781b      	ldrb	r3, [r3, #0]
 8011142:	4604      	mov	r4, r0
 8011144:	b95b      	cbnz	r3, 801115e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011146:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801114a:	2b02      	cmp	r3, #2
 801114c:	d007      	beq.n	801115e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801114e:	6840      	ldr	r0, [r0, #4]
 8011150:	f000 f90e 	bl	8011370 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011154:	b118      	cbz	r0, 801115e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011156:	6862      	ldr	r2, [r4, #4]
 8011158:	7a53      	ldrb	r3, [r2, #9]
 801115a:	2b00      	cmp	r3, #0
 801115c:	d0fc      	beq.n	8011158 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801115e:	f7fc fca5 	bl	800daac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011162:	4620      	mov	r0, r4
 8011164:	2100      	movs	r1, #0
 8011166:	f7ff ffd7 	bl	8011118 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801116a:	4620      	mov	r0, r4
 801116c:	f7ff fd8c 	bl	8010c88 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011170:	bd10      	pop	{r4, pc}
 8011172:	bf00      	nop
 8011174:	240016ae 	.word	0x240016ae

08011178 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 8011178:	4770      	bx	lr

0801117a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 801117a:	2000      	movs	r0, #0
 801117c:	4770      	bx	lr

0801117e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801117e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011182:	1a13      	subs	r3, r2, r0
 8011184:	4258      	negs	r0, r3
 8011186:	4158      	adcs	r0, r3
 8011188:	4770      	bx	lr

0801118a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801118a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801118e:	1a9b      	subs	r3, r3, r2
 8011190:	2b00      	cmp	r3, #0
 8011192:	bfdc      	itt	le
 8011194:	6882      	ldrle	r2, [r0, #8]
 8011196:	189b      	addle	r3, r3, r2
 8011198:	2b01      	cmp	r3, #1
 801119a:	bfcc      	ite	gt
 801119c:	2000      	movgt	r0, #0
 801119e:	2001      	movle	r0, #1
 80111a0:	4770      	bx	lr

080111a2 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80111a2:	6902      	ldr	r2, [r0, #16]
 80111a4:	6843      	ldr	r3, [r0, #4]
 80111a6:	2024      	movs	r0, #36	; 0x24
 80111a8:	fb00 3002 	mla	r0, r0, r2, r3
 80111ac:	4770      	bx	lr

080111ae <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80111ae:	6803      	ldr	r3, [r0, #0]
 80111b0:	691b      	ldr	r3, [r3, #16]
 80111b2:	4718      	bx	r3

080111b4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80111b4:	2301      	movs	r3, #1
 80111b6:	b570      	push	{r4, r5, r6, lr}
 80111b8:	7203      	strb	r3, [r0, #8]
 80111ba:	4604      	mov	r4, r0
 80111bc:	6840      	ldr	r0, [r0, #4]
 80111be:	6803      	ldr	r3, [r0, #0]
 80111c0:	699b      	ldr	r3, [r3, #24]
 80111c2:	4798      	blx	r3
 80111c4:	6803      	ldr	r3, [r0, #0]
 80111c6:	4605      	mov	r5, r0
 80111c8:	2b40      	cmp	r3, #64	; 0x40
 80111ca:	d00c      	beq.n	80111e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80111cc:	d810      	bhi.n	80111f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80111ce:	2b04      	cmp	r3, #4
 80111d0:	d01d      	beq.n	801120e <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80111d2:	d804      	bhi.n	80111de <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80111d4:	2b01      	cmp	r3, #1
 80111d6:	d006      	beq.n	80111e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80111d8:	2b02      	cmp	r3, #2
 80111da:	d02c      	beq.n	8011236 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80111dc:	bd70      	pop	{r4, r5, r6, pc}
 80111de:	2b08      	cmp	r3, #8
 80111e0:	d01d      	beq.n	801121e <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80111e2:	2b20      	cmp	r3, #32
 80111e4:	d1fa      	bne.n	80111dc <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80111e6:	6823      	ldr	r3, [r4, #0]
 80111e8:	4620      	mov	r0, r4
 80111ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80111ec:	4798      	blx	r3
 80111ee:	e013      	b.n	8011218 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80111f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80111f4:	d0f7      	beq.n	80111e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80111f6:	d804      	bhi.n	8011202 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80111f8:	2b80      	cmp	r3, #128	; 0x80
 80111fa:	d0f4      	beq.n	80111e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80111fc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011200:	e7f0      	b.n	80111e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011202:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011206:	d0ee      	beq.n	80111e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011208:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801120c:	e7e5      	b.n	80111da <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801120e:	6823      	ldr	r3, [r4, #0]
 8011210:	7f01      	ldrb	r1, [r0, #28]
 8011212:	4620      	mov	r0, r4
 8011214:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011216:	4798      	blx	r3
 8011218:	6823      	ldr	r3, [r4, #0]
 801121a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801121c:	e006      	b.n	801122c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801121e:	6823      	ldr	r3, [r4, #0]
 8011220:	7f01      	ldrb	r1, [r0, #28]
 8011222:	4620      	mov	r0, r4
 8011224:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011226:	4798      	blx	r3
 8011228:	6823      	ldr	r3, [r4, #0]
 801122a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801122c:	4629      	mov	r1, r5
 801122e:	4620      	mov	r0, r4
 8011230:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011234:	4718      	bx	r3
 8011236:	6823      	ldr	r3, [r4, #0]
 8011238:	4620      	mov	r0, r4
 801123a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801123c:	4798      	blx	r3
 801123e:	e7f3      	b.n	8011228 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011240 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011240:	4770      	bx	lr

08011242 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011242:	4770      	bx	lr

08011244 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011244:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011248:	b510      	push	{r4, lr}
 801124a:	1ad2      	subs	r2, r2, r3
 801124c:	2a00      	cmp	r2, #0
 801124e:	bfdc      	itt	le
 8011250:	6884      	ldrle	r4, [r0, #8]
 8011252:	1912      	addle	r2, r2, r4
 8011254:	2a01      	cmp	r2, #1
 8011256:	dd16      	ble.n	8011286 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011258:	6842      	ldr	r2, [r0, #4]
 801125a:	2424      	movs	r4, #36	; 0x24
 801125c:	fb04 2303 	mla	r3, r4, r3, r2
 8011260:	f101 0220 	add.w	r2, r1, #32
 8011264:	f851 4b04 	ldr.w	r4, [r1], #4
 8011268:	4291      	cmp	r1, r2
 801126a:	f843 4b04 	str.w	r4, [r3], #4
 801126e:	d1f9      	bne.n	8011264 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011270:	780a      	ldrb	r2, [r1, #0]
 8011272:	701a      	strb	r2, [r3, #0]
 8011274:	68c3      	ldr	r3, [r0, #12]
 8011276:	6882      	ldr	r2, [r0, #8]
 8011278:	f3bf 8f5b 	dmb	ish
 801127c:	3301      	adds	r3, #1
 801127e:	429a      	cmp	r2, r3
 8011280:	bfd8      	it	le
 8011282:	1a9b      	suble	r3, r3, r2
 8011284:	60c3      	str	r3, [r0, #12]
 8011286:	bd10      	pop	{r4, pc}

08011288 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011288:	6903      	ldr	r3, [r0, #16]
 801128a:	6882      	ldr	r2, [r0, #8]
 801128c:	f3bf 8f5b 	dmb	ish
 8011290:	3301      	adds	r3, #1
 8011292:	429a      	cmp	r2, r3
 8011294:	bfd8      	it	le
 8011296:	1a9b      	suble	r3, r3, r2
 8011298:	6103      	str	r3, [r0, #16]
 801129a:	4770      	bx	lr

0801129c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801129c:	b570      	push	{r4, r5, r6, lr}
 801129e:	4604      	mov	r4, r0
 80112a0:	460e      	mov	r6, r1
 80112a2:	6860      	ldr	r0, [r4, #4]
 80112a4:	6803      	ldr	r3, [r0, #0]
 80112a6:	685b      	ldr	r3, [r3, #4]
 80112a8:	4798      	blx	r3
 80112aa:	2800      	cmp	r0, #0
 80112ac:	d1f9      	bne.n	80112a2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80112ae:	4d0d      	ldr	r5, [pc, #52]	; (80112e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80112b0:	6828      	ldr	r0, [r5, #0]
 80112b2:	6803      	ldr	r3, [r0, #0]
 80112b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80112b6:	4798      	blx	r3
 80112b8:	f7fc fc1a 	bl	800daf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80112bc:	6828      	ldr	r0, [r5, #0]
 80112be:	2101      	movs	r1, #1
 80112c0:	f7ff ff2a 	bl	8011118 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80112c4:	6860      	ldr	r0, [r4, #4]
 80112c6:	4631      	mov	r1, r6
 80112c8:	6803      	ldr	r3, [r0, #0]
 80112ca:	689b      	ldr	r3, [r3, #8]
 80112cc:	4798      	blx	r3
 80112ce:	6823      	ldr	r3, [r4, #0]
 80112d0:	4620      	mov	r0, r4
 80112d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112d4:	4798      	blx	r3
 80112d6:	6828      	ldr	r0, [r5, #0]
 80112d8:	6803      	ldr	r3, [r0, #0]
 80112da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112de:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80112e0:	4718      	bx	r3
 80112e2:	bf00      	nop
 80112e4:	240016b0 	.word	0x240016b0

080112e8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80112e8:	b508      	push	{r3, lr}
 80112ea:	f7fc fbdf 	bl	800daac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80112ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80112f2:	f7fc bbf1 	b.w	800dad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080112f6 <_ZN8touchgfx13DMA_Interface5startEv>:
 80112f6:	b510      	push	{r4, lr}
 80112f8:	4604      	mov	r4, r0
 80112fa:	6840      	ldr	r0, [r0, #4]
 80112fc:	6803      	ldr	r3, [r0, #0]
 80112fe:	681b      	ldr	r3, [r3, #0]
 8011300:	4798      	blx	r3
 8011302:	b948      	cbnz	r0, 8011318 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011304:	7a63      	ldrb	r3, [r4, #9]
 8011306:	b13b      	cbz	r3, 8011318 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011308:	7a23      	ldrb	r3, [r4, #8]
 801130a:	b92b      	cbnz	r3, 8011318 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801130c:	6823      	ldr	r3, [r4, #0]
 801130e:	4620      	mov	r0, r4
 8011310:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011316:	4718      	bx	r3
 8011318:	bd10      	pop	{r4, pc}

0801131a <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801131a:	b570      	push	{r4, r5, r6, lr}
 801131c:	4604      	mov	r4, r0
 801131e:	6840      	ldr	r0, [r0, #4]
 8011320:	6803      	ldr	r3, [r0, #0]
 8011322:	681b      	ldr	r3, [r3, #0]
 8011324:	4798      	blx	r3
 8011326:	4605      	mov	r5, r0
 8011328:	b930      	cbnz	r0, 8011338 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801132a:	7a23      	ldrb	r3, [r4, #8]
 801132c:	b123      	cbz	r3, 8011338 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801132e:	6860      	ldr	r0, [r4, #4]
 8011330:	6803      	ldr	r3, [r0, #0]
 8011332:	695b      	ldr	r3, [r3, #20]
 8011334:	4798      	blx	r3
 8011336:	7225      	strb	r5, [r4, #8]
 8011338:	6860      	ldr	r0, [r4, #4]
 801133a:	6803      	ldr	r3, [r0, #0]
 801133c:	681b      	ldr	r3, [r3, #0]
 801133e:	4798      	blx	r3
 8011340:	b928      	cbnz	r0, 801134e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011342:	6823      	ldr	r3, [r4, #0]
 8011344:	4620      	mov	r0, r4
 8011346:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011348:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801134c:	4718      	bx	r3
 801134e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011352:	f7fc bbd9 	b.w	800db08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08011358 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011358:	b510      	push	{r4, lr}
 801135a:	6082      	str	r2, [r0, #8]
 801135c:	2200      	movs	r2, #0
 801135e:	4c03      	ldr	r4, [pc, #12]	; (801136c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011360:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011364:	e9c0 4100 	strd	r4, r1, [r0]
 8011368:	bd10      	pop	{r4, pc}
 801136a:	bf00      	nop
 801136c:	08025e50 	.word	0x08025e50

08011370 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011370:	6840      	ldr	r0, [r0, #4]
 8011372:	6803      	ldr	r3, [r0, #0]
 8011374:	681b      	ldr	r3, [r3, #0]
 8011376:	4718      	bx	r3

08011378 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011378:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801137c:	4770      	bx	lr

0801137e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801137e:	b510      	push	{r4, lr}
 8011380:	4604      	mov	r4, r0
 8011382:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011384:	b150      	cbz	r0, 801139c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011386:	6803      	ldr	r3, [r0, #0]
 8011388:	68db      	ldr	r3, [r3, #12]
 801138a:	4798      	blx	r3
 801138c:	b130      	cbz	r0, 801139c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801138e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011390:	4621      	mov	r1, r4
 8011392:	6803      	ldr	r3, [r0, #0]
 8011394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011398:	689b      	ldr	r3, [r3, #8]
 801139a:	4718      	bx	r3
 801139c:	bd10      	pop	{r4, pc}

0801139e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801139e:	790b      	ldrb	r3, [r1, #4]
 80113a0:	2b00      	cmp	r3, #0
 80113a2:	bf0c      	ite	eq
 80113a4:	2301      	moveq	r3, #1
 80113a6:	2300      	movne	r3, #0
 80113a8:	b570      	push	{r4, r5, r6, lr}
 80113aa:	4604      	mov	r4, r0
 80113ac:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80113b0:	460e      	mov	r6, r1
 80113b2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80113b6:	d109      	bne.n	80113cc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80113b8:	b14d      	cbz	r5, 80113ce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80113ba:	7933      	ldrb	r3, [r6, #4]
 80113bc:	2b01      	cmp	r3, #1
 80113be:	d10c      	bne.n	80113da <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80113c0:	6823      	ldr	r3, [r4, #0]
 80113c2:	4620      	mov	r0, r4
 80113c4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80113c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113ca:	4718      	bx	r3
 80113cc:	b12d      	cbz	r5, 80113da <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80113ce:	6823      	ldr	r3, [r4, #0]
 80113d0:	4620      	mov	r0, r4
 80113d2:	695b      	ldr	r3, [r3, #20]
 80113d4:	4798      	blx	r3
 80113d6:	2d00      	cmp	r5, #0
 80113d8:	d1ef      	bne.n	80113ba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80113da:	bd70      	pop	{r4, r5, r6, pc}

080113dc <_ZN8touchgfx8TextArea8setWidthEs>:
 80113dc:	b530      	push	{r4, r5, lr}
 80113de:	b085      	sub	sp, #20
 80113e0:	6803      	ldr	r3, [r0, #0]
 80113e2:	4604      	mov	r4, r0
 80113e4:	8101      	strh	r1, [r0, #8]
 80113e6:	466d      	mov	r5, sp
 80113e8:	4601      	mov	r1, r0
 80113ea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80113ee:	343c      	adds	r4, #60	; 0x3c
 80113f0:	4628      	mov	r0, r5
 80113f2:	4798      	blx	r3
 80113f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80113f8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80113fc:	b005      	add	sp, #20
 80113fe:	bd30      	pop	{r4, r5, pc}

08011400 <_ZN8touchgfx8TextArea9setHeightEs>:
 8011400:	b530      	push	{r4, r5, lr}
 8011402:	b085      	sub	sp, #20
 8011404:	6803      	ldr	r3, [r0, #0]
 8011406:	4604      	mov	r4, r0
 8011408:	8141      	strh	r1, [r0, #10]
 801140a:	466d      	mov	r5, sp
 801140c:	4601      	mov	r1, r0
 801140e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011412:	343c      	adds	r4, #60	; 0x3c
 8011414:	4628      	mov	r0, r5
 8011416:	4798      	blx	r3
 8011418:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801141c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011420:	b005      	add	sp, #20
 8011422:	bd30      	pop	{r4, r5, pc}

08011424 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8011424:	2200      	movs	r2, #0
 8011426:	8002      	strh	r2, [r0, #0]
 8011428:	8042      	strh	r2, [r0, #2]
 801142a:	8082      	strh	r2, [r0, #4]
 801142c:	80c2      	strh	r2, [r0, #6]
 801142e:	4770      	bx	lr

08011430 <_ZN8touchgfx8TextArea8setAlphaEh>:
 8011430:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 8011434:	4770      	bx	lr
	...

08011438 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8011438:	b570      	push	{r4, r5, r6, lr}
 801143a:	6803      	ldr	r3, [r0, #0]
 801143c:	4604      	mov	r4, r0
 801143e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011440:	460d      	mov	r5, r1
 8011442:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8011444:	4b08      	ldr	r3, [pc, #32]	; (8011468 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 8011446:	681b      	ldr	r3, [r3, #0]
 8011448:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801144c:	4b07      	ldr	r3, [pc, #28]	; (801146c <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 801144e:	681b      	ldr	r3, [r3, #0]
 8011450:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8011454:	6803      	ldr	r3, [r0, #0]
 8011456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011458:	4798      	blx	r3
 801145a:	1a29      	subs	r1, r5, r0
 801145c:	4633      	mov	r3, r6
 801145e:	4620      	mov	r0, r4
 8011460:	b209      	sxth	r1, r1
 8011462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011466:	4718      	bx	r3
 8011468:	24001700 	.word	0x24001700
 801146c:	24001708 	.word	0x24001708

08011470 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8011470:	b570      	push	{r4, r5, r6, lr}
 8011472:	6803      	ldr	r3, [r0, #0]
 8011474:	4604      	mov	r4, r0
 8011476:	4615      	mov	r5, r2
 8011478:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801147a:	4798      	blx	r3
 801147c:	6823      	ldr	r3, [r4, #0]
 801147e:	4629      	mov	r1, r5
 8011480:	4620      	mov	r0, r4
 8011482:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8011484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011488:	4718      	bx	r3

0801148a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 801148a:	2000      	movs	r0, #0
 801148c:	4770      	bx	lr

0801148e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 801148e:	2000      	movs	r0, #0
 8011490:	4770      	bx	lr
	...

08011494 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011494:	4b07      	ldr	r3, [pc, #28]	; (80114b4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011496:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011498:	881b      	ldrh	r3, [r3, #0]
 801149a:	4293      	cmp	r3, r2
 801149c:	bf81      	itttt	hi
 801149e:	4b06      	ldrhi	r3, [pc, #24]	; (80114b8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80114a0:	681b      	ldrhi	r3, [r3, #0]
 80114a2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80114a6:	7858      	ldrbhi	r0, [r3, #1]
 80114a8:	bf8c      	ite	hi
 80114aa:	f000 0003 	andhi.w	r0, r0, #3
 80114ae:	2000      	movls	r0, #0
 80114b0:	4770      	bx	lr
 80114b2:	bf00      	nop
 80114b4:	24001704 	.word	0x24001704
 80114b8:	24001700 	.word	0x24001700

080114bc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80114bc:	4b11      	ldr	r3, [pc, #68]	; (8011504 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80114be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114c2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80114c4:	4604      	mov	r4, r0
 80114c6:	881b      	ldrh	r3, [r3, #0]
 80114c8:	428b      	cmp	r3, r1
 80114ca:	d918      	bls.n	80114fe <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80114cc:	6803      	ldr	r3, [r0, #0]
 80114ce:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80114d0:	4b0d      	ldr	r3, [pc, #52]	; (8011508 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80114d2:	6818      	ldr	r0, [r3, #0]
 80114d4:	f7fb fd3a 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 80114d8:	6823      	ldr	r3, [r4, #0]
 80114da:	4606      	mov	r6, r0
 80114dc:	4620      	mov	r0, r4
 80114de:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80114e0:	4798      	blx	r3
 80114e2:	6823      	ldr	r3, [r4, #0]
 80114e4:	4607      	mov	r7, r0
 80114e6:	4620      	mov	r0, r4
 80114e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80114ec:	4798      	blx	r3
 80114ee:	463a      	mov	r2, r7
 80114f0:	4603      	mov	r3, r0
 80114f2:	4631      	mov	r1, r6
 80114f4:	4620      	mov	r0, r4
 80114f6:	46ac      	mov	ip, r5
 80114f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80114fc:	4760      	bx	ip
 80114fe:	2000      	movs	r0, #0
 8011500:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011504:	24001704 	.word	0x24001704
 8011508:	2400170c 	.word	0x2400170c

0801150c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 801150c:	4b18      	ldr	r3, [pc, #96]	; (8011570 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801150e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011512:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011514:	4604      	mov	r4, r0
 8011516:	881b      	ldrh	r3, [r3, #0]
 8011518:	428b      	cmp	r3, r1
 801151a:	d926      	bls.n	801156a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 801151c:	4b15      	ldr	r3, [pc, #84]	; (8011574 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801151e:	681b      	ldr	r3, [r3, #0]
 8011520:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011524:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011528:	4b13      	ldr	r3, [pc, #76]	; (8011578 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801152a:	7855      	ldrb	r5, [r2, #1]
 801152c:	681b      	ldr	r3, [r3, #0]
 801152e:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011532:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011536:	6833      	ldr	r3, [r6, #0]
 8011538:	69df      	ldr	r7, [r3, #28]
 801153a:	4b10      	ldr	r3, [pc, #64]	; (801157c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801153c:	6818      	ldr	r0, [r3, #0]
 801153e:	f7fb fd05 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 8011542:	6823      	ldr	r3, [r4, #0]
 8011544:	4680      	mov	r8, r0
 8011546:	4620      	mov	r0, r4
 8011548:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801154a:	4798      	blx	r3
 801154c:	6823      	ldr	r3, [r4, #0]
 801154e:	4681      	mov	r9, r0
 8011550:	4620      	mov	r0, r4
 8011552:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011556:	4798      	blx	r3
 8011558:	464b      	mov	r3, r9
 801155a:	9000      	str	r0, [sp, #0]
 801155c:	4642      	mov	r2, r8
 801155e:	4629      	mov	r1, r5
 8011560:	4630      	mov	r0, r6
 8011562:	47b8      	blx	r7
 8011564:	b003      	add	sp, #12
 8011566:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801156a:	2000      	movs	r0, #0
 801156c:	e7fa      	b.n	8011564 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801156e:	bf00      	nop
 8011570:	24001704 	.word	0x24001704
 8011574:	24001700 	.word	0x24001700
 8011578:	24001708 	.word	0x24001708
 801157c:	2400170c 	.word	0x2400170c

08011580 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011580:	b40e      	push	{r1, r2, r3}
 8011582:	4b30      	ldr	r3, [pc, #192]	; (8011644 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011584:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011588:	881a      	ldrh	r2, [r3, #0]
 801158a:	b09d      	sub	sp, #116	; 0x74
 801158c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801158e:	4604      	mov	r4, r0
 8011590:	429a      	cmp	r2, r3
 8011592:	d954      	bls.n	801163e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011594:	aa26      	add	r2, sp, #152	; 0x98
 8011596:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011648 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801159a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801164c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801159e:	9202      	str	r2, [sp, #8]
 80115a0:	f8d9 2000 	ldr.w	r2, [r9]
 80115a4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80115a8:	f8d8 3000 	ldr.w	r3, [r8]
 80115ac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80115b0:	682b      	ldr	r3, [r5, #0]
 80115b2:	4628      	mov	r0, r5
 80115b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80115b6:	4798      	blx	r3
 80115b8:	4606      	mov	r6, r0
 80115ba:	b207      	sxth	r7, r0
 80115bc:	a803      	add	r0, sp, #12
 80115be:	f003 fd6f 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 80115c2:	682b      	ldr	r3, [r5, #0]
 80115c4:	4628      	mov	r0, r5
 80115c6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80115c8:	4798      	blx	r3
 80115ca:	682b      	ldr	r3, [r5, #0]
 80115cc:	4682      	mov	sl, r0
 80115ce:	4628      	mov	r0, r5
 80115d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80115d2:	4798      	blx	r3
 80115d4:	4653      	mov	r3, sl
 80115d6:	9000      	str	r0, [sp, #0]
 80115d8:	a803      	add	r0, sp, #12
 80115da:	9a02      	ldr	r2, [sp, #8]
 80115dc:	9925      	ldr	r1, [sp, #148]	; 0x94
 80115de:	f003 fdba 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80115e2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80115e4:	f8d9 3000 	ldr.w	r3, [r9]
 80115e8:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80115ec:	8925      	ldrh	r5, [r4, #8]
 80115ee:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80115f2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80115f6:	eba5 050c 	sub.w	r5, r5, ip
 80115fa:	784a      	ldrb	r2, [r1, #1]
 80115fc:	f8d8 3000 	ldr.w	r3, [r8]
 8011600:	b22d      	sxth	r5, r5
 8011602:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011606:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801160a:	9500      	str	r5, [sp, #0]
 801160c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011610:	a803      	add	r0, sp, #12
 8011612:	f001 fbf3 	bl	8012dfc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011616:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801161a:	b203      	sxth	r3, r0
 801161c:	18b9      	adds	r1, r7, r2
 801161e:	2900      	cmp	r1, #0
 8011620:	dd0b      	ble.n	801163a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011622:	3b01      	subs	r3, #1
 8011624:	fb13 f302 	smulbb	r3, r3, r2
 8011628:	fb16 3300 	smlabb	r3, r6, r0, r3
 801162c:	b21f      	sxth	r7, r3
 801162e:	4638      	mov	r0, r7
 8011630:	b01d      	add	sp, #116	; 0x74
 8011632:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011636:	b003      	add	sp, #12
 8011638:	4770      	bx	lr
 801163a:	2b00      	cmp	r3, #0
 801163c:	dcf7      	bgt.n	801162e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801163e:	2700      	movs	r7, #0
 8011640:	e7f5      	b.n	801162e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011642:	bf00      	nop
 8011644:	24001704 	.word	0x24001704
 8011648:	24001700 	.word	0x24001700
 801164c:	24001708 	.word	0x24001708

08011650 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011650:	4bbd      	ldr	r3, [pc, #756]	; (8011948 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011652:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011656:	460c      	mov	r4, r1
 8011658:	881b      	ldrh	r3, [r3, #0]
 801165a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 801165c:	b0a9      	sub	sp, #164	; 0xa4
 801165e:	4680      	mov	r8, r0
 8011660:	428b      	cmp	r3, r1
 8011662:	d809      	bhi.n	8011678 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011664:	2300      	movs	r3, #0
 8011666:	f04f 32ff 	mov.w	r2, #4294967295
 801166a:	6083      	str	r3, [r0, #8]
 801166c:	e9c0 3200 	strd	r3, r2, [r0]
 8011670:	4640      	mov	r0, r8
 8011672:	b029      	add	sp, #164	; 0xa4
 8011674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011678:	4eb4      	ldr	r6, [pc, #720]	; (801194c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801167a:	6833      	ldr	r3, [r6, #0]
 801167c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011680:	4bb3      	ldr	r3, [pc, #716]	; (8011950 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011682:	681b      	ldr	r3, [r3, #0]
 8011684:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011688:	4bb2      	ldr	r3, [pc, #712]	; (8011954 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801168a:	6818      	ldr	r0, [r3, #0]
 801168c:	f7fb fc5e 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 8011690:	682b      	ldr	r3, [r5, #0]
 8011692:	4681      	mov	r9, r0
 8011694:	4628      	mov	r0, r5
 8011696:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011698:	4798      	blx	r3
 801169a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 801169c:	b203      	sxth	r3, r0
 801169e:	4682      	mov	sl, r0
 80116a0:	4407      	add	r7, r0
 80116a2:	a80f      	add	r0, sp, #60	; 0x3c
 80116a4:	9304      	str	r3, [sp, #16]
 80116a6:	b2bb      	uxth	r3, r7
 80116a8:	9303      	str	r3, [sp, #12]
 80116aa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80116ae:	2b00      	cmp	r3, #0
 80116b0:	f040 80a5 	bne.w	80117fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 80116b4:	f003 fcf4 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 80116b8:	682b      	ldr	r3, [r5, #0]
 80116ba:	4628      	mov	r0, r5
 80116bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80116be:	4798      	blx	r3
 80116c0:	682b      	ldr	r3, [r5, #0]
 80116c2:	4606      	mov	r6, r0
 80116c4:	4628      	mov	r0, r5
 80116c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80116c8:	4798      	blx	r3
 80116ca:	6823      	ldr	r3, [r4, #0]
 80116cc:	4607      	mov	r7, r0
 80116ce:	4620      	mov	r0, r4
 80116d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80116d2:	4798      	blx	r3
 80116d4:	6823      	ldr	r3, [r4, #0]
 80116d6:	4683      	mov	fp, r0
 80116d8:	4620      	mov	r0, r4
 80116da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80116de:	4798      	blx	r3
 80116e0:	463b      	mov	r3, r7
 80116e2:	4649      	mov	r1, r9
 80116e4:	4632      	mov	r2, r6
 80116e6:	2600      	movs	r6, #0
 80116e8:	e9cd b000 	strd	fp, r0, [sp]
 80116ec:	a80f      	add	r0, sp, #60	; 0x3c
 80116ee:	4637      	mov	r7, r6
 80116f0:	f003 fd46 	bl	8015180 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80116f4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80116f8:	f8df b250 	ldr.w	fp, [pc, #592]	; 801194c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80116fc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011700:	bf0c      	ite	eq
 8011702:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011706:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801170a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801170c:	4629      	mov	r1, r5
 801170e:	f8db 3000 	ldr.w	r3, [fp]
 8011712:	a80f      	add	r0, sp, #60	; 0x3c
 8011714:	3701      	adds	r7, #1
 8011716:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801171a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801171e:	b2bf      	uxth	r7, r7
 8011720:	785b      	ldrb	r3, [r3, #1]
 8011722:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011726:	f001 f884 	bl	8012832 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801172a:	9b03      	ldr	r3, [sp, #12]
 801172c:	4286      	cmp	r6, r0
 801172e:	eba9 0903 	sub.w	r9, r9, r3
 8011732:	bfb8      	it	lt
 8011734:	4606      	movlt	r6, r0
 8011736:	a80f      	add	r0, sp, #60	; 0x3c
 8011738:	fa0f f989 	sxth.w	r9, r9
 801173c:	b236      	sxth	r6, r6
 801173e:	f003 fcd6 	bl	80150ee <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011742:	b918      	cbnz	r0, 801174c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8011744:	7a2b      	ldrb	r3, [r5, #8]
 8011746:	444b      	add	r3, r9
 8011748:	2b00      	cmp	r3, #0
 801174a:	dcde      	bgt.n	801170a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 801174c:	9b03      	ldr	r3, [sp, #12]
 801174e:	4620      	mov	r0, r4
 8011750:	9a04      	ldr	r2, [sp, #16]
 8011752:	fb13 f707 	smulbb	r7, r3, r7
 8011756:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011758:	f895 9009 	ldrb.w	r9, [r5, #9]
 801175c:	1aff      	subs	r7, r7, r3
 801175e:	b2bf      	uxth	r7, r7
 8011760:	b23b      	sxth	r3, r7
 8011762:	429a      	cmp	r2, r3
 8011764:	bfa8      	it	ge
 8011766:	4657      	movge	r7, sl
 8011768:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801176c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011770:	6823      	ldr	r3, [r4, #0]
 8011772:	444f      	add	r7, r9
 8011774:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011776:	bf08      	it	eq
 8011778:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801177c:	fa1f f987 	uxth.w	r9, r7
 8011780:	bf18      	it	ne
 8011782:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011786:	4798      	blx	r3
 8011788:	2801      	cmp	r0, #1
 801178a:	fa0f f789 	sxth.w	r7, r9
 801178e:	b2b3      	uxth	r3, r6
 8011790:	f000 80e2 	beq.w	8011958 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011794:	2802      	cmp	r0, #2
 8011796:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 801179a:	f000 80e3 	beq.w	8011964 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801179e:	7aea      	ldrb	r2, [r5, #11]
 80117a0:	b236      	sxth	r6, r6
 80117a2:	7b2d      	ldrb	r5, [r5, #12]
 80117a4:	1ab6      	subs	r6, r6, r2
 80117a6:	442a      	add	r2, r5
 80117a8:	fa1f fa86 	uxth.w	sl, r6
 80117ac:	4413      	add	r3, r2
 80117ae:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80117b2:	fa0f fb8a 	sxth.w	fp, sl
 80117b6:	b29b      	uxth	r3, r3
 80117b8:	2a02      	cmp	r2, #2
 80117ba:	b21e      	sxth	r6, r3
 80117bc:	f000 80d6 	beq.w	801196c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80117c0:	2a03      	cmp	r2, #3
 80117c2:	f000 80de 	beq.w	8011982 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80117c6:	2a01      	cmp	r2, #1
 80117c8:	f040 80e6 	bne.w	8011998 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80117cc:	8925      	ldrh	r5, [r4, #8]
 80117ce:	4633      	mov	r3, r6
 80117d0:	463e      	mov	r6, r7
 80117d2:	eba5 0909 	sub.w	r9, r5, r9
 80117d6:	461f      	mov	r7, r3
 80117d8:	465d      	mov	r5, fp
 80117da:	fa0f fb89 	sxth.w	fp, r9
 80117de:	4b5d      	ldr	r3, [pc, #372]	; (8011954 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80117e0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80117e2:	6818      	ldr	r0, [r3, #0]
 80117e4:	f7fb fbb2 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 80117e8:	f8a8 b000 	strh.w	fp, [r8]
 80117ec:	f8a8 5002 	strh.w	r5, [r8, #2]
 80117f0:	f8a8 6004 	strh.w	r6, [r8, #4]
 80117f4:	f8a8 7006 	strh.w	r7, [r8, #6]
 80117f8:	f8c8 0008 	str.w	r0, [r8, #8]
 80117fc:	e738      	b.n	8011670 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80117fe:	f003 fc4f 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 8011802:	682b      	ldr	r3, [r5, #0]
 8011804:	4628      	mov	r0, r5
 8011806:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011808:	4798      	blx	r3
 801180a:	682b      	ldr	r3, [r5, #0]
 801180c:	4607      	mov	r7, r0
 801180e:	4628      	mov	r0, r5
 8011810:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011812:	4798      	blx	r3
 8011814:	6823      	ldr	r3, [r4, #0]
 8011816:	4683      	mov	fp, r0
 8011818:	4620      	mov	r0, r4
 801181a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801181c:	4798      	blx	r3
 801181e:	6822      	ldr	r2, [r4, #0]
 8011820:	9005      	str	r0, [sp, #20]
 8011822:	4620      	mov	r0, r4
 8011824:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011828:	4790      	blx	r2
 801182a:	9b05      	ldr	r3, [sp, #20]
 801182c:	463a      	mov	r2, r7
 801182e:	4649      	mov	r1, r9
 8011830:	9001      	str	r0, [sp, #4]
 8011832:	a80f      	add	r0, sp, #60	; 0x3c
 8011834:	9300      	str	r3, [sp, #0]
 8011836:	465b      	mov	r3, fp
 8011838:	f003 fca2 	bl	8015180 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801183c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011840:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011844:	af0f      	add	r7, sp, #60	; 0x3c
 8011846:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801184a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801184e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011850:	bf0a      	itet	eq
 8011852:	464a      	moveq	r2, r9
 8011854:	461a      	movne	r2, r3
 8011856:	4699      	moveq	r9, r3
 8011858:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801185c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011860:	1ad2      	subs	r2, r2, r3
 8011862:	6833      	ldr	r3, [r6, #0]
 8011864:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011868:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801186c:	7859      	ldrb	r1, [r3, #1]
 801186e:	2300      	movs	r3, #0
 8011870:	9707      	str	r7, [sp, #28]
 8011872:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011876:	f8ad 3018 	strh.w	r3, [sp, #24]
 801187a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801187e:	f88d 1020 	strb.w	r1, [sp, #32]
 8011882:	9509      	str	r5, [sp, #36]	; 0x24
 8011884:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011888:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801188c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011890:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011894:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011898:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801189c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80118a0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80118a4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80118a8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80118ac:	b350      	cbz	r0, 8011904 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 80118ae:	682b      	ldr	r3, [r5, #0]
 80118b0:	4628      	mov	r0, r5
 80118b2:	695b      	ldr	r3, [r3, #20]
 80118b4:	4798      	blx	r3
 80118b6:	4607      	mov	r7, r0
 80118b8:	b320      	cbz	r0, 8011904 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 80118ba:	9809      	ldr	r0, [sp, #36]	; 0x24
 80118bc:	4639      	mov	r1, r7
 80118be:	6803      	ldr	r3, [r0, #0]
 80118c0:	68db      	ldr	r3, [r3, #12]
 80118c2:	4798      	blx	r3
 80118c4:	4606      	mov	r6, r0
 80118c6:	b1e8      	cbz	r0, 8011904 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 80118c8:	7b43      	ldrb	r3, [r0, #13]
 80118ca:	7a82      	ldrb	r2, [r0, #10]
 80118cc:	005b      	lsls	r3, r3, #1
 80118ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80118d2:	4313      	orrs	r3, r2
 80118d4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80118d8:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80118dc:	2b06      	cmp	r3, #6
 80118de:	d111      	bne.n	8011904 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 80118e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80118e2:	4632      	mov	r2, r6
 80118e4:	4639      	mov	r1, r7
 80118e6:	6803      	ldr	r3, [r0, #0]
 80118e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80118ea:	4798      	blx	r3
 80118ec:	7b73      	ldrb	r3, [r6, #13]
 80118ee:	005b      	lsls	r3, r3, #1
 80118f0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80118f4:	7ab3      	ldrb	r3, [r6, #10]
 80118f6:	4313      	orrs	r3, r2
 80118f8:	4418      	add	r0, r3
 80118fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80118fe:	4418      	add	r0, r3
 8011900:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011904:	2600      	movs	r6, #0
 8011906:	4637      	mov	r7, r6
 8011908:	a806      	add	r0, sp, #24
 801190a:	3701      	adds	r7, #1
 801190c:	f001 f973 	bl	8012bf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011910:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011914:	9b03      	ldr	r3, [sp, #12]
 8011916:	b2bf      	uxth	r7, r7
 8011918:	4286      	cmp	r6, r0
 801191a:	eba9 0903 	sub.w	r9, r9, r3
 801191e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011922:	bfb8      	it	lt
 8011924:	4606      	movlt	r6, r0
 8011926:	fa0f f989 	sxth.w	r9, r9
 801192a:	b236      	sxth	r6, r6
 801192c:	2b00      	cmp	r3, #0
 801192e:	f43f af0d 	beq.w	801174c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8011932:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011936:	2b00      	cmp	r3, #0
 8011938:	f47f af08 	bne.w	801174c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 801193c:	7a2b      	ldrb	r3, [r5, #8]
 801193e:	444b      	add	r3, r9
 8011940:	2b00      	cmp	r3, #0
 8011942:	dce1      	bgt.n	8011908 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 8011944:	e702      	b.n	801174c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8011946:	bf00      	nop
 8011948:	24001704 	.word	0x24001704
 801194c:	24001700 	.word	0x24001700
 8011950:	24001708 	.word	0x24001708
 8011954:	2400170c 	.word	0x2400170c
 8011958:	ebaa 0606 	sub.w	r6, sl, r6
 801195c:	2002      	movs	r0, #2
 801195e:	fb96 f6f0 	sdiv	r6, r6, r0
 8011962:	e71c      	b.n	801179e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8011964:	441e      	add	r6, r3
 8011966:	ebaa 0606 	sub.w	r6, sl, r6
 801196a:	e718      	b.n	801179e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 801196c:	8925      	ldrh	r5, [r4, #8]
 801196e:	1aed      	subs	r5, r5, r3
 8011970:	eba5 050a 	sub.w	r5, r5, sl
 8011974:	fa0f fb85 	sxth.w	fp, r5
 8011978:	8965      	ldrh	r5, [r4, #10]
 801197a:	eba5 0509 	sub.w	r5, r5, r9
 801197e:	b22d      	sxth	r5, r5
 8011980:	e72d      	b.n	80117de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8011982:	8965      	ldrh	r5, [r4, #10]
 8011984:	f04f 0b00 	mov.w	fp, #0
 8011988:	1aed      	subs	r5, r5, r3
 801198a:	4633      	mov	r3, r6
 801198c:	463e      	mov	r6, r7
 801198e:	eba5 050a 	sub.w	r5, r5, sl
 8011992:	461f      	mov	r7, r3
 8011994:	b22d      	sxth	r5, r5
 8011996:	e722      	b.n	80117de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8011998:	2500      	movs	r5, #0
 801199a:	e720      	b.n	80117de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0801199c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801199c:	b513      	push	{r0, r1, r4, lr}
 801199e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80119a2:	4604      	mov	r4, r0
 80119a4:	b1fb      	cbz	r3, 80119e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80119a6:	4b16      	ldr	r3, [pc, #88]	; (8011a00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80119a8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80119aa:	881b      	ldrh	r3, [r3, #0]
 80119ac:	428b      	cmp	r3, r1
 80119ae:	d91a      	bls.n	80119e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80119b0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80119b4:	2b00      	cmp	r3, #0
 80119b6:	dd16      	ble.n	80119e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80119b8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80119bc:	2b00      	cmp	r3, #0
 80119be:	dd12      	ble.n	80119e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80119c0:	4b10      	ldr	r3, [pc, #64]	; (8011a04 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80119c2:	6818      	ldr	r0, [r3, #0]
 80119c4:	f7fb fac2 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 80119c8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80119cc:	6822      	ldr	r2, [r4, #0]
 80119ce:	2b00      	cmp	r3, #0
 80119d0:	db06      	blt.n	80119e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80119d2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80119d6:	2b00      	cmp	r3, #0
 80119d8:	db02      	blt.n	80119e0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80119da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80119dc:	4298      	cmp	r0, r3
 80119de:	d004      	beq.n	80119ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80119e0:	6953      	ldr	r3, [r2, #20]
 80119e2:	4620      	mov	r0, r4
 80119e4:	4798      	blx	r3
 80119e6:	b002      	add	sp, #8
 80119e8:	bd10      	pop	{r4, pc}
 80119ea:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80119ee:	466b      	mov	r3, sp
 80119f0:	6912      	ldr	r2, [r2, #16]
 80119f2:	c903      	ldmia	r1, {r0, r1}
 80119f4:	e883 0003 	stmia.w	r3, {r0, r1}
 80119f8:	4619      	mov	r1, r3
 80119fa:	4620      	mov	r0, r4
 80119fc:	4790      	blx	r2
 80119fe:	e7f2      	b.n	80119e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011a00:	24001704 	.word	0x24001704
 8011a04:	2400170c 	.word	0x2400170c

08011a08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011a08:	4b45      	ldr	r3, [pc, #276]	; (8011b20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011a0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a0e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011a10:	b08e      	sub	sp, #56	; 0x38
 8011a12:	881b      	ldrh	r3, [r3, #0]
 8011a14:	4604      	mov	r4, r0
 8011a16:	4293      	cmp	r3, r2
 8011a18:	d97e      	bls.n	8011b18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011a1a:	6808      	ldr	r0, [r1, #0]
 8011a1c:	ab05      	add	r3, sp, #20
 8011a1e:	6849      	ldr	r1, [r1, #4]
 8011a20:	4d40      	ldr	r5, [pc, #256]	; (8011b24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011a22:	c303      	stmia	r3!, {r0, r1}
 8011a24:	4611      	mov	r1, r2
 8011a26:	6828      	ldr	r0, [r5, #0]
 8011a28:	f7fb fa90 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 8011a2c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011a30:	2b00      	cmp	r3, #0
 8011a32:	db11      	blt.n	8011a58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011a34:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011a38:	2b00      	cmp	r3, #0
 8011a3a:	db0d      	blt.n	8011a58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011a3c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011a3e:	4298      	cmp	r0, r3
 8011a40:	d10a      	bne.n	8011a58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011a42:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011a46:	ab09      	add	r3, sp, #36	; 0x24
 8011a48:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011a4c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011a50:	4619      	mov	r1, r3
 8011a52:	a805      	add	r0, sp, #20
 8011a54:	f7fe fc8e 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8011a58:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011a5c:	2b00      	cmp	r3, #0
 8011a5e:	dd5b      	ble.n	8011b18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011a60:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011a64:	2b00      	cmp	r3, #0
 8011a66:	dd57      	ble.n	8011b18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011a68:	4f2f      	ldr	r7, [pc, #188]	; (8011b28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011a6a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011a6c:	683b      	ldr	r3, [r7, #0]
 8011a6e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011a72:	4b2e      	ldr	r3, [pc, #184]	; (8011b2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011a74:	681b      	ldr	r3, [r3, #0]
 8011a76:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011a7a:	2e00      	cmp	r6, #0
 8011a7c:	d04c      	beq.n	8011b18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011a7e:	6823      	ldr	r3, [r4, #0]
 8011a80:	4620      	mov	r0, r4
 8011a82:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011a86:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011a88:	4798      	blx	r3
 8011a8a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011a8c:	683b      	ldr	r3, [r7, #0]
 8011a8e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011a92:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011a96:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011a9a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011a9e:	785b      	ldrb	r3, [r3, #1]
 8011aa0:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011aa4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011aa8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011aaa:	9609      	str	r6, [sp, #36]	; 0x24
 8011aac:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011ab0:	4b1f      	ldr	r3, [pc, #124]	; (8011b30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011ab2:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011ab6:	681b      	ldr	r3, [r3, #0]
 8011ab8:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011abc:	910b      	str	r1, [sp, #44]	; 0x2c
 8011abe:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011ac2:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011ac6:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011aca:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011ace:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011ad2:	b10a      	cbz	r2, 8011ad8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011ad4:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011ad6:	b906      	cbnz	r6, 8011ada <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011ad8:	689e      	ldr	r6, [r3, #8]
 8011ada:	af07      	add	r7, sp, #28
 8011adc:	4621      	mov	r1, r4
 8011ade:	4638      	mov	r0, r7
 8011ae0:	f002 ff28 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ae4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011ae6:	6828      	ldr	r0, [r5, #0]
 8011ae8:	f7fb fa30 	bl	800cf4c <_ZNK8touchgfx5Texts7getTextEt>
 8011aec:	6823      	ldr	r3, [r4, #0]
 8011aee:	4605      	mov	r5, r0
 8011af0:	4620      	mov	r0, r4
 8011af2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011af4:	4798      	blx	r3
 8011af6:	6823      	ldr	r3, [r4, #0]
 8011af8:	4680      	mov	r8, r0
 8011afa:	4620      	mov	r0, r4
 8011afc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011b00:	4798      	blx	r3
 8011b02:	ab09      	add	r3, sp, #36	; 0x24
 8011b04:	9501      	str	r5, [sp, #4]
 8011b06:	9300      	str	r3, [sp, #0]
 8011b08:	ab05      	add	r3, sp, #20
 8011b0a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011b0e:	4630      	mov	r0, r6
 8011b10:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011b14:	f7fb f9ab 	bl	800ce6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011b18:	b00e      	add	sp, #56	; 0x38
 8011b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b1e:	bf00      	nop
 8011b20:	24001704 	.word	0x24001704
 8011b24:	2400170c 	.word	0x2400170c
 8011b28:	24001700 	.word	0x24001700
 8011b2c:	24001708 	.word	0x24001708
 8011b30:	240016b0 	.word	0x240016b0

08011b34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011b34:	b538      	push	{r3, r4, r5, lr}
 8011b36:	4b0e      	ldr	r3, [pc, #56]	; (8011b70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011b38:	4604      	mov	r4, r0
 8011b3a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011b3c:	881b      	ldrh	r3, [r3, #0]
 8011b3e:	429a      	cmp	r2, r3
 8011b40:	d214      	bcs.n	8011b6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011b42:	6803      	ldr	r3, [r0, #0]
 8011b44:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011b46:	4798      	blx	r3
 8011b48:	6823      	ldr	r3, [r4, #0]
 8011b4a:	4605      	mov	r5, r0
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011b50:	4798      	blx	r3
 8011b52:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011b56:	b22d      	sxth	r5, r5
 8011b58:	4601      	mov	r1, r0
 8011b5a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011b5e:	bf06      	itte	eq
 8011b60:	4602      	moveq	r2, r0
 8011b62:	4629      	moveq	r1, r5
 8011b64:	462a      	movne	r2, r5
 8011b66:	4620      	mov	r0, r4
 8011b68:	f7fa f8cf 	bl	800bd0a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011b6c:	bd38      	pop	{r3, r4, r5, pc}
 8011b6e:	bf00      	nop
 8011b70:	24001704 	.word	0x24001704

08011b74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011b74:	b530      	push	{r4, r5, lr}
 8011b76:	888b      	ldrh	r3, [r1, #4]
 8011b78:	b085      	sub	sp, #20
 8011b7a:	4604      	mov	r4, r0
 8011b7c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011b7e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011b82:	b923      	cbnz	r3, 8011b8e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011b84:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011b88:	b90b      	cbnz	r3, 8011b8e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011b8a:	f7ff ffd3 	bl	8011b34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011b8e:	6823      	ldr	r3, [r4, #0]
 8011b90:	466d      	mov	r5, sp
 8011b92:	4621      	mov	r1, r4
 8011b94:	343c      	adds	r4, #60	; 0x3c
 8011b96:	4628      	mov	r0, r5
 8011b98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011b9c:	4798      	blx	r3
 8011b9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011ba2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011ba6:	b005      	add	sp, #20
 8011ba8:	bd30      	pop	{r4, r5, pc}

08011baa <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011baa:	2300      	movs	r3, #0
 8011bac:	8083      	strh	r3, [r0, #4]
 8011bae:	80c3      	strh	r3, [r0, #6]
 8011bb0:	8003      	strh	r3, [r0, #0]
 8011bb2:	8043      	strh	r3, [r0, #2]
 8011bb4:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011bb8:	2bff      	cmp	r3, #255	; 0xff
 8011bba:	bf01      	itttt	eq
 8011bbc:	890b      	ldrheq	r3, [r1, #8]
 8011bbe:	8083      	strheq	r3, [r0, #4]
 8011bc0:	894b      	ldrheq	r3, [r1, #10]
 8011bc2:	80c3      	strheq	r3, [r0, #6]
 8011bc4:	4770      	bx	lr
	...

08011bc8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011bc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011bca:	4604      	mov	r4, r0
 8011bcc:	466b      	mov	r3, sp
 8011bce:	6808      	ldr	r0, [r1, #0]
 8011bd0:	6849      	ldr	r1, [r1, #4]
 8011bd2:	c303      	stmia	r3!, {r0, r1}
 8011bd4:	6823      	ldr	r3, [r4, #0]
 8011bd6:	4669      	mov	r1, sp
 8011bd8:	4620      	mov	r0, r4
 8011bda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011bdc:	4798      	blx	r3
 8011bde:	4b08      	ldr	r3, [pc, #32]	; (8011c00 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011be0:	681b      	ldr	r3, [r3, #0]
 8011be2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011be6:	b10a      	cbz	r2, 8011bec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011be8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011bea:	b900      	cbnz	r0, 8011bee <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011bec:	6898      	ldr	r0, [r3, #8]
 8011bee:	6803      	ldr	r3, [r0, #0]
 8011bf0:	4669      	mov	r1, sp
 8011bf2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011bf4:	6a1d      	ldr	r5, [r3, #32]
 8011bf6:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011bfa:	47a8      	blx	r5
 8011bfc:	b003      	add	sp, #12
 8011bfe:	bd30      	pop	{r4, r5, pc}
 8011c00:	240016b0 	.word	0x240016b0

08011c04 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011c04:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011c08:	b12a      	cbz	r2, 8011c16 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011c0a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011c0e:	b112      	cbz	r2, 8011c16 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011c10:	6803      	ldr	r3, [r0, #0]
 8011c12:	695b      	ldr	r3, [r3, #20]
 8011c14:	4718      	bx	r3
 8011c16:	4770      	bx	lr

08011c18 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011c18:	b570      	push	{r4, r5, r6, lr}
 8011c1a:	880b      	ldrh	r3, [r1, #0]
 8011c1c:	4605      	mov	r5, r0
 8011c1e:	4604      	mov	r4, r0
 8011c20:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011c22:	8813      	ldrh	r3, [r2, #0]
 8011c24:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011c28:	4628      	mov	r0, r5
 8011c2a:	f004 fa4b 	bl	80160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011c2e:	4606      	mov	r6, r0
 8011c30:	4628      	mov	r0, r5
 8011c32:	f004 fa7b 	bl	801612c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011c36:	6823      	ldr	r3, [r4, #0]
 8011c38:	4605      	mov	r5, r0
 8011c3a:	4631      	mov	r1, r6
 8011c3c:	4620      	mov	r0, r4
 8011c3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011c40:	4798      	blx	r3
 8011c42:	6823      	ldr	r3, [r4, #0]
 8011c44:	4629      	mov	r1, r5
 8011c46:	4620      	mov	r0, r4
 8011c48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011c4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c4e:	4718      	bx	r3

08011c50 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011c50:	b510      	push	{r4, lr}
 8011c52:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011c56:	4604      	mov	r4, r0
 8011c58:	2bff      	cmp	r3, #255	; 0xff
 8011c5a:	d006      	beq.n	8011c6a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011c5c:	2300      	movs	r3, #0
 8011c5e:	8003      	strh	r3, [r0, #0]
 8011c60:	8043      	strh	r3, [r0, #2]
 8011c62:	8083      	strh	r3, [r0, #4]
 8011c64:	80c3      	strh	r3, [r0, #6]
 8011c66:	4620      	mov	r0, r4
 8011c68:	bd10      	pop	{r4, pc}
 8011c6a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011c6e:	b11b      	cbz	r3, 8011c78 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011c70:	3130      	adds	r1, #48	; 0x30
 8011c72:	f004 fa8f 	bl	8016194 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011c76:	e7f6      	b.n	8011c66 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011c78:	312e      	adds	r1, #46	; 0x2e
 8011c7a:	e7fa      	b.n	8011c72 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08011c7c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011c7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c80:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011c84:	b08a      	sub	sp, #40	; 0x28
 8011c86:	4604      	mov	r4, r0
 8011c88:	4688      	mov	r8, r1
 8011c8a:	2b00      	cmp	r3, #0
 8011c8c:	d066      	beq.n	8011d5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011c8e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011c90:	a805      	add	r0, sp, #20
 8011c92:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011c96:	f004 fa15 	bl	80160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011c9a:	4607      	mov	r7, r0
 8011c9c:	a805      	add	r0, sp, #20
 8011c9e:	f004 fa45 	bl	801612c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011ca2:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011ca6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011caa:	2300      	movs	r3, #0
 8011cac:	4432      	add	r2, r6
 8011cae:	9306      	str	r3, [sp, #24]
 8011cb0:	b292      	uxth	r2, r2
 8011cb2:	fa0f fc82 	sxth.w	ip, r2
 8011cb6:	459c      	cmp	ip, r3
 8011cb8:	dd52      	ble.n	8011d60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011cba:	42b7      	cmp	r7, r6
 8011cbc:	dd50      	ble.n	8011d60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011cbe:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011cc2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011cc6:	442b      	add	r3, r5
 8011cc8:	b29b      	uxth	r3, r3
 8011cca:	b219      	sxth	r1, r3
 8011ccc:	2900      	cmp	r1, #0
 8011cce:	dd47      	ble.n	8011d60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011cd0:	42a8      	cmp	r0, r5
 8011cd2:	dd45      	ble.n	8011d60 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011cd4:	4567      	cmp	r7, ip
 8011cd6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011cda:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011cde:	bfb8      	it	lt
 8011ce0:	b2ba      	uxthlt	r2, r7
 8011ce2:	4288      	cmp	r0, r1
 8011ce4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ce8:	bfb8      	it	lt
 8011cea:	b283      	uxthlt	r3, r0
 8011cec:	1b92      	subs	r2, r2, r6
 8011cee:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011cf2:	1b5b      	subs	r3, r3, r5
 8011cf4:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011cf8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011cfc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011d00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011d04:	429a      	cmp	r2, r3
 8011d06:	d026      	beq.n	8011d56 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011d08:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011d0c:	2b00      	cmp	r3, #0
 8011d0e:	dd22      	ble.n	8011d56 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011d10:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011d14:	2b00      	cmp	r3, #0
 8011d16:	dd1e      	ble.n	8011d56 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011d18:	2300      	movs	r3, #0
 8011d1a:	a908      	add	r1, sp, #32
 8011d1c:	4620      	mov	r0, r4
 8011d1e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011d22:	6823      	ldr	r3, [r4, #0]
 8011d24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d26:	4798      	blx	r3
 8011d28:	4b0f      	ldr	r3, [pc, #60]	; (8011d68 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011d2a:	681b      	ldr	r3, [r3, #0]
 8011d2c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011d30:	b10a      	cbz	r2, 8011d36 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011d32:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011d34:	b900      	cbnz	r0, 8011d38 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011d36:	6898      	ldr	r0, [r3, #8]
 8011d38:	2501      	movs	r5, #1
 8011d3a:	6801      	ldr	r1, [r0, #0]
 8011d3c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011d40:	9502      	str	r5, [sp, #8]
 8011d42:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011d46:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011d4a:	9401      	str	r4, [sp, #4]
 8011d4c:	ac06      	add	r4, sp, #24
 8011d4e:	9400      	str	r4, [sp, #0]
 8011d50:	688c      	ldr	r4, [r1, #8]
 8011d52:	a905      	add	r1, sp, #20
 8011d54:	47a0      	blx	r4
 8011d56:	b00a      	add	sp, #40	; 0x28
 8011d58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d5c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011d5e:	e797      	b.n	8011c90 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011d60:	2300      	movs	r3, #0
 8011d62:	9307      	str	r3, [sp, #28]
 8011d64:	e7ca      	b.n	8011cfc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011d66:	bf00      	nop
 8011d68:	240016b0 	.word	0x240016b0

08011d6c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011d6c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011d70:	b12a      	cbz	r2, 8011d7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011d72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011d76:	b112      	cbz	r2, 8011d7e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011d78:	6803      	ldr	r3, [r0, #0]
 8011d7a:	695b      	ldr	r3, [r3, #20]
 8011d7c:	4718      	bx	r3
 8011d7e:	4770      	bx	lr

08011d80 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8011d80:	b510      	push	{r4, lr}
 8011d82:	6803      	ldr	r3, [r0, #0]
 8011d84:	460c      	mov	r4, r1
 8011d86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d88:	4798      	blx	r3
 8011d8a:	1b03      	subs	r3, r0, r4
 8011d8c:	4258      	negs	r0, r3
 8011d8e:	4158      	adcs	r0, r3
 8011d90:	bd10      	pop	{r4, pc}
	...

08011d94 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8011d94:	4b01      	ldr	r3, [pc, #4]	; (8011d9c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8011d96:	6019      	str	r1, [r3, #0]
 8011d98:	4770      	bx	lr
 8011d9a:	bf00      	nop
 8011d9c:	240016b8 	.word	0x240016b8

08011da0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011da4:	4696      	mov	lr, r2
 8011da6:	b097      	sub	sp, #92	; 0x5c
 8011da8:	4605      	mov	r5, r0
 8011daa:	4614      	mov	r4, r2
 8011dac:	460e      	mov	r6, r1
 8011dae:	461f      	mov	r7, r3
 8011db0:	f10d 0c1c 	add.w	ip, sp, #28
 8011db4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8011db8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8011dbc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8011dc0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011dc4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011dc8:	f8de 3000 	ldr.w	r3, [lr]
 8011dcc:	f104 0e14 	add.w	lr, r4, #20
 8011dd0:	f8cc 3000 	str.w	r3, [ip]
 8011dd4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011dd8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011ddc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011de0:	f8de 3000 	ldr.w	r3, [lr]
 8011de4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8011de8:	f8cc 3000 	str.w	r3, [ip]
 8011dec:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8011df0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011df4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011df8:	f8de 3000 	ldr.w	r3, [lr]
 8011dfc:	4631      	mov	r1, r6
 8011dfe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8011e00:	4628      	mov	r0, r5
 8011e02:	f8cc 3000 	str.w	r3, [ip]
 8011e06:	682b      	ldr	r3, [r5, #0]
 8011e08:	9201      	str	r2, [sp, #4]
 8011e0a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8011e0c:	f8cd 8008 	str.w	r8, [sp, #8]
 8011e10:	9200      	str	r2, [sp, #0]
 8011e12:	aa07      	add	r2, sp, #28
 8011e14:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8011e18:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8011e1c:	463b      	mov	r3, r7
 8011e1e:	47d8      	blx	fp
 8011e20:	46a6      	mov	lr, r4
 8011e22:	f10d 0c1c 	add.w	ip, sp, #28
 8011e26:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011e2a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011e2e:	f8de 3000 	ldr.w	r3, [lr]
 8011e32:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8011e36:	343c      	adds	r4, #60	; 0x3c
 8011e38:	f8cc 3000 	str.w	r3, [ip]
 8011e3c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011e40:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011e44:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011e48:	f8de 3000 	ldr.w	r3, [lr]
 8011e4c:	f8cc 3000 	str.w	r3, [ip]
 8011e50:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8011e54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011e56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011e5a:	6823      	ldr	r3, [r4, #0]
 8011e5c:	4631      	mov	r1, r6
 8011e5e:	4628      	mov	r0, r5
 8011e60:	f8cc 3000 	str.w	r3, [ip]
 8011e64:	682b      	ldr	r3, [r5, #0]
 8011e66:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8011e6a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8011e6c:	f8cd 8008 	str.w	r8, [sp, #8]
 8011e70:	9201      	str	r2, [sp, #4]
 8011e72:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8011e74:	9200      	str	r2, [sp, #0]
 8011e76:	aa07      	add	r2, sp, #28
 8011e78:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8011e7a:	463b      	mov	r3, r7
 8011e7c:	47a0      	blx	r4
 8011e7e:	b017      	add	sp, #92	; 0x5c
 8011e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e84 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011e84:	2000      	movs	r0, #0
 8011e86:	4770      	bx	lr

08011e88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8011e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e8c:	b08d      	sub	sp, #52	; 0x34
 8011e8e:	4688      	mov	r8, r1
 8011e90:	f8d3 c000 	ldr.w	ip, [r3]
 8011e94:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011e96:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8011e9a:	680f      	ldr	r7, [r1, #0]
 8011e9c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8011ea0:	eba7 070c 	sub.w	r7, r7, ip
 8011ea4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8011ea8:	edd3 6a07 	vldr	s13, [r3, #28]
 8011eac:	42bc      	cmp	r4, r7
 8011eae:	9918      	ldr	r1, [sp, #96]	; 0x60
 8011eb0:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8011eb4:	bfa8      	it	ge
 8011eb6:	463c      	movge	r4, r7
 8011eb8:	f9b1 9000 	ldrsh.w	r9, [r1]
 8011ebc:	f9ba 1000 	ldrsh.w	r1, [sl]
 8011ec0:	ee07 4a90 	vmov	s15, r4
 8011ec4:	eb09 0e0c 	add.w	lr, r9, ip
 8011ec8:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8011ecc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011ed0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8011ed4:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8011ed8:	4571      	cmp	r1, lr
 8011eda:	ee25 4a04 	vmul.f32	s8, s10, s8
 8011ede:	ee65 4a24 	vmul.f32	s9, s10, s9
 8011ee2:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011ee6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8011eea:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8011eee:	ee32 1a05 	vadd.f32	s2, s4, s10
 8011ef2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8011ef6:	ee36 0a84 	vadd.f32	s0, s13, s8
 8011efa:	ee61 1a87 	vmul.f32	s3, s3, s14
 8011efe:	ee22 2a07 	vmul.f32	s4, s4, s14
 8011f02:	f340 808c 	ble.w	801201e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8011f06:	eba1 060e 	sub.w	r6, r1, lr
 8011f0a:	fb96 f5f4 	sdiv	r5, r6, r4
 8011f0e:	ee07 5a10 	vmov	s14, r5
 8011f12:	2d00      	cmp	r5, #0
 8011f14:	fb04 6615 	mls	r6, r4, r5, r6
 8011f18:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f1c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8011f20:	eee7 0a24 	vfma.f32	s1, s14, s9
 8011f24:	eea7 1a05 	vfma.f32	s2, s14, s10
 8011f28:	dd12      	ble.n	8011f50 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8011f2a:	ee70 6a44 	vsub.f32	s13, s0, s8
 8011f2e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8011f32:	ee31 2a45 	vsub.f32	s4, s2, s10
 8011f36:	eef5 6a40 	vcmp.f32	s13, #0.0
 8011f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f3e:	bf14      	ite	ne
 8011f40:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8011f44:	eeb0 7a67 	vmoveq.f32	s14, s15
 8011f48:	ee61 1a87 	vmul.f32	s3, s3, s14
 8011f4c:	ee22 2a07 	vmul.f32	s4, s4, s14
 8011f50:	fb05 f204 	mul.w	r2, r5, r4
 8011f54:	1abf      	subs	r7, r7, r2
 8011f56:	4494      	add	ip, r2
 8011f58:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8011f5c:	4411      	add	r1, r2
 8011f5e:	eb09 020c 	add.w	r2, r9, ip
 8011f62:	b209      	sxth	r1, r1
 8011f64:	443a      	add	r2, r7
 8011f66:	428a      	cmp	r2, r1
 8011f68:	bfc4      	itt	gt
 8011f6a:	eba1 0209 	subgt.w	r2, r1, r9
 8011f6e:	eba2 070c 	subgt.w	r7, r2, ip
 8011f72:	2f00      	cmp	r7, #0
 8011f74:	dd50      	ble.n	8012018 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8011f76:	fb97 f1f4 	sdiv	r1, r7, r4
 8011f7a:	fb04 7211 	mls	r2, r4, r1, r7
 8011f7e:	b90a      	cbnz	r2, 8011f84 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8011f80:	3901      	subs	r1, #1
 8011f82:	4622      	mov	r2, r4
 8011f84:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8011f88:	6840      	ldr	r0, [r0, #4]
 8011f8a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8011f8e:	44b6      	add	lr, r6
 8011f90:	f8d0 a000 	ldr.w	sl, [r0]
 8011f94:	2900      	cmp	r1, #0
 8011f96:	bfcc      	ite	gt
 8011f98:	46a1      	movgt	r9, r4
 8011f9a:	4691      	movle	r9, r2
 8011f9c:	900b      	str	r0, [sp, #44]	; 0x2c
 8011f9e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8011fa0:	fb04 e505 	mla	r5, r4, r5, lr
 8011fa4:	eef0 6a42 	vmov.f32	s13, s4
 8011fa8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8011fac:	9008      	str	r0, [sp, #32]
 8011fae:	eeb0 7a61 	vmov.f32	s14, s3
 8011fb2:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011fb4:	695b      	ldr	r3, [r3, #20]
 8011fb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011fba:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8011fbe:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8011fc2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011fc4:	445b      	add	r3, fp
 8011fc6:	9307      	str	r3, [sp, #28]
 8011fc8:	ee16 3a90 	vmov	r3, s13
 8011fcc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8011fd0:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8011fd4:	ee21 3a23 	vmul.f32	s6, s2, s7
 8011fd8:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8011fdc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8011fe0:	ee17 7a90 	vmov	r7, s15
 8011fe4:	ee73 7a42 	vsub.f32	s15, s6, s4
 8011fe8:	fb97 f7f4 	sdiv	r7, r7, r4
 8011fec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8011ff0:	ee17 ca90 	vmov	ip, s15
 8011ff4:	fb9c fcf4 	sdiv	ip, ip, r4
 8011ff8:	fb0c 3306 	mla	r3, ip, r6, r3
 8011ffc:	9302      	str	r3, [sp, #8]
 8011ffe:	ee17 3a10 	vmov	r3, s14
 8012002:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012006:	fb07 3706 	mla	r7, r7, r6, r3
 801200a:	eba9 0306 	sub.w	r3, r9, r6
 801200e:	e9cd 4700 	strd	r4, r7, [sp]
 8012012:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012016:	47a0      	blx	r4
 8012018:	b00d      	add	sp, #52	; 0x34
 801201a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801201e:	2500      	movs	r5, #0
 8012020:	462e      	mov	r6, r5
 8012022:	e799      	b.n	8011f58 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08012024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012028:	b0db      	sub	sp, #364	; 0x16c
 801202a:	461d      	mov	r5, r3
 801202c:	4614      	mov	r4, r2
 801202e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8012032:	910f      	str	r1, [sp, #60]	; 0x3c
 8012034:	4629      	mov	r1, r5
 8012036:	930a      	str	r3, [sp, #40]	; 0x28
 8012038:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801203c:	9009      	str	r0, [sp, #36]	; 0x24
 801203e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012040:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8012044:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8012048:	9310      	str	r3, [sp, #64]	; 0x40
 801204a:	6803      	ldr	r3, [r0, #0]
 801204c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801204e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8012052:	47b8      	blx	r7
 8012054:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012056:	6058      	str	r0, [r3, #4]
 8012058:	2800      	cmp	r0, #0
 801205a:	f000 83a1 	beq.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801205e:	682b      	ldr	r3, [r5, #0]
 8012060:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8012064:	ed94 7a02 	vldr	s14, [r4, #8]
 8012068:	9314      	str	r3, [sp, #80]	; 0x50
 801206a:	686b      	ldr	r3, [r5, #4]
 801206c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012070:	9315      	str	r3, [sp, #84]	; 0x54
 8012072:	4bc1      	ldr	r3, [pc, #772]	; (8012378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012074:	7819      	ldrb	r1, [r3, #0]
 8012076:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801207a:	2900      	cmp	r1, #0
 801207c:	bf16      	itet	ne
 801207e:	4619      	movne	r1, r3
 8012080:	4611      	moveq	r1, r2
 8012082:	4613      	movne	r3, r2
 8012084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012088:	9116      	str	r1, [sp, #88]	; 0x58
 801208a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801208e:	f240 8387 	bls.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012092:	ed94 7a07 	vldr	s14, [r4, #28]
 8012096:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801209a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801209e:	f240 837f 	bls.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120a2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80120a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80120aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120ae:	f240 8377 	bls.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120b2:	6822      	ldr	r2, [r4, #0]
 80120b4:	4bb1      	ldr	r3, [pc, #708]	; (801237c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80120b6:	429a      	cmp	r2, r3
 80120b8:	f2c0 8372 	blt.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120bc:	49b0      	ldr	r1, [pc, #704]	; (8012380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80120be:	6963      	ldr	r3, [r4, #20]
 80120c0:	428a      	cmp	r2, r1
 80120c2:	f300 836d 	bgt.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120c6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80120ca:	48ae      	ldr	r0, [pc, #696]	; (8012384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80120cc:	33ff      	adds	r3, #255	; 0xff
 80120ce:	4283      	cmp	r3, r0
 80120d0:	f200 8366 	bhi.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80120d6:	4dac      	ldr	r5, [pc, #688]	; (8012388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80120d8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80120dc:	33ff      	adds	r3, #255	; 0xff
 80120de:	42ab      	cmp	r3, r5
 80120e0:	f200 835e 	bhi.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120e4:	6862      	ldr	r2, [r4, #4]
 80120e6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80120ea:	33ff      	adds	r3, #255	; 0xff
 80120ec:	4283      	cmp	r3, r0
 80120ee:	f200 8357 	bhi.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80120f2:	69a1      	ldr	r1, [r4, #24]
 80120f4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80120f8:	33ff      	adds	r3, #255	; 0xff
 80120fa:	4283      	cmp	r3, r0
 80120fc:	f200 8350 	bhi.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012100:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012102:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8012106:	30ff      	adds	r0, #255	; 0xff
 8012108:	42a8      	cmp	r0, r5
 801210a:	f200 8349 	bhi.w	80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801210e:	428a      	cmp	r2, r1
 8012110:	f280 8110 	bge.w	8012334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012114:	429a      	cmp	r2, r3
 8012116:	f300 8119 	bgt.w	801234c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801211a:	4299      	cmp	r1, r3
 801211c:	f280 811d 	bge.w	801235a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012120:	2502      	movs	r5, #2
 8012122:	2701      	movs	r7, #1
 8012124:	46a9      	mov	r9, r5
 8012126:	46b8      	mov	r8, r7
 8012128:	f04f 0a00 	mov.w	sl, #0
 801212c:	4621      	mov	r1, r4
 801212e:	a849      	add	r0, sp, #292	; 0x124
 8012130:	f003 fd00 	bl	8015b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012134:	4622      	mov	r2, r4
 8012136:	4653      	mov	r3, sl
 8012138:	a949      	add	r1, sp, #292	; 0x124
 801213a:	f8cd 9000 	str.w	r9, [sp]
 801213e:	a819      	add	r0, sp, #100	; 0x64
 8012140:	f003 fe28 	bl	8015d94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012144:	4622      	mov	r2, r4
 8012146:	4653      	mov	r3, sl
 8012148:	a949      	add	r1, sp, #292	; 0x124
 801214a:	f8cd 8000 	str.w	r8, [sp]
 801214e:	a829      	add	r0, sp, #164	; 0xa4
 8012150:	f003 fe20 	bl	8015d94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012154:	4643      	mov	r3, r8
 8012156:	4622      	mov	r2, r4
 8012158:	a949      	add	r1, sp, #292	; 0x124
 801215a:	f8cd 9000 	str.w	r9, [sp]
 801215e:	a839      	add	r0, sp, #228	; 0xe4
 8012160:	f003 fe18 	bl	8015d94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012164:	42af      	cmp	r7, r5
 8012166:	af12      	add	r7, sp, #72	; 0x48
 8012168:	bfb7      	itett	lt
 801216a:	2300      	movlt	r3, #0
 801216c:	2301      	movge	r3, #1
 801216e:	ad29      	addlt	r5, sp, #164	; 0xa4
 8012170:	ac19      	addlt	r4, sp, #100	; 0x64
 8012172:	bfb1      	iteee	lt
 8012174:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012176:	ad19      	addge	r5, sp, #100	; 0x64
 8012178:	930e      	strge	r3, [sp, #56]	; 0x38
 801217a:	ac29      	addge	r4, sp, #164	; 0xa4
 801217c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801217e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012182:	e887 0003 	stmia.w	r7, {r0, r1}
 8012186:	b928      	cbnz	r0, 8012194 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012188:	4b80      	ldr	r3, [pc, #512]	; (801238c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801218a:	6818      	ldr	r0, [r3, #0]
 801218c:	6803      	ldr	r3, [r0, #0]
 801218e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012190:	4798      	blx	r3
 8012192:	6038      	str	r0, [r7, #0]
 8012194:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012196:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801219a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801219e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80121a0:	930c      	str	r3, [sp, #48]	; 0x30
 80121a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80121a4:	6963      	ldr	r3, [r4, #20]
 80121a6:	440b      	add	r3, r1
 80121a8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80121ac:	4408      	add	r0, r1
 80121ae:	b200      	sxth	r0, r0
 80121b0:	4283      	cmp	r3, r0
 80121b2:	900d      	str	r0, [sp, #52]	; 0x34
 80121b4:	f280 80dd 	bge.w	8012372 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80121b8:	428b      	cmp	r3, r1
 80121ba:	da08      	bge.n	80121ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80121bc:	2a00      	cmp	r2, #0
 80121be:	dd06      	ble.n	80121ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80121c0:	1acb      	subs	r3, r1, r3
 80121c2:	429a      	cmp	r2, r3
 80121c4:	f2c0 80e4 	blt.w	8012390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80121c8:	2b00      	cmp	r3, #0
 80121ca:	f300 80e2 	bgt.w	8012392 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80121ce:	6967      	ldr	r7, [r4, #20]
 80121d0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80121d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80121d6:	443b      	add	r3, r7
 80121d8:	461f      	mov	r7, r3
 80121da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80121dc:	1bdf      	subs	r7, r3, r7
 80121de:	4297      	cmp	r7, r2
 80121e0:	bfa8      	it	ge
 80121e2:	4617      	movge	r7, r2
 80121e4:	2f00      	cmp	r7, #0
 80121e6:	f340 8166 	ble.w	80124b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80121ea:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80121ec:	6829      	ldr	r1, [r5, #0]
 80121ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80121f2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80121f6:	4411      	add	r1, r2
 80121f8:	6820      	ldr	r0, [r4, #0]
 80121fa:	4299      	cmp	r1, r3
 80121fc:	dd1a      	ble.n	8012234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80121fe:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012202:	4402      	add	r2, r0
 8012204:	440b      	add	r3, r1
 8012206:	b21b      	sxth	r3, r3
 8012208:	429a      	cmp	r2, r3
 801220a:	dc13      	bgt.n	8012234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801220c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801220e:	a912      	add	r1, sp, #72	; 0x48
 8012210:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012212:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012214:	681b      	ldr	r3, [r3, #0]
 8012216:	9206      	str	r2, [sp, #24]
 8012218:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801221a:	9500      	str	r5, [sp, #0]
 801221c:	9205      	str	r2, [sp, #20]
 801221e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012220:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012224:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012226:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801222a:	aa49      	add	r2, sp, #292	; 0x124
 801222c:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8012230:	4623      	mov	r3, r4
 8012232:	47c8      	blx	r9
 8012234:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012238:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801223c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012240:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012244:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012248:	68a1      	ldr	r1, [r4, #8]
 801224a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801224e:	ed94 6a08 	vldr	s12, [r4, #32]
 8012252:	edd4 6a07 	vldr	s13, [r4, #28]
 8012256:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801225a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801225e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012262:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012266:	edc4 6a07 	vstr	s13, [r4, #28]
 801226a:	441a      	add	r2, r3
 801226c:	6963      	ldr	r3, [r4, #20]
 801226e:	3301      	adds	r3, #1
 8012270:	6022      	str	r2, [r4, #0]
 8012272:	6163      	str	r3, [r4, #20]
 8012274:	69a3      	ldr	r3, [r4, #24]
 8012276:	3b01      	subs	r3, #1
 8012278:	61a3      	str	r3, [r4, #24]
 801227a:	6923      	ldr	r3, [r4, #16]
 801227c:	440b      	add	r3, r1
 801227e:	68e1      	ldr	r1, [r4, #12]
 8012280:	428b      	cmp	r3, r1
 8012282:	6123      	str	r3, [r4, #16]
 8012284:	db15      	blt.n	80122b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012286:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801228a:	3201      	adds	r2, #1
 801228c:	1a5b      	subs	r3, r3, r1
 801228e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012292:	6022      	str	r2, [r4, #0]
 8012294:	6123      	str	r3, [r4, #16]
 8012296:	edc4 6a07 	vstr	s13, [r4, #28]
 801229a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801229e:	ee36 7a87 	vadd.f32	s14, s13, s14
 80122a2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80122a6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80122aa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80122ae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80122b2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80122b6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80122ba:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80122be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80122c2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80122c6:	68a9      	ldr	r1, [r5, #8]
 80122c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80122cc:	ed95 6a08 	vldr	s12, [r5, #32]
 80122d0:	edd5 6a07 	vldr	s13, [r5, #28]
 80122d4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80122d8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80122dc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80122e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80122e4:	edc5 6a07 	vstr	s13, [r5, #28]
 80122e8:	441a      	add	r2, r3
 80122ea:	696b      	ldr	r3, [r5, #20]
 80122ec:	3301      	adds	r3, #1
 80122ee:	602a      	str	r2, [r5, #0]
 80122f0:	616b      	str	r3, [r5, #20]
 80122f2:	69ab      	ldr	r3, [r5, #24]
 80122f4:	3b01      	subs	r3, #1
 80122f6:	61ab      	str	r3, [r5, #24]
 80122f8:	692b      	ldr	r3, [r5, #16]
 80122fa:	440b      	add	r3, r1
 80122fc:	68e9      	ldr	r1, [r5, #12]
 80122fe:	428b      	cmp	r3, r1
 8012300:	612b      	str	r3, [r5, #16]
 8012302:	db15      	blt.n	8012330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8012304:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012308:	3201      	adds	r2, #1
 801230a:	1a5b      	subs	r3, r3, r1
 801230c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012310:	602a      	str	r2, [r5, #0]
 8012312:	612b      	str	r3, [r5, #16]
 8012314:	edc5 6a07 	vstr	s13, [r5, #28]
 8012318:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801231c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012320:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012324:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8012328:	ee77 7a27 	vadd.f32	s15, s14, s15
 801232c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012330:	3f01      	subs	r7, #1
 8012332:	e757      	b.n	80121e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8012334:	4299      	cmp	r1, r3
 8012336:	dc13      	bgt.n	8012360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012338:	429a      	cmp	r2, r3
 801233a:	da14      	bge.n	8012366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801233c:	2502      	movs	r5, #2
 801233e:	2703      	movs	r7, #3
 8012340:	f04f 0800 	mov.w	r8, #0
 8012344:	46a9      	mov	r9, r5
 8012346:	f04f 0a01 	mov.w	sl, #1
 801234a:	e6ef      	b.n	801212c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801234c:	2501      	movs	r5, #1
 801234e:	2700      	movs	r7, #0
 8012350:	46a9      	mov	r9, r5
 8012352:	46b8      	mov	r8, r7
 8012354:	f04f 0a02 	mov.w	sl, #2
 8012358:	e6e8      	b.n	801212c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801235a:	2501      	movs	r5, #1
 801235c:	2702      	movs	r7, #2
 801235e:	e6e1      	b.n	8012124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012360:	2500      	movs	r5, #0
 8012362:	2701      	movs	r7, #1
 8012364:	e7f4      	b.n	8012350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012366:	2702      	movs	r7, #2
 8012368:	2503      	movs	r5, #3
 801236a:	f04f 0900 	mov.w	r9, #0
 801236e:	46b8      	mov	r8, r7
 8012370:	e7e9      	b.n	8012346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012372:	4613      	mov	r3, r2
 8012374:	e728      	b.n	80121c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012376:	bf00      	nop
 8012378:	240016a8 	.word	0x240016a8
 801237c:	fffd8f01 	.word	0xfffd8f01
 8012380:	00027100 	.word	0x00027100
 8012384:	0004e1ff 	.word	0x0004e1ff
 8012388:	0004e1fe 	.word	0x0004e1fe
 801238c:	240016b0 	.word	0x240016b0
 8012390:	4613      	mov	r3, r2
 8012392:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012394:	469e      	mov	lr, r3
 8012396:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8012398:	469c      	mov	ip, r3
 801239a:	9111      	str	r1, [sp, #68]	; 0x44
 801239c:	f04f 0900 	mov.w	r9, #0
 80123a0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80123a4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80123a8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80123ac:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80123b0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80123b4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80123b8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80123bc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80123c0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80123c4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80123c8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80123cc:	f1bc 0f00 	cmp.w	ip, #0
 80123d0:	d147      	bne.n	8012462 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80123d2:	eb03 0c07 	add.w	ip, r3, r7
 80123d6:	1ad7      	subs	r7, r2, r3
 80123d8:	f1b9 0f00 	cmp.w	r9, #0
 80123dc:	d009      	beq.n	80123f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80123de:	9029      	str	r0, [sp, #164]	; 0xa4
 80123e0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80123e4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80123e8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80123ec:	912d      	str	r1, [sp, #180]	; 0xb4
 80123ee:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80123f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80123f4:	f04f 0800 	mov.w	r8, #0
 80123f8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80123fc:	9111      	str	r1, [sp, #68]	; 0x44
 80123fe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012402:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012406:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801240a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801240e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012412:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012416:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801241a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801241e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012422:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012426:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801242a:	f1be 0f00 	cmp.w	lr, #0
 801242e:	d031      	beq.n	8012494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012430:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012432:	4450      	add	r0, sl
 8012434:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012438:	4431      	add	r1, r6
 801243a:	ee37 7a04 	vadd.f32	s14, s14, s8
 801243e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012442:	4549      	cmp	r1, r9
 8012444:	db08      	blt.n	8012458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012446:	ee77 7a85 	vadd.f32	s15, s15, s10
 801244a:	3001      	adds	r0, #1
 801244c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012450:	eba1 0109 	sub.w	r1, r1, r9
 8012454:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012458:	f10e 3eff 	add.w	lr, lr, #4294967295
 801245c:	f04f 0801 	mov.w	r8, #1
 8012460:	e7e3      	b.n	801242a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012462:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012464:	4450      	add	r0, sl
 8012466:	ee37 7a24 	vadd.f32	s14, s14, s9
 801246a:	4431      	add	r1, r6
 801246c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012470:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012474:	4541      	cmp	r1, r8
 8012476:	db08      	blt.n	801248a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012478:	ee76 6a85 	vadd.f32	s13, s13, s10
 801247c:	3001      	adds	r0, #1
 801247e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012482:	eba1 0108 	sub.w	r1, r1, r8
 8012486:	ee77 7a86 	vadd.f32	s15, s15, s12
 801248a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801248e:	f04f 0901 	mov.w	r9, #1
 8012492:	e79b      	b.n	80123cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012494:	449c      	add	ip, r3
 8012496:	1aff      	subs	r7, r7, r3
 8012498:	f1b8 0f00 	cmp.w	r8, #0
 801249c:	d009      	beq.n	80124b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801249e:	9019      	str	r0, [sp, #100]	; 0x64
 80124a0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80124a4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80124a8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80124ac:	911d      	str	r1, [sp, #116]	; 0x74
 80124ae:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80124b2:	1ad2      	subs	r2, r2, r3
 80124b4:	e68b      	b.n	80121ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80124b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80124b8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80124ba:	2b00      	cmp	r3, #0
 80124bc:	f000 80d1 	beq.w	8012662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80124c0:	ad19      	add	r5, sp, #100	; 0x64
 80124c2:	ac39      	add	r4, sp, #228	; 0xe4
 80124c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80124c6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80124ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80124ce:	930c      	str	r3, [sp, #48]	; 0x30
 80124d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80124d2:	6963      	ldr	r3, [r4, #20]
 80124d4:	440b      	add	r3, r1
 80124d6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80124da:	4408      	add	r0, r1
 80124dc:	b200      	sxth	r0, r0
 80124de:	4283      	cmp	r3, r0
 80124e0:	900d      	str	r0, [sp, #52]	; 0x34
 80124e2:	f280 80c1 	bge.w	8012668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80124e6:	428b      	cmp	r3, r1
 80124e8:	da08      	bge.n	80124fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80124ea:	2a00      	cmp	r2, #0
 80124ec:	dd06      	ble.n	80124fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80124ee:	1acb      	subs	r3, r1, r3
 80124f0:	429a      	cmp	r2, r3
 80124f2:	f2c0 80bb 	blt.w	801266c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80124f6:	2b00      	cmp	r3, #0
 80124f8:	f300 80b9 	bgt.w	801266e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80124fc:	6967      	ldr	r7, [r4, #20]
 80124fe:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012502:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012504:	443b      	add	r3, r7
 8012506:	461f      	mov	r7, r3
 8012508:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801250a:	1bdf      	subs	r7, r3, r7
 801250c:	4297      	cmp	r7, r2
 801250e:	bfa8      	it	ge
 8012510:	4617      	movge	r7, r2
 8012512:	2f00      	cmp	r7, #0
 8012514:	f340 813c 	ble.w	8012790 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012518:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801251a:	6829      	ldr	r1, [r5, #0]
 801251c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012520:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012524:	4411      	add	r1, r2
 8012526:	6820      	ldr	r0, [r4, #0]
 8012528:	4299      	cmp	r1, r3
 801252a:	dd1a      	ble.n	8012562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801252c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012530:	4402      	add	r2, r0
 8012532:	440b      	add	r3, r1
 8012534:	b21b      	sxth	r3, r3
 8012536:	429a      	cmp	r2, r3
 8012538:	dc13      	bgt.n	8012562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801253a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801253c:	a912      	add	r1, sp, #72	; 0x48
 801253e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012540:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012542:	681b      	ldr	r3, [r3, #0]
 8012544:	9206      	str	r2, [sp, #24]
 8012546:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012548:	9500      	str	r5, [sp, #0]
 801254a:	9205      	str	r2, [sp, #20]
 801254c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801254e:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012552:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012554:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012558:	aa49      	add	r2, sp, #292	; 0x124
 801255a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801255e:	4623      	mov	r3, r4
 8012560:	47c8      	blx	r9
 8012562:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012566:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801256a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801256e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012572:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012576:	68a1      	ldr	r1, [r4, #8]
 8012578:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801257c:	ed94 6a08 	vldr	s12, [r4, #32]
 8012580:	edd4 6a07 	vldr	s13, [r4, #28]
 8012584:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012588:	ee76 6a86 	vadd.f32	s13, s13, s12
 801258c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012590:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012594:	edc4 6a07 	vstr	s13, [r4, #28]
 8012598:	441a      	add	r2, r3
 801259a:	6963      	ldr	r3, [r4, #20]
 801259c:	3301      	adds	r3, #1
 801259e:	6022      	str	r2, [r4, #0]
 80125a0:	6163      	str	r3, [r4, #20]
 80125a2:	69a3      	ldr	r3, [r4, #24]
 80125a4:	3b01      	subs	r3, #1
 80125a6:	61a3      	str	r3, [r4, #24]
 80125a8:	6923      	ldr	r3, [r4, #16]
 80125aa:	440b      	add	r3, r1
 80125ac:	68e1      	ldr	r1, [r4, #12]
 80125ae:	428b      	cmp	r3, r1
 80125b0:	6123      	str	r3, [r4, #16]
 80125b2:	db15      	blt.n	80125e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80125b4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80125b8:	3201      	adds	r2, #1
 80125ba:	1a5b      	subs	r3, r3, r1
 80125bc:	ee76 6a26 	vadd.f32	s13, s12, s13
 80125c0:	6022      	str	r2, [r4, #0]
 80125c2:	6123      	str	r3, [r4, #16]
 80125c4:	edc4 6a07 	vstr	s13, [r4, #28]
 80125c8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80125cc:	ee36 7a87 	vadd.f32	s14, s13, s14
 80125d0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80125d4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80125d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80125dc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80125e0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80125e4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80125e8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80125ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80125f0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80125f4:	68a9      	ldr	r1, [r5, #8]
 80125f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80125fa:	ed95 6a08 	vldr	s12, [r5, #32]
 80125fe:	edd5 6a07 	vldr	s13, [r5, #28]
 8012602:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012606:	ee76 6a86 	vadd.f32	s13, s13, s12
 801260a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801260e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012612:	edc5 6a07 	vstr	s13, [r5, #28]
 8012616:	441a      	add	r2, r3
 8012618:	696b      	ldr	r3, [r5, #20]
 801261a:	3301      	adds	r3, #1
 801261c:	602a      	str	r2, [r5, #0]
 801261e:	616b      	str	r3, [r5, #20]
 8012620:	69ab      	ldr	r3, [r5, #24]
 8012622:	3b01      	subs	r3, #1
 8012624:	61ab      	str	r3, [r5, #24]
 8012626:	692b      	ldr	r3, [r5, #16]
 8012628:	440b      	add	r3, r1
 801262a:	68e9      	ldr	r1, [r5, #12]
 801262c:	428b      	cmp	r3, r1
 801262e:	612b      	str	r3, [r5, #16]
 8012630:	db15      	blt.n	801265e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8012632:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012636:	3201      	adds	r2, #1
 8012638:	1a5b      	subs	r3, r3, r1
 801263a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801263e:	602a      	str	r2, [r5, #0]
 8012640:	612b      	str	r3, [r5, #16]
 8012642:	edc5 6a07 	vstr	s13, [r5, #28]
 8012646:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801264a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801264e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012652:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8012656:	ee77 7a27 	vadd.f32	s15, s14, s15
 801265a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801265e:	3f01      	subs	r7, #1
 8012660:	e757      	b.n	8012512 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8012662:	ad39      	add	r5, sp, #228	; 0xe4
 8012664:	ac19      	add	r4, sp, #100	; 0x64
 8012666:	e72d      	b.n	80124c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012668:	4613      	mov	r3, r2
 801266a:	e744      	b.n	80124f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801266c:	4613      	mov	r3, r2
 801266e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8012670:	469e      	mov	lr, r3
 8012672:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8012676:	461f      	mov	r7, r3
 8012678:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801267c:	f04f 0900 	mov.w	r9, #0
 8012680:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8012684:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8012688:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 801268c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8012690:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8012694:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8012696:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801269a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801269e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80126a2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80126a6:	960e      	str	r6, [sp, #56]	; 0x38
 80126a8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80126ac:	2f00      	cmp	r7, #0
 80126ae:	d146      	bne.n	801273e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80126b0:	449c      	add	ip, r3
 80126b2:	1ad7      	subs	r7, r2, r3
 80126b4:	f1b9 0f00 	cmp.w	r9, #0
 80126b8:	d009      	beq.n	80126ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80126ba:	9039      	str	r0, [sp, #228]	; 0xe4
 80126bc:	913d      	str	r1, [sp, #244]	; 0xf4
 80126be:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80126c2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80126c6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80126ca:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80126ce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80126d0:	f04f 0800 	mov.w	r8, #0
 80126d4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80126d8:	910e      	str	r1, [sp, #56]	; 0x38
 80126da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80126de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80126e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80126e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80126ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80126ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80126f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80126f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80126fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80126fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012702:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012706:	f1be 0f00 	cmp.w	lr, #0
 801270a:	d030      	beq.n	801276e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801270c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801270e:	4450      	add	r0, sl
 8012710:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012714:	4431      	add	r1, r6
 8012716:	ee37 7a04 	vadd.f32	s14, s14, s8
 801271a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801271e:	4549      	cmp	r1, r9
 8012720:	db08      	blt.n	8012734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8012722:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012726:	3001      	adds	r0, #1
 8012728:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801272c:	eba1 0109 	sub.w	r1, r1, r9
 8012730:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012734:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012738:	f04f 0801 	mov.w	r8, #1
 801273c:	e7e3      	b.n	8012706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801273e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012740:	4450      	add	r0, sl
 8012742:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012746:	4431      	add	r1, r6
 8012748:	ee77 7a84 	vadd.f32	s15, s15, s8
 801274c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012750:	4541      	cmp	r1, r8
 8012752:	db08      	blt.n	8012766 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8012754:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012758:	3001      	adds	r0, #1
 801275a:	ee37 7a25 	vadd.f32	s14, s14, s11
 801275e:	eba1 0108 	sub.w	r1, r1, r8
 8012762:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012766:	3f01      	subs	r7, #1
 8012768:	f04f 0901 	mov.w	r9, #1
 801276c:	e79e      	b.n	80126ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801276e:	449c      	add	ip, r3
 8012770:	1aff      	subs	r7, r7, r3
 8012772:	f1b8 0f00 	cmp.w	r8, #0
 8012776:	d009      	beq.n	801278c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8012778:	9019      	str	r0, [sp, #100]	; 0x64
 801277a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801277e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012782:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012786:	911d      	str	r1, [sp, #116]	; 0x74
 8012788:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801278c:	1ad2      	subs	r2, r2, r3
 801278e:	e6b5      	b.n	80124fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012790:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012792:	681b      	ldr	r3, [r3, #0]
 8012794:	b923      	cbnz	r3, 80127a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012796:	4b04      	ldr	r3, [pc, #16]	; (80127a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012798:	6818      	ldr	r0, [r3, #0]
 801279a:	6803      	ldr	r3, [r0, #0]
 801279c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801279e:	4798      	blx	r3
 80127a0:	b05b      	add	sp, #364	; 0x16c
 80127a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127a6:	bf00      	nop
 80127a8:	240016b0 	.word	0x240016b0

080127ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80127ac:	b570      	push	{r4, r5, r6, lr}
 80127ae:	4604      	mov	r4, r0
 80127b0:	2500      	movs	r5, #0
 80127b2:	9805      	ldr	r0, [sp, #20]
 80127b4:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80127b8:	6061      	str	r1, [r4, #4]
 80127ba:	8263      	strh	r3, [r4, #18]
 80127bc:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80127c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80127c4:	8025      	strh	r5, [r4, #0]
 80127c6:	7221      	strb	r1, [r4, #8]
 80127c8:	7266      	strb	r6, [r4, #9]
 80127ca:	60e0      	str	r0, [r4, #12]
 80127cc:	8222      	strh	r2, [r4, #16]
 80127ce:	82a3      	strh	r3, [r4, #20]
 80127d0:	82e5      	strh	r5, [r4, #22]
 80127d2:	8325      	strh	r5, [r4, #24]
 80127d4:	8365      	strh	r5, [r4, #26]
 80127d6:	83a5      	strh	r5, [r4, #28]
 80127d8:	83e5      	strh	r5, [r4, #30]
 80127da:	8425      	strh	r5, [r4, #32]
 80127dc:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80127e0:	b32e      	cbz	r6, 801282e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80127e2:	6803      	ldr	r3, [r0, #0]
 80127e4:	695b      	ldr	r3, [r3, #20]
 80127e6:	4798      	blx	r3
 80127e8:	4606      	mov	r6, r0
 80127ea:	b300      	cbz	r0, 801282e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80127ec:	68e0      	ldr	r0, [r4, #12]
 80127ee:	4631      	mov	r1, r6
 80127f0:	6803      	ldr	r3, [r0, #0]
 80127f2:	68db      	ldr	r3, [r3, #12]
 80127f4:	4798      	blx	r3
 80127f6:	4605      	mov	r5, r0
 80127f8:	b1c8      	cbz	r0, 801282e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80127fa:	7b43      	ldrb	r3, [r0, #13]
 80127fc:	7a82      	ldrb	r2, [r0, #10]
 80127fe:	005b      	lsls	r3, r3, #1
 8012800:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012804:	4313      	orrs	r3, r2
 8012806:	8423      	strh	r3, [r4, #32]
 8012808:	7a63      	ldrb	r3, [r4, #9]
 801280a:	2b06      	cmp	r3, #6
 801280c:	d10f      	bne.n	801282e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801280e:	68e0      	ldr	r0, [r4, #12]
 8012810:	462a      	mov	r2, r5
 8012812:	4631      	mov	r1, r6
 8012814:	6803      	ldr	r3, [r0, #0]
 8012816:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012818:	4798      	blx	r3
 801281a:	7b6b      	ldrb	r3, [r5, #13]
 801281c:	005b      	lsls	r3, r3, #1
 801281e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012822:	7aab      	ldrb	r3, [r5, #10]
 8012824:	4313      	orrs	r3, r2
 8012826:	4418      	add	r0, r3
 8012828:	8c23      	ldrh	r3, [r4, #32]
 801282a:	4418      	add	r0, r3
 801282c:	8420      	strh	r0, [r4, #32]
 801282e:	4620      	mov	r0, r4
 8012830:	bd70      	pop	{r4, r5, r6, pc}

08012832 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8012832:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012836:	2400      	movs	r4, #0
 8012838:	b085      	sub	sp, #20
 801283a:	4681      	mov	r9, r0
 801283c:	4688      	mov	r8, r1
 801283e:	4692      	mov	sl, r2
 8012840:	469b      	mov	fp, r3
 8012842:	4627      	mov	r7, r4
 8012844:	4625      	mov	r5, r4
 8012846:	4626      	mov	r6, r4
 8012848:	4554      	cmp	r4, sl
 801284a:	da2a      	bge.n	80128a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801284c:	2300      	movs	r3, #0
 801284e:	9303      	str	r3, [sp, #12]
 8012850:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012854:	429d      	cmp	r5, r3
 8012856:	d004      	beq.n	8012862 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8012858:	f242 030b 	movw	r3, #8203	; 0x200b
 801285c:	429d      	cmp	r5, r3
 801285e:	bf18      	it	ne
 8012860:	462f      	movne	r7, r5
 8012862:	ab03      	add	r3, sp, #12
 8012864:	4642      	mov	r2, r8
 8012866:	4659      	mov	r1, fp
 8012868:	4648      	mov	r0, r9
 801286a:	f002 ff79 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801286e:	4605      	mov	r5, r0
 8012870:	b1b8      	cbz	r0, 80128a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012872:	280a      	cmp	r0, #10
 8012874:	d015      	beq.n	80128a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012876:	9a03      	ldr	r2, [sp, #12]
 8012878:	b18a      	cbz	r2, 801289e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801287a:	7b50      	ldrb	r0, [r2, #13]
 801287c:	4639      	mov	r1, r7
 801287e:	7a93      	ldrb	r3, [r2, #10]
 8012880:	0040      	lsls	r0, r0, #1
 8012882:	8895      	ldrh	r5, [r2, #4]
 8012884:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012888:	4303      	orrs	r3, r0
 801288a:	4640      	mov	r0, r8
 801288c:	9301      	str	r3, [sp, #4]
 801288e:	f8d8 3000 	ldr.w	r3, [r8]
 8012892:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012894:	4798      	blx	r3
 8012896:	9b01      	ldr	r3, [sp, #4]
 8012898:	4418      	add	r0, r3
 801289a:	4406      	add	r6, r0
 801289c:	b2b6      	uxth	r6, r6
 801289e:	3401      	adds	r4, #1
 80128a0:	e7d2      	b.n	8012848 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80128a2:	4630      	mov	r0, r6
 80128a4:	b005      	add	sp, #20
 80128a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080128aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80128aa:	2a02      	cmp	r2, #2
 80128ac:	b530      	push	{r4, r5, lr}
 80128ae:	d011      	beq.n	80128d4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80128b0:	2a03      	cmp	r2, #3
 80128b2:	d01c      	beq.n	80128ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80128b4:	2a01      	cmp	r2, #1
 80128b6:	d10c      	bne.n	80128d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80128b8:	888b      	ldrh	r3, [r1, #4]
 80128ba:	8801      	ldrh	r1, [r0, #0]
 80128bc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80128c0:	1a5b      	subs	r3, r3, r1
 80128c2:	8844      	ldrh	r4, [r0, #2]
 80128c4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80128c8:	1a9b      	subs	r3, r3, r2
 80128ca:	8004      	strh	r4, [r0, #0]
 80128cc:	8081      	strh	r1, [r0, #4]
 80128ce:	8043      	strh	r3, [r0, #2]
 80128d0:	80c2      	strh	r2, [r0, #6]
 80128d2:	bd30      	pop	{r4, r5, pc}
 80128d4:	88cb      	ldrh	r3, [r1, #6]
 80128d6:	8842      	ldrh	r2, [r0, #2]
 80128d8:	1a9b      	subs	r3, r3, r2
 80128da:	88c2      	ldrh	r2, [r0, #6]
 80128dc:	1a9b      	subs	r3, r3, r2
 80128de:	888a      	ldrh	r2, [r1, #4]
 80128e0:	8801      	ldrh	r1, [r0, #0]
 80128e2:	8043      	strh	r3, [r0, #2]
 80128e4:	1a52      	subs	r2, r2, r1
 80128e6:	8881      	ldrh	r1, [r0, #4]
 80128e8:	1a52      	subs	r2, r2, r1
 80128ea:	8002      	strh	r2, [r0, #0]
 80128ec:	e7f1      	b.n	80128d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80128ee:	88cb      	ldrh	r3, [r1, #6]
 80128f0:	8841      	ldrh	r1, [r0, #2]
 80128f2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80128f6:	1a5b      	subs	r3, r3, r1
 80128f8:	f9b0 5000 	ldrsh.w	r5, [r0]
 80128fc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012900:	1a9b      	subs	r3, r3, r2
 8012902:	8045      	strh	r5, [r0, #2]
 8012904:	8082      	strh	r2, [r0, #4]
 8012906:	8003      	strh	r3, [r0, #0]
 8012908:	80c4      	strh	r4, [r0, #6]
 801290a:	e7e2      	b.n	80128d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801290c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801290c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012910:	b09f      	sub	sp, #124	; 0x7c
 8012912:	9116      	str	r1, [sp, #88]	; 0x58
 8012914:	9317      	str	r3, [sp, #92]	; 0x5c
 8012916:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012918:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801291a:	8809      	ldrh	r1, [r1, #0]
 801291c:	889b      	ldrh	r3, [r3, #4]
 801291e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8012922:	440b      	add	r3, r1
 8012924:	9212      	str	r2, [sp, #72]	; 0x48
 8012926:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801292a:	b21b      	sxth	r3, r3
 801292c:	9011      	str	r0, [sp, #68]	; 0x44
 801292e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012932:	9310      	str	r3, [sp, #64]	; 0x40
 8012934:	f8d8 3000 	ldr.w	r3, [r8]
 8012938:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801293c:	7b19      	ldrb	r1, [r3, #12]
 801293e:	7adb      	ldrb	r3, [r3, #11]
 8012940:	9114      	str	r1, [sp, #80]	; 0x50
 8012942:	9315      	str	r3, [sp, #84]	; 0x54
 8012944:	2a00      	cmp	r2, #0
 8012946:	d06a      	beq.n	8012a1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8012948:	f898 3010 	ldrb.w	r3, [r8, #16]
 801294c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801294e:	2b06      	cmp	r3, #6
 8012950:	bf14      	ite	ne
 8012952:	2301      	movne	r3, #1
 8012954:	2302      	moveq	r3, #2
 8012956:	4413      	add	r3, r2
 8012958:	f04f 0900 	mov.w	r9, #0
 801295c:	930f      	str	r3, [sp, #60]	; 0x3c
 801295e:	464c      	mov	r4, r9
 8012960:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8012964:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8012968:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801296c:	4293      	cmp	r3, r2
 801296e:	f280 808f 	bge.w	8012a90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8012972:	2300      	movs	r3, #0
 8012974:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8012978:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801297c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012980:	429c      	cmp	r4, r3
 8012982:	d006      	beq.n	8012992 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8012984:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012986:	f242 020b 	movw	r2, #8203	; 0x200b
 801298a:	4294      	cmp	r4, r2
 801298c:	bf18      	it	ne
 801298e:	4623      	movne	r3, r4
 8012990:	930d      	str	r3, [sp, #52]	; 0x34
 8012992:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012994:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8012996:	f8d8 2000 	ldr.w	r2, [r8]
 801299a:	428b      	cmp	r3, r1
 801299c:	db41      	blt.n	8012a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801299e:	6813      	ldr	r3, [r2, #0]
 80129a0:	4610      	mov	r0, r2
 80129a2:	695b      	ldr	r3, [r3, #20]
 80129a4:	4798      	blx	r3
 80129a6:	4604      	mov	r4, r0
 80129a8:	f8d8 0000 	ldr.w	r0, [r8]
 80129ac:	aa1d      	add	r2, sp, #116	; 0x74
 80129ae:	4621      	mov	r1, r4
 80129b0:	6803      	ldr	r3, [r0, #0]
 80129b2:	689d      	ldr	r5, [r3, #8]
 80129b4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80129b8:	47a8      	blx	r5
 80129ba:	901c      	str	r0, [sp, #112]	; 0x70
 80129bc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80129c0:	429c      	cmp	r4, r3
 80129c2:	f000 80ec 	beq.w	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80129c6:	f242 030b 	movw	r3, #8203	; 0x200b
 80129ca:	429c      	cmp	r4, r3
 80129cc:	f000 80e7 	beq.w	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80129d0:	2c00      	cmp	r4, #0
 80129d2:	f000 80f9 	beq.w	8012bc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 80129d6:	2c0a      	cmp	r4, #10
 80129d8:	d060      	beq.n	8012a9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80129da:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80129dc:	b36a      	cbz	r2, 8012a3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80129de:	8894      	ldrh	r4, [r2, #4]
 80129e0:	f1bb 0f00 	cmp.w	fp, #0
 80129e4:	d03b      	beq.n	8012a5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80129e6:	f892 900d 	ldrb.w	r9, [r2, #13]
 80129ea:	f1bb 0f01 	cmp.w	fp, #1
 80129ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80129f2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80129f6:	f892 900a 	ldrb.w	r9, [r2, #10]
 80129fa:	ea49 0903 	orr.w	r9, r9, r3
 80129fe:	d134      	bne.n	8012a6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8012a00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a02:	eba6 0609 	sub.w	r6, r6, r9
 8012a06:	2b00      	cmp	r3, #0
 8012a08:	d14f      	bne.n	8012aaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8012a0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012a0c:	eb09 0306 	add.w	r3, r9, r6
 8012a10:	4413      	add	r3, r2
 8012a12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8012a14:	f9b2 2000 	ldrsh.w	r2, [r2]
 8012a18:	4293      	cmp	r3, r2
 8012a1a:	da51      	bge.n	8012ac0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8012a1c:	e038      	b.n	8012a90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8012a1e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012a20:	e79a      	b.n	8012958 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8012a22:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8012a26:	4659      	mov	r1, fp
 8012a28:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8012a2a:	9301      	str	r3, [sp, #4]
 8012a2c:	ab1d      	add	r3, sp, #116	; 0x74
 8012a2e:	9300      	str	r3, [sp, #0]
 8012a30:	ab1c      	add	r3, sp, #112	; 0x70
 8012a32:	f002 fede 	bl	80157f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8012a36:	4604      	mov	r4, r0
 8012a38:	e7c0      	b.n	80129bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8012a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8012a3e:	6803      	ldr	r3, [r0, #0]
 8012a40:	691b      	ldr	r3, [r3, #16]
 8012a42:	4798      	blx	r3
 8012a44:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012a48:	4298      	cmp	r0, r3
 8012a4a:	f000 80a8 	beq.w	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012a4e:	f242 030b 	movw	r3, #8203	; 0x200b
 8012a52:	4298      	cmp	r0, r3
 8012a54:	f000 80a3 	beq.w	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012a58:	f1bb 0f00 	cmp.w	fp, #0
 8012a5c:	d100      	bne.n	8012a60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8012a5e:	444e      	add	r6, r9
 8012a60:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012a62:	2a00      	cmp	r2, #0
 8012a64:	d1bf      	bne.n	80129e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8012a66:	4691      	mov	r9, r2
 8012a68:	e099      	b.n	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012a6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a6c:	2b00      	cmp	r3, #0
 8012a6e:	f000 80ad 	beq.w	8012bcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 8012a72:	f1bb 0f00 	cmp.w	fp, #0
 8012a76:	d118      	bne.n	8012aaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8012a78:	f8d8 0000 	ldr.w	r0, [r8]
 8012a7c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012a7e:	6803      	ldr	r3, [r0, #0]
 8012a80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012a82:	4798      	blx	r3
 8012a84:	4406      	add	r6, r0
 8012a86:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012a88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012a8a:	1af3      	subs	r3, r6, r3
 8012a8c:	4293      	cmp	r3, r2
 8012a8e:	dd17      	ble.n	8012ac0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8012a90:	2c00      	cmp	r4, #0
 8012a92:	f000 8099 	beq.w	8012bc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8012a96:	2c0a      	cmp	r4, #10
 8012a98:	f040 8087 	bne.w	8012baa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8012a9c:	240a      	movs	r4, #10
 8012a9e:	fab4 f084 	clz	r0, r4
 8012aa2:	0940      	lsrs	r0, r0, #5
 8012aa4:	b01f      	add	sp, #124	; 0x7c
 8012aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012aaa:	f8d8 0000 	ldr.w	r0, [r8]
 8012aae:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012ab0:	6803      	ldr	r3, [r0, #0]
 8012ab2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012ab4:	4798      	blx	r3
 8012ab6:	f1bb 0f01 	cmp.w	fp, #1
 8012aba:	eba6 0600 	sub.w	r6, r6, r0
 8012abe:	d0a4      	beq.n	8012a0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8012ac0:	981c      	ldr	r0, [sp, #112]	; 0x70
 8012ac2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012ac4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8012ac8:	f9b3 7000 	ldrsh.w	r7, [r3]
 8012acc:	7b43      	ldrb	r3, [r0, #13]
 8012ace:	4431      	add	r1, r6
 8012ad0:	015b      	lsls	r3, r3, #5
 8012ad2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012ad6:	7983      	ldrb	r3, [r0, #6]
 8012ad8:	4313      	orrs	r3, r2
 8012ada:	440b      	add	r3, r1
 8012adc:	42bb      	cmp	r3, r7
 8012ade:	db5e      	blt.n	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012ae0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ae2:	4299      	cmp	r1, r3
 8012ae4:	da5b      	bge.n	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012ae6:	f8d8 0000 	ldr.w	r0, [r8]
 8012aea:	42b7      	cmp	r7, r6
 8012aec:	6803      	ldr	r3, [r0, #0]
 8012aee:	bfcc      	ite	gt
 8012af0:	1bbf      	subgt	r7, r7, r6
 8012af2:	2700      	movle	r7, #0
 8012af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012af6:	bfc8      	it	gt
 8012af8:	b2bf      	uxthgt	r7, r7
 8012afa:	4798      	blx	r3
 8012afc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012afe:	7b5a      	ldrb	r2, [r3, #13]
 8012b00:	00d1      	lsls	r1, r2, #3
 8012b02:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8012b06:	7a19      	ldrb	r1, [r3, #8]
 8012b08:	4329      	orrs	r1, r5
 8012b0a:	0655      	lsls	r5, r2, #25
 8012b0c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8012b0e:	bf48      	it	mi
 8012b10:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8012b14:	4405      	add	r5, r0
 8012b16:	bf48      	it	mi
 8012b18:	b209      	sxthmi	r1, r1
 8012b1a:	1a6d      	subs	r5, r5, r1
 8012b1c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012b1e:	b2ad      	uxth	r5, r5
 8012b20:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8012b24:	fa0f fa85 	sxth.w	sl, r5
 8012b28:	4551      	cmp	r1, sl
 8012b2a:	dd3c      	ble.n	8012ba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8012b2c:	0112      	lsls	r2, r2, #4
 8012b2e:	79d8      	ldrb	r0, [r3, #7]
 8012b30:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012b34:	4302      	orrs	r2, r0
 8012b36:	4492      	add	sl, r2
 8012b38:	4551      	cmp	r1, sl
 8012b3a:	dc30      	bgt.n	8012b9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012b3c:	1b4d      	subs	r5, r1, r5
 8012b3e:	468a      	mov	sl, r1
 8012b40:	b22d      	sxth	r5, r5
 8012b42:	9319      	str	r3, [sp, #100]	; 0x64
 8012b44:	b2ad      	uxth	r5, r5
 8012b46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012b48:	f8d8 0000 	ldr.w	r0, [r8]
 8012b4c:	681a      	ldr	r2, [r3, #0]
 8012b4e:	6801      	ldr	r1, [r0, #0]
 8012b50:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8012b52:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8012b54:	9313      	str	r3, [sp, #76]	; 0x4c
 8012b56:	9218      	str	r2, [sp, #96]	; 0x60
 8012b58:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8012b5a:	4788      	blx	r1
 8012b5c:	f898 1006 	ldrb.w	r1, [r8, #6]
 8012b60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8012b62:	910b      	str	r1, [sp, #44]	; 0x2c
 8012b64:	f898 100e 	ldrb.w	r1, [r8, #14]
 8012b68:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012b6a:	910a      	str	r1, [sp, #40]	; 0x28
 8012b6c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8012b70:	9109      	str	r1, [sp, #36]	; 0x24
 8012b72:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8012b76:	9305      	str	r3, [sp, #20]
 8012b78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012b7a:	9206      	str	r2, [sp, #24]
 8012b7c:	9304      	str	r3, [sp, #16]
 8012b7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012b80:	f8cd a004 	str.w	sl, [sp, #4]
 8012b84:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8012b88:	4437      	add	r7, r6
 8012b8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012b8c:	b23f      	sxth	r7, r7
 8012b8e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8012b92:	9700      	str	r7, [sp, #0]
 8012b94:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012b96:	681a      	ldr	r2, [r3, #0]
 8012b98:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012b9a:	685b      	ldr	r3, [r3, #4]
 8012b9c:	47a8      	blx	r5
 8012b9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ba0:	3301      	adds	r3, #1
 8012ba2:	930e      	str	r3, [sp, #56]	; 0x38
 8012ba4:	e6e0      	b.n	8012968 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8012ba6:	2500      	movs	r5, #0
 8012ba8:	e7cb      	b.n	8012b42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 8012baa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012bac:	3501      	adds	r5, #1
 8012bae:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012bb0:	429d      	cmp	r5, r3
 8012bb2:	f6bf af74 	bge.w	8012a9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012bb6:	4659      	mov	r1, fp
 8012bb8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8012bba:	f7fa f8a7 	bl	800cd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012bbe:	4604      	mov	r4, r0
 8012bc0:	b110      	cbz	r0, 8012bc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8012bc2:	280a      	cmp	r0, #10
 8012bc4:	d1f2      	bne.n	8012bac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 8012bc6:	e769      	b.n	8012a9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012bc8:	2400      	movs	r4, #0
 8012bca:	e768      	b.n	8012a9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012bcc:	f1bb 0f00 	cmp.w	fp, #0
 8012bd0:	f43f af59 	beq.w	8012a86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8012bd4:	e774      	b.n	8012ac0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08012bd6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8012bd6:	b530      	push	{r4, r5, lr}
 8012bd8:	8ac4      	ldrh	r4, [r0, #22]
 8012bda:	8b45      	ldrh	r5, [r0, #26]
 8012bdc:	8343      	strh	r3, [r0, #26]
 8012bde:	442c      	add	r4, r5
 8012be0:	1ae4      	subs	r4, r4, r3
 8012be2:	8b83      	ldrh	r3, [r0, #28]
 8012be4:	82c4      	strh	r4, [r0, #22]
 8012be6:	8b04      	ldrh	r4, [r0, #24]
 8012be8:	4422      	add	r2, r4
 8012bea:	440c      	add	r4, r1
 8012bec:	1a59      	subs	r1, r3, r1
 8012bee:	83c2      	strh	r2, [r0, #30]
 8012bf0:	8304      	strh	r4, [r0, #24]
 8012bf2:	8381      	strh	r1, [r0, #28]
 8012bf4:	bd30      	pop	{r4, r5, pc}

08012bf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8012bf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bfa:	4604      	mov	r4, r0
 8012bfc:	8a47      	ldrh	r7, [r0, #18]
 8012bfe:	68c0      	ldr	r0, [r0, #12]
 8012c00:	b085      	sub	sp, #20
 8012c02:	6803      	ldr	r3, [r0, #0]
 8012c04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c06:	4798      	blx	r3
 8012c08:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8012c0c:	7a63      	ldrb	r3, [r4, #9]
 8012c0e:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8012c12:	3b01      	subs	r3, #1
 8012c14:	42b7      	cmp	r7, r6
 8012c16:	bfac      	ite	ge
 8012c18:	f04f 0900 	movge.w	r9, #0
 8012c1c:	f04f 0901 	movlt.w	r9, #1
 8012c20:	2b05      	cmp	r3, #5
 8012c22:	d804      	bhi.n	8012c2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8012c24:	e8df f003 	tbb	[pc, r3]
 8012c28:	470f0854 	.word	0x470f0854
 8012c2c:	4c4c      	.short	0x4c4c
 8012c2e:	2500      	movs	r5, #0
 8012c30:	46a9      	mov	r9, r5
 8012c32:	462e      	mov	r6, r5
 8012c34:	462f      	mov	r7, r5
 8012c36:	e00e      	b.n	8012c56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012c38:	42b7      	cmp	r7, r6
 8012c3a:	f04f 0500 	mov.w	r5, #0
 8012c3e:	bfb4      	ite	lt
 8012c40:	2600      	movlt	r6, #0
 8012c42:	2601      	movge	r6, #1
 8012c44:	e7f6      	b.n	8012c34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8012c46:	42b7      	cmp	r7, r6
 8012c48:	464d      	mov	r5, r9
 8012c4a:	f04f 0900 	mov.w	r9, #0
 8012c4e:	bfb4      	ite	lt
 8012c50:	2600      	movlt	r6, #0
 8012c52:	2601      	movge	r6, #1
 8012c54:	464f      	mov	r7, r9
 8012c56:	f04f 0800 	mov.w	r8, #0
 8012c5a:	f8a4 8016 	strh.w	r8, [r4, #22]
 8012c5e:	f8a4 8018 	strh.w	r8, [r4, #24]
 8012c62:	f8cd 8004 	str.w	r8, [sp, #4]
 8012c66:	2300      	movs	r3, #0
 8012c68:	9303      	str	r3, [sp, #12]
 8012c6a:	8823      	ldrh	r3, [r4, #0]
 8012c6c:	2b20      	cmp	r3, #32
 8012c6e:	d033      	beq.n	8012cd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8012c70:	f242 010b 	movw	r1, #8203	; 0x200b
 8012c74:	1a5a      	subs	r2, r3, r1
 8012c76:	f1d2 0a00 	rsbs	sl, r2, #0
 8012c7a:	eb4a 0a02 	adc.w	sl, sl, r2
 8012c7e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012c82:	4293      	cmp	r3, r2
 8012c84:	d008      	beq.n	8012c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8012c86:	428b      	cmp	r3, r1
 8012c88:	9a01      	ldr	r2, [sp, #4]
 8012c8a:	bf0e      	itee	eq
 8012c8c:	f04f 0a01 	moveq.w	sl, #1
 8012c90:	461a      	movne	r2, r3
 8012c92:	f04f 0a00 	movne.w	sl, #0
 8012c96:	9201      	str	r2, [sp, #4]
 8012c98:	ab03      	add	r3, sp, #12
 8012c9a:	68e2      	ldr	r2, [r4, #12]
 8012c9c:	7a21      	ldrb	r1, [r4, #8]
 8012c9e:	6860      	ldr	r0, [r4, #4]
 8012ca0:	f002 fd5e 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012ca4:	8020      	strh	r0, [r4, #0]
 8012ca6:	b9d8      	cbnz	r0, 8012ce0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8012ca8:	8ba2      	ldrh	r2, [r4, #28]
 8012caa:	2300      	movs	r3, #0
 8012cac:	4611      	mov	r1, r2
 8012cae:	4620      	mov	r0, r4
 8012cb0:	f7ff ff91 	bl	8012bd6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012cb4:	e06e      	b.n	8012d94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8012cb6:	2500      	movs	r5, #0
 8012cb8:	2701      	movs	r7, #1
 8012cba:	46a9      	mov	r9, r5
 8012cbc:	462e      	mov	r6, r5
 8012cbe:	e7ca      	b.n	8012c56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012cc0:	42b7      	cmp	r7, r6
 8012cc2:	f04f 0500 	mov.w	r5, #0
 8012cc6:	bfb4      	ite	lt
 8012cc8:	2700      	movlt	r7, #0
 8012cca:	2701      	movge	r7, #1
 8012ccc:	462e      	mov	r6, r5
 8012cce:	e7c2      	b.n	8012c56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012cd0:	2500      	movs	r5, #0
 8012cd2:	2601      	movs	r6, #1
 8012cd4:	46a9      	mov	r9, r5
 8012cd6:	e7ad      	b.n	8012c34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8012cd8:	9301      	str	r3, [sp, #4]
 8012cda:	f04f 0a01 	mov.w	sl, #1
 8012cde:	e7db      	b.n	8012c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8012ce0:	8b63      	ldrh	r3, [r4, #26]
 8012ce2:	280a      	cmp	r0, #10
 8012ce4:	f103 0301 	add.w	r3, r3, #1
 8012ce8:	8363      	strh	r3, [r4, #26]
 8012cea:	d0dd      	beq.n	8012ca8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8012cec:	9a03      	ldr	r2, [sp, #12]
 8012cee:	bb62      	cbnz	r2, 8012d4a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8012cf0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012cf4:	4298      	cmp	r0, r3
 8012cf6:	d003      	beq.n	8012d00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8012cf8:	f242 030b 	movw	r3, #8203	; 0x200b
 8012cfc:	4298      	cmp	r0, r3
 8012cfe:	d1b2      	bne.n	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012d00:	8823      	ldrh	r3, [r4, #0]
 8012d02:	8ba1      	ldrh	r1, [r4, #28]
 8012d04:	2b20      	cmp	r3, #32
 8012d06:	d003      	beq.n	8012d10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8012d08:	f242 000b 	movw	r0, #8203	; 0x200b
 8012d0c:	4283      	cmp	r3, r0
 8012d0e:	d131      	bne.n	8012d74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8012d10:	f1ba 0f00 	cmp.w	sl, #0
 8012d14:	bf0a      	itet	eq
 8012d16:	4688      	moveq	r8, r1
 8012d18:	4650      	movne	r0, sl
 8012d1a:	2001      	moveq	r0, #1
 8012d1c:	440a      	add	r2, r1
 8012d1e:	8b23      	ldrh	r3, [r4, #24]
 8012d20:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8012d24:	b292      	uxth	r2, r2
 8012d26:	83a2      	strh	r2, [r4, #28]
 8012d28:	4413      	add	r3, r2
 8012d2a:	f1b9 0f00 	cmp.w	r9, #0
 8012d2e:	d102      	bne.n	8012d36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8012d30:	2d00      	cmp	r5, #0
 8012d32:	d042      	beq.n	8012dba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8012d34:	b300      	cbz	r0, 8012d78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8012d36:	8c21      	ldrh	r1, [r4, #32]
 8012d38:	4419      	add	r1, r3
 8012d3a:	458c      	cmp	ip, r1
 8012d3c:	da37      	bge.n	8012dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8012d3e:	8ae1      	ldrh	r1, [r4, #22]
 8012d40:	2900      	cmp	r1, #0
 8012d42:	d034      	beq.n	8012dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8012d44:	4563      	cmp	r3, ip
 8012d46:	dd8e      	ble.n	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012d48:	e01d      	b.n	8012d86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8012d4a:	8893      	ldrh	r3, [r2, #4]
 8012d4c:	9901      	ldr	r1, [sp, #4]
 8012d4e:	8023      	strh	r3, [r4, #0]
 8012d50:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8012d54:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012d58:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8012d5c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8012d60:	ea4b 0b00 	orr.w	fp, fp, r0
 8012d64:	68e0      	ldr	r0, [r4, #12]
 8012d66:	6803      	ldr	r3, [r0, #0]
 8012d68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012d6a:	4798      	blx	r3
 8012d6c:	eb0b 0200 	add.w	r2, fp, r0
 8012d70:	b292      	uxth	r2, r2
 8012d72:	e7c5      	b.n	8012d00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8012d74:	2000      	movs	r0, #0
 8012d76:	e7d1      	b.n	8012d1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8012d78:	4563      	cmp	r3, ip
 8012d7a:	f77f af74 	ble.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012d7e:	8ae3      	ldrh	r3, [r4, #22]
 8012d80:	2b00      	cmp	r3, #0
 8012d82:	f43f af70 	beq.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012d86:	2301      	movs	r3, #1
 8012d88:	8c22      	ldrh	r2, [r4, #32]
 8012d8a:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8012d8e:	8be3      	ldrh	r3, [r4, #30]
 8012d90:	4413      	add	r3, r2
 8012d92:	83e3      	strh	r3, [r4, #30]
 8012d94:	68e0      	ldr	r0, [r4, #12]
 8012d96:	6803      	ldr	r3, [r0, #0]
 8012d98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d9a:	4798      	blx	r3
 8012d9c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8012da0:	4418      	add	r0, r3
 8012da2:	8a63      	ldrh	r3, [r4, #18]
 8012da4:	1a18      	subs	r0, r3, r0
 8012da6:	8260      	strh	r0, [r4, #18]
 8012da8:	b005      	add	sp, #20
 8012daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dae:	2300      	movs	r3, #0
 8012db0:	4611      	mov	r1, r2
 8012db2:	4620      	mov	r0, r4
 8012db4:	f7ff ff0f 	bl	8012bd6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012db8:	e755      	b.n	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012dba:	4563      	cmp	r3, ip
 8012dbc:	dd14      	ble.n	8012de8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8012dbe:	b117      	cbz	r7, 8012dc6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8012dc0:	2301      	movs	r3, #1
 8012dc2:	460a      	mov	r2, r1
 8012dc4:	e772      	b.n	8012cac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8012dc6:	2e00      	cmp	r6, #0
 8012dc8:	f43f af4d 	beq.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012dcc:	2800      	cmp	r0, #0
 8012dce:	f47f af4a 	bne.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012dd2:	f1ba 0f00 	cmp.w	sl, #0
 8012dd6:	d002      	beq.n	8012dde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8012dd8:	2301      	movs	r3, #1
 8012dda:	4642      	mov	r2, r8
 8012ddc:	e767      	b.n	8012cae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8012dde:	8ae3      	ldrh	r3, [r4, #22]
 8012de0:	2b00      	cmp	r3, #0
 8012de2:	f43f af40 	beq.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012de6:	e7d5      	b.n	8012d94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8012de8:	2800      	cmp	r0, #0
 8012dea:	f47f af3c 	bne.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012dee:	f1ba 0f00 	cmp.w	sl, #0
 8012df2:	f43f af38 	beq.w	8012c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012df6:	2301      	movs	r3, #1
 8012df8:	4642      	mov	r2, r8
 8012dfa:	e7da      	b.n	8012db2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08012dfc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8012dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012dfe:	4605      	mov	r5, r0
 8012e00:	b08f      	sub	sp, #60	; 0x3c
 8012e02:	4617      	mov	r7, r2
 8012e04:	461c      	mov	r4, r3
 8012e06:	460e      	mov	r6, r1
 8012e08:	b1d1      	cbz	r1, 8012e40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8012e0a:	681b      	ldr	r3, [r3, #0]
 8012e0c:	4620      	mov	r0, r4
 8012e0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e10:	4798      	blx	r3
 8012e12:	4240      	negs	r0, r0
 8012e14:	9603      	str	r6, [sp, #12]
 8012e16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012e1a:	b200      	sxth	r0, r0
 8012e1c:	9700      	str	r7, [sp, #0]
 8012e1e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012e22:	4629      	mov	r1, r5
 8012e24:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8012e28:	2401      	movs	r4, #1
 8012e2a:	a805      	add	r0, sp, #20
 8012e2c:	f7ff fcbe 	bl	80127ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8012e30:	a805      	add	r0, sp, #20
 8012e32:	f7ff fee0 	bl	8012bf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012e36:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012e3a:	b163      	cbz	r3, 8012e56 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8012e3c:	3401      	adds	r4, #1
 8012e3e:	e7f7      	b.n	8012e30 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8012e40:	2401      	movs	r4, #1
 8012e42:	f002 fd59 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012e46:	280a      	cmp	r0, #10
 8012e48:	4628      	mov	r0, r5
 8012e4a:	bf08      	it	eq
 8012e4c:	3401      	addeq	r4, #1
 8012e4e:	f002 fd53 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012e52:	2800      	cmp	r0, #0
 8012e54:	d1f7      	bne.n	8012e46 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8012e56:	b2a0      	uxth	r0, r4
 8012e58:	b00f      	add	sp, #60	; 0x3c
 8012e5a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012e5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8012e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e60:	b0e3      	sub	sp, #396	; 0x18c
 8012e62:	461c      	mov	r4, r3
 8012e64:	4683      	mov	fp, r0
 8012e66:	4688      	mov	r8, r1
 8012e68:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8012e6a:	2b00      	cmp	r3, #0
 8012e6c:	f000 8112 	beq.w	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012e70:	6823      	ldr	r3, [r4, #0]
 8012e72:	2b00      	cmp	r3, #0
 8012e74:	f000 810e 	beq.w	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012e78:	7ba3      	ldrb	r3, [r4, #14]
 8012e7a:	2b00      	cmp	r3, #0
 8012e7c:	f000 810a 	beq.w	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012e80:	ad0a      	add	r5, sp, #40	; 0x28
 8012e82:	6810      	ldr	r0, [r2, #0]
 8012e84:	6851      	ldr	r1, [r2, #4]
 8012e86:	462b      	mov	r3, r5
 8012e88:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8012e8c:	c303      	stmia	r3!, {r0, r1}
 8012e8e:	2100      	movs	r1, #0
 8012e90:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012e94:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012e98:	4628      	mov	r0, r5
 8012e9a:	910c      	str	r1, [sp, #48]	; 0x30
 8012e9c:	a90c      	add	r1, sp, #48	; 0x30
 8012e9e:	79a2      	ldrb	r2, [r4, #6]
 8012ea0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012ea4:	f7ff fd01 	bl	80128aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8012ea8:	a90c      	add	r1, sp, #48	; 0x30
 8012eaa:	79a2      	ldrb	r2, [r4, #6]
 8012eac:	4608      	mov	r0, r1
 8012eae:	f7ff fcfc 	bl	80128aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8012eb2:	a817      	add	r0, sp, #92	; 0x5c
 8012eb4:	f002 f8f4 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 8012eb8:	6820      	ldr	r0, [r4, #0]
 8012eba:	6803      	ldr	r3, [r0, #0]
 8012ebc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012ebe:	4798      	blx	r3
 8012ec0:	4606      	mov	r6, r0
 8012ec2:	6820      	ldr	r0, [r4, #0]
 8012ec4:	6803      	ldr	r3, [r0, #0]
 8012ec6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012ec8:	4798      	blx	r3
 8012eca:	4633      	mov	r3, r6
 8012ecc:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8012ece:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8012ed0:	9000      	str	r0, [sp, #0]
 8012ed2:	a817      	add	r0, sp, #92	; 0x5c
 8012ed4:	f002 f93f 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012ed8:	6820      	ldr	r0, [r4, #0]
 8012eda:	f894 a004 	ldrb.w	sl, [r4, #4]
 8012ede:	6803      	ldr	r3, [r0, #0]
 8012ee0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ee2:	4798      	blx	r3
 8012ee4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8012ee8:	6823      	ldr	r3, [r4, #0]
 8012eea:	4607      	mov	r7, r0
 8012eec:	4406      	add	r6, r0
 8012eee:	a830      	add	r0, sp, #192	; 0xc0
 8012ef0:	f893 9009 	ldrb.w	r9, [r3, #9]
 8012ef4:	f002 f8d4 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 8012ef8:	7c23      	ldrb	r3, [r4, #16]
 8012efa:	b17b      	cbz	r3, 8012f1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8012efc:	6820      	ldr	r0, [r4, #0]
 8012efe:	6803      	ldr	r3, [r0, #0]
 8012f00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012f02:	4798      	blx	r3
 8012f04:	9009      	str	r0, [sp, #36]	; 0x24
 8012f06:	6820      	ldr	r0, [r4, #0]
 8012f08:	6802      	ldr	r2, [r0, #0]
 8012f0a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8012f0c:	4790      	blx	r2
 8012f0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f10:	9000      	str	r0, [sp, #0]
 8012f12:	a830      	add	r0, sp, #192	; 0xc0
 8012f14:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8012f16:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8012f18:	f002 f91d 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f1c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8012f20:	a80e      	add	r0, sp, #56	; 0x38
 8012f22:	7be2      	ldrb	r2, [r4, #15]
 8012f24:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8012f28:	1a8a      	subs	r2, r1, r2
 8012f2a:	7c21      	ldrb	r1, [r4, #16]
 8012f2c:	9103      	str	r1, [sp, #12]
 8012f2e:	b292      	uxth	r2, r2
 8012f30:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8012f34:	9102      	str	r1, [sp, #8]
 8012f36:	6821      	ldr	r1, [r4, #0]
 8012f38:	9101      	str	r1, [sp, #4]
 8012f3a:	7961      	ldrb	r1, [r4, #5]
 8012f3c:	9100      	str	r1, [sp, #0]
 8012f3e:	a930      	add	r1, sp, #192	; 0xc0
 8012f40:	f7ff fc34 	bl	80127ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8012f44:	2e00      	cmp	r6, #0
 8012f46:	dc5b      	bgt.n	8013000 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8012f48:	af17      	add	r7, sp, #92	; 0x5c
 8012f4a:	f04f 0900 	mov.w	r9, #0
 8012f4e:	7c23      	ldrb	r3, [r4, #16]
 8012f50:	2b00      	cmp	r3, #0
 8012f52:	f000 80b1 	beq.w	80130b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8012f56:	a80e      	add	r0, sp, #56	; 0x38
 8012f58:	f7ff fe4d 	bl	8012bf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012f5c:	f1ba 0f00 	cmp.w	sl, #0
 8012f60:	f000 80a5 	beq.w	80130ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8012f64:	7c23      	ldrb	r3, [r4, #16]
 8012f66:	2264      	movs	r2, #100	; 0x64
 8012f68:	4639      	mov	r1, r7
 8012f6a:	a849      	add	r0, sp, #292	; 0x124
 8012f6c:	9309      	str	r3, [sp, #36]	; 0x24
 8012f6e:	f011 f875 	bl	802405c <memcpy>
 8012f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f74:	2b00      	cmp	r3, #0
 8012f76:	f000 80a7 	beq.w	80130c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8012f7a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8012f7e:	7922      	ldrb	r2, [r4, #4]
 8012f80:	2a01      	cmp	r2, #1
 8012f82:	f040 808a 	bne.w	801309a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8012f86:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8012f8a:	1ac0      	subs	r0, r0, r3
 8012f8c:	2302      	movs	r3, #2
 8012f8e:	fb90 f0f3 	sdiv	r0, r0, r3
 8012f92:	b200      	sxth	r0, r0
 8012f94:	7c23      	ldrb	r3, [r4, #16]
 8012f96:	2b00      	cmp	r3, #0
 8012f98:	f000 808b 	beq.w	80130b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8012f9c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8012fa0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8012fa4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012fa8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012fac:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012fb0:	2100      	movs	r1, #0
 8012fb2:	4410      	add	r0, r2
 8012fb4:	4642      	mov	r2, r8
 8012fb6:	b200      	sxth	r0, r0
 8012fb8:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8012fbc:	9000      	str	r0, [sp, #0]
 8012fbe:	4658      	mov	r0, fp
 8012fc0:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8012fc4:	f7ff fca2 	bl	801290c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8012fc8:	2800      	cmp	r0, #0
 8012fca:	d163      	bne.n	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012fcc:	b2b2      	uxth	r2, r6
 8012fce:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012fd2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012fd6:	4413      	add	r3, r2
 8012fd8:	1a8a      	subs	r2, r1, r2
 8012fda:	b21b      	sxth	r3, r3
 8012fdc:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8012fe0:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8012fe4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012fe8:	2a00      	cmp	r2, #0
 8012fea:	d153      	bne.n	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012fec:	6822      	ldr	r2, [r4, #0]
 8012fee:	8869      	ldrh	r1, [r5, #2]
 8012ff0:	7a12      	ldrb	r2, [r2, #8]
 8012ff2:	1a9b      	subs	r3, r3, r2
 8012ff4:	88ea      	ldrh	r2, [r5, #6]
 8012ff6:	440a      	add	r2, r1
 8012ff8:	b212      	sxth	r2, r2
 8012ffa:	4293      	cmp	r3, r2
 8012ffc:	dda7      	ble.n	8012f4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8012ffe:	e049      	b.n	8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013000:	7c23      	ldrb	r3, [r4, #16]
 8013002:	444f      	add	r7, r9
 8013004:	b1c3      	cbz	r3, 8013038 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8013006:	f64f 79ff 	movw	r9, #65535	; 0xffff
 801300a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801300e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013012:	443b      	add	r3, r7
 8013014:	4293      	cmp	r3, r2
 8013016:	da97      	bge.n	8012f48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013018:	a80e      	add	r0, sp, #56	; 0x38
 801301a:	f7ff fdec 	bl	8012bf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801301e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8013022:	3b01      	subs	r3, #1
 8013024:	b29b      	uxth	r3, r3
 8013026:	454b      	cmp	r3, r9
 8013028:	9309      	str	r3, [sp, #36]	; 0x24
 801302a:	d021      	beq.n	8013070 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801302c:	7961      	ldrb	r1, [r4, #5]
 801302e:	a817      	add	r0, sp, #92	; 0x5c
 8013030:	f7f9 fe6c 	bl	800cd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013034:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013036:	e7f4      	b.n	8013022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013038:	fa1f f986 	uxth.w	r9, r6
 801303c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013040:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013044:	443b      	add	r3, r7
 8013046:	4293      	cmp	r3, r2
 8013048:	f6bf af7e 	bge.w	8012f48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801304c:	a817      	add	r0, sp, #92	; 0x5c
 801304e:	f002 fc53 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013052:	b1f8      	cbz	r0, 8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013054:	280a      	cmp	r0, #10
 8013056:	d1f1      	bne.n	801303c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013058:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801305c:	444b      	add	r3, r9
 801305e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013062:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8013066:	eba3 0309 	sub.w	r3, r3, r9
 801306a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801306e:	e7e5      	b.n	801303c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013070:	b2b3      	uxth	r3, r6
 8013072:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013076:	441a      	add	r2, r3
 8013078:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801307c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8013080:	1ad3      	subs	r3, r2, r3
 8013082:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013086:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801308a:	b11b      	cbz	r3, 8013094 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801308c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8013090:	2b00      	cmp	r3, #0
 8013092:	d0ba      	beq.n	801300a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013094:	b063      	add	sp, #396	; 0x18c
 8013096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801309a:	2a02      	cmp	r2, #2
 801309c:	d105      	bne.n	80130aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801309e:	7be2      	ldrb	r2, [r4, #15]
 80130a0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80130a4:	1a80      	subs	r0, r0, r2
 80130a6:	1ac0      	subs	r0, r0, r3
 80130a8:	e773      	b.n	8012f92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80130aa:	2000      	movs	r0, #0
 80130ac:	e772      	b.n	8012f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80130ae:	7be0      	ldrb	r0, [r4, #15]
 80130b0:	e770      	b.n	8012f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80130b2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80130b6:	e773      	b.n	8012fa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80130b8:	f1ba 0f00 	cmp.w	sl, #0
 80130bc:	d0f7      	beq.n	80130ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80130be:	2264      	movs	r2, #100	; 0x64
 80130c0:	4639      	mov	r1, r7
 80130c2:	a849      	add	r0, sp, #292	; 0x124
 80130c4:	f010 ffca 	bl	802405c <memcpy>
 80130c8:	2300      	movs	r3, #0
 80130ca:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80130ce:	6821      	ldr	r1, [r4, #0]
 80130d0:	a849      	add	r0, sp, #292	; 0x124
 80130d2:	f7ff fbae 	bl	8012832 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80130d6:	b203      	sxth	r3, r0
 80130d8:	e751      	b.n	8012f7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080130da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80130da:	2b03      	cmp	r3, #3
 80130dc:	d818      	bhi.n	8013110 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80130de:	e8df f003 	tbb	[pc, r3]
 80130e2:	0602      	.short	0x0602
 80130e4:	130d      	.short	0x130d
 80130e6:	f9b0 2000 	ldrsh.w	r2, [r0]
 80130ea:	1850      	adds	r0, r2, r1
 80130ec:	4770      	bx	lr
 80130ee:	8803      	ldrh	r3, [r0, #0]
 80130f0:	8880      	ldrh	r0, [r0, #4]
 80130f2:	4418      	add	r0, r3
 80130f4:	b200      	sxth	r0, r0
 80130f6:	1a80      	subs	r0, r0, r2
 80130f8:	3801      	subs	r0, #1
 80130fa:	4770      	bx	lr
 80130fc:	8803      	ldrh	r3, [r0, #0]
 80130fe:	8880      	ldrh	r0, [r0, #4]
 8013100:	4418      	add	r0, r3
 8013102:	b200      	sxth	r0, r0
 8013104:	1a40      	subs	r0, r0, r1
 8013106:	e7f7      	b.n	80130f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013108:	f9b0 0000 	ldrsh.w	r0, [r0]
 801310c:	4410      	add	r0, r2
 801310e:	4770      	bx	lr
 8013110:	2000      	movs	r0, #0
 8013112:	4770      	bx	lr

08013114 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013114:	2b03      	cmp	r3, #3
 8013116:	d817      	bhi.n	8013148 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013118:	e8df f003 	tbb	[pc, r3]
 801311c:	10090602 	.word	0x10090602
 8013120:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013124:	1850      	adds	r0, r2, r1
 8013126:	4770      	bx	lr
 8013128:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801312c:	e7fa      	b.n	8013124 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801312e:	8843      	ldrh	r3, [r0, #2]
 8013130:	88c0      	ldrh	r0, [r0, #6]
 8013132:	4418      	add	r0, r3
 8013134:	b200      	sxth	r0, r0
 8013136:	1a80      	subs	r0, r0, r2
 8013138:	3801      	subs	r0, #1
 801313a:	4770      	bx	lr
 801313c:	8843      	ldrh	r3, [r0, #2]
 801313e:	88c0      	ldrh	r0, [r0, #6]
 8013140:	4418      	add	r0, r3
 8013142:	b200      	sxth	r0, r0
 8013144:	1a40      	subs	r0, r0, r1
 8013146:	e7f7      	b.n	8013138 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013148:	2000      	movs	r0, #0
 801314a:	4770      	bx	lr

0801314c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801314c:	4b01      	ldr	r3, [pc, #4]	; (8013154 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801314e:	2200      	movs	r2, #0
 8013150:	601a      	str	r2, [r3, #0]
 8013152:	4770      	bx	lr
 8013154:	240016b8 	.word	0x240016b8

08013158 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013158:	4603      	mov	r3, r0
 801315a:	b1c8      	cbz	r0, 8013190 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801315c:	0c02      	lsrs	r2, r0, #16
 801315e:	0412      	lsls	r2, r2, #16
 8013160:	b9a2      	cbnz	r2, 801318c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013162:	0403      	lsls	r3, r0, #16
 8013164:	2010      	movs	r0, #16
 8013166:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801316a:	bf04      	itt	eq
 801316c:	021b      	lsleq	r3, r3, #8
 801316e:	3008      	addeq	r0, #8
 8013170:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8013174:	bf04      	itt	eq
 8013176:	011b      	lsleq	r3, r3, #4
 8013178:	3004      	addeq	r0, #4
 801317a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801317e:	bf04      	itt	eq
 8013180:	009b      	lsleq	r3, r3, #2
 8013182:	3002      	addeq	r0, #2
 8013184:	2b00      	cmp	r3, #0
 8013186:	db04      	blt.n	8013192 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013188:	3001      	adds	r0, #1
 801318a:	4770      	bx	lr
 801318c:	2000      	movs	r0, #0
 801318e:	e7ea      	b.n	8013166 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013190:	2020      	movs	r0, #32
 8013192:	4770      	bx	lr

08013194 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013198:	b087      	sub	sp, #28
 801319a:	460d      	mov	r5, r1
 801319c:	4616      	mov	r6, r2
 801319e:	4698      	mov	r8, r3
 80131a0:	4601      	mov	r1, r0
 80131a2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80131a6:	b120      	cbz	r0, 80131b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80131a8:	b11a      	cbz	r2, 80131b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80131aa:	2d1f      	cmp	r5, #31
 80131ac:	d801      	bhi.n	80131b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80131ae:	2b1f      	cmp	r3, #31
 80131b0:	d904      	bls.n	80131bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80131b2:	2000      	movs	r0, #0
 80131b4:	6038      	str	r0, [r7, #0]
 80131b6:	b007      	add	sp, #28
 80131b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80131bc:	b97d      	cbnz	r5, 80131de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80131be:	b143      	cbz	r3, 80131d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80131c0:	4602      	mov	r2, r0
 80131c2:	462b      	mov	r3, r5
 80131c4:	4641      	mov	r1, r8
 80131c6:	4630      	mov	r0, r6
 80131c8:	e9cd 4700 	strd	r4, r7, [sp]
 80131cc:	f7ff ffe2 	bl	8013194 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80131d0:	e7f1      	b.n	80131b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80131d2:	f04f 33ff 	mov.w	r3, #4294967295
 80131d6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80131da:	603b      	str	r3, [r7, #0]
 80131dc:	e7eb      	b.n	80131b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80131de:	fa32 fa05 	lsrs.w	sl, r2, r5
 80131e2:	d106      	bne.n	80131f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80131e4:	4346      	muls	r6, r0
 80131e6:	fbb6 f0f4 	udiv	r0, r6, r4
 80131ea:	fb04 6610 	mls	r6, r4, r0, r6
 80131ee:	603e      	str	r6, [r7, #0]
 80131f0:	e7e1      	b.n	80131b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80131f2:	2201      	movs	r2, #1
 80131f4:	fa00 fb05 	lsl.w	fp, r0, r5
 80131f8:	40aa      	lsls	r2, r5
 80131fa:	fbbb f9f4 	udiv	r9, fp, r4
 80131fe:	3a01      	subs	r2, #1
 8013200:	fb0a f309 	mul.w	r3, sl, r9
 8013204:	fb04 b919 	mls	r9, r4, r9, fp
 8013208:	4016      	ands	r6, r2
 801320a:	9303      	str	r3, [sp, #12]
 801320c:	4630      	mov	r0, r6
 801320e:	f7ff ffa3 	bl	8013158 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013212:	462b      	mov	r3, r5
 8013214:	460a      	mov	r2, r1
 8013216:	4601      	mov	r1, r0
 8013218:	4630      	mov	r0, r6
 801321a:	e9cd 4700 	strd	r4, r7, [sp]
 801321e:	f7ff ffb9 	bl	8013194 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013222:	4606      	mov	r6, r0
 8013224:	4648      	mov	r0, r9
 8013226:	eb05 0108 	add.w	r1, r5, r8
 801322a:	f7ff ff95 	bl	8013158 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801322e:	ab05      	add	r3, sp, #20
 8013230:	464a      	mov	r2, r9
 8013232:	e9cd 4300 	strd	r4, r3, [sp]
 8013236:	4603      	mov	r3, r0
 8013238:	4650      	mov	r0, sl
 801323a:	f7ff ffab 	bl	8013194 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801323e:	6839      	ldr	r1, [r7, #0]
 8013240:	9a05      	ldr	r2, [sp, #20]
 8013242:	9b03      	ldr	r3, [sp, #12]
 8013244:	4411      	add	r1, r2
 8013246:	fbb1 f2f4 	udiv	r2, r1, r4
 801324a:	18d3      	adds	r3, r2, r3
 801324c:	fb04 1412 	mls	r4, r4, r2, r1
 8013250:	441e      	add	r6, r3
 8013252:	603c      	str	r4, [r7, #0]
 8013254:	4430      	add	r0, r6
 8013256:	e7ae      	b.n	80131b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013258:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801325c:	b085      	sub	sp, #20
 801325e:	f1b0 0900 	subs.w	r9, r0, #0
 8013262:	461d      	mov	r5, r3
 8013264:	4617      	mov	r7, r2
 8013266:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013268:	bfbb      	ittet	lt
 801326a:	f1c9 0900 	rsblt	r9, r9, #0
 801326e:	f04f 36ff 	movlt.w	r6, #4294967295
 8013272:	2601      	movge	r6, #1
 8013274:	6823      	ldrlt	r3, [r4, #0]
 8013276:	bfbc      	itt	lt
 8013278:	425b      	neglt	r3, r3
 801327a:	6023      	strlt	r3, [r4, #0]
 801327c:	2a00      	cmp	r2, #0
 801327e:	da04      	bge.n	801328a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013280:	6823      	ldr	r3, [r4, #0]
 8013282:	4257      	negs	r7, r2
 8013284:	4276      	negs	r6, r6
 8013286:	425b      	negs	r3, r3
 8013288:	6023      	str	r3, [r4, #0]
 801328a:	2d00      	cmp	r5, #0
 801328c:	4638      	mov	r0, r7
 801328e:	bfba      	itte	lt
 8013290:	426d      	neglt	r5, r5
 8013292:	f04f 38ff 	movlt.w	r8, #4294967295
 8013296:	f04f 0801 	movge.w	r8, #1
 801329a:	f7ff ff5d 	bl	8013158 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801329e:	ab03      	add	r3, sp, #12
 80132a0:	463a      	mov	r2, r7
 80132a2:	e9cd 5300 	strd	r5, r3, [sp]
 80132a6:	4603      	mov	r3, r0
 80132a8:	4648      	mov	r0, r9
 80132aa:	f7ff ff73 	bl	8013194 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80132ae:	6823      	ldr	r3, [r4, #0]
 80132b0:	9a03      	ldr	r2, [sp, #12]
 80132b2:	4546      	cmp	r6, r8
 80132b4:	441a      	add	r2, r3
 80132b6:	fb92 f3f5 	sdiv	r3, r2, r5
 80132ba:	4418      	add	r0, r3
 80132bc:	fb05 2313 	mls	r3, r5, r3, r2
 80132c0:	bf18      	it	ne
 80132c2:	4240      	negne	r0, r0
 80132c4:	1c72      	adds	r2, r6, #1
 80132c6:	6023      	str	r3, [r4, #0]
 80132c8:	d105      	bne.n	80132d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80132ca:	2b00      	cmp	r3, #0
 80132cc:	f1c3 0200 	rsb	r2, r3, #0
 80132d0:	db0b      	blt.n	80132ea <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80132d2:	6022      	str	r2, [r4, #0]
 80132d4:	e006      	b.n	80132e4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80132d6:	2e01      	cmp	r6, #1
 80132d8:	d104      	bne.n	80132e4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80132da:	2b00      	cmp	r3, #0
 80132dc:	da02      	bge.n	80132e4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80132de:	442b      	add	r3, r5
 80132e0:	3801      	subs	r0, #1
 80132e2:	6023      	str	r3, [r4, #0]
 80132e4:	b005      	add	sp, #20
 80132e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80132ea:	3801      	subs	r0, #1
 80132ec:	1b52      	subs	r2, r2, r5
 80132ee:	e7f0      	b.n	80132d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080132f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80132f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80132f4:	4c1c      	ldr	r4, [pc, #112]	; (8013368 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80132f6:	4605      	mov	r5, r0
 80132f8:	6807      	ldr	r7, [r0, #0]
 80132fa:	69a3      	ldr	r3, [r4, #24]
 80132fc:	b92b      	cbnz	r3, 801330a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80132fe:	6840      	ldr	r0, [r0, #4]
 8013300:	e9c5 7000 	strd	r7, r0, [r5]
 8013304:	b004      	add	sp, #16
 8013306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801330a:	f04f 0802 	mov.w	r8, #2
 801330e:	68a2      	ldr	r2, [r4, #8]
 8013310:	ae04      	add	r6, sp, #16
 8013312:	6820      	ldr	r0, [r4, #0]
 8013314:	fb93 f1f8 	sdiv	r1, r3, r8
 8013318:	440a      	add	r2, r1
 801331a:	69e1      	ldr	r1, [r4, #28]
 801331c:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013320:	463a      	mov	r2, r7
 8013322:	9600      	str	r6, [sp, #0]
 8013324:	f7ff ff98 	bl	8013258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013328:	69a3      	ldr	r3, [r4, #24]
 801332a:	4607      	mov	r7, r0
 801332c:	686a      	ldr	r2, [r5, #4]
 801332e:	6a21      	ldr	r1, [r4, #32]
 8013330:	9600      	str	r6, [sp, #0]
 8013332:	6860      	ldr	r0, [r4, #4]
 8013334:	f7ff ff90 	bl	8013258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013338:	69a3      	ldr	r3, [r4, #24]
 801333a:	6962      	ldr	r2, [r4, #20]
 801333c:	4407      	add	r7, r0
 801333e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8013340:	9600      	str	r6, [sp, #0]
 8013342:	68e0      	ldr	r0, [r4, #12]
 8013344:	fb93 f8f8 	sdiv	r8, r3, r8
 8013348:	4442      	add	r2, r8
 801334a:	9203      	str	r2, [sp, #12]
 801334c:	682a      	ldr	r2, [r5, #0]
 801334e:	f7ff ff83 	bl	8013258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013352:	4680      	mov	r8, r0
 8013354:	9600      	str	r6, [sp, #0]
 8013356:	69a3      	ldr	r3, [r4, #24]
 8013358:	686a      	ldr	r2, [r5, #4]
 801335a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801335c:	6920      	ldr	r0, [r4, #16]
 801335e:	f7ff ff7b 	bl	8013258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013362:	4440      	add	r0, r8
 8013364:	e7cc      	b.n	8013300 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013366:	bf00      	nop
 8013368:	240016bc 	.word	0x240016bc

0801336c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801336c:	4b07      	ldr	r3, [pc, #28]	; (801338c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801336e:	781b      	ldrb	r3, [r3, #0]
 8013370:	2b01      	cmp	r3, #1
 8013372:	d109      	bne.n	8013388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013374:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013378:	f9b0 2000 	ldrsh.w	r2, [r0]
 801337c:	8003      	strh	r3, [r0, #0]
 801337e:	4b04      	ldr	r3, [pc, #16]	; (8013390 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013380:	881b      	ldrh	r3, [r3, #0]
 8013382:	3b01      	subs	r3, #1
 8013384:	1a9b      	subs	r3, r3, r2
 8013386:	800b      	strh	r3, [r1, #0]
 8013388:	4770      	bx	lr
 801338a:	bf00      	nop
 801338c:	240016a8 	.word	0x240016a8
 8013390:	240016a4 	.word	0x240016a4

08013394 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013394:	4b07      	ldr	r3, [pc, #28]	; (80133b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013396:	b510      	push	{r4, lr}
 8013398:	781b      	ldrb	r3, [r3, #0]
 801339a:	2b01      	cmp	r3, #1
 801339c:	d108      	bne.n	80133b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801339e:	4b06      	ldr	r3, [pc, #24]	; (80133b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80133a0:	880c      	ldrh	r4, [r1, #0]
 80133a2:	881b      	ldrh	r3, [r3, #0]
 80133a4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80133a8:	3b01      	subs	r3, #1
 80133aa:	1b1b      	subs	r3, r3, r4
 80133ac:	8003      	strh	r3, [r0, #0]
 80133ae:	800a      	strh	r2, [r1, #0]
 80133b0:	bd10      	pop	{r4, pc}
 80133b2:	bf00      	nop
 80133b4:	240016a8 	.word	0x240016a8
 80133b8:	240016a4 	.word	0x240016a4

080133bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80133bc:	4b0a      	ldr	r3, [pc, #40]	; (80133e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80133be:	b510      	push	{r4, lr}
 80133c0:	781b      	ldrb	r3, [r3, #0]
 80133c2:	2b01      	cmp	r3, #1
 80133c4:	d10e      	bne.n	80133e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80133c6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80133ca:	8843      	ldrh	r3, [r0, #2]
 80133cc:	f9b0 4000 	ldrsh.w	r4, [r0]
 80133d0:	18ca      	adds	r2, r1, r3
 80133d2:	4b06      	ldr	r3, [pc, #24]	; (80133ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80133d4:	8044      	strh	r4, [r0, #2]
 80133d6:	881b      	ldrh	r3, [r3, #0]
 80133d8:	1a9b      	subs	r3, r3, r2
 80133da:	8003      	strh	r3, [r0, #0]
 80133dc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80133e0:	8081      	strh	r1, [r0, #4]
 80133e2:	80c3      	strh	r3, [r0, #6]
 80133e4:	bd10      	pop	{r4, pc}
 80133e6:	bf00      	nop
 80133e8:	240016a8 	.word	0x240016a8
 80133ec:	240016a4 	.word	0x240016a4

080133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80133f0:	4b08      	ldr	r3, [pc, #32]	; (8013414 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80133f2:	781b      	ldrb	r3, [r3, #0]
 80133f4:	2b01      	cmp	r3, #1
 80133f6:	d10c      	bne.n	8013412 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80133f8:	8803      	ldrh	r3, [r0, #0]
 80133fa:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80133fe:	8842      	ldrh	r2, [r0, #2]
 8013400:	8002      	strh	r2, [r0, #0]
 8013402:	185a      	adds	r2, r3, r1
 8013404:	4b04      	ldr	r3, [pc, #16]	; (8013418 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013406:	881b      	ldrh	r3, [r3, #0]
 8013408:	1a9b      	subs	r3, r3, r2
 801340a:	8043      	strh	r3, [r0, #2]
 801340c:	88c3      	ldrh	r3, [r0, #6]
 801340e:	80c1      	strh	r1, [r0, #6]
 8013410:	8083      	strh	r3, [r0, #4]
 8013412:	4770      	bx	lr
 8013414:	240016a8 	.word	0x240016a8
 8013418:	240016a4 	.word	0x240016a4

0801341c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801341c:	4b07      	ldr	r3, [pc, #28]	; (801343c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801341e:	b510      	push	{r4, lr}
 8013420:	781b      	ldrb	r3, [r3, #0]
 8013422:	2b01      	cmp	r3, #1
 8013424:	d108      	bne.n	8013438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013426:	f9b1 3000 	ldrsh.w	r3, [r1]
 801342a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801342e:	8003      	strh	r3, [r0, #0]
 8013430:	8893      	ldrh	r3, [r2, #4]
 8013432:	3b01      	subs	r3, #1
 8013434:	1b1b      	subs	r3, r3, r4
 8013436:	800b      	strh	r3, [r1, #0]
 8013438:	bd10      	pop	{r4, pc}
 801343a:	bf00      	nop
 801343c:	240016a8 	.word	0x240016a8

08013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013440:	4b0a      	ldr	r3, [pc, #40]	; (801346c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013442:	460a      	mov	r2, r1
 8013444:	b510      	push	{r4, lr}
 8013446:	781b      	ldrb	r3, [r3, #0]
 8013448:	2b01      	cmp	r3, #1
 801344a:	d10d      	bne.n	8013468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801344c:	8881      	ldrh	r1, [r0, #4]
 801344e:	8803      	ldrh	r3, [r0, #0]
 8013450:	440b      	add	r3, r1
 8013452:	4601      	mov	r1, r0
 8013454:	3b01      	subs	r3, #1
 8013456:	f821 3b02 	strh.w	r3, [r1], #2
 801345a:	f7ff ffdf 	bl	801341c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801345e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013462:	88c2      	ldrh	r2, [r0, #6]
 8013464:	80c3      	strh	r3, [r0, #6]
 8013466:	8082      	strh	r2, [r0, #4]
 8013468:	bd10      	pop	{r4, pc}
 801346a:	bf00      	nop
 801346c:	240016a8 	.word	0x240016a8

08013470 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013470:	4b06      	ldr	r3, [pc, #24]	; (801348c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013472:	2100      	movs	r1, #0
 8013474:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013478:	4b05      	ldr	r3, [pc, #20]	; (8013490 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801347a:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801347e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013482:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8013486:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801348a:	4770      	bx	lr
 801348c:	240016a4 	.word	0x240016a4
 8013490:	240016a6 	.word	0x240016a6

08013494 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013494:	4b03      	ldr	r3, [pc, #12]	; (80134a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013496:	6818      	ldr	r0, [r3, #0]
 8013498:	b110      	cbz	r0, 80134a0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801349a:	6803      	ldr	r3, [r0, #0]
 801349c:	699b      	ldr	r3, [r3, #24]
 801349e:	4718      	bx	r3
 80134a0:	4770      	bx	lr
 80134a2:	bf00      	nop
 80134a4:	240016ec 	.word	0x240016ec

080134a8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80134a8:	4770      	bx	lr
	...

080134ac <_ZN8touchgfx11Application4drawEv>:
 80134ac:	4b09      	ldr	r3, [pc, #36]	; (80134d4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80134ae:	b507      	push	{r0, r1, r2, lr}
 80134b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80134b4:	2100      	movs	r1, #0
 80134b6:	4b08      	ldr	r3, [pc, #32]	; (80134d8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80134b8:	9100      	str	r1, [sp, #0]
 80134ba:	4669      	mov	r1, sp
 80134bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80134c0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80134c4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80134c8:	6803      	ldr	r3, [r0, #0]
 80134ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80134cc:	4798      	blx	r3
 80134ce:	b003      	add	sp, #12
 80134d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80134d4:	240016a4 	.word	0x240016a4
 80134d8:	240016a6 	.word	0x240016a6

080134dc <_ZN8touchgfx11Application10invalidateEv>:
 80134dc:	4b09      	ldr	r3, [pc, #36]	; (8013504 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80134de:	b082      	sub	sp, #8
 80134e0:	2100      	movs	r1, #0
 80134e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80134e6:	4b08      	ldr	r3, [pc, #32]	; (8013508 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80134e8:	f8ad 2004 	strh.w	r2, [sp, #4]
 80134ec:	aa02      	add	r2, sp, #8
 80134ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80134f2:	9100      	str	r1, [sp, #0]
 80134f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80134f8:	6803      	ldr	r3, [r0, #0]
 80134fa:	e912 0006 	ldmdb	r2, {r1, r2}
 80134fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013500:	b002      	add	sp, #8
 8013502:	4718      	bx	r3
 8013504:	240016a4 	.word	0x240016a4
 8013508:	240016a6 	.word	0x240016a6

0801350c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801350c:	4b03      	ldr	r3, [pc, #12]	; (801351c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801350e:	6818      	ldr	r0, [r3, #0]
 8013510:	b110      	cbz	r0, 8013518 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013512:	6803      	ldr	r3, [r0, #0]
 8013514:	69db      	ldr	r3, [r3, #28]
 8013516:	4718      	bx	r3
 8013518:	4770      	bx	lr
 801351a:	bf00      	nop
 801351c:	240016ec 	.word	0x240016ec

08013520 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013520:	4b03      	ldr	r3, [pc, #12]	; (8013530 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013522:	6818      	ldr	r0, [r3, #0]
 8013524:	b110      	cbz	r0, 801352c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013526:	6803      	ldr	r3, [r0, #0]
 8013528:	6a1b      	ldr	r3, [r3, #32]
 801352a:	4718      	bx	r3
 801352c:	4770      	bx	lr
 801352e:	bf00      	nop
 8013530:	240016ec 	.word	0x240016ec

08013534 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8013534:	2300      	movs	r3, #0
 8013536:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801353a:	4770      	bx	lr

0801353c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801353c:	4b03      	ldr	r3, [pc, #12]	; (801354c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801353e:	6818      	ldr	r0, [r3, #0]
 8013540:	b110      	cbz	r0, 8013548 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8013542:	6803      	ldr	r3, [r0, #0]
 8013544:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013546:	4718      	bx	r3
 8013548:	4770      	bx	lr
 801354a:	bf00      	nop
 801354c:	240016ec 	.word	0x240016ec

08013550 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013550:	b510      	push	{r4, lr}
 8013552:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013556:	888a      	ldrh	r2, [r1, #4]
 8013558:	f9b0 3000 	ldrsh.w	r3, [r0]
 801355c:	4422      	add	r2, r4
 801355e:	b212      	sxth	r2, r2
 8013560:	4293      	cmp	r3, r2
 8013562:	da15      	bge.n	8013590 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013564:	8882      	ldrh	r2, [r0, #4]
 8013566:	4413      	add	r3, r2
 8013568:	b21b      	sxth	r3, r3
 801356a:	429c      	cmp	r4, r3
 801356c:	da10      	bge.n	8013590 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801356e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013572:	88c9      	ldrh	r1, [r1, #6]
 8013574:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013578:	4419      	add	r1, r3
 801357a:	b209      	sxth	r1, r1
 801357c:	428a      	cmp	r2, r1
 801357e:	da07      	bge.n	8013590 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013580:	88c0      	ldrh	r0, [r0, #6]
 8013582:	4410      	add	r0, r2
 8013584:	b200      	sxth	r0, r0
 8013586:	4283      	cmp	r3, r0
 8013588:	bfac      	ite	ge
 801358a:	2000      	movge	r0, #0
 801358c:	2001      	movlt	r0, #1
 801358e:	bd10      	pop	{r4, pc}
 8013590:	2000      	movs	r0, #0
 8013592:	e7fc      	b.n	801358e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013594 <_ZN8touchgfx4Rect10restrictToEss>:
 8013594:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013598:	2b00      	cmp	r3, #0
 801359a:	b510      	push	{r4, lr}
 801359c:	da04      	bge.n	80135a8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801359e:	8884      	ldrh	r4, [r0, #4]
 80135a0:	4423      	add	r3, r4
 80135a2:	8083      	strh	r3, [r0, #4]
 80135a4:	2300      	movs	r3, #0
 80135a6:	8003      	strh	r3, [r0, #0]
 80135a8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80135ac:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80135b0:	1b09      	subs	r1, r1, r4
 80135b2:	428b      	cmp	r3, r1
 80135b4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80135b8:	bfc8      	it	gt
 80135ba:	8081      	strhgt	r1, [r0, #4]
 80135bc:	2b00      	cmp	r3, #0
 80135be:	da04      	bge.n	80135ca <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80135c0:	88c1      	ldrh	r1, [r0, #6]
 80135c2:	440b      	add	r3, r1
 80135c4:	80c3      	strh	r3, [r0, #6]
 80135c6:	2300      	movs	r3, #0
 80135c8:	8043      	strh	r3, [r0, #2]
 80135ca:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80135ce:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80135d2:	1a52      	subs	r2, r2, r1
 80135d4:	4293      	cmp	r3, r2
 80135d6:	bfc8      	it	gt
 80135d8:	80c2      	strhgt	r2, [r0, #6]
 80135da:	bd10      	pop	{r4, pc}

080135dc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80135dc:	4b10      	ldr	r3, [pc, #64]	; (8013620 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80135de:	b510      	push	{r4, lr}
 80135e0:	460c      	mov	r4, r1
 80135e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80135e6:	4b0f      	ldr	r3, [pc, #60]	; (8013624 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80135e8:	4620      	mov	r0, r4
 80135ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80135ee:	f7ff ffd1 	bl	8013594 <_ZN8touchgfx4Rect10restrictToEss>
 80135f2:	4b0d      	ldr	r3, [pc, #52]	; (8013628 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80135f4:	6818      	ldr	r0, [r3, #0]
 80135f6:	b190      	cbz	r0, 801361e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80135f8:	6803      	ldr	r3, [r0, #0]
 80135fa:	4621      	mov	r1, r4
 80135fc:	689b      	ldr	r3, [r3, #8]
 80135fe:	4798      	blx	r3
 8013600:	4b0a      	ldr	r3, [pc, #40]	; (801362c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013602:	6818      	ldr	r0, [r3, #0]
 8013604:	b118      	cbz	r0, 801360e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013606:	6803      	ldr	r3, [r0, #0]
 8013608:	4621      	mov	r1, r4
 801360a:	689b      	ldr	r3, [r3, #8]
 801360c:	4798      	blx	r3
 801360e:	4b08      	ldr	r3, [pc, #32]	; (8013630 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013610:	4621      	mov	r1, r4
 8013612:	6818      	ldr	r0, [r3, #0]
 8013614:	6803      	ldr	r3, [r0, #0]
 8013616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801361a:	69db      	ldr	r3, [r3, #28]
 801361c:	4718      	bx	r3
 801361e:	bd10      	pop	{r4, pc}
 8013620:	240016a6 	.word	0x240016a6
 8013624:	240016a4 	.word	0x240016a4
 8013628:	240016ec 	.word	0x240016ec
 801362c:	240016e8 	.word	0x240016e8
 8013630:	240016b0 	.word	0x240016b0

08013634 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013636:	4606      	mov	r6, r0
 8013638:	4608      	mov	r0, r1
 801363a:	460f      	mov	r7, r1
 801363c:	f7fc fedd 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8013640:	b9e8      	cbnz	r0, 801367e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013642:	f9b7 5000 	ldrsh.w	r5, [r7]
 8013646:	f9b6 4000 	ldrsh.w	r4, [r6]
 801364a:	42a5      	cmp	r5, r4
 801364c:	db17      	blt.n	801367e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801364e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013652:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013656:	429a      	cmp	r2, r3
 8013658:	db11      	blt.n	801367e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801365a:	88b9      	ldrh	r1, [r7, #4]
 801365c:	440d      	add	r5, r1
 801365e:	88b1      	ldrh	r1, [r6, #4]
 8013660:	440c      	add	r4, r1
 8013662:	b22d      	sxth	r5, r5
 8013664:	b224      	sxth	r4, r4
 8013666:	42a5      	cmp	r5, r4
 8013668:	dc09      	bgt.n	801367e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801366a:	88f8      	ldrh	r0, [r7, #6]
 801366c:	4410      	add	r0, r2
 801366e:	88f2      	ldrh	r2, [r6, #6]
 8013670:	4413      	add	r3, r2
 8013672:	b200      	sxth	r0, r0
 8013674:	b21b      	sxth	r3, r3
 8013676:	4298      	cmp	r0, r3
 8013678:	bfcc      	ite	gt
 801367a:	2000      	movgt	r0, #0
 801367c:	2001      	movle	r0, #1
 801367e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013680 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013682:	4604      	mov	r4, r0
 8013684:	4608      	mov	r0, r1
 8013686:	460d      	mov	r5, r1
 8013688:	f7fc feb7 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801368c:	b978      	cbnz	r0, 80136ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801368e:	4620      	mov	r0, r4
 8013690:	f7fc feb3 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8013694:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013698:	b150      	cbz	r0, 80136b0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801369a:	8026      	strh	r6, [r4, #0]
 801369c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80136a0:	8063      	strh	r3, [r4, #2]
 80136a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80136a6:	80a3      	strh	r3, [r4, #4]
 80136a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80136ac:	80e3      	strh	r3, [r4, #6]
 80136ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80136b0:	f9b4 1000 	ldrsh.w	r1, [r4]
 80136b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80136b8:	42b1      	cmp	r1, r6
 80136ba:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80136be:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80136c2:	460f      	mov	r7, r1
 80136c4:	88ed      	ldrh	r5, [r5, #6]
 80136c6:	bfa8      	it	ge
 80136c8:	4637      	movge	r7, r6
 80136ca:	4293      	cmp	r3, r2
 80136cc:	4618      	mov	r0, r3
 80136ce:	4466      	add	r6, ip
 80136d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80136d4:	bfa8      	it	ge
 80136d6:	4610      	movge	r0, r2
 80136d8:	442a      	add	r2, r5
 80136da:	88e5      	ldrh	r5, [r4, #6]
 80136dc:	4461      	add	r1, ip
 80136de:	b236      	sxth	r6, r6
 80136e0:	8027      	strh	r7, [r4, #0]
 80136e2:	442b      	add	r3, r5
 80136e4:	b209      	sxth	r1, r1
 80136e6:	b212      	sxth	r2, r2
 80136e8:	8060      	strh	r0, [r4, #2]
 80136ea:	b21b      	sxth	r3, r3
 80136ec:	428e      	cmp	r6, r1
 80136ee:	bfac      	ite	ge
 80136f0:	ebc7 0106 	rsbge	r1, r7, r6
 80136f4:	ebc7 0101 	rsblt	r1, r7, r1
 80136f8:	429a      	cmp	r2, r3
 80136fa:	bfac      	ite	ge
 80136fc:	ebc0 0202 	rsbge	r2, r0, r2
 8013700:	ebc0 0203 	rsblt	r2, r0, r3
 8013704:	80a1      	strh	r1, [r4, #4]
 8013706:	80e2      	strh	r2, [r4, #6]
 8013708:	e7d1      	b.n	80136ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801370c <_ZN8touchgfx11Application11getInstanceEv>:
 801370c:	4b01      	ldr	r3, [pc, #4]	; (8013714 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801370e:	6818      	ldr	r0, [r3, #0]
 8013710:	4770      	bx	lr
 8013712:	bf00      	nop
 8013714:	240016fc 	.word	0x240016fc

08013718 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013718:	2300      	movs	r3, #0
 801371a:	b510      	push	{r4, lr}
 801371c:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8013720:	4604      	mov	r4, r0
 8013722:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013726:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801372a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801372e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8013732:	429a      	cmp	r2, r3
 8013734:	d90e      	bls.n	8013754 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8013736:	18e2      	adds	r2, r4, r3
 8013738:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 801373c:	b122      	cbz	r2, 8013748 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801373e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8013742:	6803      	ldr	r3, [r0, #0]
 8013744:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013746:	4798      	blx	r3
 8013748:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801374c:	3301      	adds	r3, #1
 801374e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013752:	e7ea      	b.n	801372a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8013754:	bd10      	pop	{r4, pc}

08013756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8013756:	2300      	movs	r3, #0
 8013758:	f100 0284 	add.w	r2, r0, #132	; 0x84
 801375c:	30a4      	adds	r0, #164	; 0xa4
 801375e:	f820 3c24 	strh.w	r3, [r0, #-36]
 8013762:	f802 3b01 	strb.w	r3, [r2], #1
 8013766:	4282      	cmp	r2, r0
 8013768:	d1fb      	bne.n	8013762 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801376a:	4770      	bx	lr

0801376c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801376c:	b570      	push	{r4, r5, r6, lr}
 801376e:	4c0b      	ldr	r4, [pc, #44]	; (801379c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8013770:	4605      	mov	r5, r0
 8013772:	460e      	mov	r6, r1
 8013774:	6820      	ldr	r0, [r4, #0]
 8013776:	b110      	cbz	r0, 801377e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013778:	6803      	ldr	r3, [r0, #0]
 801377a:	695b      	ldr	r3, [r3, #20]
 801377c:	4798      	blx	r3
 801377e:	1d28      	adds	r0, r5, #4
 8013780:	f7ff ffe9 	bl	8013756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013784:	6026      	str	r6, [r4, #0]
 8013786:	6833      	ldr	r3, [r6, #0]
 8013788:	4630      	mov	r0, r6
 801378a:	68db      	ldr	r3, [r3, #12]
 801378c:	4798      	blx	r3
 801378e:	682b      	ldr	r3, [r5, #0]
 8013790:	4628      	mov	r0, r5
 8013792:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013794:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013798:	4718      	bx	r3
 801379a:	bf00      	nop
 801379c:	240016ec 	.word	0x240016ec

080137a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80137a0:	2300      	movs	r3, #0
 80137a2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80137a6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80137aa:	461a      	mov	r2, r3
 80137ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80137ae:	461c      	mov	r4, r3
 80137b0:	461d      	mov	r5, r3
 80137b2:	459c      	cmp	ip, r3
 80137b4:	dd1a      	ble.n	80137ec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80137b6:	18c6      	adds	r6, r0, r3
 80137b8:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80137bc:	b16e      	cbz	r6, 80137da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80137be:	429a      	cmp	r2, r3
 80137c0:	d008      	beq.n	80137d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80137c2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80137c6:	fa1f fe82 	uxth.w	lr, r2
 80137ca:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80137ce:	1887      	adds	r7, r0, r2
 80137d0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80137d4:	3201      	adds	r2, #1
 80137d6:	3301      	adds	r3, #1
 80137d8:	e7eb      	b.n	80137b2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80137da:	4299      	cmp	r1, r3
 80137dc:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80137e0:	bfa8      	it	ge
 80137e2:	3501      	addge	r5, #1
 80137e4:	429e      	cmp	r6, r3
 80137e6:	bfc8      	it	gt
 80137e8:	3401      	addgt	r4, #1
 80137ea:	e7f4      	b.n	80137d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80137ec:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80137f0:	1b49      	subs	r1, r1, r5
 80137f2:	1b1b      	subs	r3, r3, r4
 80137f4:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80137f8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80137fc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013800:	4293      	cmp	r3, r2
 8013802:	dd03      	ble.n	801380c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8013804:	3b01      	subs	r3, #1
 8013806:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801380a:	e7f7      	b.n	80137fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801380c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013810 <_ZN8touchgfx11Application15handleTickEventEv>:
 8013810:	b570      	push	{r4, r5, r6, lr}
 8013812:	4d16      	ldr	r5, [pc, #88]	; (801386c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8013814:	4604      	mov	r4, r0
 8013816:	6828      	ldr	r0, [r5, #0]
 8013818:	b140      	cbz	r0, 801382c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801381a:	7a03      	ldrb	r3, [r0, #8]
 801381c:	b933      	cbnz	r3, 801382c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801381e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013822:	6803      	ldr	r3, [r0, #0]
 8013824:	689b      	ldr	r3, [r3, #8]
 8013826:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801382a:	4718      	bx	r3
 801382c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8013830:	4e0f      	ldr	r6, [pc, #60]	; (8013870 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8013832:	b973      	cbnz	r3, 8013852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013834:	b168      	cbz	r0, 8013852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013836:	7a03      	ldrb	r3, [r0, #8]
 8013838:	b15b      	cbz	r3, 8013852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801383a:	6830      	ldr	r0, [r6, #0]
 801383c:	b110      	cbz	r0, 8013844 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801383e:	6803      	ldr	r3, [r0, #0]
 8013840:	691b      	ldr	r3, [r3, #16]
 8013842:	4798      	blx	r3
 8013844:	6828      	ldr	r0, [r5, #0]
 8013846:	6803      	ldr	r3, [r0, #0]
 8013848:	68db      	ldr	r3, [r3, #12]
 801384a:	4798      	blx	r3
 801384c:	2301      	movs	r3, #1
 801384e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013852:	3404      	adds	r4, #4
 8013854:	4620      	mov	r0, r4
 8013856:	f7ff ff5f 	bl	8013718 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801385a:	4620      	mov	r0, r4
 801385c:	f7ff ffa0 	bl	80137a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013860:	6830      	ldr	r0, [r6, #0]
 8013862:	b110      	cbz	r0, 801386a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8013864:	6803      	ldr	r3, [r0, #0]
 8013866:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013868:	e7dd      	b.n	8013826 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801386a:	bd70      	pop	{r4, r5, r6, pc}
 801386c:	240016f0 	.word	0x240016f0
 8013870:	240016ec 	.word	0x240016ec

08013874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8013874:	4603      	mov	r3, r0
 8013876:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801387a:	2200      	movs	r2, #0
 801387c:	801a      	strh	r2, [r3, #0]
 801387e:	3308      	adds	r3, #8
 8013880:	f823 2c06 	strh.w	r2, [r3, #-6]
 8013884:	f823 2c04 	strh.w	r2, [r3, #-4]
 8013888:	f823 2c02 	strh.w	r2, [r3, #-2]
 801388c:	428b      	cmp	r3, r1
 801388e:	d1f5      	bne.n	801387c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8013890:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8013894:	4770      	bx	lr
	...

08013898 <_ZN8touchgfx11ApplicationC1Ev>:
 8013898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801389a:	4b1d      	ldr	r3, [pc, #116]	; (8013910 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801389c:	4606      	mov	r6, r0
 801389e:	4604      	mov	r4, r0
 80138a0:	2500      	movs	r5, #0
 80138a2:	f846 3b04 	str.w	r3, [r6], #4
 80138a6:	22a8      	movs	r2, #168	; 0xa8
 80138a8:	2100      	movs	r1, #0
 80138aa:	4630      	mov	r0, r6
 80138ac:	f010 fb08 	bl	8023ec0 <memset>
 80138b0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80138b4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80138b8:	4f16      	ldr	r7, [pc, #88]	; (8013914 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80138ba:	f7ff ffdb 	bl	8013874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80138be:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80138c2:	f7ff ffd7 	bl	8013874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80138c6:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80138ca:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80138ce:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80138d2:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80138d6:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80138da:	490f      	ldr	r1, [pc, #60]	; (8013918 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80138dc:	480f      	ldr	r0, [pc, #60]	; (801391c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80138de:	f00f ff2f 	bl	8023740 <CRC_Lock>
 80138e2:	4b0f      	ldr	r3, [pc, #60]	; (8013920 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80138e4:	b158      	cbz	r0, 80138fe <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80138e6:	801d      	strh	r5, [r3, #0]
 80138e8:	2300      	movs	r3, #0
 80138ea:	4a0e      	ldr	r2, [pc, #56]	; (8013924 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80138ec:	4630      	mov	r0, r6
 80138ee:	6013      	str	r3, [r2, #0]
 80138f0:	4a0d      	ldr	r2, [pc, #52]	; (8013928 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80138f2:	603b      	str	r3, [r7, #0]
 80138f4:	6013      	str	r3, [r2, #0]
 80138f6:	f7ff ff2e 	bl	8013756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80138fa:	4620      	mov	r0, r4
 80138fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80138fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8013902:	2002      	movs	r0, #2
 8013904:	801a      	strh	r2, [r3, #0]
 8013906:	6038      	str	r0, [r7, #0]
 8013908:	f001 fa50 	bl	8014dac <_ZN8touchgfx6Screen4drawEv>
 801390c:	e7ec      	b.n	80138e8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801390e:	bf00      	nop
 8013910:	080260a8 	.word	0x080260a8
 8013914:	240016ec 	.word	0x240016ec
 8013918:	b5e8b5cd 	.word	0xb5e8b5cd
 801391c:	f407a5c2 	.word	0xf407a5c2
 8013920:	2400001a 	.word	0x2400001a
 8013924:	240016fc 	.word	0x240016fc
 8013928:	240016f0 	.word	0x240016f0

0801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801392c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8013930:	3b01      	subs	r3, #1
 8013932:	b29b      	uxth	r3, r3
 8013934:	428b      	cmp	r3, r1
 8013936:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801393a:	b510      	push	{r4, lr}
 801393c:	d908      	bls.n	8013950 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801393e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8013942:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8013946:	681a      	ldr	r2, [r3, #0]
 8013948:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801394c:	685a      	ldr	r2, [r3, #4]
 801394e:	6062      	str	r2, [r4, #4]
 8013950:	bd10      	pop	{r4, pc}
	...

08013954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8013954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013958:	b08f      	sub	sp, #60	; 0x3c
 801395a:	4b8f      	ldr	r3, [pc, #572]	; (8013b98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801395c:	4683      	mov	fp, r0
 801395e:	ac0a      	add	r4, sp, #40	; 0x28
 8013960:	e884 0006 	stmia.w	r4, {r1, r2}
 8013964:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013968:	4620      	mov	r0, r4
 801396a:	4b8c      	ldr	r3, [pc, #560]	; (8013b9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 801396c:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013970:	f7ff fe10 	bl	8013594 <_ZN8touchgfx4Rect10restrictToEss>
 8013974:	4620      	mov	r0, r4
 8013976:	f7fc fd40 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801397a:	2800      	cmp	r0, #0
 801397c:	d16a      	bne.n	8013a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801397e:	9403      	str	r4, [sp, #12]
 8013980:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8013984:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8013988:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801398c:	9301      	str	r3, [sp, #4]
 801398e:	35a4      	adds	r5, #164	; 0xa4
 8013990:	b15c      	cbz	r4, 80139aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8013992:	4629      	mov	r1, r5
 8013994:	9803      	ldr	r0, [sp, #12]
 8013996:	f7ff fe4d 	bl	8013634 <_ZNK8touchgfx4Rect8includesERKS0_>
 801399a:	3c01      	subs	r4, #1
 801399c:	b118      	cbz	r0, 80139a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801399e:	b2a1      	uxth	r1, r4
 80139a0:	9801      	ldr	r0, [sp, #4]
 80139a2:	f7ff ffc3 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80139a6:	3d08      	subs	r5, #8
 80139a8:	e7f2      	b.n	8013990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80139aa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80139ae:	f10a 33ff 	add.w	r3, sl, #4294967295
 80139b2:	f8cd a010 	str.w	sl, [sp, #16]
 80139b6:	9302      	str	r3, [sp, #8]
 80139b8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80139bc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80139c0:	9306      	str	r3, [sp, #24]
 80139c2:	445c      	add	r4, fp
 80139c4:	2500      	movs	r5, #0
 80139c6:	4626      	mov	r6, r4
 80139c8:	f8cd a014 	str.w	sl, [sp, #20]
 80139cc:	462f      	mov	r7, r5
 80139ce:	9b05      	ldr	r3, [sp, #20]
 80139d0:	2b00      	cmp	r3, #0
 80139d2:	d073      	beq.n	8013abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80139d4:	9903      	ldr	r1, [sp, #12]
 80139d6:	4630      	mov	r0, r6
 80139d8:	f7ff fdba 	bl	8013550 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80139dc:	b350      	cbz	r0, 8013a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80139de:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80139e2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80139e6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80139ea:	45e6      	cmp	lr, ip
 80139ec:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80139f0:	db33      	blt.n	8013a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80139f2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80139f6:	88b3      	ldrh	r3, [r6, #4]
 80139f8:	4472      	add	r2, lr
 80139fa:	4463      	add	r3, ip
 80139fc:	b212      	sxth	r2, r2
 80139fe:	b21b      	sxth	r3, r3
 8013a00:	429a      	cmp	r2, r3
 8013a02:	dc2a      	bgt.n	8013a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013a04:	fa1f f289 	uxth.w	r2, r9
 8013a08:	88f3      	ldrh	r3, [r6, #6]
 8013a0a:	45c8      	cmp	r8, r9
 8013a0c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013a10:	4413      	add	r3, r2
 8013a12:	fa1f fc88 	uxth.w	ip, r8
 8013a16:	b29b      	uxth	r3, r3
 8013a18:	fa0f fe83 	sxth.w	lr, r3
 8013a1c:	db0f      	blt.n	8013a3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8013a1e:	eba3 030c 	sub.w	r3, r3, ip
 8013a22:	1ac9      	subs	r1, r1, r3
 8013a24:	b209      	sxth	r1, r1
 8013a26:	2900      	cmp	r1, #0
 8013a28:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013a2c:	dd12      	ble.n	8013a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013a2e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8013a32:	4605      	mov	r5, r0
 8013a34:	9b05      	ldr	r3, [sp, #20]
 8013a36:	3e08      	subs	r6, #8
 8013a38:	3b01      	subs	r3, #1
 8013a3a:	9305      	str	r3, [sp, #20]
 8013a3c:	e7c7      	b.n	80139ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8013a3e:	4461      	add	r1, ip
 8013a40:	b209      	sxth	r1, r1
 8013a42:	4571      	cmp	r1, lr
 8013a44:	dc38      	bgt.n	8013ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013a46:	eba2 020c 	sub.w	r2, r2, ip
 8013a4a:	b212      	sxth	r2, r2
 8013a4c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8013a50:	2a00      	cmp	r2, #0
 8013a52:	dcee      	bgt.n	8013a32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013a54:	b00f      	add	sp, #60	; 0x3c
 8013a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a5a:	45c8      	cmp	r8, r9
 8013a5c:	db2c      	blt.n	8013ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013a5e:	88f3      	ldrh	r3, [r6, #6]
 8013a60:	4499      	add	r9, r3
 8013a62:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8013a66:	4498      	add	r8, r3
 8013a68:	fa0f f989 	sxth.w	r9, r9
 8013a6c:	fa0f f888 	sxth.w	r8, r8
 8013a70:	45c1      	cmp	r9, r8
 8013a72:	db21      	blt.n	8013ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013a74:	fa1f f28c 	uxth.w	r2, ip
 8013a78:	88b3      	ldrh	r3, [r6, #4]
 8013a7a:	45e6      	cmp	lr, ip
 8013a7c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013a80:	4413      	add	r3, r2
 8013a82:	fa1f f88e 	uxth.w	r8, lr
 8013a86:	b29b      	uxth	r3, r3
 8013a88:	fa0f f983 	sxth.w	r9, r3
 8013a8c:	db0a      	blt.n	8013aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8013a8e:	eba3 0308 	sub.w	r3, r3, r8
 8013a92:	1ac9      	subs	r1, r1, r3
 8013a94:	b209      	sxth	r1, r1
 8013a96:	2900      	cmp	r1, #0
 8013a98:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8013a9c:	ddda      	ble.n	8013a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013a9e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8013aa2:	e7c6      	b.n	8013a32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013aa4:	4441      	add	r1, r8
 8013aa6:	b209      	sxth	r1, r1
 8013aa8:	4549      	cmp	r1, r9
 8013aaa:	dc05      	bgt.n	8013ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013aac:	eba2 0208 	sub.w	r2, r2, r8
 8013ab0:	b212      	sxth	r2, r2
 8013ab2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8013ab6:	e7cb      	b.n	8013a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8013ab8:	4607      	mov	r7, r0
 8013aba:	e7bb      	b.n	8013a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8013abc:	2d00      	cmp	r5, #0
 8013abe:	d181      	bne.n	80139c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8013ac0:	2f00      	cmp	r7, #0
 8013ac2:	f000 81dd 	beq.w	8013e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013ac6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8013aca:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8013ace:	b2b3      	uxth	r3, r6
 8013ad0:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8013ad4:	9305      	str	r3, [sp, #20]
 8013ad6:	9a05      	ldr	r2, [sp, #20]
 8013ad8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8013adc:	4413      	add	r3, r2
 8013ade:	b2ba      	uxth	r2, r7
 8013ae0:	4492      	add	sl, r2
 8013ae2:	b29b      	uxth	r3, r3
 8013ae4:	fa1f fa8a 	uxth.w	sl, sl
 8013ae8:	fa0f f883 	sxth.w	r8, r3
 8013aec:	fa0f f98a 	sxth.w	r9, sl
 8013af0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8013af4:	9b04      	ldr	r3, [sp, #16]
 8013af6:	2b00      	cmp	r3, #0
 8013af8:	d052      	beq.n	8013ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8013afa:	9903      	ldr	r1, [sp, #12]
 8013afc:	4620      	mov	r0, r4
 8013afe:	f7ff fd27 	bl	8013550 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013b02:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8013b06:	b1c0      	cbz	r0, 8013b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013b08:	f9b4 e000 	ldrsh.w	lr, [r4]
 8013b0c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8013b10:	4576      	cmp	r6, lr
 8013b12:	dc22      	bgt.n	8013b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8013b14:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013b18:	44f4      	add	ip, lr
 8013b1a:	fa0f fc8c 	sxth.w	ip, ip
 8013b1e:	45e0      	cmp	r8, ip
 8013b20:	db1b      	blt.n	8013b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8013b22:	428f      	cmp	r7, r1
 8013b24:	fa1f fc81 	uxth.w	ip, r1
 8013b28:	88e1      	ldrh	r1, [r4, #6]
 8013b2a:	dc0d      	bgt.n	8013b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8013b2c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8013b30:	f8a4 9002 	strh.w	r9, [r4, #2]
 8013b34:	eba1 010c 	sub.w	r1, r1, ip
 8013b38:	80e1      	strh	r1, [r4, #6]
 8013b3a:	4628      	mov	r0, r5
 8013b3c:	9904      	ldr	r1, [sp, #16]
 8013b3e:	3c08      	subs	r4, #8
 8013b40:	4605      	mov	r5, r0
 8013b42:	3901      	subs	r1, #1
 8013b44:	9104      	str	r1, [sp, #16]
 8013b46:	e7d3      	b.n	8013af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8013b48:	4461      	add	r1, ip
 8013b4a:	b209      	sxth	r1, r1
 8013b4c:	4549      	cmp	r1, r9
 8013b4e:	dcf5      	bgt.n	8013b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013b50:	eba2 0c0c 	sub.w	ip, r2, ip
 8013b54:	f8a4 c006 	strh.w	ip, [r4, #6]
 8013b58:	e7ef      	b.n	8013b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013b5a:	428f      	cmp	r7, r1
 8013b5c:	dcee      	bgt.n	8013b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013b5e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8013b62:	4461      	add	r1, ip
 8013b64:	b209      	sxth	r1, r1
 8013b66:	4589      	cmp	r9, r1
 8013b68:	dbe8      	blt.n	8013b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013b6a:	4576      	cmp	r6, lr
 8013b6c:	fa1f fc8e 	uxth.w	ip, lr
 8013b70:	88a1      	ldrh	r1, [r4, #4]
 8013b72:	dc07      	bgt.n	8013b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8013b74:	eba3 0c0c 	sub.w	ip, r3, ip
 8013b78:	f8a4 8000 	strh.w	r8, [r4]
 8013b7c:	eba1 010c 	sub.w	r1, r1, ip
 8013b80:	80a1      	strh	r1, [r4, #4]
 8013b82:	e7da      	b.n	8013b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013b84:	4461      	add	r1, ip
 8013b86:	b209      	sxth	r1, r1
 8013b88:	4588      	cmp	r8, r1
 8013b8a:	dbd7      	blt.n	8013b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013b8c:	9905      	ldr	r1, [sp, #20]
 8013b8e:	eba1 0c0c 	sub.w	ip, r1, ip
 8013b92:	f8a4 c004 	strh.w	ip, [r4, #4]
 8013b96:	e7d0      	b.n	8013b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013b98:	240016a6 	.word	0x240016a6
 8013b9c:	240016a4 	.word	0x240016a4
 8013ba0:	2d00      	cmp	r5, #0
 8013ba2:	f000 816d 	beq.w	8013e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013ba6:	9b06      	ldr	r3, [sp, #24]
 8013ba8:	445b      	add	r3, fp
 8013baa:	461c      	mov	r4, r3
 8013bac:	9b02      	ldr	r3, [sp, #8]
 8013bae:	3301      	adds	r3, #1
 8013bb0:	f000 8166 	beq.w	8013e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013bb4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8013bb8:	9803      	ldr	r0, [sp, #12]
 8013bba:	4629      	mov	r1, r5
 8013bbc:	f7ff fd3a 	bl	8013634 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013bc0:	b120      	cbz	r0, 8013bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8013bc2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013bc6:	9801      	ldr	r0, [sp, #4]
 8013bc8:	f7ff feb0 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013bcc:	9903      	ldr	r1, [sp, #12]
 8013bce:	4628      	mov	r0, r5
 8013bd0:	f7ff fcbe 	bl	8013550 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013bd4:	2800      	cmp	r0, #0
 8013bd6:	f000 809c 	beq.w	8013d12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8013bda:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8013bde:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013be2:	fa1f f189 	uxth.w	r1, r9
 8013be6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8013bea:	9309      	str	r3, [sp, #36]	; 0x24
 8013bec:	eb01 0c03 	add.w	ip, r1, r3
 8013bf0:	b283      	uxth	r3, r0
 8013bf2:	4548      	cmp	r0, r9
 8013bf4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8013bf8:	fa1f fa8c 	uxth.w	sl, ip
 8013bfc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8013c00:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8013c04:	eb03 050c 	add.w	r5, r3, ip
 8013c08:	b2ad      	uxth	r5, r5
 8013c0a:	9505      	str	r5, [sp, #20]
 8013c0c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8013c10:	9504      	str	r5, [sp, #16]
 8013c12:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8013c16:	f340 8099 	ble.w	8013d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8013c1a:	1a5b      	subs	r3, r3, r1
 8013c1c:	4596      	cmp	lr, r2
 8013c1e:	fa0f f08a 	sxth.w	r0, sl
 8013c22:	b29b      	uxth	r3, r3
 8013c24:	b21e      	sxth	r6, r3
 8013c26:	dd2e      	ble.n	8013c86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8013c28:	9f02      	ldr	r7, [sp, #8]
 8013c2a:	fa1f fe8e 	uxth.w	lr, lr
 8013c2e:	b292      	uxth	r2, r2
 8013c30:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8013c34:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8013c38:	9f04      	ldr	r7, [sp, #16]
 8013c3a:	ebae 0102 	sub.w	r1, lr, r2
 8013c3e:	44a6      	add	lr, r4
 8013c40:	1a3f      	subs	r7, r7, r0
 8013c42:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8013c46:	b289      	uxth	r1, r1
 8013c48:	4402      	add	r2, r0
 8013c4a:	fa0f fe8e 	sxth.w	lr, lr
 8013c4e:	b20d      	sxth	r5, r1
 8013c50:	b212      	sxth	r2, r2
 8013c52:	436f      	muls	r7, r5
 8013c54:	ebae 0202 	sub.w	r2, lr, r2
 8013c58:	4372      	muls	r2, r6
 8013c5a:	4297      	cmp	r7, r2
 8013c5c:	db09      	blt.n	8013c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8013c5e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8013c62:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8013c66:	449c      	add	ip, r3
 8013c68:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013c6c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8013c70:	e686      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013c72:	4421      	add	r1, r4
 8013c74:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8013c78:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8013c7c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013c80:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013c84:	e67c      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013c86:	9f04      	ldr	r7, [sp, #16]
 8013c88:	42b8      	cmp	r0, r7
 8013c8a:	da27      	bge.n	8013cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8013c8c:	9902      	ldr	r1, [sp, #8]
 8013c8e:	1a3f      	subs	r7, r7, r0
 8013c90:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8013c94:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8013c98:	eb05 010e 	add.w	r1, r5, lr
 8013c9c:	fa1f f881 	uxth.w	r8, r1
 8013ca0:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8013ca4:	4411      	add	r1, r2
 8013ca6:	fa0f f988 	sxth.w	r9, r8
 8013caa:	eba2 020e 	sub.w	r2, r2, lr
 8013cae:	eba1 0108 	sub.w	r1, r1, r8
 8013cb2:	4372      	muls	r2, r6
 8013cb4:	b289      	uxth	r1, r1
 8013cb6:	fa0f f881 	sxth.w	r8, r1
 8013cba:	fb08 f707 	mul.w	r7, r8, r7
 8013cbe:	42ba      	cmp	r2, r7
 8013cc0:	dc06      	bgt.n	8013cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8013cc2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8013cc6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8013cca:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8013cce:	e7ca      	b.n	8013c66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8013cd0:	4429      	add	r1, r5
 8013cd2:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8013cd6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013cda:	e651      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013cdc:	9805      	ldr	r0, [sp, #20]
 8013cde:	2d06      	cmp	r5, #6
 8013ce0:	ebaa 0000 	sub.w	r0, sl, r0
 8013ce4:	b280      	uxth	r0, r0
 8013ce6:	fa0f fe80 	sxth.w	lr, r0
 8013cea:	d817      	bhi.n	8013d1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8013cec:	9b04      	ldr	r3, [sp, #16]
 8013cee:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8013cf2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013cf6:	1c6b      	adds	r3, r5, #1
 8013cf8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8013cfc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8013d00:	9b01      	ldr	r3, [sp, #4]
 8013d02:	9801      	ldr	r0, [sp, #4]
 8013d04:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8013d08:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013d0c:	805a      	strh	r2, [r3, #2]
 8013d0e:	809e      	strh	r6, [r3, #4]
 8013d10:	80d9      	strh	r1, [r3, #6]
 8013d12:	9b02      	ldr	r3, [sp, #8]
 8013d14:	3c08      	subs	r4, #8
 8013d16:	3b01      	subs	r3, #1
 8013d18:	9302      	str	r3, [sp, #8]
 8013d1a:	e747      	b.n	8013bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8013d1c:	9a02      	ldr	r2, [sp, #8]
 8013d1e:	45b6      	cmp	lr, r6
 8013d20:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8013d24:	db0d      	blt.n	8013d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8013d26:	449c      	add	ip, r3
 8013d28:	445a      	add	r2, fp
 8013d2a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8013d2e:	fa1f fc8c 	uxth.w	ip, ip
 8013d32:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8013d36:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8013d3a:	448c      	add	ip, r1
 8013d3c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8013d40:	e61e      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013d42:	445a      	add	r2, fp
 8013d44:	4484      	add	ip, r0
 8013d46:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8013d4a:	e78f      	b.n	8013c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8013d4c:	fa1f f18e 	uxth.w	r1, lr
 8013d50:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8013d54:	b293      	uxth	r3, r2
 8013d56:	4596      	cmp	lr, r2
 8013d58:	eb01 0806 	add.w	r8, r1, r6
 8013d5c:	9306      	str	r3, [sp, #24]
 8013d5e:	fa1f f888 	uxth.w	r8, r8
 8013d62:	9f06      	ldr	r7, [sp, #24]
 8013d64:	fa0f f388 	sxth.w	r3, r8
 8013d68:	9307      	str	r3, [sp, #28]
 8013d6a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8013d6e:	443b      	add	r3, r7
 8013d70:	b29b      	uxth	r3, r3
 8013d72:	9308      	str	r3, [sp, #32]
 8013d74:	da24      	bge.n	8013dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8013d76:	9905      	ldr	r1, [sp, #20]
 8013d78:	eba3 0308 	sub.w	r3, r3, r8
 8013d7c:	eba2 020e 	sub.w	r2, r2, lr
 8013d80:	eba9 0000 	sub.w	r0, r9, r0
 8013d84:	ebaa 0401 	sub.w	r4, sl, r1
 8013d88:	b29b      	uxth	r3, r3
 8013d8a:	b2a4      	uxth	r4, r4
 8013d8c:	b219      	sxth	r1, r3
 8013d8e:	b225      	sxth	r5, r4
 8013d90:	4348      	muls	r0, r1
 8013d92:	436a      	muls	r2, r5
 8013d94:	4282      	cmp	r2, r0
 8013d96:	9a02      	ldr	r2, [sp, #8]
 8013d98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8013d9c:	445a      	add	r2, fp
 8013d9e:	dc06      	bgt.n	8013dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8013da0:	9b07      	ldr	r3, [sp, #28]
 8013da2:	44a4      	add	ip, r4
 8013da4:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8013da8:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8013dac:	e75e      	b.n	8013c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8013dae:	9904      	ldr	r1, [sp, #16]
 8013db0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8013db4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8013db8:	4433      	add	r3, r6
 8013dba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013dbe:	e5df      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013dc0:	9f06      	ldr	r7, [sp, #24]
 8013dc2:	9b04      	ldr	r3, [sp, #16]
 8013dc4:	1bc9      	subs	r1, r1, r7
 8013dc6:	fa0f f78a 	sxth.w	r7, sl
 8013dca:	b289      	uxth	r1, r1
 8013dcc:	429f      	cmp	r7, r3
 8013dce:	fa0f fe81 	sxth.w	lr, r1
 8013dd2:	dd23      	ble.n	8013e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8013dd4:	9a05      	ldr	r2, [sp, #20]
 8013dd6:	eba9 0000 	sub.w	r0, r9, r0
 8013dda:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8013dde:	ebaa 0202 	sub.w	r2, sl, r2
 8013de2:	9d07      	ldr	r5, [sp, #28]
 8013de4:	fb0e f000 	mul.w	r0, lr, r0
 8013de8:	b292      	uxth	r2, r2
 8013dea:	eba5 0a03 	sub.w	sl, r5, r3
 8013dee:	9b02      	ldr	r3, [sp, #8]
 8013df0:	b214      	sxth	r4, r2
 8013df2:	00db      	lsls	r3, r3, #3
 8013df4:	fb04 fa0a 	mul.w	sl, r4, sl
 8013df8:	445b      	add	r3, fp
 8013dfa:	4550      	cmp	r0, sl
 8013dfc:	db03      	blt.n	8013e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8013dfe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8013e02:	4494      	add	ip, r2
 8013e04:	e732      	b.n	8013c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8013e06:	9a04      	ldr	r2, [sp, #16]
 8013e08:	4431      	add	r1, r6
 8013e0a:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8013e0e:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8013e12:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8013e16:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013e1a:	e75c      	b.n	8013cd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8013e1c:	9b08      	ldr	r3, [sp, #32]
 8013e1e:	2d06      	cmp	r5, #6
 8013e20:	eba3 0308 	sub.w	r3, r3, r8
 8013e24:	b29b      	uxth	r3, r3
 8013e26:	b218      	sxth	r0, r3
 8013e28:	d813      	bhi.n	8013e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8013e2a:	9b07      	ldr	r3, [sp, #28]
 8013e2c:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8013e30:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8013e34:	1c6b      	adds	r3, r5, #1
 8013e36:	9901      	ldr	r1, [sp, #4]
 8013e38:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8013e3c:	9b01      	ldr	r3, [sp, #4]
 8013e3e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8013e42:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8013e46:	805a      	strh	r2, [r3, #2]
 8013e48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e4a:	f8a3 e006 	strh.w	lr, [r3, #6]
 8013e4e:	809a      	strh	r2, [r3, #4]
 8013e50:	e75f      	b.n	8013d12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8013e52:	9c02      	ldr	r4, [sp, #8]
 8013e54:	4570      	cmp	r0, lr
 8013e56:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8013e5a:	db0d      	blt.n	8013e78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8013e5c:	4431      	add	r1, r6
 8013e5e:	9b06      	ldr	r3, [sp, #24]
 8013e60:	445c      	add	r4, fp
 8013e62:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8013e66:	b289      	uxth	r1, r1
 8013e68:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8013e6c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013e70:	4419      	add	r1, r3
 8013e72:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8013e76:	e583      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013e78:	445c      	add	r4, fp
 8013e7a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8013e7e:	e79b      	b.n	8013db8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8013e80:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8013e84:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8013e88:	1e65      	subs	r5, r4, #1
 8013e8a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8013e8e:	b2ad      	uxth	r5, r5
 8013e90:	42b5      	cmp	r5, r6
 8013e92:	d044      	beq.n	8013f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8013e94:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013e98:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8013e9c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013ea0:	4282      	cmp	r2, r0
 8013ea2:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8013ea6:	d11f      	bne.n	8013ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8013ea8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8013eac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8013eb0:	459c      	cmp	ip, r3
 8013eb2:	d119      	bne.n	8013ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8013eb4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8013eb8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8013ebc:	19d8      	adds	r0, r3, r7
 8013ebe:	b200      	sxth	r0, r0
 8013ec0:	4288      	cmp	r0, r1
 8013ec2:	d109      	bne.n	8013ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8013ec4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8013ec8:	4413      	add	r3, r2
 8013eca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8013ece:	4629      	mov	r1, r5
 8013ed0:	9801      	ldr	r0, [sp, #4]
 8013ed2:	f7ff fd2b 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013ed6:	e003      	b.n	8013ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013ed8:	4411      	add	r1, r2
 8013eda:	b209      	sxth	r1, r1
 8013edc:	42b9      	cmp	r1, r7
 8013ede:	d0f3      	beq.n	8013ec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8013ee0:	3d01      	subs	r5, #1
 8013ee2:	3c08      	subs	r4, #8
 8013ee4:	b2ad      	uxth	r5, r5
 8013ee6:	e7d3      	b.n	8013e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8013ee8:	42b9      	cmp	r1, r7
 8013eea:	d1f9      	bne.n	8013ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013eec:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8013ef0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013ef4:	4299      	cmp	r1, r3
 8013ef6:	d1f3      	bne.n	8013ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013ef8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8013efc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013f00:	181f      	adds	r7, r3, r0
 8013f02:	b23f      	sxth	r7, r7
 8013f04:	42ba      	cmp	r2, r7
 8013f06:	d105      	bne.n	8013f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8013f08:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8013f0c:	440b      	add	r3, r1
 8013f0e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013f12:	e7dc      	b.n	8013ece <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8013f14:	440a      	add	r2, r1
 8013f16:	b212      	sxth	r2, r2
 8013f18:	4290      	cmp	r0, r2
 8013f1a:	d1e1      	bne.n	8013ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013f1c:	e7f6      	b.n	8013f0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8013f1e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8013f22:	2e07      	cmp	r6, #7
 8013f24:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8013f28:	d812      	bhi.n	8013f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8013f2a:	1c75      	adds	r5, r6, #1
 8013f2c:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8013f30:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8013f34:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8013f38:	9d01      	ldr	r5, [sp, #4]
 8013f3a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8013f3e:	442c      	add	r4, r5
 8013f40:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8013f44:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8013f48:	8061      	strh	r1, [r4, #2]
 8013f4a:	80a2      	strh	r2, [r4, #4]
 8013f4c:	80e3      	strh	r3, [r4, #6]
 8013f4e:	e581      	b.n	8013a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013f50:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8013f54:	3e01      	subs	r6, #1
 8013f56:	445c      	add	r4, fp
 8013f58:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8013f5c:	f04f 37ff 	mov.w	r7, #4294967295
 8013f60:	2500      	movs	r5, #0
 8013f62:	9305      	str	r3, [sp, #20]
 8013f64:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013f68:	1e72      	subs	r2, r6, #1
 8013f6a:	9302      	str	r3, [sp, #8]
 8013f6c:	4691      	mov	r9, r2
 8013f6e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8013f72:	9304      	str	r3, [sp, #16]
 8013f74:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8013f78:	f1b9 3fff 	cmp.w	r9, #4294967295
 8013f7c:	6818      	ldr	r0, [r3, #0]
 8013f7e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013f82:	9207      	str	r2, [sp, #28]
 8013f84:	bf16      	itet	ne
 8013f86:	9905      	ldrne	r1, [sp, #20]
 8013f88:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8013f8c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8013f90:	9306      	str	r3, [sp, #24]
 8013f92:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8013f96:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8013f9a:	fb18 f801 	smulbb	r8, r8, r1
 8013f9e:	6859      	ldr	r1, [r3, #4]
 8013fa0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013fa4:	4671      	mov	r1, lr
 8013fa6:	a80c      	add	r0, sp, #48	; 0x30
 8013fa8:	f7ff fb6a 	bl	8013680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013fac:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8013fb0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8013fb4:	f04f 0c08 	mov.w	ip, #8
 8013fb8:	9b04      	ldr	r3, [sp, #16]
 8013fba:	9a02      	ldr	r2, [sp, #8]
 8013fbc:	fb10 f001 	smulbb	r0, r0, r1
 8013fc0:	fb02 8803 	mla	r8, r2, r3, r8
 8013fc4:	eba0 0108 	sub.w	r1, r0, r8
 8013fc8:	fb90 f0fc 	sdiv	r0, r0, ip
 8013fcc:	4288      	cmp	r0, r1
 8013fce:	dc20      	bgt.n	8014012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8013fd0:	4551      	cmp	r1, sl
 8013fd2:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8013fd6:	da03      	bge.n	8013fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8013fd8:	b1d9      	cbz	r1, 8014012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8013fda:	468a      	mov	sl, r1
 8013fdc:	464f      	mov	r7, r9
 8013fde:	4635      	mov	r5, r6
 8013fe0:	f109 39ff 	add.w	r9, r9, #4294967295
 8013fe4:	f119 0f02 	cmn.w	r9, #2
 8013fe8:	d1c6      	bne.n	8013f78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8013fea:	4616      	mov	r6, r2
 8013fec:	3201      	adds	r2, #1
 8013fee:	f1a4 0408 	sub.w	r4, r4, #8
 8013ff2:	d1b7      	bne.n	8013f64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8013ff4:	9b01      	ldr	r3, [sp, #4]
 8013ff6:	b2ac      	uxth	r4, r5
 8013ff8:	00ed      	lsls	r5, r5, #3
 8013ffa:	1958      	adds	r0, r3, r5
 8013ffc:	1c7b      	adds	r3, r7, #1
 8013ffe:	d10b      	bne.n	8014018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8014000:	4601      	mov	r1, r0
 8014002:	9803      	ldr	r0, [sp, #12]
 8014004:	f7ff fb3c 	bl	8013680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014008:	4621      	mov	r1, r4
 801400a:	9801      	ldr	r0, [sp, #4]
 801400c:	f7ff fc8e 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014010:	e4b6      	b.n	8013980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014012:	464f      	mov	r7, r9
 8014014:	4635      	mov	r5, r6
 8014016:	e7ed      	b.n	8013ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8014018:	9b01      	ldr	r3, [sp, #4]
 801401a:	00ff      	lsls	r7, r7, #3
 801401c:	445d      	add	r5, fp
 801401e:	19d9      	adds	r1, r3, r7
 8014020:	445f      	add	r7, fp
 8014022:	f7ff fb2d 	bl	8013680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014026:	9b03      	ldr	r3, [sp, #12]
 8014028:	cb03      	ldmia	r3!, {r0, r1}
 801402a:	9b03      	ldr	r3, [sp, #12]
 801402c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8014030:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8014034:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014038:	6869      	ldr	r1, [r5, #4]
 801403a:	c303      	stmia	r3!, {r0, r1}
 801403c:	e7e4      	b.n	8014008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 801403e:	bf00      	nop

08014040 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014044:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8014048:	b09b      	sub	sp, #108	; 0x6c
 801404a:	4604      	mov	r4, r0
 801404c:	4630      	mov	r0, r6
 801404e:	f7fc f9d4 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8014052:	4605      	mov	r5, r0
 8014054:	b948      	cbnz	r0, 801406a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014056:	6823      	ldr	r3, [r4, #0]
 8014058:	4620      	mov	r0, r4
 801405a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801405c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014060:	4798      	blx	r3
 8014062:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014066:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801406a:	4bc5      	ldr	r3, [pc, #788]	; (8014380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 801406c:	681b      	ldr	r3, [r3, #0]
 801406e:	2b00      	cmp	r3, #0
 8014070:	d03f      	beq.n	80140f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014072:	4dc4      	ldr	r5, [pc, #784]	; (8014384 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014074:	4628      	mov	r0, r5
 8014076:	f7fc f9c0 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801407a:	4606      	mov	r6, r0
 801407c:	2800      	cmp	r0, #0
 801407e:	d138      	bne.n	80140f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014080:	4628      	mov	r0, r5
 8014082:	f7ff f99b 	bl	80133bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014086:	6823      	ldr	r3, [r4, #0]
 8014088:	6829      	ldr	r1, [r5, #0]
 801408a:	4620      	mov	r0, r4
 801408c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801408e:	686a      	ldr	r2, [r5, #4]
 8014090:	4798      	blx	r3
 8014092:	802e      	strh	r6, [r5, #0]
 8014094:	806e      	strh	r6, [r5, #2]
 8014096:	80ae      	strh	r6, [r5, #4]
 8014098:	80ee      	strh	r6, [r5, #6]
 801409a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801409e:	4dba      	ldr	r5, [pc, #744]	; (8014388 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80140a0:	4640      	mov	r0, r8
 80140a2:	f7ff fbe7 	bl	8013874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80140a6:	882e      	ldrh	r6, [r5, #0]
 80140a8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80140ac:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80140b0:	4633      	mov	r3, r6
 80140b2:	42bb      	cmp	r3, r7
 80140b4:	d224      	bcs.n	8014100 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80140b6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80140ba:	2907      	cmp	r1, #7
 80140bc:	d816      	bhi.n	80140ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80140be:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80140c2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80140c6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80140ca:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80140ce:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80140d2:	1c4a      	adds	r2, r1, #1
 80140d4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80140d8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80140dc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80140e0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80140e4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80140e8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80140ec:	3301      	adds	r3, #1
 80140ee:	b29b      	uxth	r3, r3
 80140f0:	e7df      	b.n	80140b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80140f2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80140f6:	2b00      	cmp	r3, #0
 80140f8:	d1cf      	bne.n	801409a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80140fa:	b01b      	add	sp, #108	; 0x6c
 80140fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014100:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8014104:	42b3      	cmp	r3, r6
 8014106:	d90c      	bls.n	8014122 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014108:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801410c:	6822      	ldr	r2, [r4, #0]
 801410e:	3601      	adds	r6, #1
 8014110:	4620      	mov	r0, r4
 8014112:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8014114:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8014118:	b2b6      	uxth	r6, r6
 801411a:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801411e:	47b8      	blx	r7
 8014120:	e7ee      	b.n	8014100 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014122:	4a9a      	ldr	r2, [pc, #616]	; (801438c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014124:	6813      	ldr	r3, [r2, #0]
 8014126:	4691      	mov	r9, r2
 8014128:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801412c:	2b01      	cmp	r3, #1
 801412e:	f040 80e0 	bne.w	80142f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8014132:	8829      	ldrh	r1, [r5, #0]
 8014134:	2600      	movs	r6, #0
 8014136:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801413a:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801413e:	33ae      	adds	r3, #174	; 0xae
 8014140:	428f      	cmp	r7, r1
 8014142:	f103 0308 	add.w	r3, r3, #8
 8014146:	dd0a      	ble.n	801415e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014148:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801414c:	3101      	adds	r1, #1
 801414e:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014152:	4402      	add	r2, r0
 8014154:	b212      	sxth	r2, r2
 8014156:	4296      	cmp	r6, r2
 8014158:	bfb8      	it	lt
 801415a:	4616      	movlt	r6, r2
 801415c:	e7f0      	b.n	8014140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801415e:	4b8c      	ldr	r3, [pc, #560]	; (8014390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014160:	f8df 9228 	ldr.w	r9, [pc, #552]	; 801438c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8014164:	881b      	ldrh	r3, [r3, #0]
 8014166:	2b0f      	cmp	r3, #15
 8014168:	bf8c      	ite	hi
 801416a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801416e:	f04f 0b01 	movls.w	fp, #1
 8014172:	2300      	movs	r3, #0
 8014174:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014178:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 801417c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014180:	4b82      	ldr	r3, [pc, #520]	; (801438c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014182:	4438      	add	r0, r7
 8014184:	b207      	sxth	r7, r0
 8014186:	6818      	ldr	r0, [r3, #0]
 8014188:	42b7      	cmp	r7, r6
 801418a:	6803      	ldr	r3, [r0, #0]
 801418c:	f280 8083 	bge.w	8014296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8014190:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8014194:	4798      	blx	r3
 8014196:	eb07 030b 	add.w	r3, r7, fp
 801419a:	4298      	cmp	r0, r3
 801419c:	da07      	bge.n	80141ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801419e:	42b0      	cmp	r0, r6
 80141a0:	da05      	bge.n	80141ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80141a2:	4287      	cmp	r7, r0
 80141a4:	dd6c      	ble.n	8014280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80141a6:	2f00      	cmp	r7, #0
 80141a8:	dd6a      	ble.n	8014280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80141aa:	4630      	mov	r0, r6
 80141ac:	e004      	b.n	80141b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 80141ae:	4287      	cmp	r7, r0
 80141b0:	dcfb      	bgt.n	80141aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 80141b2:	42b0      	cmp	r0, r6
 80141b4:	bfa8      	it	ge
 80141b6:	4630      	movge	r0, r6
 80141b8:	4b76      	ldr	r3, [pc, #472]	; (8014394 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80141ba:	1bc0      	subs	r0, r0, r7
 80141bc:	2200      	movs	r2, #0
 80141be:	f8ad 7016 	strh.w	r7, [sp, #22]
 80141c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80141c6:	882f      	ldrh	r7, [r5, #0]
 80141c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80141cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80141d0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80141d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80141d8:	42bb      	cmp	r3, r7
 80141da:	d9cd      	bls.n	8014178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80141dc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80141e0:	ab07      	add	r3, sp, #28
 80141e2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80141e6:	6851      	ldr	r1, [r2, #4]
 80141e8:	c303      	stmia	r3!, {r0, r1}
 80141ea:	a905      	add	r1, sp, #20
 80141ec:	a807      	add	r0, sp, #28
 80141ee:	f7ff f9af 	bl	8013550 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80141f2:	2800      	cmp	r0, #0
 80141f4:	d04c      	beq.n	8014290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 80141f6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80141fa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80141fe:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014202:	4686      	mov	lr, r0
 8014204:	4290      	cmp	r0, r2
 8014206:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801420a:	4450      	add	r0, sl
 801420c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014210:	bfb8      	it	lt
 8014212:	4696      	movlt	lr, r2
 8014214:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014218:	4452      	add	r2, sl
 801421a:	b280      	uxth	r0, r0
 801421c:	4299      	cmp	r1, r3
 801421e:	468c      	mov	ip, r1
 8014220:	b292      	uxth	r2, r2
 8014222:	9302      	str	r3, [sp, #8]
 8014224:	bfb8      	it	lt
 8014226:	469c      	movlt	ip, r3
 8014228:	b203      	sxth	r3, r0
 801422a:	fa0f fa82 	sxth.w	sl, r2
 801422e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014232:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014236:	4553      	cmp	r3, sl
 8014238:	bfb8      	it	lt
 801423a:	4602      	movlt	r2, r0
 801423c:	9b02      	ldr	r3, [sp, #8]
 801423e:	eba2 020e 	sub.w	r2, r2, lr
 8014242:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014246:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801424a:	4411      	add	r1, r2
 801424c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014250:	4413      	add	r3, r2
 8014252:	b289      	uxth	r1, r1
 8014254:	b29b      	uxth	r3, r3
 8014256:	b208      	sxth	r0, r1
 8014258:	b21a      	sxth	r2, r3
 801425a:	4290      	cmp	r0, r2
 801425c:	bfb8      	it	lt
 801425e:	460b      	movlt	r3, r1
 8014260:	eba3 030c 	sub.w	r3, r3, ip
 8014264:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014268:	a807      	add	r0, sp, #28
 801426a:	f7fc f8c6 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801426e:	b920      	cbnz	r0, 801427a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8014270:	6823      	ldr	r3, [r4, #0]
 8014272:	a907      	add	r1, sp, #28
 8014274:	4620      	mov	r0, r4
 8014276:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014278:	4798      	blx	r3
 801427a:	3701      	adds	r7, #1
 801427c:	b2bf      	uxth	r7, r7
 801427e:	e7a9      	b.n	80141d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8014280:	f8d9 0000 	ldr.w	r0, [r9]
 8014284:	2101      	movs	r1, #1
 8014286:	6803      	ldr	r3, [r0, #0]
 8014288:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801428c:	4798      	blx	r3
 801428e:	e773      	b.n	8014178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8014290:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014294:	e7e8      	b.n	8014268 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8014296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014298:	4798      	blx	r3
 801429a:	4b3f      	ldr	r3, [pc, #252]	; (8014398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801429c:	781b      	ldrb	r3, [r3, #0]
 801429e:	2b00      	cmp	r3, #0
 80142a0:	f43f af2b 	beq.w	80140fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80142a4:	2300      	movs	r3, #0
 80142a6:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80142aa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80142ae:	882b      	ldrh	r3, [r5, #0]
 80142b0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80142b4:	42ab      	cmp	r3, r5
 80142b6:	f4bf af20 	bcs.w	80140fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80142ba:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80142be:	2907      	cmp	r1, #7
 80142c0:	d814      	bhi.n	80142ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 80142c2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80142c6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80142ca:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80142ce:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80142d2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80142d6:	1c4a      	adds	r2, r1, #1
 80142d8:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80142dc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80142e0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80142e4:	f8a2 c002 	strh.w	ip, [r2, #2]
 80142e8:	8097      	strh	r7, [r2, #4]
 80142ea:	80d6      	strh	r6, [r2, #6]
 80142ec:	3301      	adds	r3, #1
 80142ee:	b29b      	uxth	r3, r3
 80142f0:	e7e0      	b.n	80142b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 80142f2:	2b02      	cmp	r3, #2
 80142f4:	f040 8133 	bne.w	801455e <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 80142f8:	4b28      	ldr	r3, [pc, #160]	; (801439c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80142fa:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80142fe:	781b      	ldrb	r3, [r3, #0]
 8014300:	2b01      	cmp	r3, #1
 8014302:	f000 8098 	beq.w	8014436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8014306:	882a      	ldrh	r2, [r5, #0]
 8014308:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 801430c:	3201      	adds	r2, #1
 801430e:	b292      	uxth	r2, r2
 8014310:	2900      	cmp	r1, #0
 8014312:	d0c2      	beq.n	801429a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014314:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8014318:	4694      	mov	ip, r2
 801431a:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 801431e:	f04f 0900 	mov.w	r9, #0
 8014322:	441e      	add	r6, r3
 8014324:	b236      	sxth	r6, r6
 8014326:	fa1f f38c 	uxth.w	r3, ip
 801432a:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801432e:	4299      	cmp	r1, r3
 8014330:	f240 80be 	bls.w	80144b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8014334:	4427      	add	r7, r4
 8014336:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801433a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801433e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8014342:	4283      	cmp	r3, r0
 8014344:	f340 80a0 	ble.w	8014488 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8014348:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 801434c:	46e1      	mov	r9, ip
 801434e:	4406      	add	r6, r0
 8014350:	b236      	sxth	r6, r6
 8014352:	429e      	cmp	r6, r3
 8014354:	bfa8      	it	ge
 8014356:	461e      	movge	r6, r3
 8014358:	f10c 0c01 	add.w	ip, ip, #1
 801435c:	e7e3      	b.n	8014326 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 801435e:	d10a      	bne.n	8014376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8014360:	4562      	cmp	r2, ip
 8014362:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8014366:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801436a:	bfb8      	it	lt
 801436c:	4662      	movlt	r2, ip
 801436e:	4288      	cmp	r0, r1
 8014370:	bfb8      	it	lt
 8014372:	461f      	movlt	r7, r3
 8014374:	e086      	b.n	8014484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8014376:	428a      	cmp	r2, r1
 8014378:	bfb8      	it	lt
 801437a:	460a      	movlt	r2, r1
 801437c:	e082      	b.n	8014484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 801437e:	bf00      	nop
 8014380:	240016e8 	.word	0x240016e8
 8014384:	240016f4 	.word	0x240016f4
 8014388:	2400001a 	.word	0x2400001a
 801438c:	240016b0 	.word	0x240016b0
 8014390:	240016a6 	.word	0x240016a6
 8014394:	240016a4 	.word	0x240016a4
 8014398:	240016ae 	.word	0x240016ae
 801439c:	240016a8 	.word	0x240016a8
 80143a0:	19a1      	adds	r1, r4, r6
 80143a2:	ab07      	add	r3, sp, #28
 80143a4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80143a8:	6849      	ldr	r1, [r1, #4]
 80143aa:	c303      	stmia	r3!, {r0, r1}
 80143ac:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80143b0:	a807      	add	r0, sp, #28
 80143b2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80143b6:	2b13      	cmp	r3, #19
 80143b8:	440b      	add	r3, r1
 80143ba:	bfd8      	it	le
 80143bc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80143c0:	1a9b      	subs	r3, r3, r2
 80143c2:	f8ad 201c 	strh.w	r2, [sp, #28]
 80143c6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80143ca:	f7ff f811 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80143ce:	a807      	add	r0, sp, #28
 80143d0:	f7fc f813 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 80143d4:	bb78      	cbnz	r0, 8014436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80143d6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80143da:	4426      	add	r6, r4
 80143dc:	f8d9 0000 	ldr.w	r0, [r9]
 80143e0:	f1bc 0f14 	cmp.w	ip, #20
 80143e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80143e8:	f8d0 e000 	ldr.w	lr, [r0]
 80143ec:	bfa8      	it	ge
 80143ee:	f04f 0c14 	movge.w	ip, #20
 80143f2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80143f6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80143fa:	fa1f fc8c 	uxth.w	ip, ip
 80143fe:	f8cd c000 	str.w	ip, [sp]
 8014402:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8014406:	47d8      	blx	fp
 8014408:	4683      	mov	fp, r0
 801440a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801440e:	a807      	add	r0, sp, #28
 8014410:	f7fe ffd4 	bl	80133bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014414:	6823      	ldr	r3, [r4, #0]
 8014416:	4620      	mov	r0, r4
 8014418:	a907      	add	r1, sp, #28
 801441a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801441c:	4798      	blx	r3
 801441e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014422:	eba0 000b 	sub.w	r0, r0, fp
 8014426:	b200      	sxth	r0, r0
 8014428:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 801442c:	b918      	cbnz	r0, 8014436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801442e:	b2b9      	uxth	r1, r7
 8014430:	4650      	mov	r0, sl
 8014432:	f7ff fa7b 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014436:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801443a:	f1bb 0f00 	cmp.w	fp, #0
 801443e:	f43f af2c 	beq.w	801429a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014442:	882b      	ldrh	r3, [r5, #0]
 8014444:	2700      	movs	r7, #0
 8014446:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801444a:	3301      	adds	r3, #1
 801444c:	b29b      	uxth	r3, r3
 801444e:	b299      	uxth	r1, r3
 8014450:	00fe      	lsls	r6, r7, #3
 8014452:	458b      	cmp	fp, r1
 8014454:	d9a4      	bls.n	80143a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8014456:	4426      	add	r6, r4
 8014458:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801445c:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8014460:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014464:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8014468:	4408      	add	r0, r1
 801446a:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801446e:	4461      	add	r1, ip
 8014470:	b200      	sxth	r0, r0
 8014472:	b209      	sxth	r1, r1
 8014474:	4288      	cmp	r0, r1
 8014476:	f6bf af72 	bge.w	801435e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 801447a:	4584      	cmp	ip, r0
 801447c:	4662      	mov	r2, ip
 801447e:	461f      	mov	r7, r3
 8014480:	bfb8      	it	lt
 8014482:	4602      	movlt	r2, r0
 8014484:	3301      	adds	r3, #1
 8014486:	e7e2      	b.n	801444e <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8014488:	d10e      	bne.n	80144a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 801448a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801448e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8014492:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8014496:	4473      	add	r3, lr
 8014498:	b21b      	sxth	r3, r3
 801449a:	429e      	cmp	r6, r3
 801449c:	bfa8      	it	ge
 801449e:	461e      	movge	r6, r3
 80144a0:	4287      	cmp	r7, r0
 80144a2:	bfb8      	it	lt
 80144a4:	46e1      	movlt	r9, ip
 80144a6:	e757      	b.n	8014358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80144a8:	4286      	cmp	r6, r0
 80144aa:	bfa8      	it	ge
 80144ac:	4606      	movge	r6, r0
 80144ae:	e753      	b.n	8014358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80144b0:	eb0a 0007 	add.w	r0, sl, r7
 80144b4:	4427      	add	r7, r4
 80144b6:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80144ba:	f1bb 0f13 	cmp.w	fp, #19
 80144be:	bfdc      	itt	le
 80144c0:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80144c4:	445e      	addle	r6, fp
 80144c6:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80144ca:	bfd8      	it	le
 80144cc:	b236      	sxthle	r6, r6
 80144ce:	f7fb ff94 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 80144d2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80144d6:	2800      	cmp	r0, #0
 80144d8:	f47f af1a 	bne.w	8014310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 80144dc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80144e0:	fa1f fb8b 	uxth.w	fp, fp
 80144e4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80144e8:	1ab6      	subs	r6, r6, r2
 80144ea:	4829      	ldr	r0, [pc, #164]	; (8014590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 80144ec:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80144f0:	2e14      	cmp	r6, #20
 80144f2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80144f6:	6800      	ldr	r0, [r0, #0]
 80144f8:	bfa8      	it	ge
 80144fa:	2614      	movge	r6, #20
 80144fc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014500:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014504:	b289      	uxth	r1, r1
 8014506:	f8ad 3020 	strh.w	r3, [sp, #32]
 801450a:	b2b6      	uxth	r6, r6
 801450c:	f8d0 c000 	ldr.w	ip, [r0]
 8014510:	b292      	uxth	r2, r2
 8014512:	455e      	cmp	r6, fp
 8014514:	bf94      	ite	ls
 8014516:	9600      	strls	r6, [sp, #0]
 8014518:	f8cd b000 	strhi.w	fp, [sp]
 801451c:	b29b      	uxth	r3, r3
 801451e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8014522:	47b0      	blx	r6
 8014524:	6823      	ldr	r3, [r4, #0]
 8014526:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801452a:	a907      	add	r1, sp, #28
 801452c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801452e:	4620      	mov	r0, r4
 8014530:	4798      	blx	r3
 8014532:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014536:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801453a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801453e:	1a5b      	subs	r3, r3, r1
 8014540:	440a      	add	r2, r1
 8014542:	b21b      	sxth	r3, r3
 8014544:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8014548:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 801454c:	2b00      	cmp	r3, #0
 801454e:	f47f aeda 	bne.w	8014306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8014552:	fa1f f189 	uxth.w	r1, r9
 8014556:	4650      	mov	r0, sl
 8014558:	f7ff f9e8 	bl	801392c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801455c:	e6d3      	b.n	8014306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801455e:	882e      	ldrh	r6, [r5, #0]
 8014560:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014564:	42b3      	cmp	r3, r6
 8014566:	f67f ae98 	bls.w	801429a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801456a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801456e:	ab07      	add	r3, sp, #28
 8014570:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014574:	6851      	ldr	r1, [r2, #4]
 8014576:	c303      	stmia	r3!, {r0, r1}
 8014578:	a807      	add	r0, sp, #28
 801457a:	f7fb ff3e 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801457e:	b920      	cbnz	r0, 801458a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8014580:	6823      	ldr	r3, [r4, #0]
 8014582:	a907      	add	r1, sp, #28
 8014584:	4620      	mov	r0, r4
 8014586:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014588:	4798      	blx	r3
 801458a:	3601      	adds	r6, #1
 801458c:	b2b6      	uxth	r6, r6
 801458e:	e7e7      	b.n	8014560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8014590:	240016b0 	.word	0x240016b0

08014594 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014594:	4b03      	ldr	r3, [pc, #12]	; (80145a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014596:	2200      	movs	r2, #0
 8014598:	801a      	strh	r2, [r3, #0]
 801459a:	805a      	strh	r2, [r3, #2]
 801459c:	809a      	strh	r2, [r3, #4]
 801459e:	80da      	strh	r2, [r3, #6]
 80145a0:	4770      	bx	lr
 80145a2:	bf00      	nop
 80145a4:	240016f4 	.word	0x240016f4

080145a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80145a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145ac:	b09d      	sub	sp, #116	; 0x74
 80145ae:	4606      	mov	r6, r0
 80145b0:	4614      	mov	r4, r2
 80145b2:	468a      	mov	sl, r1
 80145b4:	a803      	add	r0, sp, #12
 80145b6:	461d      	mov	r5, r3
 80145b8:	f000 fd72 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 80145bc:	6833      	ldr	r3, [r6, #0]
 80145be:	4630      	mov	r0, r6
 80145c0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80145c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80145c6:	4798      	blx	r3
 80145c8:	6833      	ldr	r3, [r6, #0]
 80145ca:	4607      	mov	r7, r0
 80145cc:	4630      	mov	r0, r6
 80145ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80145d0:	4798      	blx	r3
 80145d2:	462a      	mov	r2, r5
 80145d4:	2500      	movs	r5, #0
 80145d6:	4621      	mov	r1, r4
 80145d8:	9000      	str	r0, [sp, #0]
 80145da:	463b      	mov	r3, r7
 80145dc:	462c      	mov	r4, r5
 80145de:	46a9      	mov	r9, r5
 80145e0:	46a8      	mov	r8, r5
 80145e2:	a803      	add	r0, sp, #12
 80145e4:	f000 fdb7 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80145e8:	2300      	movs	r3, #0
 80145ea:	9302      	str	r3, [sp, #8]
 80145ec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80145f0:	429c      	cmp	r4, r3
 80145f2:	d002      	beq.n	80145fa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80145f4:	455c      	cmp	r4, fp
 80145f6:	bf18      	it	ne
 80145f8:	4625      	movne	r5, r4
 80145fa:	ab02      	add	r3, sp, #8
 80145fc:	4632      	mov	r2, r6
 80145fe:	4651      	mov	r1, sl
 8014600:	a803      	add	r0, sp, #12
 8014602:	f001 f8ad 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014606:	4604      	mov	r4, r0
 8014608:	b108      	cbz	r0, 801460e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801460a:	280a      	cmp	r0, #10
 801460c:	d10a      	bne.n	8014624 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801460e:	45c1      	cmp	r9, r8
 8014610:	bf38      	it	cc
 8014612:	46c1      	movcc	r9, r8
 8014614:	f04f 0800 	mov.w	r8, #0
 8014618:	2c00      	cmp	r4, #0
 801461a:	d1e5      	bne.n	80145e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801461c:	4648      	mov	r0, r9
 801461e:	b01d      	add	sp, #116	; 0x74
 8014620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014624:	9a02      	ldr	r2, [sp, #8]
 8014626:	2a00      	cmp	r2, #0
 8014628:	d0de      	beq.n	80145e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801462a:	7b57      	ldrb	r7, [r2, #13]
 801462c:	4629      	mov	r1, r5
 801462e:	6833      	ldr	r3, [r6, #0]
 8014630:	007f      	lsls	r7, r7, #1
 8014632:	8894      	ldrh	r4, [r2, #4]
 8014634:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014636:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801463a:	7a97      	ldrb	r7, [r2, #10]
 801463c:	4307      	orrs	r7, r0
 801463e:	4630      	mov	r0, r6
 8014640:	4798      	blx	r3
 8014642:	4438      	add	r0, r7
 8014644:	4480      	add	r8, r0
 8014646:	fa1f f888 	uxth.w	r8, r8
 801464a:	e7e5      	b.n	8014618 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801464c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801464c:	b508      	push	{r3, lr}
 801464e:	6803      	ldr	r3, [r0, #0]
 8014650:	68db      	ldr	r3, [r3, #12]
 8014652:	4798      	blx	r3
 8014654:	b128      	cbz	r0, 8014662 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8014656:	7b43      	ldrb	r3, [r0, #13]
 8014658:	7a80      	ldrb	r0, [r0, #10]
 801465a:	005b      	lsls	r3, r3, #1
 801465c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014660:	4318      	orrs	r0, r3
 8014662:	bd08      	pop	{r3, pc}

08014664 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014664:	b40e      	push	{r1, r2, r3}
 8014666:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014668:	b09e      	sub	sp, #120	; 0x78
 801466a:	4605      	mov	r5, r0
 801466c:	ab23      	add	r3, sp, #140	; 0x8c
 801466e:	a805      	add	r0, sp, #20
 8014670:	f853 4b04 	ldr.w	r4, [r3], #4
 8014674:	9303      	str	r3, [sp, #12]
 8014676:	f000 fd13 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 801467a:	682b      	ldr	r3, [r5, #0]
 801467c:	4628      	mov	r0, r5
 801467e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014680:	4798      	blx	r3
 8014682:	682b      	ldr	r3, [r5, #0]
 8014684:	4606      	mov	r6, r0
 8014686:	4628      	mov	r0, r5
 8014688:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801468a:	4798      	blx	r3
 801468c:	4633      	mov	r3, r6
 801468e:	4621      	mov	r1, r4
 8014690:	ae1e      	add	r6, sp, #120	; 0x78
 8014692:	2400      	movs	r4, #0
 8014694:	9000      	str	r0, [sp, #0]
 8014696:	9a03      	ldr	r2, [sp, #12]
 8014698:	a805      	add	r0, sp, #20
 801469a:	f000 fd5c 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801469e:	f846 4d68 	str.w	r4, [r6, #-104]!
 80146a2:	462a      	mov	r2, r5
 80146a4:	4633      	mov	r3, r6
 80146a6:	4621      	mov	r1, r4
 80146a8:	a805      	add	r0, sp, #20
 80146aa:	f001 f859 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80146ae:	b300      	cbz	r0, 80146f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 80146b0:	280a      	cmp	r0, #10
 80146b2:	d01a      	beq.n	80146ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80146b4:	9f04      	ldr	r7, [sp, #16]
 80146b6:	b1c7      	cbz	r7, 80146ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80146b8:	7b78      	ldrb	r0, [r7, #13]
 80146ba:	7a3b      	ldrb	r3, [r7, #8]
 80146bc:	00c1      	lsls	r1, r0, #3
 80146be:	88ea      	ldrh	r2, [r5, #6]
 80146c0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80146c4:	4319      	orrs	r1, r3
 80146c6:	0643      	lsls	r3, r0, #25
 80146c8:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80146cc:	bf48      	it	mi
 80146ce:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80146d2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80146d6:	bf48      	it	mi
 80146d8:	b219      	sxthmi	r1, r3
 80146da:	79fb      	ldrb	r3, [r7, #7]
 80146dc:	4303      	orrs	r3, r0
 80146de:	4413      	add	r3, r2
 80146e0:	1a5b      	subs	r3, r3, r1
 80146e2:	b21b      	sxth	r3, r3
 80146e4:	429c      	cmp	r4, r3
 80146e6:	bfb8      	it	lt
 80146e8:	461c      	movlt	r4, r3
 80146ea:	4633      	mov	r3, r6
 80146ec:	462a      	mov	r2, r5
 80146ee:	2100      	movs	r1, #0
 80146f0:	e7da      	b.n	80146a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80146f2:	b2a0      	uxth	r0, r4
 80146f4:	b01e      	add	sp, #120	; 0x78
 80146f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80146fa:	b003      	add	sp, #12
 80146fc:	4770      	bx	lr

080146fe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80146fe:	7a43      	ldrb	r3, [r0, #9]
 8014700:	8880      	ldrh	r0, [r0, #4]
 8014702:	4418      	add	r0, r3
 8014704:	b280      	uxth	r0, r0
 8014706:	4770      	bx	lr

08014708 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014708:	6803      	ldr	r3, [r0, #0]
 801470a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801470c:	4718      	bx	r3

0801470e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801470e:	b40e      	push	{r1, r2, r3}
 8014710:	b570      	push	{r4, r5, r6, lr}
 8014712:	b09d      	sub	sp, #116	; 0x74
 8014714:	4604      	mov	r4, r0
 8014716:	ab21      	add	r3, sp, #132	; 0x84
 8014718:	a803      	add	r0, sp, #12
 801471a:	f853 5b04 	ldr.w	r5, [r3], #4
 801471e:	9302      	str	r3, [sp, #8]
 8014720:	f000 fcbe 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 8014724:	6823      	ldr	r3, [r4, #0]
 8014726:	4620      	mov	r0, r4
 8014728:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801472a:	4798      	blx	r3
 801472c:	6823      	ldr	r3, [r4, #0]
 801472e:	4606      	mov	r6, r0
 8014730:	4620      	mov	r0, r4
 8014732:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014734:	2401      	movs	r4, #1
 8014736:	4798      	blx	r3
 8014738:	4633      	mov	r3, r6
 801473a:	9000      	str	r0, [sp, #0]
 801473c:	4629      	mov	r1, r5
 801473e:	9a02      	ldr	r2, [sp, #8]
 8014740:	a803      	add	r0, sp, #12
 8014742:	f000 fd08 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014746:	a803      	add	r0, sp, #12
 8014748:	f001 f8d6 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801474c:	b2a3      	uxth	r3, r4
 801474e:	b138      	cbz	r0, 8014760 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8014750:	280a      	cmp	r0, #10
 8014752:	a803      	add	r0, sp, #12
 8014754:	bf04      	itt	eq
 8014756:	3301      	addeq	r3, #1
 8014758:	b21c      	sxtheq	r4, r3
 801475a:	f001 f8cd 	bl	80158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801475e:	e7f5      	b.n	801474c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014760:	4618      	mov	r0, r3
 8014762:	b01d      	add	sp, #116	; 0x74
 8014764:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014768:	b003      	add	sp, #12
 801476a:	4770      	bx	lr

0801476c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801476c:	b40e      	push	{r1, r2, r3}
 801476e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014770:	b09e      	sub	sp, #120	; 0x78
 8014772:	4604      	mov	r4, r0
 8014774:	ab23      	add	r3, sp, #140	; 0x8c
 8014776:	a805      	add	r0, sp, #20
 8014778:	f853 5b04 	ldr.w	r5, [r3], #4
 801477c:	9303      	str	r3, [sp, #12]
 801477e:	f000 fc8f 	bl	80150a0 <_ZN8touchgfx12TextProviderC1Ev>
 8014782:	6823      	ldr	r3, [r4, #0]
 8014784:	4620      	mov	r0, r4
 8014786:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014788:	4798      	blx	r3
 801478a:	6823      	ldr	r3, [r4, #0]
 801478c:	4606      	mov	r6, r0
 801478e:	4620      	mov	r0, r4
 8014790:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014792:	4798      	blx	r3
 8014794:	4633      	mov	r3, r6
 8014796:	4629      	mov	r1, r5
 8014798:	9000      	str	r0, [sp, #0]
 801479a:	9a03      	ldr	r2, [sp, #12]
 801479c:	a805      	add	r0, sp, #20
 801479e:	f000 fcda 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80147a2:	ad1e      	add	r5, sp, #120	; 0x78
 80147a4:	2100      	movs	r1, #0
 80147a6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80147aa:	4622      	mov	r2, r4
 80147ac:	a805      	add	r0, sp, #20
 80147ae:	f845 1d68 	str.w	r1, [r5, #-104]!
 80147b2:	462b      	mov	r3, r5
 80147b4:	f000 ffd4 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80147b8:	b1d8      	cbz	r0, 80147f2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80147ba:	280a      	cmp	r0, #10
 80147bc:	d012      	beq.n	80147e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80147be:	9804      	ldr	r0, [sp, #16]
 80147c0:	b180      	cbz	r0, 80147e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80147c2:	7b47      	ldrb	r7, [r0, #13]
 80147c4:	88e2      	ldrh	r2, [r4, #6]
 80147c6:	00fb      	lsls	r3, r7, #3
 80147c8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80147cc:	7a03      	ldrb	r3, [r0, #8]
 80147ce:	430b      	orrs	r3, r1
 80147d0:	0679      	lsls	r1, r7, #25
 80147d2:	bf44      	itt	mi
 80147d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80147d8:	b21b      	sxthmi	r3, r3
 80147da:	1ad3      	subs	r3, r2, r3
 80147dc:	b21b      	sxth	r3, r3
 80147de:	429e      	cmp	r6, r3
 80147e0:	bfa8      	it	ge
 80147e2:	461e      	movge	r6, r3
 80147e4:	462b      	mov	r3, r5
 80147e6:	4622      	mov	r2, r4
 80147e8:	2100      	movs	r1, #0
 80147ea:	a805      	add	r0, sp, #20
 80147ec:	f000 ffb8 	bl	8015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80147f0:	e7e2      	b.n	80147b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80147f2:	4630      	mov	r0, r6
 80147f4:	b01e      	add	sp, #120	; 0x78
 80147f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80147fa:	b003      	add	sp, #12
 80147fc:	4770      	bx	lr

080147fe <_ZNK8touchgfx8Drawable10invalidateEv>:
 80147fe:	b513      	push	{r0, r1, r4, lr}
 8014800:	6803      	ldr	r3, [r0, #0]
 8014802:	2400      	movs	r4, #0
 8014804:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014808:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801480c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014810:	4669      	mov	r1, sp
 8014812:	691b      	ldr	r3, [r3, #16]
 8014814:	9400      	str	r4, [sp, #0]
 8014816:	f8ad 2006 	strh.w	r2, [sp, #6]
 801481a:	4798      	blx	r3
 801481c:	b002      	add	sp, #8
 801481e:	bd10      	pop	{r4, pc}

08014820 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8014820:	b538      	push	{r3, r4, r5, lr}
 8014822:	680b      	ldr	r3, [r1, #0]
 8014824:	460c      	mov	r4, r1
 8014826:	4605      	mov	r5, r0
 8014828:	68db      	ldr	r3, [r3, #12]
 801482a:	4798      	blx	r3
 801482c:	6823      	ldr	r3, [r4, #0]
 801482e:	4620      	mov	r0, r4
 8014830:	4629      	mov	r1, r5
 8014832:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014834:	4798      	blx	r3
 8014836:	4628      	mov	r0, r5
 8014838:	bd38      	pop	{r3, r4, r5, pc}

0801483a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801483a:	b410      	push	{r4}
 801483c:	880a      	ldrh	r2, [r1, #0]
 801483e:	8884      	ldrh	r4, [r0, #4]
 8014840:	4422      	add	r2, r4
 8014842:	800a      	strh	r2, [r1, #0]
 8014844:	884a      	ldrh	r2, [r1, #2]
 8014846:	88c4      	ldrh	r4, [r0, #6]
 8014848:	4422      	add	r2, r4
 801484a:	804a      	strh	r2, [r1, #2]
 801484c:	6940      	ldr	r0, [r0, #20]
 801484e:	b120      	cbz	r0, 801485a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8014850:	6803      	ldr	r3, [r0, #0]
 8014852:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014856:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014858:	4718      	bx	r3
 801485a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801485e:	4770      	bx	lr

08014860 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8014860:	b570      	push	{r4, r5, r6, lr}
 8014862:	8882      	ldrh	r2, [r0, #4]
 8014864:	460c      	mov	r4, r1
 8014866:	880b      	ldrh	r3, [r1, #0]
 8014868:	4605      	mov	r5, r0
 801486a:	4413      	add	r3, r2
 801486c:	800b      	strh	r3, [r1, #0]
 801486e:	884b      	ldrh	r3, [r1, #2]
 8014870:	88c2      	ldrh	r2, [r0, #6]
 8014872:	4413      	add	r3, r2
 8014874:	804b      	strh	r3, [r1, #2]
 8014876:	1d01      	adds	r1, r0, #4
 8014878:	4620      	mov	r0, r4
 801487a:	f7fb fd7b 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801487e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014882:	2b00      	cmp	r3, #0
 8014884:	dd0b      	ble.n	801489e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014886:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801488a:	2b00      	cmp	r3, #0
 801488c:	dd07      	ble.n	801489e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801488e:	6968      	ldr	r0, [r5, #20]
 8014890:	b128      	cbz	r0, 801489e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014892:	6803      	ldr	r3, [r0, #0]
 8014894:	4621      	mov	r1, r4
 8014896:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801489c:	4718      	bx	r3
 801489e:	bd70      	pop	{r4, r5, r6, pc}

080148a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80148a0:	b570      	push	{r4, r5, r6, lr}
 80148a2:	8882      	ldrh	r2, [r0, #4]
 80148a4:	460c      	mov	r4, r1
 80148a6:	880b      	ldrh	r3, [r1, #0]
 80148a8:	4605      	mov	r5, r0
 80148aa:	4413      	add	r3, r2
 80148ac:	800b      	strh	r3, [r1, #0]
 80148ae:	884b      	ldrh	r3, [r1, #2]
 80148b0:	88c2      	ldrh	r2, [r0, #6]
 80148b2:	4413      	add	r3, r2
 80148b4:	804b      	strh	r3, [r1, #2]
 80148b6:	1d01      	adds	r1, r0, #4
 80148b8:	4620      	mov	r0, r4
 80148ba:	f7fb fd5b 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 80148be:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80148c2:	2b00      	cmp	r3, #0
 80148c4:	dd19      	ble.n	80148fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80148c6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80148ca:	2b00      	cmp	r3, #0
 80148cc:	dd15      	ble.n	80148fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80148ce:	6968      	ldr	r0, [r5, #20]
 80148d0:	b128      	cbz	r0, 80148de <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80148d2:	6803      	ldr	r3, [r0, #0]
 80148d4:	4621      	mov	r1, r4
 80148d6:	691b      	ldr	r3, [r3, #16]
 80148d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80148dc:	4718      	bx	r3
 80148de:	4b07      	ldr	r3, [pc, #28]	; (80148fc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80148e0:	681b      	ldr	r3, [r3, #0]
 80148e2:	3304      	adds	r3, #4
 80148e4:	429d      	cmp	r5, r3
 80148e6:	d108      	bne.n	80148fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80148e8:	f7fe ff10 	bl	801370c <_ZN8touchgfx11Application11getInstanceEv>
 80148ec:	6803      	ldr	r3, [r0, #0]
 80148ee:	6821      	ldr	r1, [r4, #0]
 80148f0:	6862      	ldr	r2, [r4, #4]
 80148f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80148f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80148f8:	4718      	bx	r3
 80148fa:	bd70      	pop	{r4, r5, r6, pc}
 80148fc:	240016ec 	.word	0x240016ec

08014900 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8014900:	b570      	push	{r4, r5, r6, lr}
 8014902:	4604      	mov	r4, r0
 8014904:	4616      	mov	r6, r2
 8014906:	460d      	mov	r5, r1
 8014908:	b901      	cbnz	r1, 801490c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801490a:	b192      	cbz	r2, 8014932 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801490c:	6823      	ldr	r3, [r4, #0]
 801490e:	4620      	mov	r0, r4
 8014910:	699b      	ldr	r3, [r3, #24]
 8014912:	4798      	blx	r3
 8014914:	88e2      	ldrh	r2, [r4, #6]
 8014916:	88a1      	ldrh	r1, [r4, #4]
 8014918:	4620      	mov	r0, r4
 801491a:	4432      	add	r2, r6
 801491c:	4429      	add	r1, r5
 801491e:	b212      	sxth	r2, r2
 8014920:	b209      	sxth	r1, r1
 8014922:	f7f7 f996 	bl	800bc52 <_ZN8touchgfx8Drawable5setXYEss>
 8014926:	6823      	ldr	r3, [r4, #0]
 8014928:	4620      	mov	r0, r4
 801492a:	699b      	ldr	r3, [r3, #24]
 801492c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014930:	4718      	bx	r3
 8014932:	bd70      	pop	{r4, r5, r6, pc}

08014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8014934:	b510      	push	{r4, lr}
 8014936:	2300      	movs	r3, #0
 8014938:	4604      	mov	r4, r0
 801493a:	4608      	mov	r0, r1
 801493c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8014940:	8023      	strh	r3, [r4, #0]
 8014942:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014946:	8063      	strh	r3, [r4, #2]
 8014948:	6803      	ldr	r3, [r0, #0]
 801494a:	80a1      	strh	r1, [r4, #4]
 801494c:	4621      	mov	r1, r4
 801494e:	80e2      	strh	r2, [r4, #6]
 8014950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014952:	4798      	blx	r3
 8014954:	4620      	mov	r0, r4
 8014956:	bd10      	pop	{r4, pc}

08014958 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8014958:	b530      	push	{r4, r5, lr}
 801495a:	8083      	strh	r3, [r0, #4]
 801495c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8014960:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8014964:	80c3      	strh	r3, [r0, #6]
 8014966:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801496a:	6141      	str	r1, [r0, #20]
 801496c:	7203      	strb	r3, [r0, #8]
 801496e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014972:	8302      	strh	r2, [r0, #24]
 8014974:	7243      	strb	r3, [r0, #9]
 8014976:	7a83      	ldrb	r3, [r0, #10]
 8014978:	f365 0306 	bfi	r3, r5, #0, #7
 801497c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8014980:	f365 13c7 	bfi	r3, r5, #7, #1
 8014984:	7283      	strb	r3, [r0, #10]
 8014986:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801498a:	72c3      	strb	r3, [r0, #11]
 801498c:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8014990:	7303      	strb	r3, [r0, #12]
 8014992:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8014996:	81c3      	strh	r3, [r0, #14]
 8014998:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801499c:	8203      	strh	r3, [r0, #16]
 801499e:	4b01      	ldr	r3, [pc, #4]	; (80149a4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80149a0:	6003      	str	r3, [r0, #0]
 80149a2:	bd30      	pop	{r4, r5, pc}
 80149a4:	08026164 	.word	0x08026164

080149a8 <_ZNK8touchgfx9ConstFont4findEt>:
 80149a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80149aa:	6944      	ldr	r4, [r0, #20]
 80149ac:	b3bc      	cbz	r4, 8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149ae:	88a3      	ldrh	r3, [r4, #4]
 80149b0:	8b02      	ldrh	r2, [r0, #24]
 80149b2:	1acb      	subs	r3, r1, r3
 80149b4:	f102 32ff 	add.w	r2, r2, #4294967295
 80149b8:	d431      	bmi.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149ba:	4293      	cmp	r3, r2
 80149bc:	dd0c      	ble.n	80149d8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80149be:	230e      	movs	r3, #14
 80149c0:	fb03 4302 	mla	r3, r3, r2, r4
 80149c4:	889b      	ldrh	r3, [r3, #4]
 80149c6:	1a5b      	subs	r3, r3, r1
 80149c8:	1ad3      	subs	r3, r2, r3
 80149ca:	429a      	cmp	r2, r3
 80149cc:	db27      	blt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149ce:	2b00      	cmp	r3, #0
 80149d0:	bfbc      	itt	lt
 80149d2:	2302      	movlt	r3, #2
 80149d4:	fb92 f3f3 	sdivlt	r3, r2, r3
 80149d8:	2500      	movs	r5, #0
 80149da:	260e      	movs	r6, #14
 80149dc:	4295      	cmp	r5, r2
 80149de:	dc1e      	bgt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149e0:	fb06 4003 	mla	r0, r6, r3, r4
 80149e4:	8887      	ldrh	r7, [r0, #4]
 80149e6:	42b9      	cmp	r1, r7
 80149e8:	d01a      	beq.n	8014a20 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80149ea:	d20d      	bcs.n	8014a08 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80149ec:	1e5a      	subs	r2, r3, #1
 80149ee:	4295      	cmp	r5, r2
 80149f0:	dc15      	bgt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149f2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80149f6:	1a5b      	subs	r3, r3, r1
 80149f8:	1ad3      	subs	r3, r2, r3
 80149fa:	429a      	cmp	r2, r3
 80149fc:	db0f      	blt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80149fe:	429d      	cmp	r5, r3
 8014a00:	ddec      	ble.n	80149dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014a02:	1953      	adds	r3, r2, r5
 8014a04:	105b      	asrs	r3, r3, #1
 8014a06:	e7e9      	b.n	80149dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014a08:	1c5d      	adds	r5, r3, #1
 8014a0a:	42aa      	cmp	r2, r5
 8014a0c:	db07      	blt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014a0e:	8a43      	ldrh	r3, [r0, #18]
 8014a10:	1acb      	subs	r3, r1, r3
 8014a12:	442b      	add	r3, r5
 8014a14:	429d      	cmp	r5, r3
 8014a16:	dc02      	bgt.n	8014a1e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014a18:	429a      	cmp	r2, r3
 8014a1a:	dadf      	bge.n	80149dc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014a1c:	e7f1      	b.n	8014a02 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8014a1e:	2000      	movs	r0, #0
 8014a20:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014a22 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8014a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014a24:	4604      	mov	r4, r0
 8014a26:	4617      	mov	r7, r2
 8014a28:	461e      	mov	r6, r3
 8014a2a:	b911      	cbnz	r1, 8014a32 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8014a2c:	2500      	movs	r5, #0
 8014a2e:	4628      	mov	r0, r5
 8014a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a32:	290a      	cmp	r1, #10
 8014a34:	d0fa      	beq.n	8014a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014a36:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014a3a:	4291      	cmp	r1, r2
 8014a3c:	d0f6      	beq.n	8014a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014a3e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014a42:	4291      	cmp	r1, r2
 8014a44:	d0f2      	beq.n	8014a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014a46:	f7ff ffaf 	bl	80149a8 <_ZNK8touchgfx9ConstFont4findEt>
 8014a4a:	4605      	mov	r5, r0
 8014a4c:	b950      	cbnz	r0, 8014a64 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8014a4e:	6823      	ldr	r3, [r4, #0]
 8014a50:	4620      	mov	r0, r4
 8014a52:	691b      	ldr	r3, [r3, #16]
 8014a54:	4798      	blx	r3
 8014a56:	4601      	mov	r1, r0
 8014a58:	4620      	mov	r0, r4
 8014a5a:	f7ff ffa5 	bl	80149a8 <_ZNK8touchgfx9ConstFont4findEt>
 8014a5e:	4605      	mov	r5, r0
 8014a60:	2800      	cmp	r0, #0
 8014a62:	d0e3      	beq.n	8014a2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014a64:	6823      	ldr	r3, [r4, #0]
 8014a66:	4629      	mov	r1, r5
 8014a68:	4620      	mov	r0, r4
 8014a6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8014a6c:	4798      	blx	r3
 8014a6e:	6038      	str	r0, [r7, #0]
 8014a70:	6823      	ldr	r3, [r4, #0]
 8014a72:	4620      	mov	r0, r4
 8014a74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014a76:	4798      	blx	r3
 8014a78:	7030      	strb	r0, [r6, #0]
 8014a7a:	e7d8      	b.n	8014a2e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08014a7c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8014a7c:	2000      	movs	r0, #0
 8014a7e:	4770      	bx	lr

08014a80 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8014a80:	2001      	movs	r0, #1
 8014a82:	4770      	bx	lr

08014a84 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8014a84:	2002      	movs	r0, #2
 8014a86:	4770      	bx	lr

08014a88 <_ZN8touchgfx12GestureEventD1Ev>:
 8014a88:	4770      	bx	lr

08014a8a <_ZN8touchgfx9DragEventD1Ev>:
 8014a8a:	4770      	bx	lr

08014a8c <_ZN8touchgfx10ClickEventD1Ev>:
 8014a8c:	4770      	bx	lr

08014a8e <_ZN8touchgfx10ClickEventD0Ev>:
 8014a8e:	b510      	push	{r4, lr}
 8014a90:	4604      	mov	r4, r0
 8014a92:	210c      	movs	r1, #12
 8014a94:	f00e ff5d 	bl	8023952 <_ZdlPvj>
 8014a98:	4620      	mov	r0, r4
 8014a9a:	bd10      	pop	{r4, pc}

08014a9c <_ZN8touchgfx9DragEventD0Ev>:
 8014a9c:	b510      	push	{r4, lr}
 8014a9e:	4604      	mov	r4, r0
 8014aa0:	2110      	movs	r1, #16
 8014aa2:	f00e ff56 	bl	8023952 <_ZdlPvj>
 8014aa6:	4620      	mov	r0, r4
 8014aa8:	bd10      	pop	{r4, pc}

08014aaa <_ZN8touchgfx12GestureEventD0Ev>:
 8014aaa:	b510      	push	{r4, lr}
 8014aac:	4604      	mov	r4, r0
 8014aae:	210c      	movs	r1, #12
 8014ab0:	f00e ff4f 	bl	8023952 <_ZdlPvj>
 8014ab4:	4620      	mov	r0, r4
 8014ab6:	bd10      	pop	{r4, pc}

08014ab8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8014ab8:	b530      	push	{r4, r5, lr}
 8014aba:	460d      	mov	r5, r1
 8014abc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8014abe:	b087      	sub	sp, #28
 8014ac0:	4604      	mov	r4, r0
 8014ac2:	b301      	cbz	r1, 8014b06 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8014ac4:	a801      	add	r0, sp, #4
 8014ac6:	f7ff ff35 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014aca:	892a      	ldrh	r2, [r5, #8]
 8014acc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014ad0:	7928      	ldrb	r0, [r5, #4]
 8014ad2:	1ad2      	subs	r2, r2, r3
 8014ad4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014ad6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8014ada:	441a      	add	r2, r3
 8014adc:	896b      	ldrh	r3, [r5, #10]
 8014ade:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8014ae2:	f88d 0010 	strb.w	r0, [sp, #16]
 8014ae6:	1b5b      	subs	r3, r3, r5
 8014ae8:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8014aea:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8014aec:	442b      	add	r3, r5
 8014aee:	4d07      	ldr	r5, [pc, #28]	; (8014b0c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8014af0:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014af4:	a903      	add	r1, sp, #12
 8014af6:	9503      	str	r5, [sp, #12]
 8014af8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014afc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014b00:	6803      	ldr	r3, [r0, #0]
 8014b02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014b04:	4798      	blx	r3
 8014b06:	b007      	add	sp, #28
 8014b08:	bd30      	pop	{r4, r5, pc}
 8014b0a:	bf00      	nop
 8014b0c:	080261ec 	.word	0x080261ec

08014b10 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8014b10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b14:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014b16:	b08a      	sub	sp, #40	; 0x28
 8014b18:	4604      	mov	r4, r0
 8014b1a:	460d      	mov	r5, r1
 8014b1c:	b113      	cbz	r3, 8014b24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8014b1e:	790b      	ldrb	r3, [r1, #4]
 8014b20:	2b00      	cmp	r3, #0
 8014b22:	d044      	beq.n	8014bae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014b24:	f104 0804 	add.w	r8, r4, #4
 8014b28:	a803      	add	r0, sp, #12
 8014b2a:	4641      	mov	r1, r8
 8014b2c:	f7ff ff02 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014b30:	792b      	ldrb	r3, [r5, #4]
 8014b32:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8014b36:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8014b3a:	b983      	cbnz	r3, 8014b5e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8014b3c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8014b40:	892a      	ldrh	r2, [r5, #8]
 8014b42:	88e9      	ldrh	r1, [r5, #6]
 8014b44:	4640      	mov	r0, r8
 8014b46:	1b92      	subs	r2, r2, r6
 8014b48:	9301      	str	r3, [sp, #4]
 8014b4a:	1bc9      	subs	r1, r1, r7
 8014b4c:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8014b50:	b212      	sxth	r2, r2
 8014b52:	9300      	str	r3, [sp, #0]
 8014b54:	b209      	sxth	r1, r1
 8014b56:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8014b5a:	f7fb fb29 	bl	80101b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8014b5e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8014b60:	b329      	cbz	r1, 8014bae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014b62:	a805      	add	r0, sp, #20
 8014b64:	f7ff fee6 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014b68:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014b6c:	792b      	ldrb	r3, [r5, #4]
 8014b6e:	a907      	add	r1, sp, #28
 8014b70:	1abf      	subs	r7, r7, r2
 8014b72:	88ea      	ldrh	r2, [r5, #6]
 8014b74:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8014b76:	4417      	add	r7, r2
 8014b78:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8014b7a:	f88d 3020 	strb.w	r3, [sp, #32]
 8014b7e:	4417      	add	r7, r2
 8014b80:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8014b84:	1ab6      	subs	r6, r6, r2
 8014b86:	892a      	ldrh	r2, [r5, #8]
 8014b88:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8014b8c:	4416      	add	r6, r2
 8014b8e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8014b90:	4416      	add	r6, r2
 8014b92:	4a08      	ldr	r2, [pc, #32]	; (8014bb4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8014b94:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8014b98:	2600      	movs	r6, #0
 8014b9a:	9207      	str	r2, [sp, #28]
 8014b9c:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8014ba0:	6803      	ldr	r3, [r0, #0]
 8014ba2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014ba4:	4798      	blx	r3
 8014ba6:	792b      	ldrb	r3, [r5, #4]
 8014ba8:	b10b      	cbz	r3, 8014bae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8014baa:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8014bae:	b00a      	add	sp, #40	; 0x28
 8014bb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014bb4:	080261c4 	.word	0x080261c4

08014bb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8014bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bbc:	460c      	mov	r4, r1
 8014bbe:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8014bc0:	b088      	sub	sp, #32
 8014bc2:	4605      	mov	r5, r0
 8014bc4:	2900      	cmp	r1, #0
 8014bc6:	d06d      	beq.n	8014ca4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8014bc8:	4668      	mov	r0, sp
 8014bca:	f7ff feb3 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014bce:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8014bd0:	88e3      	ldrh	r3, [r4, #6]
 8014bd2:	f9bd 8000 	ldrsh.w	r8, [sp]
 8014bd6:	440b      	add	r3, r1
 8014bd8:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8014bdc:	b21b      	sxth	r3, r3
 8014bde:	4543      	cmp	r3, r8
 8014be0:	db31      	blt.n	8014c46 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014be2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8014be6:	44c4      	add	ip, r8
 8014be8:	fa0f fc8c 	sxth.w	ip, ip
 8014bec:	4563      	cmp	r3, ip
 8014bee:	da2a      	bge.n	8014c46 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014bf0:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8014bf2:	8926      	ldrh	r6, [r4, #8]
 8014bf4:	4416      	add	r6, r2
 8014bf6:	b236      	sxth	r6, r6
 8014bf8:	42be      	cmp	r6, r7
 8014bfa:	db24      	blt.n	8014c46 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014bfc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014c00:	4438      	add	r0, r7
 8014c02:	b200      	sxth	r0, r0
 8014c04:	4286      	cmp	r6, r0
 8014c06:	da1e      	bge.n	8014c46 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014c08:	8963      	ldrh	r3, [r4, #10]
 8014c0a:	4419      	add	r1, r3
 8014c0c:	b209      	sxth	r1, r1
 8014c0e:	4541      	cmp	r1, r8
 8014c10:	db08      	blt.n	8014c24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014c12:	4561      	cmp	r1, ip
 8014c14:	da06      	bge.n	8014c24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014c16:	89a3      	ldrh	r3, [r4, #12]
 8014c18:	441a      	add	r2, r3
 8014c1a:	b212      	sxth	r2, r2
 8014c1c:	42ba      	cmp	r2, r7
 8014c1e:	db01      	blt.n	8014c24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014c20:	4282      	cmp	r2, r0
 8014c22:	db10      	blt.n	8014c46 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014c24:	4b21      	ldr	r3, [pc, #132]	; (8014cac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8014c26:	a904      	add	r1, sp, #16
 8014c28:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8014c2a:	9304      	str	r3, [sp, #16]
 8014c2c:	2302      	movs	r3, #2
 8014c2e:	f88d 3014 	strb.w	r3, [sp, #20]
 8014c32:	2300      	movs	r3, #0
 8014c34:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014c38:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014c3c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014c40:	6803      	ldr	r3, [r0, #0]
 8014c42:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014c44:	4798      	blx	r3
 8014c46:	1d29      	adds	r1, r5, #4
 8014c48:	a802      	add	r0, sp, #8
 8014c4a:	f7ff fe73 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014c4e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014c52:	88e0      	ldrh	r0, [r4, #6]
 8014c54:	eba3 0808 	sub.w	r8, r3, r8
 8014c58:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014c5c:	7921      	ldrb	r1, [r4, #4]
 8014c5e:	fa1f f888 	uxth.w	r8, r8
 8014c62:	1bdf      	subs	r7, r3, r7
 8014c64:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8014c68:	b2bb      	uxth	r3, r7
 8014c6a:	4440      	add	r0, r8
 8014c6c:	8922      	ldrh	r2, [r4, #8]
 8014c6e:	8967      	ldrh	r7, [r4, #10]
 8014c70:	4460      	add	r0, ip
 8014c72:	89a4      	ldrh	r4, [r4, #12]
 8014c74:	441a      	add	r2, r3
 8014c76:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8014c78:	44b8      	add	r8, r7
 8014c7a:	4423      	add	r3, r4
 8014c7c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014c80:	4432      	add	r2, r6
 8014c82:	44e0      	add	r8, ip
 8014c84:	4433      	add	r3, r6
 8014c86:	4c0a      	ldr	r4, [pc, #40]	; (8014cb0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8014c88:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8014c8a:	f88d 1014 	strb.w	r1, [sp, #20]
 8014c8e:	a904      	add	r1, sp, #16
 8014c90:	9404      	str	r4, [sp, #16]
 8014c92:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014c96:	f8ad 801a 	strh.w	r8, [sp, #26]
 8014c9a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014c9e:	6803      	ldr	r3, [r0, #0]
 8014ca0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014ca2:	4798      	blx	r3
 8014ca4:	b008      	add	sp, #32
 8014ca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014caa:	bf00      	nop
 8014cac:	080261c4 	.word	0x080261c4
 8014cb0:	080261d8 	.word	0x080261d8

08014cb4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8014cb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014cb6:	4604      	mov	r4, r0
 8014cb8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8014cbc:	3201      	adds	r2, #1
 8014cbe:	d112      	bne.n	8014ce6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8014cc0:	2500      	movs	r5, #0
 8014cc2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014cc6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014cca:	6803      	ldr	r3, [r0, #0]
 8014ccc:	9500      	str	r5, [sp, #0]
 8014cce:	466d      	mov	r5, sp
 8014cd0:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014cd4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014cd8:	4629      	mov	r1, r5
 8014cda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014cdc:	4798      	blx	r3
 8014cde:	e895 0003 	ldmia.w	r5, {r0, r1}
 8014ce2:	e884 0003 	stmia.w	r4, {r0, r1}
 8014ce6:	4620      	mov	r0, r4
 8014ce8:	b003      	add	sp, #12
 8014cea:	bd30      	pop	{r4, r5, pc}

08014cec <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8014cec:	b513      	push	{r0, r1, r4, lr}
 8014cee:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8014cf2:	4604      	mov	r4, r0
 8014cf4:	3301      	adds	r3, #1
 8014cf6:	d109      	bne.n	8014d0c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8014cf8:	4601      	mov	r1, r0
 8014cfa:	4668      	mov	r0, sp
 8014cfc:	f7ff fe1a 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014d00:	f8bd 3000 	ldrh.w	r3, [sp]
 8014d04:	8423      	strh	r3, [r4, #32]
 8014d06:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014d0a:	8463      	strh	r3, [r4, #34]	; 0x22
 8014d0c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8014d10:	b002      	add	sp, #8
 8014d12:	bd10      	pop	{r4, pc}

08014d14 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8014d14:	b513      	push	{r0, r1, r4, lr}
 8014d16:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8014d1a:	4604      	mov	r4, r0
 8014d1c:	3301      	adds	r3, #1
 8014d1e:	d109      	bne.n	8014d34 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8014d20:	4601      	mov	r1, r0
 8014d22:	4668      	mov	r0, sp
 8014d24:	f7ff fe06 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014d28:	f8bd 3000 	ldrh.w	r3, [sp]
 8014d2c:	8423      	strh	r3, [r4, #32]
 8014d2e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014d32:	8463      	strh	r3, [r4, #34]	; 0x22
 8014d34:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8014d38:	b002      	add	sp, #8
 8014d3a:	bd10      	pop	{r4, pc}

08014d3c <_ZN8touchgfx6ScreenC1Ev>:
 8014d3c:	b570      	push	{r4, r5, r6, lr}
 8014d3e:	4b17      	ldr	r3, [pc, #92]	; (8014d9c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8014d40:	4605      	mov	r5, r0
 8014d42:	4a17      	ldr	r2, [pc, #92]	; (8014da0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8014d44:	2101      	movs	r1, #1
 8014d46:	f845 3b04 	str.w	r3, [r5], #4
 8014d4a:	2300      	movs	r3, #0
 8014d4c:	6042      	str	r2, [r0, #4]
 8014d4e:	4604      	mov	r4, r0
 8014d50:	8103      	strh	r3, [r0, #8]
 8014d52:	8143      	strh	r3, [r0, #10]
 8014d54:	8183      	strh	r3, [r0, #12]
 8014d56:	81c3      	strh	r3, [r0, #14]
 8014d58:	8203      	strh	r3, [r0, #16]
 8014d5a:	8243      	strh	r3, [r0, #18]
 8014d5c:	8283      	strh	r3, [r0, #20]
 8014d5e:	82c3      	strh	r3, [r0, #22]
 8014d60:	6203      	str	r3, [r0, #32]
 8014d62:	8483      	strh	r3, [r0, #36]	; 0x24
 8014d64:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014d66:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8014d6a:	6343      	str	r3, [r0, #52]	; 0x34
 8014d6c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8014d70:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8014d74:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8014d78:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8014d7c:	4b09      	ldr	r3, [pc, #36]	; (8014da4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8014d7e:	4628      	mov	r0, r5
 8014d80:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014d84:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8014d86:	4a08      	ldr	r2, [pc, #32]	; (8014da8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8014d88:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014d8c:	4798      	blx	r3
 8014d8e:	6863      	ldr	r3, [r4, #4]
 8014d90:	4628      	mov	r0, r5
 8014d92:	4631      	mov	r1, r6
 8014d94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014d96:	4798      	blx	r3
 8014d98:	4620      	mov	r0, r4
 8014d9a:	bd70      	pop	{r4, r5, r6, pc}
 8014d9c:	08026200 	.word	0x08026200
 8014da0:	08025c8c 	.word	0x08025c8c
 8014da4:	240016a6 	.word	0x240016a6
 8014da8:	240016a4 	.word	0x240016a4

08014dac <_ZN8touchgfx6Screen4drawEv>:
 8014dac:	4b09      	ldr	r3, [pc, #36]	; (8014dd4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8014dae:	b507      	push	{r0, r1, r2, lr}
 8014db0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014db4:	2100      	movs	r1, #0
 8014db6:	4b08      	ldr	r3, [pc, #32]	; (8014dd8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8014db8:	9100      	str	r1, [sp, #0]
 8014dba:	4669      	mov	r1, sp
 8014dbc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014dc0:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014dc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014dc8:	6803      	ldr	r3, [r0, #0]
 8014dca:	689b      	ldr	r3, [r3, #8]
 8014dcc:	4798      	blx	r3
 8014dce:	b003      	add	sp, #12
 8014dd0:	f85d fb04 	ldr.w	pc, [sp], #4
 8014dd4:	240016a4 	.word	0x240016a4
 8014dd8:	240016a6 	.word	0x240016a6

08014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8014ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8014de4:	b089      	sub	sp, #36	; 0x24
 8014de6:	4680      	mov	r8, r0
 8014de8:	460c      	mov	r4, r1
 8014dea:	2b00      	cmp	r3, #0
 8014dec:	4615      	mov	r5, r2
 8014dee:	dd0e      	ble.n	8014e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014df0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8014df4:	2b00      	cmp	r3, #0
 8014df6:	dd0a      	ble.n	8014e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014df8:	4628      	mov	r0, r5
 8014dfa:	f7ff ff5b 	bl	8014cb4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014dfe:	4621      	mov	r1, r4
 8014e00:	f7fe fba6 	bl	8013550 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014e04:	69eb      	ldr	r3, [r5, #28]
 8014e06:	b928      	cbnz	r0, 8014e14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8014e08:	461d      	mov	r5, r3
 8014e0a:	2b00      	cmp	r3, #0
 8014e0c:	d1f4      	bne.n	8014df8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8014e0e:	b009      	add	sp, #36	; 0x24
 8014e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e14:	ae04      	add	r6, sp, #16
 8014e16:	2b00      	cmp	r3, #0
 8014e18:	f000 80b5 	beq.w	8014f86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014e1c:	682b      	ldr	r3, [r5, #0]
 8014e1e:	4629      	mov	r1, r5
 8014e20:	a802      	add	r0, sp, #8
 8014e22:	68db      	ldr	r3, [r3, #12]
 8014e24:	4798      	blx	r3
 8014e26:	4628      	mov	r0, r5
 8014e28:	f7ff ff60 	bl	8014cec <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8014e2c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8014e30:	4407      	add	r7, r0
 8014e32:	4628      	mov	r0, r5
 8014e34:	f7ff ff6e 	bl	8014d14 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8014e38:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014e3c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014e40:	b23f      	sxth	r7, r7
 8014e42:	4418      	add	r0, r3
 8014e44:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8014e48:	4621      	mov	r1, r4
 8014e4a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014e4e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014e52:	4630      	mov	r0, r6
 8014e54:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014e58:	f8ad 7010 	strh.w	r7, [sp, #16]
 8014e5c:	f7fb fa8a 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8014e60:	4628      	mov	r0, r5
 8014e62:	f7ff ff27 	bl	8014cb4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014e66:	ab06      	add	r3, sp, #24
 8014e68:	4602      	mov	r2, r0
 8014e6a:	e896 0003 	ldmia.w	r6, {r0, r1}
 8014e6e:	e883 0003 	stmia.w	r3, {r0, r1}
 8014e72:	4611      	mov	r1, r2
 8014e74:	4618      	mov	r0, r3
 8014e76:	f7fb fa7d 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8014e7a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014e7e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014e82:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8014e86:	4299      	cmp	r1, r3
 8014e88:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8014e8c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8014e90:	d10b      	bne.n	8014eaa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014e92:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014e96:	4552      	cmp	r2, sl
 8014e98:	d107      	bne.n	8014eaa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014e9a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014e9e:	455a      	cmp	r2, fp
 8014ea0:	d103      	bne.n	8014eaa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014ea2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8014ea6:	454a      	cmp	r2, r9
 8014ea8:	d06d      	beq.n	8014f86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014eaa:	f1bb 0f00 	cmp.w	fp, #0
 8014eae:	dd65      	ble.n	8014f7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8014eb0:	f1b9 0f00 	cmp.w	r9, #0
 8014eb4:	dd62      	ble.n	8014f7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8014eb6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014eba:	fa1f f08a 	uxth.w	r0, sl
 8014ebe:	4552      	cmp	r2, sl
 8014ec0:	9000      	str	r0, [sp, #0]
 8014ec2:	da12      	bge.n	8014eea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8014ec4:	9301      	str	r3, [sp, #4]
 8014ec6:	9b00      	ldr	r3, [sp, #0]
 8014ec8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014ecc:	f8ad 2012 	strh.w	r2, [sp, #18]
 8014ed0:	1a9a      	subs	r2, r3, r2
 8014ed2:	f8ad 1010 	strh.w	r1, [sp, #16]
 8014ed6:	4631      	mov	r1, r6
 8014ed8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014edc:	4640      	mov	r0, r8
 8014ede:	f8ad 2016 	strh.w	r2, [sp, #22]
 8014ee2:	69ea      	ldr	r2, [r5, #28]
 8014ee4:	f7ff ff7a 	bl	8014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014ee8:	9b01      	ldr	r3, [sp, #4]
 8014eea:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014eee:	b29f      	uxth	r7, r3
 8014ef0:	429a      	cmp	r2, r3
 8014ef2:	da0d      	bge.n	8014f10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8014ef4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014ef8:	1aba      	subs	r2, r7, r2
 8014efa:	f8ad a012 	strh.w	sl, [sp, #18]
 8014efe:	4631      	mov	r1, r6
 8014f00:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014f04:	4640      	mov	r0, r8
 8014f06:	f8ad 9016 	strh.w	r9, [sp, #22]
 8014f0a:	69ea      	ldr	r2, [r5, #28]
 8014f0c:	f7ff ff66 	bl	8014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014f10:	8822      	ldrh	r2, [r4, #0]
 8014f12:	445f      	add	r7, fp
 8014f14:	88a3      	ldrh	r3, [r4, #4]
 8014f16:	b2bf      	uxth	r7, r7
 8014f18:	4413      	add	r3, r2
 8014f1a:	b23a      	sxth	r2, r7
 8014f1c:	b29b      	uxth	r3, r3
 8014f1e:	b219      	sxth	r1, r3
 8014f20:	4291      	cmp	r1, r2
 8014f22:	dd0d      	ble.n	8014f40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8014f24:	1bdb      	subs	r3, r3, r7
 8014f26:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014f2a:	f8ad a012 	strh.w	sl, [sp, #18]
 8014f2e:	4631      	mov	r1, r6
 8014f30:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014f34:	4640      	mov	r0, r8
 8014f36:	f8ad 9016 	strh.w	r9, [sp, #22]
 8014f3a:	69ea      	ldr	r2, [r5, #28]
 8014f3c:	f7ff ff4e 	bl	8014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014f40:	88e2      	ldrh	r2, [r4, #6]
 8014f42:	8863      	ldrh	r3, [r4, #2]
 8014f44:	4413      	add	r3, r2
 8014f46:	9a00      	ldr	r2, [sp, #0]
 8014f48:	444a      	add	r2, r9
 8014f4a:	b29b      	uxth	r3, r3
 8014f4c:	fa1f f982 	uxth.w	r9, r2
 8014f50:	b219      	sxth	r1, r3
 8014f52:	fa0f f289 	sxth.w	r2, r9
 8014f56:	428a      	cmp	r2, r1
 8014f58:	da15      	bge.n	8014f86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014f5a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014f5e:	eba3 0309 	sub.w	r3, r3, r9
 8014f62:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014f66:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014f6a:	4631      	mov	r1, r6
 8014f6c:	f8ad 0010 	strh.w	r0, [sp, #16]
 8014f70:	f8ad 2012 	strh.w	r2, [sp, #18]
 8014f74:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014f78:	69ea      	ldr	r2, [r5, #28]
 8014f7a:	e001      	b.n	8014f80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8014f7c:	69ea      	ldr	r2, [r5, #28]
 8014f7e:	4621      	mov	r1, r4
 8014f80:	4640      	mov	r0, r8
 8014f82:	f7ff ff2b 	bl	8014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014f86:	4628      	mov	r0, r5
 8014f88:	f7ff fe94 	bl	8014cb4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014f8c:	6861      	ldr	r1, [r4, #4]
 8014f8e:	4602      	mov	r2, r0
 8014f90:	4633      	mov	r3, r6
 8014f92:	6820      	ldr	r0, [r4, #0]
 8014f94:	c303      	stmia	r3!, {r0, r1}
 8014f96:	4611      	mov	r1, r2
 8014f98:	4630      	mov	r0, r6
 8014f9a:	f7fb f9eb 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8014f9e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014fa2:	2b00      	cmp	r3, #0
 8014fa4:	f77f af33 	ble.w	8014e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014fa8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014fac:	2b00      	cmp	r3, #0
 8014fae:	f77f af2e 	ble.w	8014e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014fb2:	4628      	mov	r0, r5
 8014fb4:	f7ff fe9a 	bl	8014cec <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8014fb8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8014fbc:	1a18      	subs	r0, r3, r0
 8014fbe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8014fc2:	4628      	mov	r0, r5
 8014fc4:	f7ff fea6 	bl	8014d14 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8014fc8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014fcc:	4631      	mov	r1, r6
 8014fce:	1a18      	subs	r0, r3, r0
 8014fd0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014fd4:	4628      	mov	r0, r5
 8014fd6:	682b      	ldr	r3, [r5, #0]
 8014fd8:	689b      	ldr	r3, [r3, #8]
 8014fda:	4798      	blx	r3
 8014fdc:	e717      	b.n	8014e0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08014fde <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8014fde:	b570      	push	{r4, r5, r6, lr}
 8014fe0:	1d06      	adds	r6, r0, #4
 8014fe2:	b086      	sub	sp, #24
 8014fe4:	460c      	mov	r4, r1
 8014fe6:	2300      	movs	r3, #0
 8014fe8:	4631      	mov	r1, r6
 8014fea:	4605      	mov	r5, r0
 8014fec:	a802      	add	r0, sp, #8
 8014fee:	9301      	str	r3, [sp, #4]
 8014ff0:	f7ff fca0 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014ff4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014ff8:	8822      	ldrh	r2, [r4, #0]
 8014ffa:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8014ffe:	1ad2      	subs	r2, r2, r3
 8015000:	8863      	ldrh	r3, [r4, #2]
 8015002:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015006:	1a5b      	subs	r3, r3, r1
 8015008:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801500c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015010:	aa01      	add	r2, sp, #4
 8015012:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015016:	4630      	mov	r0, r6
 8015018:	f8ad 1016 	strh.w	r1, [sp, #22]
 801501c:	a904      	add	r1, sp, #16
 801501e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015022:	f7fb fa7f 	bl	8010524 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8015026:	9a01      	ldr	r2, [sp, #4]
 8015028:	b11a      	cbz	r2, 8015032 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801502a:	4621      	mov	r1, r4
 801502c:	4628      	mov	r0, r5
 801502e:	f7ff fed5 	bl	8014ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015032:	b006      	add	sp, #24
 8015034:	bd70      	pop	{r4, r5, r6, pc}

08015036 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8015036:	4602      	mov	r2, r0
 8015038:	b530      	push	{r4, r5, lr}
 801503a:	4604      	mov	r4, r0
 801503c:	b085      	sub	sp, #20
 801503e:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015042:	460d      	mov	r5, r1
 8015044:	466b      	mov	r3, sp
 8015046:	6851      	ldr	r1, [r2, #4]
 8015048:	c303      	stmia	r3!, {r0, r1}
 801504a:	4629      	mov	r1, r5
 801504c:	4668      	mov	r0, sp
 801504e:	f7fb f991 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 8015052:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015056:	b12b      	cbz	r3, 8015064 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015058:	4669      	mov	r1, sp
 801505a:	4620      	mov	r0, r4
 801505c:	f7ff ffbf 	bl	8014fde <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8015060:	b005      	add	sp, #20
 8015062:	bd30      	pop	{r4, r5, pc}
 8015064:	3404      	adds	r4, #4
 8015066:	a802      	add	r0, sp, #8
 8015068:	4621      	mov	r1, r4
 801506a:	f7ff fc63 	bl	8014934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801506e:	f8bd 3000 	ldrh.w	r3, [sp]
 8015072:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8015076:	4669      	mov	r1, sp
 8015078:	4620      	mov	r0, r4
 801507a:	1a9b      	subs	r3, r3, r2
 801507c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015080:	f8ad 3000 	strh.w	r3, [sp]
 8015084:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015088:	1a9b      	subs	r3, r3, r2
 801508a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801508e:	f7fb fa10 	bl	80104b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015092:	e7e5      	b.n	8015060 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015094 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015094:	460b      	mov	r3, r1
 8015096:	680a      	ldr	r2, [r1, #0]
 8015098:	1d01      	adds	r1, r0, #4
 801509a:	6992      	ldr	r2, [r2, #24]
 801509c:	4618      	mov	r0, r3
 801509e:	4710      	bx	r2

080150a0 <_ZN8touchgfx12TextProviderC1Ev>:
 80150a0:	b538      	push	{r3, r4, r5, lr}
 80150a2:	2500      	movs	r5, #0
 80150a4:	2302      	movs	r3, #2
 80150a6:	4604      	mov	r4, r0
 80150a8:	220e      	movs	r2, #14
 80150aa:	7403      	strb	r3, [r0, #16]
 80150ac:	4629      	mov	r1, r5
 80150ae:	6145      	str	r5, [r0, #20]
 80150b0:	7605      	strb	r5, [r0, #24]
 80150b2:	83c5      	strh	r5, [r0, #30]
 80150b4:	8405      	strh	r5, [r0, #32]
 80150b6:	86c5      	strh	r5, [r0, #54]	; 0x36
 80150b8:	8705      	strh	r5, [r0, #56]	; 0x38
 80150ba:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80150bc:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80150c0:	e9c0 5500 	strd	r5, r5, [r0]
 80150c4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80150c8:	304c      	adds	r0, #76	; 0x4c
 80150ca:	f00e fef9 	bl	8023ec0 <memset>
 80150ce:	2301      	movs	r3, #1
 80150d0:	4620      	mov	r0, r4
 80150d2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80150d6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80150da:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80150de:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80150e2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80150e6:	f7f7 feb7 	bl	800ce58 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80150ea:	4620      	mov	r0, r4
 80150ec:	bd38      	pop	{r3, r4, r5, pc}

080150ee <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80150ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80150f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80150f4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80150f6:	fab0 f080 	clz	r0, r0
 80150fa:	0940      	lsrs	r0, r0, #5
 80150fc:	4770      	bx	lr

080150fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80150fe:	b530      	push	{r4, r5, lr}
 8015100:	2500      	movs	r5, #0
 8015102:	2401      	movs	r4, #1
 8015104:	6843      	ldr	r3, [r0, #4]
 8015106:	b913      	cbnz	r3, 801510e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015108:	6803      	ldr	r3, [r0, #0]
 801510a:	b313      	cbz	r3, 8015152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801510c:	6043      	str	r3, [r0, #4]
 801510e:	7e03      	ldrb	r3, [r0, #24]
 8015110:	b143      	cbz	r3, 8015124 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015112:	6943      	ldr	r3, [r0, #20]
 8015114:	b12b      	cbz	r3, 8015122 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015116:	881a      	ldrh	r2, [r3, #0]
 8015118:	b11a      	cbz	r2, 8015122 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801511a:	1c9a      	adds	r2, r3, #2
 801511c:	6142      	str	r2, [r0, #20]
 801511e:	8818      	ldrh	r0, [r3, #0]
 8015120:	bd30      	pop	{r4, r5, pc}
 8015122:	7605      	strb	r5, [r0, #24]
 8015124:	6843      	ldr	r3, [r0, #4]
 8015126:	8819      	ldrh	r1, [r3, #0]
 8015128:	b199      	cbz	r1, 8015152 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801512a:	1c9a      	adds	r2, r3, #2
 801512c:	2902      	cmp	r1, #2
 801512e:	6042      	str	r2, [r0, #4]
 8015130:	d1f5      	bne.n	801511e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015132:	7c03      	ldrb	r3, [r0, #16]
 8015134:	2b01      	cmp	r3, #1
 8015136:	d8e5      	bhi.n	8015104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015138:	1c5a      	adds	r2, r3, #1
 801513a:	3302      	adds	r3, #2
 801513c:	7402      	strb	r2, [r0, #16]
 801513e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015142:	6143      	str	r3, [r0, #20]
 8015144:	2b00      	cmp	r3, #0
 8015146:	d0dd      	beq.n	8015104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015148:	881b      	ldrh	r3, [r3, #0]
 801514a:	2b00      	cmp	r3, #0
 801514c:	d0da      	beq.n	8015104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801514e:	7604      	strb	r4, [r0, #24]
 8015150:	e7d8      	b.n	8015104 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015152:	2000      	movs	r0, #0
 8015154:	e7e4      	b.n	8015120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015156:	6001      	str	r1, [r0, #0]
 8015158:	2100      	movs	r1, #0
 801515a:	b430      	push	{r4, r5}
 801515c:	6041      	str	r1, [r0, #4]
 801515e:	6815      	ldr	r5, [r2, #0]
 8015160:	6085      	str	r5, [r0, #8]
 8015162:	6852      	ldr	r2, [r2, #4]
 8015164:	6443      	str	r3, [r0, #68]	; 0x44
 8015166:	9b02      	ldr	r3, [sp, #8]
 8015168:	60c2      	str	r2, [r0, #12]
 801516a:	7401      	strb	r1, [r0, #16]
 801516c:	6141      	str	r1, [r0, #20]
 801516e:	7601      	strb	r1, [r0, #24]
 8015170:	8701      	strh	r1, [r0, #56]	; 0x38
 8015172:	8401      	strh	r1, [r0, #32]
 8015174:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8015178:	6483      	str	r3, [r0, #72]	; 0x48
 801517a:	bc30      	pop	{r4, r5}
 801517c:	f7f7 be6c 	b.w	800ce58 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015180 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8015180:	b408      	push	{r3}
 8015182:	b510      	push	{r4, lr}
 8015184:	b085      	sub	sp, #20
 8015186:	ac07      	add	r4, sp, #28
 8015188:	f854 3b04 	ldr.w	r3, [r4], #4
 801518c:	9300      	str	r3, [sp, #0]
 801518e:	4613      	mov	r3, r2
 8015190:	4622      	mov	r2, r4
 8015192:	9403      	str	r4, [sp, #12]
 8015194:	f7ff ffdf 	bl	8015156 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015198:	b005      	add	sp, #20
 801519a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801519e:	b001      	add	sp, #4
 80151a0:	4770      	bx	lr

080151a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80151a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80151a4:	4605      	mov	r5, r0
 80151a6:	4608      	mov	r0, r1
 80151a8:	b1f1      	cbz	r1, 80151e8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 80151aa:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80151ae:	460b      	mov	r3, r1
 80151b0:	f101 0708 	add.w	r7, r1, #8
 80151b4:	4622      	mov	r2, r4
 80151b6:	6818      	ldr	r0, [r3, #0]
 80151b8:	3308      	adds	r3, #8
 80151ba:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80151be:	4626      	mov	r6, r4
 80151c0:	42bb      	cmp	r3, r7
 80151c2:	c603      	stmia	r6!, {r0, r1}
 80151c4:	4634      	mov	r4, r6
 80151c6:	d1f6      	bne.n	80151b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80151c8:	6818      	ldr	r0, [r3, #0]
 80151ca:	6030      	str	r0, [r6, #0]
 80151cc:	4610      	mov	r0, r2
 80151ce:	889b      	ldrh	r3, [r3, #4]
 80151d0:	80b3      	strh	r3, [r6, #4]
 80151d2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80151d6:	015b      	lsls	r3, r3, #5
 80151d8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80151dc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80151e0:	430b      	orrs	r3, r1
 80151e2:	425b      	negs	r3, r3
 80151e4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80151e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080151ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80151ea:	b538      	push	{r3, r4, r5, lr}
 80151ec:	460c      	mov	r4, r1
 80151ee:	6811      	ldr	r1, [r2, #0]
 80151f0:	4610      	mov	r0, r2
 80151f2:	68cd      	ldr	r5, [r1, #12]
 80151f4:	4619      	mov	r1, r3
 80151f6:	47a8      	blx	r5
 80151f8:	2800      	cmp	r0, #0
 80151fa:	bf08      	it	eq
 80151fc:	4620      	moveq	r0, r4
 80151fe:	bd38      	pop	{r3, r4, r5, pc}

08015200 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015202:	4604      	mov	r4, r0
 8015204:	4615      	mov	r5, r2
 8015206:	4608      	mov	r0, r1
 8015208:	b93a      	cbnz	r2, 801521a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801520a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801520e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8015212:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8015216:	4628      	mov	r0, r5
 8015218:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801521a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801521e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8015222:	8893      	ldrh	r3, [r2, #4]
 8015224:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8015228:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801522c:	79ee      	ldrb	r6, [r5, #7]
 801522e:	4316      	orrs	r6, r2
 8015230:	19da      	adds	r2, r3, r7
 8015232:	b291      	uxth	r1, r2
 8015234:	b2b7      	uxth	r7, r6
 8015236:	291d      	cmp	r1, #29
 8015238:	d87b      	bhi.n	8015332 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 801523a:	2201      	movs	r2, #1
 801523c:	10f6      	asrs	r6, r6, #3
 801523e:	408a      	lsls	r2, r1
 8015240:	4974      	ldr	r1, [pc, #464]	; (8015414 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8015242:	420a      	tst	r2, r1
 8015244:	d12e      	bne.n	80152a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015246:	f412 7f60 	tst.w	r2, #896	; 0x380
 801524a:	d072      	beq.n	8015332 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 801524c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8015250:	462b      	mov	r3, r5
 8015252:	f105 0e08 	add.w	lr, r5, #8
 8015256:	4615      	mov	r5, r2
 8015258:	6818      	ldr	r0, [r3, #0]
 801525a:	3308      	adds	r3, #8
 801525c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8015260:	4694      	mov	ip, r2
 8015262:	4573      	cmp	r3, lr
 8015264:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015268:	4662      	mov	r2, ip
 801526a:	d1f5      	bne.n	8015258 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 801526c:	6818      	ldr	r0, [r3, #0]
 801526e:	f8cc 0000 	str.w	r0, [ip]
 8015272:	889b      	ldrh	r3, [r3, #4]
 8015274:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015278:	b2b3      	uxth	r3, r6
 801527a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801527e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8015282:	1aca      	subs	r2, r1, r3
 8015284:	1bcf      	subs	r7, r1, r7
 8015286:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801528a:	b292      	uxth	r2, r2
 801528c:	1afb      	subs	r3, r7, r3
 801528e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8015292:	10d2      	asrs	r2, r2, #3
 8015294:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8015298:	4302      	orrs	r2, r0
 801529a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801529e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80152a2:	e7b8      	b.n	8015216 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80152a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80152a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80152aa:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80152ac:	f640 6333 	movw	r3, #3635	; 0xe33
 80152b0:	4299      	cmp	r1, r3
 80152b2:	d110      	bne.n	80152d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80152b4:	6803      	ldr	r3, [r0, #0]
 80152b6:	68db      	ldr	r3, [r3, #12]
 80152b8:	4798      	blx	r3
 80152ba:	7b41      	ldrb	r1, [r0, #13]
 80152bc:	00cb      	lsls	r3, r1, #3
 80152be:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80152c2:	7a03      	ldrb	r3, [r0, #8]
 80152c4:	0648      	lsls	r0, r1, #25
 80152c6:	ea43 0302 	orr.w	r3, r3, r2
 80152ca:	bf44      	itt	mi
 80152cc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80152d0:	b21b      	sxthmi	r3, r3
 80152d2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80152d6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80152da:	462a      	mov	r2, r5
 80152dc:	f105 0c08 	add.w	ip, r5, #8
 80152e0:	443b      	add	r3, r7
 80152e2:	4433      	add	r3, r6
 80152e4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80152e8:	b29b      	uxth	r3, r3
 80152ea:	4635      	mov	r5, r6
 80152ec:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80152f0:	6810      	ldr	r0, [r2, #0]
 80152f2:	3208      	adds	r2, #8
 80152f4:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80152f8:	4637      	mov	r7, r6
 80152fa:	4562      	cmp	r2, ip
 80152fc:	c703      	stmia	r7!, {r0, r1}
 80152fe:	463e      	mov	r6, r7
 8015300:	d1f6      	bne.n	80152f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8015302:	6810      	ldr	r0, [r2, #0]
 8015304:	6038      	str	r0, [r7, #0]
 8015306:	8892      	ldrh	r2, [r2, #4]
 8015308:	80ba      	strh	r2, [r7, #4]
 801530a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801530e:	10db      	asrs	r3, r3, #3
 8015310:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015314:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015318:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801531c:	4313      	orrs	r3, r2
 801531e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8015322:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015326:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801532a:	1a9b      	subs	r3, r3, r2
 801532c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8015330:	e771      	b.n	8015216 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015332:	f023 0204 	bic.w	r2, r3, #4
 8015336:	f640 611b 	movw	r1, #3611	; 0xe1b
 801533a:	428a      	cmp	r2, r1
 801533c:	d003      	beq.n	8015346 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 801533e:	f640 621d 	movw	r2, #3613	; 0xe1d
 8015342:	4293      	cmp	r3, r2
 8015344:	d120      	bne.n	8015388 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8015346:	3b01      	subs	r3, #1
 8015348:	4602      	mov	r2, r0
 801534a:	4629      	mov	r1, r5
 801534c:	4620      	mov	r0, r4
 801534e:	b29b      	uxth	r3, r3
 8015350:	f7ff ff4b 	bl	80151ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015354:	7b41      	ldrb	r1, [r0, #13]
 8015356:	00cb      	lsls	r3, r1, #3
 8015358:	0649      	lsls	r1, r1, #25
 801535a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801535e:	7a03      	ldrb	r3, [r0, #8]
 8015360:	ea43 0302 	orr.w	r3, r3, r2
 8015364:	bf44      	itt	mi
 8015366:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801536a:	b21b      	sxthmi	r3, r3
 801536c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015370:	7b6b      	ldrb	r3, [r5, #13]
 8015372:	7aaa      	ldrb	r2, [r5, #10]
 8015374:	005b      	lsls	r3, r3, #1
 8015376:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801537a:	4313      	orrs	r3, r2
 801537c:	115a      	asrs	r2, r3, #5
 801537e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015382:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015386:	e035      	b.n	80153f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8015388:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801538c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8015390:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8015394:	7a2a      	ldrb	r2, [r5, #8]
 8015396:	ea42 0201 	orr.w	r2, r2, r1
 801539a:	f640 6109 	movw	r1, #3593	; 0xe09
 801539e:	bf1c      	itt	ne
 80153a0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80153a4:	b212      	sxthne	r2, r2
 80153a6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80153aa:	f023 0210 	bic.w	r2, r3, #16
 80153ae:	428a      	cmp	r2, r1
 80153b0:	d003      	beq.n	80153ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 80153b2:	f640 6213 	movw	r2, #3603	; 0xe13
 80153b6:	4293      	cmp	r3, r2
 80153b8:	d129      	bne.n	801540e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80153ba:	7b6e      	ldrb	r6, [r5, #13]
 80153bc:	4629      	mov	r1, r5
 80153be:	0076      	lsls	r6, r6, #1
 80153c0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80153c4:	7aae      	ldrb	r6, [r5, #10]
 80153c6:	4316      	orrs	r6, r2
 80153c8:	f640 6213 	movw	r2, #3603	; 0xe13
 80153cc:	4293      	cmp	r3, r2
 80153ce:	4602      	mov	r2, r0
 80153d0:	4620      	mov	r0, r4
 80153d2:	bf16      	itet	ne
 80153d4:	f103 33ff 	addne.w	r3, r3, #4294967295
 80153d8:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80153dc:	b29b      	uxthne	r3, r3
 80153de:	f7ff ff04 	bl	80151ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80153e2:	7b43      	ldrb	r3, [r0, #13]
 80153e4:	7a82      	ldrb	r2, [r0, #10]
 80153e6:	005b      	lsls	r3, r3, #1
 80153e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80153ec:	4313      	orrs	r3, r2
 80153ee:	1af6      	subs	r6, r6, r3
 80153f0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80153f4:	7b69      	ldrb	r1, [r5, #13]
 80153f6:	00cb      	lsls	r3, r1, #3
 80153f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80153fc:	7a2b      	ldrb	r3, [r5, #8]
 80153fe:	4313      	orrs	r3, r2
 8015400:	064a      	lsls	r2, r1, #25
 8015402:	bf44      	itt	mi
 8015404:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015408:	b21b      	sxthmi	r3, r3
 801540a:	1bdb      	subs	r3, r3, r7
 801540c:	e747      	b.n	801529e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801540e:	2300      	movs	r3, #0
 8015410:	e7b7      	b.n	8015382 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8015412:	bf00      	nop
 8015414:	3fc00079 	.word	0x3fc00079

08015418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015418:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801541c:	4604      	mov	r4, r0
 801541e:	b942      	cbnz	r2, 8015432 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015420:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015424:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8015428:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801542c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015430:	e047      	b.n	80154c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015432:	7b51      	ldrb	r1, [r2, #13]
 8015434:	8893      	ldrh	r3, [r2, #4]
 8015436:	010d      	lsls	r5, r1, #4
 8015438:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801543c:	79d5      	ldrb	r5, [r2, #7]
 801543e:	4305      	orrs	r5, r0
 8015440:	2d04      	cmp	r5, #4
 8015442:	bfcc      	ite	gt
 8015444:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015448:	f04f 0e01 	movle.w	lr, #1
 801544c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8015450:	f200 80ab 	bhi.w	80155aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015454:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8015458:	4283      	cmp	r3, r0
 801545a:	d216      	bcs.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801545c:	f240 605b 	movw	r0, #1627	; 0x65b
 8015460:	4283      	cmp	r3, r0
 8015462:	d859      	bhi.n	8015518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015464:	f240 6057 	movw	r0, #1623	; 0x657
 8015468:	4283      	cmp	r3, r0
 801546a:	d20e      	bcs.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801546c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015470:	d24a      	bcs.n	8015508 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015472:	f240 604e 	movw	r0, #1614	; 0x64e
 8015476:	4283      	cmp	r3, r0
 8015478:	d207      	bcs.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801547a:	f240 601a 	movw	r0, #1562	; 0x61a
 801547e:	4283      	cmp	r3, r0
 8015480:	d02a      	beq.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015482:	d821      	bhi.n	80154c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015484:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8015488:	d35b      	bcc.n	8015542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801548a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801548e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015492:	f040 80d0 	bne.w	8015636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015496:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801549a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801549e:	f040 80ca 	bne.w	8015636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80154a2:	00cb      	lsls	r3, r1, #3
 80154a4:	0649      	lsls	r1, r1, #25
 80154a6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80154aa:	7a13      	ldrb	r3, [r2, #8]
 80154ac:	ea43 0300 	orr.w	r3, r3, r0
 80154b0:	bf44      	itt	mi
 80154b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80154b6:	b21b      	sxthmi	r3, r3
 80154b8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80154bc:	1b5d      	subs	r5, r3, r5
 80154be:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80154c2:	4610      	mov	r0, r2
 80154c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80154c8:	f240 604b 	movw	r0, #1611	; 0x64b
 80154cc:	4283      	cmp	r3, r0
 80154ce:	d338      	bcc.n	8015542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80154d0:	f240 604c 	movw	r0, #1612	; 0x64c
 80154d4:	4283      	cmp	r3, r0
 80154d6:	d9d8      	bls.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80154d8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80154dc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80154e0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80154e4:	f040 80f3 	bne.w	80156ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80154e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80154ec:	f040 80ef 	bne.w	80156ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80154f0:	00cb      	lsls	r3, r1, #3
 80154f2:	064e      	lsls	r6, r1, #25
 80154f4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80154f8:	7a13      	ldrb	r3, [r2, #8]
 80154fa:	ea43 0300 	orr.w	r3, r3, r0
 80154fe:	bf44      	itt	mi
 8015500:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015504:	b21b      	sxthmi	r3, r3
 8015506:	e7d9      	b.n	80154bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015508:	f240 6054 	movw	r0, #1620	; 0x654
 801550c:	4283      	cmp	r3, r0
 801550e:	d8e3      	bhi.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015510:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015514:	d9e0      	bls.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015516:	e7b8      	b.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015518:	f240 6074 	movw	r0, #1652	; 0x674
 801551c:	4283      	cmp	r3, r0
 801551e:	d0b4      	beq.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015520:	d82d      	bhi.n	801557e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015522:	f240 605e 	movw	r0, #1630	; 0x65e
 8015526:	4283      	cmp	r3, r0
 8015528:	d804      	bhi.n	8015534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801552a:	f240 605d 	movw	r0, #1629	; 0x65d
 801552e:	4283      	cmp	r3, r0
 8015530:	d3d2      	bcc.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015532:	e7aa      	b.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015534:	f240 605f 	movw	r0, #1631	; 0x65f
 8015538:	4283      	cmp	r3, r0
 801553a:	d0cd      	beq.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801553c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8015540:	d0a3      	beq.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015542:	00cb      	lsls	r3, r1, #3
 8015544:	0649      	lsls	r1, r1, #25
 8015546:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801554a:	7a13      	ldrb	r3, [r2, #8]
 801554c:	ea43 0300 	orr.w	r3, r3, r0
 8015550:	bf44      	itt	mi
 8015552:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015556:	b21b      	sxthmi	r3, r3
 8015558:	1b5d      	subs	r5, r3, r5
 801555a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801555e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015562:	7b53      	ldrb	r3, [r2, #13]
 8015564:	015b      	lsls	r3, r3, #5
 8015566:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801556a:	7993      	ldrb	r3, [r2, #6]
 801556c:	430b      	orrs	r3, r1
 801556e:	2105      	movs	r1, #5
 8015570:	005b      	lsls	r3, r3, #1
 8015572:	fb93 f3f1 	sdiv	r3, r3, r1
 8015576:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801557a:	440b      	add	r3, r1
 801557c:	e756      	b.n	801542c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801557e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8015582:	4283      	cmp	r3, r0
 8015584:	d809      	bhi.n	801559a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015586:	f240 60df 	movw	r0, #1759	; 0x6df
 801558a:	4283      	cmp	r3, r0
 801558c:	f4bf af7d 	bcs.w	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015590:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8015594:	2b05      	cmp	r3, #5
 8015596:	d8d4      	bhi.n	8015542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015598:	e777      	b.n	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801559a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801559e:	4283      	cmp	r3, r0
 80155a0:	d09a      	beq.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80155a2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80155a6:	4283      	cmp	r3, r0
 80155a8:	e7ca      	b.n	8015540 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80155aa:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80155ae:	d22b      	bcs.n	8015608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80155b0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80155b4:	4283      	cmp	r3, r0
 80155b6:	d28f      	bcs.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80155b8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80155bc:	4283      	cmp	r3, r0
 80155be:	d816      	bhi.n	80155ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80155c0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80155c4:	4283      	cmp	r3, r0
 80155c6:	f4bf af60 	bcs.w	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80155ca:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80155ce:	4283      	cmp	r3, r0
 80155d0:	d80a      	bhi.n	80155e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80155d2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80155d6:	4283      	cmp	r3, r0
 80155d8:	f4bf af57 	bcs.w	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80155dc:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80155e0:	4283      	cmp	r3, r0
 80155e2:	f43f af79 	beq.w	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80155e6:	e7ac      	b.n	8015542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80155e8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80155ec:	e7f8      	b.n	80155e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80155ee:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80155f2:	4283      	cmp	r3, r0
 80155f4:	d802      	bhi.n	80155fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80155f6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80155fa:	e798      	b.n	801552e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80155fc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8015600:	4283      	cmp	r3, r0
 8015602:	f47f af42 	bne.w	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015606:	e767      	b.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015608:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801560c:	4283      	cmp	r3, r0
 801560e:	f43f af63 	beq.w	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015612:	d802      	bhi.n	801561a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8015614:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8015618:	e7f2      	b.n	8015600 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801561a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801561e:	4283      	cmp	r3, r0
 8015620:	d805      	bhi.n	801562e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8015622:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8015626:	4283      	cmp	r3, r0
 8015628:	f4ff af2f 	bcc.w	801548a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801562c:	e754      	b.n	80154d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801562e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8015632:	4283      	cmp	r3, r0
 8015634:	e7af      	b.n	8015596 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8015636:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801563a:	4617      	mov	r7, r2
 801563c:	f102 0808 	add.w	r8, r2, #8
 8015640:	4666      	mov	r6, ip
 8015642:	6838      	ldr	r0, [r7, #0]
 8015644:	3708      	adds	r7, #8
 8015646:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801564a:	46e6      	mov	lr, ip
 801564c:	4547      	cmp	r7, r8
 801564e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015652:	46f4      	mov	ip, lr
 8015654:	d1f5      	bne.n	8015642 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8015656:	6838      	ldr	r0, [r7, #0]
 8015658:	f8ce 0000 	str.w	r0, [lr]
 801565c:	88b9      	ldrh	r1, [r7, #4]
 801565e:	f8ae 1004 	strh.w	r1, [lr, #4]
 8015662:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8015666:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801566a:	d009      	beq.n	8015680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 801566c:	7b51      	ldrb	r1, [r2, #13]
 801566e:	7992      	ldrb	r2, [r2, #6]
 8015670:	0149      	lsls	r1, r1, #5
 8015672:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015676:	4311      	orrs	r1, r2
 8015678:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801567c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015680:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015684:	b2ad      	uxth	r5, r5
 8015686:	d00d      	beq.n	80156a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8015688:	442b      	add	r3, r5
 801568a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801568e:	b29b      	uxth	r3, r3
 8015690:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015694:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015698:	10db      	asrs	r3, r3, #3
 801569a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801569e:	4313      	orrs	r3, r2
 80156a0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80156a4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80156a8:	00cb      	lsls	r3, r1, #3
 80156aa:	064f      	lsls	r7, r1, #25
 80156ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80156b0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80156b4:	ea43 0302 	orr.w	r3, r3, r2
 80156b8:	bf44      	itt	mi
 80156ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80156be:	b21b      	sxthmi	r3, r3
 80156c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80156c4:	1b5b      	subs	r3, r3, r5
 80156c6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80156ca:	4632      	mov	r2, r6
 80156cc:	e6f9      	b.n	80154c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80156ce:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80156d2:	4617      	mov	r7, r2
 80156d4:	f102 0908 	add.w	r9, r2, #8
 80156d8:	4666      	mov	r6, ip
 80156da:	6838      	ldr	r0, [r7, #0]
 80156dc:	3708      	adds	r7, #8
 80156de:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80156e2:	46e0      	mov	r8, ip
 80156e4:	454f      	cmp	r7, r9
 80156e6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80156ea:	46c4      	mov	ip, r8
 80156ec:	d1f5      	bne.n	80156da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 80156ee:	6838      	ldr	r0, [r7, #0]
 80156f0:	f8c8 0000 	str.w	r0, [r8]
 80156f4:	88b9      	ldrh	r1, [r7, #4]
 80156f6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80156fa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80156fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015702:	d009      	beq.n	8015718 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8015704:	7b51      	ldrb	r1, [r2, #13]
 8015706:	7992      	ldrb	r2, [r2, #6]
 8015708:	0149      	lsls	r1, r1, #5
 801570a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801570e:	4311      	orrs	r1, r2
 8015710:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015714:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015718:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801571c:	d00e      	beq.n	801573c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801571e:	eba3 030e 	sub.w	r3, r3, lr
 8015722:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015726:	b29b      	uxth	r3, r3
 8015728:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801572c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015730:	10db      	asrs	r3, r3, #3
 8015732:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015736:	4313      	orrs	r3, r2
 8015738:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801573c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015740:	00cb      	lsls	r3, r1, #3
 8015742:	0648      	lsls	r0, r1, #25
 8015744:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015748:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801574c:	ea43 0302 	orr.w	r3, r3, r2
 8015750:	bf44      	itt	mi
 8015752:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015756:	b21b      	sxthmi	r3, r3
 8015758:	1b5d      	subs	r5, r3, r5
 801575a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801575e:	e7b4      	b.n	80156ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08015760 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8015760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015764:	461e      	mov	r6, r3
 8015766:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015768:	4604      	mov	r4, r0
 801576a:	4617      	mov	r7, r2
 801576c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015770:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015774:	f7f7 faca 	bl	800cd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015778:	4605      	mov	r5, r0
 801577a:	b918      	cbnz	r0, 8015784 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801577c:	6030      	str	r0, [r6, #0]
 801577e:	4628      	mov	r0, r5
 8015780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015784:	683b      	ldr	r3, [r7, #0]
 8015786:	4601      	mov	r1, r0
 8015788:	4638      	mov	r0, r7
 801578a:	68db      	ldr	r3, [r3, #12]
 801578c:	4798      	blx	r3
 801578e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015792:	4602      	mov	r2, r0
 8015794:	6030      	str	r0, [r6, #0]
 8015796:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801579a:	d213      	bcs.n	80157c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801579c:	4643      	mov	r3, r8
 801579e:	4639      	mov	r1, r7
 80157a0:	4620      	mov	r0, r4
 80157a2:	f7ff fe39 	bl	8015418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80157a6:	6030      	str	r0, [r6, #0]
 80157a8:	6833      	ldr	r3, [r6, #0]
 80157aa:	b143      	cbz	r3, 80157be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80157ac:	7b5a      	ldrb	r2, [r3, #13]
 80157ae:	7a9b      	ldrb	r3, [r3, #10]
 80157b0:	0052      	lsls	r2, r2, #1
 80157b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80157b6:	4313      	orrs	r3, r2
 80157b8:	bf0c      	ite	eq
 80157ba:	2301      	moveq	r3, #1
 80157bc:	2300      	movne	r3, #0
 80157be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80157c2:	e7dc      	b.n	801577e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80157c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80157c8:	b29b      	uxth	r3, r3
 80157ca:	2b7f      	cmp	r3, #127	; 0x7f
 80157cc:	d804      	bhi.n	80157d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80157ce:	4639      	mov	r1, r7
 80157d0:	4620      	mov	r0, r4
 80157d2:	f7ff fd15 	bl	8015200 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80157d6:	e7e6      	b.n	80157a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80157d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80157dc:	2b00      	cmp	r3, #0
 80157de:	d0e3      	beq.n	80157a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80157e0:	f640 1302 	movw	r3, #2306	; 0x902
 80157e4:	429d      	cmp	r5, r3
 80157e6:	d1df      	bne.n	80157a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80157e8:	4601      	mov	r1, r0
 80157ea:	4620      	mov	r0, r4
 80157ec:	f7ff fcd9 	bl	80151a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80157f0:	e7d9      	b.n	80157a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080157f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80157f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80157f6:	461e      	mov	r6, r3
 80157f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80157fa:	4604      	mov	r4, r0
 80157fc:	4617      	mov	r7, r2
 80157fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015802:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015806:	f7f7 fa81 	bl	800cd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801580a:	4605      	mov	r5, r0
 801580c:	b918      	cbnz	r0, 8015816 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801580e:	6030      	str	r0, [r6, #0]
 8015810:	4628      	mov	r0, r5
 8015812:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015816:	683b      	ldr	r3, [r7, #0]
 8015818:	4601      	mov	r1, r0
 801581a:	4638      	mov	r0, r7
 801581c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8015820:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015824:	47c8      	blx	r9
 8015826:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801582a:	4602      	mov	r2, r0
 801582c:	6030      	str	r0, [r6, #0]
 801582e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015832:	d213      	bcs.n	801585c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8015834:	4643      	mov	r3, r8
 8015836:	4639      	mov	r1, r7
 8015838:	4620      	mov	r0, r4
 801583a:	f7ff fded 	bl	8015418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801583e:	6030      	str	r0, [r6, #0]
 8015840:	6833      	ldr	r3, [r6, #0]
 8015842:	b143      	cbz	r3, 8015856 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8015844:	7b5a      	ldrb	r2, [r3, #13]
 8015846:	7a9b      	ldrb	r3, [r3, #10]
 8015848:	0052      	lsls	r2, r2, #1
 801584a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801584e:	4313      	orrs	r3, r2
 8015850:	bf0c      	ite	eq
 8015852:	2301      	moveq	r3, #1
 8015854:	2300      	movne	r3, #0
 8015856:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801585a:	e7d9      	b.n	8015810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801585c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015860:	b29b      	uxth	r3, r3
 8015862:	2b7f      	cmp	r3, #127	; 0x7f
 8015864:	d804      	bhi.n	8015870 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8015866:	4639      	mov	r1, r7
 8015868:	4620      	mov	r0, r4
 801586a:	f7ff fcc9 	bl	8015200 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801586e:	e7e6      	b.n	801583e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8015870:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8015874:	2b00      	cmp	r3, #0
 8015876:	d0e3      	beq.n	8015840 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015878:	f640 1302 	movw	r3, #2306	; 0x902
 801587c:	429d      	cmp	r5, r3
 801587e:	d1df      	bne.n	8015840 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015880:	4601      	mov	r1, r0
 8015882:	4620      	mov	r0, r4
 8015884:	f7ff fc8d 	bl	80151a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015888:	e7d9      	b.n	801583e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801588a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801588a:	b510      	push	{r4, lr}
 801588c:	4604      	mov	r4, r0
 801588e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015892:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015894:	b1e1      	cbz	r1, 80158d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8015896:	2b0a      	cmp	r3, #10
 8015898:	d02d      	beq.n	80158f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801589a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801589c:	3901      	subs	r1, #1
 801589e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80158a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80158a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80158a8:	1c51      	adds	r1, r2, #1
 80158aa:	b289      	uxth	r1, r1
 80158ac:	2901      	cmp	r1, #1
 80158ae:	bf8a      	itet	hi
 80158b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80158b4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80158b6:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80158b8:	1c5a      	adds	r2, r3, #1
 80158ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80158bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80158be:	4413      	add	r3, r2
 80158c0:	b29b      	uxth	r3, r3
 80158c2:	2b09      	cmp	r3, #9
 80158c4:	bf88      	it	hi
 80158c6:	3b0a      	subhi	r3, #10
 80158c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80158cc:	8458      	strh	r0, [r3, #34]	; 0x22
 80158ce:	e7de      	b.n	801588e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80158d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80158d2:	2b0a      	cmp	r3, #10
 80158d4:	d00f      	beq.n	80158f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80158d6:	4620      	mov	r0, r4
 80158d8:	f7ff fc11 	bl	80150fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80158dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80158de:	1c5a      	adds	r2, r3, #1
 80158e0:	8722      	strh	r2, [r4, #56]	; 0x38
 80158e2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80158e4:	4413      	add	r3, r2
 80158e6:	b29b      	uxth	r3, r3
 80158e8:	2b09      	cmp	r3, #9
 80158ea:	bf88      	it	hi
 80158ec:	3b0a      	subhi	r3, #10
 80158ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80158f2:	8458      	strh	r0, [r3, #34]	; 0x22
 80158f4:	e7ec      	b.n	80158d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80158f6:	bd10      	pop	{r4, pc}

080158f8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80158f8:	b538      	push	{r3, r4, r5, lr}
 80158fa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80158fc:	4604      	mov	r4, r0
 80158fe:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8015902:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8015904:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8015906:	3a01      	subs	r2, #1
 8015908:	8702      	strh	r2, [r0, #56]	; 0x38
 801590a:	1c5a      	adds	r2, r3, #1
 801590c:	b292      	uxth	r2, r2
 801590e:	2a09      	cmp	r2, #9
 8015910:	bf8a      	itet	hi
 8015912:	3b09      	subhi	r3, #9
 8015914:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8015916:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8015918:	f7ff ffb7 	bl	801588a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801591c:	8c23      	ldrh	r3, [r4, #32]
 801591e:	2b01      	cmp	r3, #1
 8015920:	bf9c      	itt	ls
 8015922:	3301      	addls	r3, #1
 8015924:	8423      	strhls	r3, [r4, #32]
 8015926:	8be3      	ldrh	r3, [r4, #30]
 8015928:	b90b      	cbnz	r3, 801592e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801592a:	2302      	movs	r3, #2
 801592c:	83e3      	strh	r3, [r4, #30]
 801592e:	8be3      	ldrh	r3, [r4, #30]
 8015930:	4628      	mov	r0, r5
 8015932:	3b01      	subs	r3, #1
 8015934:	b29b      	uxth	r3, r3
 8015936:	83e3      	strh	r3, [r4, #30]
 8015938:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801593c:	8365      	strh	r5, [r4, #26]
 801593e:	bd38      	pop	{r3, r4, r5, pc}

08015940 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8015940:	428a      	cmp	r2, r1
 8015942:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015946:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8015948:	d932      	bls.n	80159b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 801594a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801594c:	1a54      	subs	r4, r2, r1
 801594e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8015952:	19ee      	adds	r6, r5, r7
 8015954:	fa1f fe84 	uxth.w	lr, r4
 8015958:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801595c:	3e01      	subs	r6, #1
 801595e:	b2b4      	uxth	r4, r6
 8015960:	eba4 090e 	sub.w	r9, r4, lr
 8015964:	fa1f f989 	uxth.w	r9, r9
 8015968:	2c09      	cmp	r4, #9
 801596a:	4626      	mov	r6, r4
 801596c:	bf88      	it	hi
 801596e:	f1a4 060a 	subhi.w	r6, r4, #10
 8015972:	f1bc 0f00 	cmp.w	ip, #0
 8015976:	f104 34ff 	add.w	r4, r4, #4294967295
 801597a:	bf08      	it	eq
 801597c:	f04f 0c02 	moveq.w	ip, #2
 8015980:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015984:	b2a4      	uxth	r4, r4
 8015986:	f10c 3cff 	add.w	ip, ip, #4294967295
 801598a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801598e:	454c      	cmp	r4, r9
 8015990:	fa1f fc8c 	uxth.w	ip, ip
 8015994:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8015998:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801599c:	d1e4      	bne.n	8015968 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801599e:	eba5 050e 	sub.w	r5, r5, lr
 80159a2:	eb0e 0408 	add.w	r4, lr, r8
 80159a6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80159aa:	8705      	strh	r5, [r0, #56]	; 0x38
 80159ac:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80159b0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80159b2:	250a      	movs	r5, #10
 80159b4:	1a64      	subs	r4, r4, r1
 80159b6:	4439      	add	r1, r7
 80159b8:	b289      	uxth	r1, r1
 80159ba:	8704      	strh	r4, [r0, #56]	; 0x38
 80159bc:	2909      	cmp	r1, #9
 80159be:	bf88      	it	hi
 80159c0:	390a      	subhi	r1, #10
 80159c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80159c4:	b18a      	cbz	r2, 80159ea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80159c6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80159c8:	3a01      	subs	r2, #1
 80159ca:	3101      	adds	r1, #1
 80159cc:	b292      	uxth	r2, r2
 80159ce:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80159d2:	8701      	strh	r1, [r0, #56]	; 0x38
 80159d4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80159d6:	b901      	cbnz	r1, 80159da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80159d8:	86c5      	strh	r5, [r0, #54]	; 0x36
 80159da:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80159dc:	3901      	subs	r1, #1
 80159de:	b289      	uxth	r1, r1
 80159e0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80159e2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80159e6:	844c      	strh	r4, [r1, #34]	; 0x22
 80159e8:	e7ec      	b.n	80159c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80159ea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80159ee:	f7ff bf4c 	b.w	801588a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080159f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80159f2:	b570      	push	{r4, r5, r6, lr}
 80159f4:	2500      	movs	r5, #0
 80159f6:	4295      	cmp	r5, r2
 80159f8:	d011      	beq.n	8015a1e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80159fa:	8bc4      	ldrh	r4, [r0, #30]
 80159fc:	f831 6b02 	ldrh.w	r6, [r1], #2
 8015a00:	4414      	add	r4, r2
 8015a02:	3c01      	subs	r4, #1
 8015a04:	1b64      	subs	r4, r4, r5
 8015a06:	b2a4      	uxth	r4, r4
 8015a08:	2c01      	cmp	r4, #1
 8015a0a:	bf88      	it	hi
 8015a0c:	3c02      	subhi	r4, #2
 8015a0e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015a12:	8b64      	ldrh	r4, [r4, #26]
 8015a14:	42b4      	cmp	r4, r6
 8015a16:	d117      	bne.n	8015a48 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8015a18:	3501      	adds	r5, #1
 8015a1a:	b2ad      	uxth	r5, r5
 8015a1c:	e7eb      	b.n	80159f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8015a1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015a22:	2400      	movs	r4, #0
 8015a24:	4413      	add	r3, r2
 8015a26:	b2a2      	uxth	r2, r4
 8015a28:	429a      	cmp	r2, r3
 8015a2a:	da0f      	bge.n	8015a4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8015a2c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8015a2e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8015a32:	3401      	adds	r4, #1
 8015a34:	4432      	add	r2, r6
 8015a36:	b292      	uxth	r2, r2
 8015a38:	2a09      	cmp	r2, #9
 8015a3a:	bf88      	it	hi
 8015a3c:	3a0a      	subhi	r2, #10
 8015a3e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015a42:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8015a44:	42aa      	cmp	r2, r5
 8015a46:	d0ee      	beq.n	8015a26 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8015a48:	2000      	movs	r0, #0
 8015a4a:	bd70      	pop	{r4, r5, r6, pc}
 8015a4c:	2001      	movs	r0, #1
 8015a4e:	e7fc      	b.n	8015a4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08015a50 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8015a50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a54:	4605      	mov	r5, r0
 8015a56:	4616      	mov	r6, r2
 8015a58:	1c8c      	adds	r4, r1, #2
 8015a5a:	8809      	ldrh	r1, [r1, #0]
 8015a5c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8015a60:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8015a64:	42b3      	cmp	r3, r6
 8015a66:	d124      	bne.n	8015ab2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8015a68:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8015a6c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8015a70:	f001 070f 	and.w	r7, r1, #15
 8015a74:	4652      	mov	r2, sl
 8015a76:	f8cd 8000 	str.w	r8, [sp]
 8015a7a:	464b      	mov	r3, r9
 8015a7c:	4621      	mov	r1, r4
 8015a7e:	4628      	mov	r0, r5
 8015a80:	f7ff ffb7 	bl	80159f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8015a84:	4683      	mov	fp, r0
 8015a86:	b168      	cbz	r0, 8015aa4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8015a88:	eb0a 0109 	add.w	r1, sl, r9
 8015a8c:	463a      	mov	r2, r7
 8015a8e:	4628      	mov	r0, r5
 8015a90:	4441      	add	r1, r8
 8015a92:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8015a96:	4649      	mov	r1, r9
 8015a98:	f7ff ff52 	bl	8015940 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8015a9c:	4658      	mov	r0, fp
 8015a9e:	b003      	add	sp, #12
 8015aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015aa4:	eb07 010a 	add.w	r1, r7, sl
 8015aa8:	4449      	add	r1, r9
 8015aaa:	4441      	add	r1, r8
 8015aac:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8015ab0:	e7d2      	b.n	8015a58 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8015ab2:	f04f 0b00 	mov.w	fp, #0
 8015ab6:	e7f1      	b.n	8015a9c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08015ab8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8015ab8:	b570      	push	{r4, r5, r6, lr}
 8015aba:	8810      	ldrh	r0, [r2, #0]
 8015abc:	4298      	cmp	r0, r3
 8015abe:	d817      	bhi.n	8015af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015ac0:	1e48      	subs	r0, r1, #1
 8015ac2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8015ac6:	4298      	cmp	r0, r3
 8015ac8:	d312      	bcc.n	8015af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015aca:	2400      	movs	r4, #0
 8015acc:	428c      	cmp	r4, r1
 8015ace:	d20f      	bcs.n	8015af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015ad0:	1860      	adds	r0, r4, r1
 8015ad2:	1040      	asrs	r0, r0, #1
 8015ad4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8015ad8:	0085      	lsls	r5, r0, #2
 8015ada:	42b3      	cmp	r3, r6
 8015adc:	d902      	bls.n	8015ae4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8015ade:	3001      	adds	r0, #1
 8015ae0:	b284      	uxth	r4, r0
 8015ae2:	e7f3      	b.n	8015acc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8015ae4:	d201      	bcs.n	8015aea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8015ae6:	b281      	uxth	r1, r0
 8015ae8:	e7f0      	b.n	8015acc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8015aea:	442a      	add	r2, r5
 8015aec:	8850      	ldrh	r0, [r2, #2]
 8015aee:	bd70      	pop	{r4, r5, r6, pc}
 8015af0:	2000      	movs	r0, #0
 8015af2:	e7fc      	b.n	8015aee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08015af4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8015af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015af8:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8015afa:	4604      	mov	r4, r0
 8015afc:	260b      	movs	r6, #11
 8015afe:	886f      	ldrh	r7, [r5, #2]
 8015b00:	087f      	lsrs	r7, r7, #1
 8015b02:	3e01      	subs	r6, #1
 8015b04:	d013      	beq.n	8015b2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8015b06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015b08:	462a      	mov	r2, r5
 8015b0a:	4639      	mov	r1, r7
 8015b0c:	4620      	mov	r0, r4
 8015b0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015b12:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015b16:	4643      	mov	r3, r8
 8015b18:	f7ff ffce 	bl	8015ab8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8015b1c:	b138      	cbz	r0, 8015b2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8015b1e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8015b22:	4642      	mov	r2, r8
 8015b24:	4620      	mov	r0, r4
 8015b26:	f7ff ff93 	bl	8015a50 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8015b2a:	2800      	cmp	r0, #0
 8015b2c:	d1e9      	bne.n	8015b02 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8015b2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08015b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8015b34:	b570      	push	{r4, r5, r6, lr}
 8015b36:	694a      	ldr	r2, [r1, #20]
 8015b38:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8015b3a:	684b      	ldr	r3, [r1, #4]
 8015b3c:	1b54      	subs	r4, r2, r5
 8015b3e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8015b40:	f000 8106 	beq.w	8015d50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8015b44:	1b9b      	subs	r3, r3, r6
 8015b46:	d003      	beq.n	8015b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8015b48:	4363      	muls	r3, r4
 8015b4a:	2210      	movs	r2, #16
 8015b4c:	fb93 f3f2 	sdiv	r3, r3, r2
 8015b50:	680c      	ldr	r4, [r1, #0]
 8015b52:	698a      	ldr	r2, [r1, #24]
 8015b54:	1b65      	subs	r5, r4, r5
 8015b56:	f000 80fd 	beq.w	8015d54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8015b5a:	1b92      	subs	r2, r2, r6
 8015b5c:	d003      	beq.n	8015b66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8015b5e:	436a      	muls	r2, r5
 8015b60:	2410      	movs	r4, #16
 8015b62:	fb92 f2f4 	sdiv	r2, r2, r4
 8015b66:	1a9b      	subs	r3, r3, r2
 8015b68:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8015d90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8015b6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015b70:	460a      	mov	r2, r1
 8015b72:	ee07 3a90 	vmov	s15, r3
 8015b76:	f100 040c 	add.w	r4, r0, #12
 8015b7a:	4603      	mov	r3, r0
 8015b7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b80:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015b84:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8015b88:	eeb1 6a43 	vneg.f32	s12, s6
 8015b8c:	edd2 7a02 	vldr	s15, [r2, #8]
 8015b90:	3214      	adds	r2, #20
 8015b92:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8015b96:	ece3 6a01 	vstmia	r3!, {s13}
 8015b9a:	429c      	cmp	r4, r3
 8015b9c:	ed52 7a02 	vldr	s15, [r2, #-8]
 8015ba0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015ba4:	edc3 7a02 	vstr	s15, [r3, #8]
 8015ba8:	ed52 7a01 	vldr	s15, [r2, #-4]
 8015bac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015bb0:	edc3 7a05 	vstr	s15, [r3, #20]
 8015bb4:	d1ea      	bne.n	8015b8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8015bb6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8015bb8:	698b      	ldr	r3, [r1, #24]
 8015bba:	edd0 4a02 	vldr	s9, [r0, #8]
 8015bbe:	1a9b      	subs	r3, r3, r2
 8015bc0:	edd0 3a00 	vldr	s7, [r0]
 8015bc4:	edd0 6a01 	vldr	s13, [r0, #4]
 8015bc8:	ee07 3a90 	vmov	s15, r3
 8015bcc:	684b      	ldr	r3, [r1, #4]
 8015bce:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8015bd2:	ed90 5a05 	vldr	s10, [r0, #20]
 8015bd6:	1a9b      	subs	r3, r3, r2
 8015bd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015bdc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8015be0:	ed90 2a03 	vldr	s4, [r0, #12]
 8015be4:	ee07 3a10 	vmov	s14, r3
 8015be8:	edd0 5a04 	vldr	s11, [r0, #16]
 8015bec:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015bf0:	ed90 1a07 	vldr	s2, [r0, #28]
 8015bf4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015bf8:	edd0 2a06 	vldr	s5, [r0, #24]
 8015bfc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8015c00:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8015c04:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015c08:	ee32 5a45 	vsub.f32	s10, s4, s10
 8015c0c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015c10:	ee67 7a83 	vmul.f32	s15, s15, s6
 8015c14:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8015c18:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8015c1a:	694a      	ldr	r2, [r1, #20]
 8015c1c:	1b13      	subs	r3, r2, r4
 8015c1e:	ee07 3a10 	vmov	s14, r3
 8015c22:	680b      	ldr	r3, [r1, #0]
 8015c24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c28:	1b1b      	subs	r3, r3, r4
 8015c2a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015c2e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8015c32:	ee07 3a10 	vmov	s14, r3
 8015c36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c3a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015c3e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8015c42:	ee64 4a86 	vmul.f32	s9, s9, s12
 8015c46:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8015c4a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8015c4c:	698b      	ldr	r3, [r1, #24]
 8015c4e:	1a9b      	subs	r3, r3, r2
 8015c50:	ee06 3a90 	vmov	s13, r3
 8015c54:	684b      	ldr	r3, [r1, #4]
 8015c56:	1a9b      	subs	r3, r3, r2
 8015c58:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015c5c:	ee07 3a10 	vmov	s14, r3
 8015c60:	ee66 6a84 	vmul.f32	s13, s13, s8
 8015c64:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c68:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8015c6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015c70:	eee5 6a87 	vfma.f32	s13, s11, s14
 8015c74:	ee66 6a83 	vmul.f32	s13, s13, s6
 8015c78:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8015c7c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8015c7e:	694a      	ldr	r2, [r1, #20]
 8015c80:	1b13      	subs	r3, r2, r4
 8015c82:	ee07 3a10 	vmov	s14, r3
 8015c86:	680b      	ldr	r3, [r1, #0]
 8015c88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c8c:	1b1b      	subs	r3, r3, r4
 8015c8e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015c92:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8015c96:	ee07 3a10 	vmov	s14, r3
 8015c9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015c9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015ca2:	eea5 5a87 	vfma.f32	s10, s11, s14
 8015ca6:	edd0 5a08 	vldr	s11, [r0, #32]
 8015caa:	ee31 1a65 	vsub.f32	s2, s2, s11
 8015cae:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8015cb2:	ee25 5a06 	vmul.f32	s10, s10, s12
 8015cb6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8015cba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8015cbc:	698b      	ldr	r3, [r1, #24]
 8015cbe:	1a9b      	subs	r3, r3, r2
 8015cc0:	ee07 3a10 	vmov	s14, r3
 8015cc4:	684b      	ldr	r3, [r1, #4]
 8015cc6:	1a9b      	subs	r3, r3, r2
 8015cc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015ccc:	ee01 3a90 	vmov	s3, r3
 8015cd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015cd4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8015cd8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8015cdc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8015ce0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8015ce4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8015ce8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8015cec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8015cee:	694a      	ldr	r2, [r1, #20]
 8015cf0:	1b13      	subs	r3, r2, r4
 8015cf2:	ee03 3a10 	vmov	s6, r3
 8015cf6:	680b      	ldr	r3, [r1, #0]
 8015cf8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8015cfc:	1b1b      	subs	r3, r3, r4
 8015cfe:	ee23 3a04 	vmul.f32	s6, s6, s8
 8015d02:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8015d06:	ee03 3a10 	vmov	s6, r3
 8015d0a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8015d0e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8015d12:	eee1 5a04 	vfma.f32	s11, s2, s8
 8015d16:	ee25 6a86 	vmul.f32	s12, s11, s12
 8015d1a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8015d1e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8015d22:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8015d26:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8015d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015d2e:	dd13      	ble.n	8015d58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8015d30:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015d34:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8015d38:	63c3      	str	r3, [r0, #60]	; 0x3c
 8015d3a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8015d3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015d46:	dd15      	ble.n	8015d74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8015d48:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015d4c:	6403      	str	r3, [r0, #64]	; 0x40
 8015d4e:	bd70      	pop	{r4, r5, r6, pc}
 8015d50:	4623      	mov	r3, r4
 8015d52:	e6fd      	b.n	8015b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8015d54:	462a      	mov	r2, r5
 8015d56:	e706      	b.n	8015b66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8015d58:	d502      	bpl.n	8015d60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8015d5a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8015d5e:	e7e9      	b.n	8015d34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8015d60:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8015d64:	eea3 2a85 	vfma.f32	s4, s7, s10
 8015d68:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8015d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015d70:	dade      	bge.n	8015d30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8015d72:	e7f2      	b.n	8015d5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8015d74:	d502      	bpl.n	8015d7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8015d76:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8015d7a:	e7e7      	b.n	8015d4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8015d7c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8015d80:	eee3 4a86 	vfma.f32	s9, s7, s12
 8015d84:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8015d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015d8c:	dadc      	bge.n	8015d48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8015d8e:	e7f2      	b.n	8015d76 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8015d90:	3d800000 	.word	0x3d800000

08015d94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8015d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d98:	2714      	movs	r7, #20
 8015d9a:	435f      	muls	r7, r3
 8015d9c:	eb02 0c07 	add.w	ip, r2, r7
 8015da0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8015da4:	f115 0e0f 	adds.w	lr, r5, #15
 8015da8:	f100 80a2 	bmi.w	8015ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8015dac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8015db0:	9c08      	ldr	r4, [sp, #32]
 8015db2:	2614      	movs	r6, #20
 8015db4:	f8c0 e014 	str.w	lr, [r0, #20]
 8015db8:	4366      	muls	r6, r4
 8015dba:	eb02 0806 	add.w	r8, r2, r6
 8015dbe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8015dc2:	f115 040f 	adds.w	r4, r5, #15
 8015dc6:	f100 809f 	bmi.w	8015f08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8015dca:	1124      	asrs	r4, r4, #4
 8015dcc:	eba4 040e 	sub.w	r4, r4, lr
 8015dd0:	6184      	str	r4, [r0, #24]
 8015dd2:	2c00      	cmp	r4, #0
 8015dd4:	f000 808a 	beq.w	8015eec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8015dd8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8015ddc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8015de0:	5995      	ldr	r5, [r2, r6]
 8015de2:	eba4 0809 	sub.w	r8, r4, r9
 8015de6:	59d4      	ldr	r4, [r2, r7]
 8015de8:	eba5 0a04 	sub.w	sl, r5, r4
 8015dec:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8015df0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8015df4:	fb0e fe05 	mul.w	lr, lr, r5
 8015df8:	fb0a ee19 	mls	lr, sl, r9, lr
 8015dfc:	fb08 e404 	mla	r4, r8, r4, lr
 8015e00:	3c01      	subs	r4, #1
 8015e02:	19a4      	adds	r4, r4, r6
 8015e04:	f100 808c 	bmi.w	8015f20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8015e08:	fb94 fef6 	sdiv	lr, r4, r6
 8015e0c:	fb06 441e 	mls	r4, r6, lr, r4
 8015e10:	f8c0 e000 	str.w	lr, [r0]
 8015e14:	6104      	str	r4, [r0, #16]
 8015e16:	2d00      	cmp	r5, #0
 8015e18:	f2c0 8095 	blt.w	8015f46 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8015e1c:	fb95 f4f6 	sdiv	r4, r5, r6
 8015e20:	fb06 5514 	mls	r5, r6, r4, r5
 8015e24:	6044      	str	r4, [r0, #4]
 8015e26:	6085      	str	r5, [r0, #8]
 8015e28:	60c6      	str	r6, [r0, #12]
 8015e2a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015e2e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8015e32:	6945      	ldr	r5, [r0, #20]
 8015e34:	59d2      	ldr	r2, [r2, r7]
 8015e36:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8015e3a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8015f68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8015e3e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8015e42:	ee07 4a10 	vmov	s14, r4
 8015e46:	6804      	ldr	r4, [r0, #0]
 8015e48:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8015e4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015e50:	ee07 2a90 	vmov	s15, r2
 8015e54:	ee27 7a26 	vmul.f32	s14, s14, s13
 8015e58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015e5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015e60:	edd3 6a00 	vldr	s13, [r3]
 8015e64:	eee6 6a07 	vfma.f32	s13, s12, s14
 8015e68:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8015e6c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8015e70:	edc0 6a07 	vstr	s13, [r0, #28]
 8015e74:	edd0 6a01 	vldr	s13, [r0, #4]
 8015e78:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8015e7c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015e80:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8015e84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8015e88:	ed80 6a08 	vstr	s12, [r0, #32]
 8015e8c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8015e8e:	6242      	str	r2, [r0, #36]	; 0x24
 8015e90:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8015e94:	ed93 6a03 	vldr	s12, [r3, #12]
 8015e98:	eea5 6a87 	vfma.f32	s12, s11, s14
 8015e9c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8015ea0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8015ea4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8015ea8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8015eac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8015eb0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8015eb4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8015eb8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8015eba:	6302      	str	r2, [r0, #48]	; 0x30
 8015ebc:	ed93 6a06 	vldr	s12, [r3, #24]
 8015ec0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8015ec4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8015ec8:	eeb0 7a46 	vmov.f32	s14, s12
 8015ecc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8015ed0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8015ed4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8015ed8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8015edc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8015ee0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015ee4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8015ee8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8015eea:	63c3      	str	r3, [r0, #60]	; 0x3c
 8015eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015ef0:	2410      	movs	r4, #16
 8015ef2:	f1c5 0501 	rsb	r5, r5, #1
 8015ef6:	fb9e fef4 	sdiv	lr, lr, r4
 8015efa:	f015 050f 	ands.w	r5, r5, #15
 8015efe:	bf18      	it	ne
 8015f00:	2501      	movne	r5, #1
 8015f02:	ebae 0e05 	sub.w	lr, lr, r5
 8015f06:	e753      	b.n	8015db0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8015f08:	f04f 0910 	mov.w	r9, #16
 8015f0c:	f1c5 0501 	rsb	r5, r5, #1
 8015f10:	fb94 f4f9 	sdiv	r4, r4, r9
 8015f14:	f015 050f 	ands.w	r5, r5, #15
 8015f18:	bf18      	it	ne
 8015f1a:	2501      	movne	r5, #1
 8015f1c:	1b64      	subs	r4, r4, r5
 8015f1e:	e755      	b.n	8015dcc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8015f20:	4264      	negs	r4, r4
 8015f22:	fb94 fef6 	sdiv	lr, r4, r6
 8015f26:	f1ce 0800 	rsb	r8, lr, #0
 8015f2a:	fb06 441e 	mls	r4, r6, lr, r4
 8015f2e:	f8c0 8000 	str.w	r8, [r0]
 8015f32:	6104      	str	r4, [r0, #16]
 8015f34:	2c00      	cmp	r4, #0
 8015f36:	f43f af6e 	beq.w	8015e16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8015f3a:	ea6f 0e0e 	mvn.w	lr, lr
 8015f3e:	1b34      	subs	r4, r6, r4
 8015f40:	f8c0 e000 	str.w	lr, [r0]
 8015f44:	e766      	b.n	8015e14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8015f46:	426d      	negs	r5, r5
 8015f48:	fb95 f4f6 	sdiv	r4, r5, r6
 8015f4c:	f1c4 0e00 	rsb	lr, r4, #0
 8015f50:	fb06 5514 	mls	r5, r6, r4, r5
 8015f54:	f8c0 e004 	str.w	lr, [r0, #4]
 8015f58:	6085      	str	r5, [r0, #8]
 8015f5a:	2d00      	cmp	r5, #0
 8015f5c:	f43f af64 	beq.w	8015e28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8015f60:	43e4      	mvns	r4, r4
 8015f62:	1b75      	subs	r5, r6, r5
 8015f64:	6044      	str	r4, [r0, #4]
 8015f66:	e75e      	b.n	8015e26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8015f68:	3d800000 	.word	0x3d800000

08015f6c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8015f6c:	4b01      	ldr	r3, [pc, #4]	; (8015f74 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8015f6e:	6018      	str	r0, [r3, #0]
 8015f70:	4770      	bx	lr
 8015f72:	bf00      	nop
 8015f74:	24001710 	.word	0x24001710

08015f78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8015f78:	4b06      	ldr	r3, [pc, #24]	; (8015f94 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8015f7a:	881a      	ldrh	r2, [r3, #0]
 8015f7c:	4282      	cmp	r2, r0
 8015f7e:	d807      	bhi.n	8015f90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8015f80:	4b05      	ldr	r3, [pc, #20]	; (8015f98 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8015f82:	881b      	ldrh	r3, [r3, #0]
 8015f84:	4413      	add	r3, r2
 8015f86:	4298      	cmp	r0, r3
 8015f88:	bfac      	ite	ge
 8015f8a:	2000      	movge	r0, #0
 8015f8c:	2001      	movlt	r0, #1
 8015f8e:	4770      	bx	lr
 8015f90:	2000      	movs	r0, #0
 8015f92:	4770      	bx	lr
 8015f94:	24001730 	.word	0x24001730
 8015f98:	24001734 	.word	0x24001734

08015f9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015f9c:	b508      	push	{r3, lr}
 8015f9e:	4601      	mov	r1, r0
 8015fa0:	f7ff ffea 	bl	8015f78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8015fa4:	b118      	cbz	r0, 8015fae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8015fa6:	4b02      	ldr	r3, [pc, #8]	; (8015fb0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015fa8:	681b      	ldr	r3, [r3, #0]
 8015faa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8015fae:	bd08      	pop	{r3, pc}
 8015fb0:	24001714 	.word	0x24001714

08015fb4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8015fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015fb6:	4c24      	ldr	r4, [pc, #144]	; (8016048 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015fb8:	6823      	ldr	r3, [r4, #0]
 8015fba:	2b00      	cmp	r3, #0
 8015fbc:	d042      	beq.n	8016044 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015fbe:	4a23      	ldr	r2, [pc, #140]	; (801604c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8015fc0:	4d23      	ldr	r5, [pc, #140]	; (8016050 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8015fc2:	8811      	ldrh	r1, [r2, #0]
 8015fc4:	f8b5 c000 	ldrh.w	ip, [r5]
 8015fc8:	4822      	ldr	r0, [pc, #136]	; (8016054 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015fca:	4461      	add	r1, ip
 8015fcc:	1c4a      	adds	r2, r1, #1
 8015fce:	008f      	lsls	r7, r1, #2
 8015fd0:	f022 0201 	bic.w	r2, r2, #1
 8015fd4:	19de      	adds	r6, r3, r7
 8015fd6:	0412      	lsls	r2, r2, #16
 8015fd8:	6006      	str	r6, [r0, #0]
 8015fda:	4e1f      	ldr	r6, [pc, #124]	; (8016058 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8015fdc:	0c12      	lsrs	r2, r2, #16
 8015fde:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8015fe2:	19da      	adds	r2, r3, r7
 8015fe4:	6032      	str	r2, [r6, #0]
 8015fe6:	220e      	movs	r2, #14
 8015fe8:	fb02 f20c 	mul.w	r2, r2, ip
 8015fec:	3203      	adds	r2, #3
 8015fee:	f022 0203 	bic.w	r2, r2, #3
 8015ff2:	443a      	add	r2, r7
 8015ff4:	4f19      	ldr	r7, [pc, #100]	; (801605c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8015ff6:	4413      	add	r3, r2
 8015ff8:	603b      	str	r3, [r7, #0]
 8015ffa:	2300      	movs	r3, #0
 8015ffc:	4f18      	ldr	r7, [pc, #96]	; (8016060 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8015ffe:	469c      	mov	ip, r3
 8016000:	803b      	strh	r3, [r7, #0]
 8016002:	4f18      	ldr	r7, [pc, #96]	; (8016064 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8016004:	683f      	ldr	r7, [r7, #0]
 8016006:	1aba      	subs	r2, r7, r2
 8016008:	4f17      	ldr	r7, [pc, #92]	; (8016068 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801600a:	603a      	str	r2, [r7, #0]
 801600c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8016010:	4a16      	ldr	r2, [pc, #88]	; (801606c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8016012:	8013      	strh	r3, [r2, #0]
 8016014:	428b      	cmp	r3, r1
 8016016:	d10d      	bne.n	8016034 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8016018:	882d      	ldrh	r5, [r5, #0]
 801601a:	2300      	movs	r3, #0
 801601c:	6830      	ldr	r0, [r6, #0]
 801601e:	240e      	movs	r4, #14
 8016020:	429d      	cmp	r5, r3
 8016022:	d90f      	bls.n	8016044 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016024:	fb04 0203 	mla	r2, r4, r3, r0
 8016028:	3301      	adds	r3, #1
 801602a:	7b11      	ldrb	r1, [r2, #12]
 801602c:	f36f 1145 	bfc	r1, #5, #1
 8016030:	7311      	strb	r1, [r2, #12]
 8016032:	e7f5      	b.n	8016020 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8016034:	6822      	ldr	r2, [r4, #0]
 8016036:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801603a:	6802      	ldr	r2, [r0, #0]
 801603c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8016040:	3301      	adds	r3, #1
 8016042:	e7e7      	b.n	8016014 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8016044:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016046:	bf00      	nop
 8016048:	24001714 	.word	0x24001714
 801604c:	24001730 	.word	0x24001730
 8016050:	24001734 	.word	0x24001734
 8016054:	24001728 	.word	0x24001728
 8016058:	24001718 	.word	0x24001718
 801605c:	24001720 	.word	0x24001720
 8016060:	24001732 	.word	0x24001732
 8016064:	2400171c 	.word	0x2400171c
 8016068:	2400172c 	.word	0x2400172c
 801606c:	24001724 	.word	0x24001724

08016070 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8016070:	4b06      	ldr	r3, [pc, #24]	; (801608c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8016072:	681b      	ldr	r3, [r3, #0]
 8016074:	b943      	cbnz	r3, 8016088 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016076:	b139      	cbz	r1, 8016088 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016078:	4b05      	ldr	r3, [pc, #20]	; (8016090 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801607a:	801a      	strh	r2, [r3, #0]
 801607c:	4b05      	ldr	r3, [pc, #20]	; (8016094 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801607e:	6019      	str	r1, [r3, #0]
 8016080:	4b05      	ldr	r3, [pc, #20]	; (8016098 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8016082:	6018      	str	r0, [r3, #0]
 8016084:	f7ff bf96 	b.w	8015fb4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8016088:	4770      	bx	lr
 801608a:	bf00      	nop
 801608c:	24001720 	.word	0x24001720
 8016090:	24001734 	.word	0x24001734
 8016094:	2400171c 	.word	0x2400171c
 8016098:	24001714 	.word	0x24001714

0801609c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801609c:	b470      	push	{r4, r5, r6}
 801609e:	4c07      	ldr	r4, [pc, #28]	; (80160bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80160a0:	4605      	mov	r5, r0
 80160a2:	4610      	mov	r0, r2
 80160a4:	9a03      	ldr	r2, [sp, #12]
 80160a6:	6826      	ldr	r6, [r4, #0]
 80160a8:	b936      	cbnz	r6, 80160b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80160aa:	6025      	str	r5, [r4, #0]
 80160ac:	4c04      	ldr	r4, [pc, #16]	; (80160c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80160ae:	8021      	strh	r1, [r4, #0]
 80160b0:	4619      	mov	r1, r3
 80160b2:	bc70      	pop	{r4, r5, r6}
 80160b4:	f7ff bfdc 	b.w	8016070 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80160b8:	bc70      	pop	{r4, r5, r6}
 80160ba:	4770      	bx	lr
 80160bc:	24001738 	.word	0x24001738
 80160c0:	24001730 	.word	0x24001730

080160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80160c4:	4a12      	ldr	r2, [pc, #72]	; (8016110 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80160c6:	8803      	ldrh	r3, [r0, #0]
 80160c8:	8812      	ldrh	r2, [r2, #0]
 80160ca:	4293      	cmp	r3, r2
 80160cc:	d207      	bcs.n	80160de <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80160ce:	4a11      	ldr	r2, [pc, #68]	; (8016114 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80160d0:	2114      	movs	r1, #20
 80160d2:	6812      	ldr	r2, [r2, #0]
 80160d4:	fb01 2303 	mla	r3, r1, r3, r2
 80160d8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80160dc:	4770      	bx	lr
 80160de:	490e      	ldr	r1, [pc, #56]	; (8016118 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80160e0:	8809      	ldrh	r1, [r1, #0]
 80160e2:	4411      	add	r1, r2
 80160e4:	428b      	cmp	r3, r1
 80160e6:	da04      	bge.n	80160f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80160e8:	1a9b      	subs	r3, r3, r2
 80160ea:	4a0c      	ldr	r2, [pc, #48]	; (801611c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80160ec:	210e      	movs	r1, #14
 80160ee:	6812      	ldr	r2, [r2, #0]
 80160f0:	e7f0      	b.n	80160d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80160f2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80160f6:	4293      	cmp	r3, r2
 80160f8:	d108      	bne.n	801610c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80160fa:	4b09      	ldr	r3, [pc, #36]	; (8016120 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80160fc:	781b      	ldrb	r3, [r3, #0]
 80160fe:	b91b      	cbnz	r3, 8016108 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8016100:	4b08      	ldr	r3, [pc, #32]	; (8016124 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8016102:	f9b3 0000 	ldrsh.w	r0, [r3]
 8016106:	4770      	bx	lr
 8016108:	4b07      	ldr	r3, [pc, #28]	; (8016128 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801610a:	e7fa      	b.n	8016102 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801610c:	2000      	movs	r0, #0
 801610e:	4770      	bx	lr
 8016110:	24001730 	.word	0x24001730
 8016114:	24001738 	.word	0x24001738
 8016118:	24001734 	.word	0x24001734
 801611c:	24001718 	.word	0x24001718
 8016120:	240016a8 	.word	0x240016a8
 8016124:	240016aa 	.word	0x240016aa
 8016128:	240016ac 	.word	0x240016ac

0801612c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801612c:	4a12      	ldr	r2, [pc, #72]	; (8016178 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801612e:	8803      	ldrh	r3, [r0, #0]
 8016130:	8812      	ldrh	r2, [r2, #0]
 8016132:	4293      	cmp	r3, r2
 8016134:	d207      	bcs.n	8016146 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8016136:	4a11      	ldr	r2, [pc, #68]	; (801617c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8016138:	2114      	movs	r1, #20
 801613a:	6812      	ldr	r2, [r2, #0]
 801613c:	fb01 2303 	mla	r3, r1, r3, r2
 8016140:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8016144:	4770      	bx	lr
 8016146:	490e      	ldr	r1, [pc, #56]	; (8016180 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8016148:	8809      	ldrh	r1, [r1, #0]
 801614a:	4411      	add	r1, r2
 801614c:	428b      	cmp	r3, r1
 801614e:	da04      	bge.n	801615a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8016150:	1a9b      	subs	r3, r3, r2
 8016152:	4a0c      	ldr	r2, [pc, #48]	; (8016184 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8016154:	210e      	movs	r1, #14
 8016156:	6812      	ldr	r2, [r2, #0]
 8016158:	e7f0      	b.n	801613c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801615a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801615e:	4293      	cmp	r3, r2
 8016160:	d108      	bne.n	8016174 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8016162:	4b09      	ldr	r3, [pc, #36]	; (8016188 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8016164:	781b      	ldrb	r3, [r3, #0]
 8016166:	b91b      	cbnz	r3, 8016170 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8016168:	4b08      	ldr	r3, [pc, #32]	; (801618c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801616a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801616e:	4770      	bx	lr
 8016170:	4b07      	ldr	r3, [pc, #28]	; (8016190 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8016172:	e7fa      	b.n	801616a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8016174:	2000      	movs	r0, #0
 8016176:	4770      	bx	lr
 8016178:	24001730 	.word	0x24001730
 801617c:	24001738 	.word	0x24001738
 8016180:	24001734 	.word	0x24001734
 8016184:	24001718 	.word	0x24001718
 8016188:	240016a8 	.word	0x240016a8
 801618c:	240016ac 	.word	0x240016ac
 8016190:	240016aa 	.word	0x240016aa

08016194 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8016194:	4a1f      	ldr	r2, [pc, #124]	; (8016214 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8016196:	b510      	push	{r4, lr}
 8016198:	880b      	ldrh	r3, [r1, #0]
 801619a:	8812      	ldrh	r2, [r2, #0]
 801619c:	4293      	cmp	r3, r2
 801619e:	d213      	bcs.n	80161c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80161a0:	4a1d      	ldr	r2, [pc, #116]	; (8016218 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80161a2:	2114      	movs	r1, #20
 80161a4:	6812      	ldr	r2, [r2, #0]
 80161a6:	fb01 2303 	mla	r3, r1, r3, r2
 80161aa:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80161ae:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80161b2:	8a1a      	ldrh	r2, [r3, #16]
 80161b4:	8a5b      	ldrh	r3, [r3, #18]
 80161b6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80161ba:	8004      	strh	r4, [r0, #0]
 80161bc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80161c0:	8041      	strh	r1, [r0, #2]
 80161c2:	8082      	strh	r2, [r0, #4]
 80161c4:	80c3      	strh	r3, [r0, #6]
 80161c6:	e00e      	b.n	80161e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80161c8:	4914      	ldr	r1, [pc, #80]	; (801621c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80161ca:	8809      	ldrh	r1, [r1, #0]
 80161cc:	4411      	add	r1, r2
 80161ce:	428b      	cmp	r3, r1
 80161d0:	da0a      	bge.n	80161e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80161d2:	1a9b      	subs	r3, r3, r2
 80161d4:	4a12      	ldr	r2, [pc, #72]	; (8016220 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80161d6:	210e      	movs	r1, #14
 80161d8:	6812      	ldr	r2, [r2, #0]
 80161da:	fb01 2303 	mla	r3, r1, r3, r2
 80161de:	681a      	ldr	r2, [r3, #0]
 80161e0:	6002      	str	r2, [r0, #0]
 80161e2:	685a      	ldr	r2, [r3, #4]
 80161e4:	6042      	str	r2, [r0, #4]
 80161e6:	bd10      	pop	{r4, pc}
 80161e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80161ec:	4293      	cmp	r3, r2
 80161ee:	d10b      	bne.n	8016208 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80161f0:	4b0c      	ldr	r3, [pc, #48]	; (8016224 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80161f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80161f6:	4b0c      	ldr	r3, [pc, #48]	; (8016228 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80161f8:	8081      	strh	r1, [r0, #4]
 80161fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80161fe:	2300      	movs	r3, #0
 8016200:	80c2      	strh	r2, [r0, #6]
 8016202:	8003      	strh	r3, [r0, #0]
 8016204:	8043      	strh	r3, [r0, #2]
 8016206:	e7ee      	b.n	80161e6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8016208:	2300      	movs	r3, #0
 801620a:	8003      	strh	r3, [r0, #0]
 801620c:	8043      	strh	r3, [r0, #2]
 801620e:	8083      	strh	r3, [r0, #4]
 8016210:	e7d8      	b.n	80161c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8016212:	bf00      	nop
 8016214:	24001730 	.word	0x24001730
 8016218:	24001738 	.word	0x24001738
 801621c:	24001734 	.word	0x24001734
 8016220:	24001718 	.word	0x24001718
 8016224:	240016a4 	.word	0x240016a4
 8016228:	240016a6 	.word	0x240016a6

0801622c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801622c:	4a17      	ldr	r2, [pc, #92]	; (801628c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801622e:	8803      	ldrh	r3, [r0, #0]
 8016230:	8812      	ldrh	r2, [r2, #0]
 8016232:	4293      	cmp	r3, r2
 8016234:	d213      	bcs.n	801625e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8016236:	4a16      	ldr	r2, [pc, #88]	; (8016290 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8016238:	2114      	movs	r1, #20
 801623a:	6812      	ldr	r2, [r2, #0]
 801623c:	fb01 2303 	mla	r3, r1, r3, r2
 8016240:	8a1a      	ldrh	r2, [r3, #16]
 8016242:	8919      	ldrh	r1, [r3, #8]
 8016244:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016248:	428a      	cmp	r2, r1
 801624a:	db1d      	blt.n	8016288 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801624c:	8a58      	ldrh	r0, [r3, #18]
 801624e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016252:	895b      	ldrh	r3, [r3, #10]
 8016254:	4298      	cmp	r0, r3
 8016256:	bfac      	ite	ge
 8016258:	2000      	movge	r0, #0
 801625a:	2001      	movlt	r0, #1
 801625c:	4770      	bx	lr
 801625e:	490d      	ldr	r1, [pc, #52]	; (8016294 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8016260:	8809      	ldrh	r1, [r1, #0]
 8016262:	4411      	add	r1, r2
 8016264:	428b      	cmp	r3, r1
 8016266:	da0d      	bge.n	8016284 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8016268:	1a9b      	subs	r3, r3, r2
 801626a:	4a0b      	ldr	r2, [pc, #44]	; (8016298 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801626c:	210e      	movs	r1, #14
 801626e:	6812      	ldr	r2, [r2, #0]
 8016270:	fb01 2303 	mla	r3, r1, r3, r2
 8016274:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8016278:	891a      	ldrh	r2, [r3, #8]
 801627a:	4291      	cmp	r1, r2
 801627c:	db04      	blt.n	8016288 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801627e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8016282:	e7e6      	b.n	8016252 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8016284:	2000      	movs	r0, #0
 8016286:	4770      	bx	lr
 8016288:	2001      	movs	r0, #1
 801628a:	4770      	bx	lr
 801628c:	24001730 	.word	0x24001730
 8016290:	24001738 	.word	0x24001738
 8016294:	24001734 	.word	0x24001734
 8016298:	24001718 	.word	0x24001718

0801629c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801629c:	4a12      	ldr	r2, [pc, #72]	; (80162e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801629e:	8803      	ldrh	r3, [r0, #0]
 80162a0:	8811      	ldrh	r1, [r2, #0]
 80162a2:	428b      	cmp	r3, r1
 80162a4:	d20b      	bcs.n	80162be <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80162a6:	4a11      	ldr	r2, [pc, #68]	; (80162ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80162a8:	6812      	ldr	r2, [r2, #0]
 80162aa:	b112      	cbz	r2, 80162b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80162ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80162b0:	b9c0      	cbnz	r0, 80162e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80162b2:	4a0f      	ldr	r2, [pc, #60]	; (80162f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80162b4:	6811      	ldr	r1, [r2, #0]
 80162b6:	2214      	movs	r2, #20
 80162b8:	4353      	muls	r3, r2
 80162ba:	58c8      	ldr	r0, [r1, r3]
 80162bc:	4770      	bx	lr
 80162be:	4a0d      	ldr	r2, [pc, #52]	; (80162f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80162c0:	8812      	ldrh	r2, [r2, #0]
 80162c2:	440a      	add	r2, r1
 80162c4:	4293      	cmp	r3, r2
 80162c6:	da04      	bge.n	80162d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80162c8:	4a08      	ldr	r2, [pc, #32]	; (80162ec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80162ca:	6812      	ldr	r2, [r2, #0]
 80162cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80162d0:	4770      	bx	lr
 80162d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80162d6:	4293      	cmp	r3, r2
 80162d8:	d103      	bne.n	80162e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80162da:	4b07      	ldr	r3, [pc, #28]	; (80162f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80162dc:	681b      	ldr	r3, [r3, #0]
 80162de:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80162e0:	4770      	bx	lr
 80162e2:	2000      	movs	r0, #0
 80162e4:	4770      	bx	lr
 80162e6:	bf00      	nop
 80162e8:	24001730 	.word	0x24001730
 80162ec:	24001714 	.word	0x24001714
 80162f0:	24001738 	.word	0x24001738
 80162f4:	24001734 	.word	0x24001734
 80162f8:	240016b0 	.word	0x240016b0

080162fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80162fc:	4b24      	ldr	r3, [pc, #144]	; (8016390 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80162fe:	8802      	ldrh	r2, [r0, #0]
 8016300:	8818      	ldrh	r0, [r3, #0]
 8016302:	4282      	cmp	r2, r0
 8016304:	d221      	bcs.n	801634a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8016306:	4b23      	ldr	r3, [pc, #140]	; (8016394 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8016308:	6819      	ldr	r1, [r3, #0]
 801630a:	2314      	movs	r3, #20
 801630c:	fb03 1302 	mla	r3, r3, r2, r1
 8016310:	6858      	ldr	r0, [r3, #4]
 8016312:	2800      	cmp	r0, #0
 8016314:	d03a      	beq.n	801638c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016316:	4920      	ldr	r1, [pc, #128]	; (8016398 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016318:	6809      	ldr	r1, [r1, #0]
 801631a:	2900      	cmp	r1, #0
 801631c:	d036      	beq.n	801638c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801631e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8016322:	2900      	cmp	r1, #0
 8016324:	d032      	beq.n	801638c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8016326:	891a      	ldrh	r2, [r3, #8]
 8016328:	8958      	ldrh	r0, [r3, #10]
 801632a:	4350      	muls	r0, r2
 801632c:	7c5a      	ldrb	r2, [r3, #17]
 801632e:	7cdb      	ldrb	r3, [r3, #19]
 8016330:	0952      	lsrs	r2, r2, #5
 8016332:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8016336:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801633a:	2b0b      	cmp	r3, #11
 801633c:	bf18      	it	ne
 801633e:	0040      	lslne	r0, r0, #1
 8016340:	3003      	adds	r0, #3
 8016342:	f020 0003 	bic.w	r0, r0, #3
 8016346:	4408      	add	r0, r1
 8016348:	4770      	bx	lr
 801634a:	4b14      	ldr	r3, [pc, #80]	; (801639c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801634c:	881b      	ldrh	r3, [r3, #0]
 801634e:	4403      	add	r3, r0
 8016350:	429a      	cmp	r2, r3
 8016352:	da1a      	bge.n	801638a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016354:	4b12      	ldr	r3, [pc, #72]	; (80163a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8016356:	1a10      	subs	r0, r2, r0
 8016358:	210e      	movs	r1, #14
 801635a:	681b      	ldr	r3, [r3, #0]
 801635c:	fb01 3000 	mla	r0, r1, r0, r3
 8016360:	7b03      	ldrb	r3, [r0, #12]
 8016362:	f003 031f 	and.w	r3, r3, #31
 8016366:	2b0b      	cmp	r3, #11
 8016368:	d10b      	bne.n	8016382 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801636a:	8903      	ldrh	r3, [r0, #8]
 801636c:	8940      	ldrh	r0, [r0, #10]
 801636e:	4358      	muls	r0, r3
 8016370:	4b09      	ldr	r3, [pc, #36]	; (8016398 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8016372:	3003      	adds	r0, #3
 8016374:	6819      	ldr	r1, [r3, #0]
 8016376:	f020 0303 	bic.w	r3, r0, #3
 801637a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801637e:	4418      	add	r0, r3
 8016380:	4770      	bx	lr
 8016382:	2b0d      	cmp	r3, #13
 8016384:	d101      	bne.n	801638a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8016386:	300d      	adds	r0, #13
 8016388:	4770      	bx	lr
 801638a:	2000      	movs	r0, #0
 801638c:	4770      	bx	lr
 801638e:	bf00      	nop
 8016390:	24001730 	.word	0x24001730
 8016394:	24001738 	.word	0x24001738
 8016398:	24001714 	.word	0x24001714
 801639c:	24001734 	.word	0x24001734
 80163a0:	24001718 	.word	0x24001718

080163a4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80163a4:	4a17      	ldr	r2, [pc, #92]	; (8016404 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80163a6:	b510      	push	{r4, lr}
 80163a8:	8803      	ldrh	r3, [r0, #0]
 80163aa:	8812      	ldrh	r2, [r2, #0]
 80163ac:	4293      	cmp	r3, r2
 80163ae:	d20c      	bcs.n	80163ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80163b0:	4a15      	ldr	r2, [pc, #84]	; (8016408 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80163b2:	2114      	movs	r1, #20
 80163b4:	6812      	ldr	r2, [r2, #0]
 80163b6:	fb01 2303 	mla	r3, r1, r3, r2
 80163ba:	7c58      	ldrb	r0, [r3, #17]
 80163bc:	0942      	lsrs	r2, r0, #5
 80163be:	7cd8      	ldrb	r0, [r3, #19]
 80163c0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80163c4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80163c8:	bd10      	pop	{r4, pc}
 80163ca:	4910      	ldr	r1, [pc, #64]	; (801640c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80163cc:	8809      	ldrh	r1, [r1, #0]
 80163ce:	4411      	add	r1, r2
 80163d0:	428b      	cmp	r3, r1
 80163d2:	da09      	bge.n	80163e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80163d4:	1a9b      	subs	r3, r3, r2
 80163d6:	4a0e      	ldr	r2, [pc, #56]	; (8016410 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80163d8:	210e      	movs	r1, #14
 80163da:	6812      	ldr	r2, [r2, #0]
 80163dc:	fb01 2303 	mla	r3, r1, r3, r2
 80163e0:	7b18      	ldrb	r0, [r3, #12]
 80163e2:	f000 001f 	and.w	r0, r0, #31
 80163e6:	e7ef      	b.n	80163c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80163e8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80163ec:	4293      	cmp	r3, r2
 80163ee:	d106      	bne.n	80163fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80163f0:	f7f4 fd1e 	bl	800ae30 <_ZN8touchgfx3HAL3lcdEv>
 80163f4:	6803      	ldr	r3, [r0, #0]
 80163f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80163fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163fc:	4718      	bx	r3
 80163fe:	2000      	movs	r0, #0
 8016400:	e7e2      	b.n	80163c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8016402:	bf00      	nop
 8016404:	24001730 	.word	0x24001730
 8016408:	24001738 	.word	0x24001738
 801640c:	24001734 	.word	0x24001734
 8016410:	24001718 	.word	0x24001718

08016414 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8016414:	2010      	movs	r0, #16
 8016416:	4770      	bx	lr

08016418 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8016418:	2000      	movs	r0, #0
 801641a:	4770      	bx	lr

0801641c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801641c:	4b02      	ldr	r3, [pc, #8]	; (8016428 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801641e:	8818      	ldrh	r0, [r3, #0]
 8016420:	0040      	lsls	r0, r0, #1
 8016422:	b280      	uxth	r0, r0
 8016424:	4770      	bx	lr
 8016426:	bf00      	nop
 8016428:	240016aa 	.word	0x240016aa

0801642c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801642c:	2bff      	cmp	r3, #255	; 0xff
 801642e:	d050      	beq.n	80164d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8016430:	2a0b      	cmp	r2, #11
 8016432:	d04a      	beq.n	80164ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8016434:	d80e      	bhi.n	8016454 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8016436:	2a03      	cmp	r2, #3
 8016438:	d03f      	beq.n	80164ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801643a:	d804      	bhi.n	8016446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801643c:	2a01      	cmp	r2, #1
 801643e:	d03e      	beq.n	80164be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8016440:	d93f      	bls.n	80164c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8016442:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8016444:	4770      	bx	lr
 8016446:	2a09      	cmp	r2, #9
 8016448:	d03f      	beq.n	80164ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801644a:	d83c      	bhi.n	80164c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801644c:	2a08      	cmp	r2, #8
 801644e:	d03a      	beq.n	80164c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8016450:	2000      	movs	r0, #0
 8016452:	4770      	bx	lr
 8016454:	2a2f      	cmp	r2, #47	; 0x2f
 8016456:	d024      	beq.n	80164a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8016458:	d80d      	bhi.n	8016476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801645a:	2a2d      	cmp	r2, #45	; 0x2d
 801645c:	d014      	beq.n	8016488 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801645e:	d826      	bhi.n	80164ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8016460:	2a2c      	cmp	r2, #44	; 0x2c
 8016462:	d1f5      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016464:	684b      	ldr	r3, [r1, #4]
 8016466:	781b      	ldrb	r3, [r3, #0]
 8016468:	2b01      	cmp	r3, #1
 801646a:	d018      	beq.n	801649e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801646c:	d323      	bcc.n	80164b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801646e:	2b02      	cmp	r3, #2
 8016470:	d1ee      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016472:	6880      	ldr	r0, [r0, #8]
 8016474:	4770      	bx	lr
 8016476:	2a31      	cmp	r2, #49	; 0x31
 8016478:	d004      	beq.n	8016484 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801647a:	d328      	bcc.n	80164ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801647c:	2a32      	cmp	r2, #50	; 0x32
 801647e:	d026      	beq.n	80164ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016480:	2a33      	cmp	r2, #51	; 0x33
 8016482:	d1e5      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016484:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8016486:	4770      	bx	lr
 8016488:	684b      	ldr	r3, [r1, #4]
 801648a:	781b      	ldrb	r3, [r3, #0]
 801648c:	2b01      	cmp	r3, #1
 801648e:	d004      	beq.n	801649a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016490:	d30b      	bcc.n	80164aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8016492:	2b02      	cmp	r3, #2
 8016494:	d1dc      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016496:	6900      	ldr	r0, [r0, #16]
 8016498:	4770      	bx	lr
 801649a:	6a00      	ldr	r0, [r0, #32]
 801649c:	4770      	bx	lr
 801649e:	6980      	ldr	r0, [r0, #24]
 80164a0:	4770      	bx	lr
 80164a2:	684b      	ldr	r3, [r1, #4]
 80164a4:	781b      	ldrb	r3, [r3, #0]
 80164a6:	2b00      	cmp	r3, #0
 80164a8:	d1d2      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80164aa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80164ac:	4770      	bx	lr
 80164ae:	684b      	ldr	r3, [r1, #4]
 80164b0:	781b      	ldrb	r3, [r3, #0]
 80164b2:	2b00      	cmp	r3, #0
 80164b4:	d1cc      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80164b6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80164b8:	4770      	bx	lr
 80164ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80164bc:	4770      	bx	lr
 80164be:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80164c0:	4770      	bx	lr
 80164c2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80164c4:	4770      	bx	lr
 80164c6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80164c8:	4770      	bx	lr
 80164ca:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80164cc:	4770      	bx	lr
 80164ce:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80164d0:	4770      	bx	lr
 80164d2:	2a0b      	cmp	r2, #11
 80164d4:	d049      	beq.n	801656a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80164d6:	d80e      	bhi.n	80164f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80164d8:	2a03      	cmp	r2, #3
 80164da:	d040      	beq.n	801655e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80164dc:	d804      	bhi.n	80164e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80164de:	2a01      	cmp	r2, #1
 80164e0:	d03f      	beq.n	8016562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80164e2:	d940      	bls.n	8016566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80164e4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80164e6:	4770      	bx	lr
 80164e8:	2a09      	cmp	r2, #9
 80164ea:	d03e      	beq.n	801656a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80164ec:	d801      	bhi.n	80164f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80164ee:	2a08      	cmp	r2, #8
 80164f0:	d1ae      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80164f2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80164f4:	4770      	bx	lr
 80164f6:	2a2f      	cmp	r2, #47	; 0x2f
 80164f8:	d024      	beq.n	8016544 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80164fa:	d80d      	bhi.n	8016518 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80164fc:	2a2d      	cmp	r2, #45	; 0x2d
 80164fe:	d014      	beq.n	801652a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8016500:	d826      	bhi.n	8016550 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8016502:	2a2c      	cmp	r2, #44	; 0x2c
 8016504:	d1a4      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016506:	684b      	ldr	r3, [r1, #4]
 8016508:	781b      	ldrb	r3, [r3, #0]
 801650a:	2b01      	cmp	r3, #1
 801650c:	d018      	beq.n	8016540 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801650e:	d324      	bcc.n	801655a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8016510:	2b02      	cmp	r3, #2
 8016512:	d19d      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016514:	68c0      	ldr	r0, [r0, #12]
 8016516:	4770      	bx	lr
 8016518:	2a31      	cmp	r2, #49	; 0x31
 801651a:	d004      	beq.n	8016526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801651c:	d327      	bcc.n	801656e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801651e:	2a32      	cmp	r2, #50	; 0x32
 8016520:	d025      	beq.n	801656e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8016522:	2a33      	cmp	r2, #51	; 0x33
 8016524:	d194      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016526:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8016528:	4770      	bx	lr
 801652a:	684b      	ldr	r3, [r1, #4]
 801652c:	781b      	ldrb	r3, [r3, #0]
 801652e:	2b01      	cmp	r3, #1
 8016530:	d004      	beq.n	801653c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8016532:	d30b      	bcc.n	801654c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8016534:	2b02      	cmp	r3, #2
 8016536:	d18b      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8016538:	6940      	ldr	r0, [r0, #20]
 801653a:	4770      	bx	lr
 801653c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801653e:	4770      	bx	lr
 8016540:	69c0      	ldr	r0, [r0, #28]
 8016542:	4770      	bx	lr
 8016544:	684b      	ldr	r3, [r1, #4]
 8016546:	781b      	ldrb	r3, [r3, #0]
 8016548:	2b00      	cmp	r3, #0
 801654a:	d181      	bne.n	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801654c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801654e:	4770      	bx	lr
 8016550:	684b      	ldr	r3, [r1, #4]
 8016552:	781b      	ldrb	r3, [r3, #0]
 8016554:	2b00      	cmp	r3, #0
 8016556:	f47f af7b 	bne.w	8016450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801655a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801655c:	4770      	bx	lr
 801655e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8016560:	4770      	bx	lr
 8016562:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8016564:	4770      	bx	lr
 8016566:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8016568:	4770      	bx	lr
 801656a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801656c:	4770      	bx	lr
 801656e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8016570:	4770      	bx	lr

08016572 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016572:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016576:	b087      	sub	sp, #28
 8016578:	9815      	ldr	r0, [sp, #84]	; 0x54
 801657a:	9205      	str	r2, [sp, #20]
 801657c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016580:	9101      	str	r1, [sp, #4]
 8016582:	9202      	str	r2, [sp, #8]
 8016584:	6841      	ldr	r1, [r0, #4]
 8016586:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801658a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801658e:	fb01 2404 	mla	r4, r1, r4, r2
 8016592:	6802      	ldr	r2, [r0, #0]
 8016594:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016598:	f8de 2000 	ldr.w	r2, [lr]
 801659c:	9203      	str	r2, [sp, #12]
 801659e:	f8de 2004 	ldr.w	r2, [lr, #4]
 80165a2:	3204      	adds	r2, #4
 80165a4:	9204      	str	r2, [sp, #16]
 80165a6:	9a02      	ldr	r2, [sp, #8]
 80165a8:	43d6      	mvns	r6, r2
 80165aa:	b2f6      	uxtb	r6, r6
 80165ac:	9a01      	ldr	r2, [sp, #4]
 80165ae:	2a00      	cmp	r2, #0
 80165b0:	dc03      	bgt.n	80165ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80165b2:	9a05      	ldr	r2, [sp, #20]
 80165b4:	2a00      	cmp	r2, #0
 80165b6:	f340 8129 	ble.w	801680c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80165ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80165bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80165c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80165c6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80165ca:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80165ce:	2b00      	cmp	r3, #0
 80165d0:	dd0e      	ble.n	80165f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80165d2:	1408      	asrs	r0, r1, #16
 80165d4:	d405      	bmi.n	80165e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165d6:	4560      	cmp	r0, ip
 80165d8:	da03      	bge.n	80165e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165da:	1410      	asrs	r0, r2, #16
 80165dc:	d401      	bmi.n	80165e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165de:	42b8      	cmp	r0, r7
 80165e0:	db07      	blt.n	80165f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80165e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80165e4:	3b01      	subs	r3, #1
 80165e6:	3402      	adds	r4, #2
 80165e8:	4401      	add	r1, r0
 80165ea:	9814      	ldr	r0, [sp, #80]	; 0x50
 80165ec:	4402      	add	r2, r0
 80165ee:	e7ee      	b.n	80165ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80165f0:	d071      	beq.n	80166d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165f2:	1e58      	subs	r0, r3, #1
 80165f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80165f6:	fb05 1500 	mla	r5, r5, r0, r1
 80165fa:	142d      	asrs	r5, r5, #16
 80165fc:	d45f      	bmi.n	80166be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80165fe:	4565      	cmp	r5, ip
 8016600:	da5d      	bge.n	80166be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016602:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016604:	fb05 2000 	mla	r0, r5, r0, r2
 8016608:	1400      	asrs	r0, r0, #16
 801660a:	d458      	bmi.n	80166be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801660c:	42b8      	cmp	r0, r7
 801660e:	da56      	bge.n	80166be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016610:	4699      	mov	r9, r3
 8016612:	46a2      	mov	sl, r4
 8016614:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8016618:	f1b9 0f00 	cmp.w	r9, #0
 801661c:	dd57      	ble.n	80166ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801661e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8016622:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016626:	9803      	ldr	r0, [sp, #12]
 8016628:	140d      	asrs	r5, r1, #16
 801662a:	f109 39ff 	add.w	r9, r9, #4294967295
 801662e:	fb07 000c 	mla	r0, r7, ip, r0
 8016632:	5d40      	ldrb	r0, [r0, r5]
 8016634:	9d04      	ldr	r5, [sp, #16]
 8016636:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801663a:	f8ba 5000 	ldrh.w	r5, [sl]
 801663e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016642:	122f      	asrs	r7, r5, #8
 8016644:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016648:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801664c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016650:	00ed      	lsls	r5, r5, #3
 8016652:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016656:	fb17 f706 	smulbb	r7, r7, r6
 801665a:	b2ed      	uxtb	r5, r5
 801665c:	fb18 f806 	smulbb	r8, r8, r6
 8016660:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016664:	10c7      	asrs	r7, r0, #3
 8016666:	fb15 f506 	smulbb	r5, r5, r6
 801666a:	00c0      	lsls	r0, r0, #3
 801666c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016670:	fa1f fc8c 	uxth.w	ip, ip
 8016674:	b2c0      	uxtb	r0, r0
 8016676:	fb07 870b 	mla	r7, r7, fp, r8
 801667a:	fb00 500b 	mla	r0, r0, fp, r5
 801667e:	f10c 0501 	add.w	r5, ip, #1
 8016682:	b2bf      	uxth	r7, r7
 8016684:	b280      	uxth	r0, r0
 8016686:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801668a:	f107 0801 	add.w	r8, r7, #1
 801668e:	1c45      	adds	r5, r0, #1
 8016690:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016694:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016698:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801669c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801669e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80166a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80166a6:	4401      	add	r1, r0
 80166a8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80166ac:	9814      	ldr	r0, [sp, #80]	; 0x50
 80166ae:	ea45 0c0c 	orr.w	ip, r5, ip
 80166b2:	4402      	add	r2, r0
 80166b4:	ea4c 0c08 	orr.w	ip, ip, r8
 80166b8:	f82a cb02 	strh.w	ip, [sl], #2
 80166bc:	e7ac      	b.n	8016618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80166be:	f04f 0800 	mov.w	r8, #0
 80166c2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80166c6:	eb03 0008 	add.w	r0, r3, r8
 80166ca:	2800      	cmp	r0, #0
 80166cc:	dc41      	bgt.n	8016752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80166ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80166d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166d6:	9b01      	ldr	r3, [sp, #4]
 80166d8:	2b00      	cmp	r3, #0
 80166da:	f340 8097 	ble.w	801680c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80166de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80166e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166ec:	eef0 6a62 	vmov.f32	s13, s5
 80166f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80166f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80166fc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8016700:	eef0 6a43 	vmov.f32	s13, s6
 8016704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016708:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801670c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016710:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016714:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016718:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801671c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016720:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016724:	ee12 2a90 	vmov	r2, s5
 8016728:	eef0 2a47 	vmov.f32	s5, s14
 801672c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016730:	ee13 2a10 	vmov	r2, s6
 8016734:	9313      	str	r3, [sp, #76]	; 0x4c
 8016736:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016738:	eeb0 3a67 	vmov.f32	s6, s15
 801673c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016740:	9314      	str	r3, [sp, #80]	; 0x50
 8016742:	9b01      	ldr	r3, [sp, #4]
 8016744:	9a05      	ldr	r2, [sp, #20]
 8016746:	3b01      	subs	r3, #1
 8016748:	9301      	str	r3, [sp, #4]
 801674a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801674c:	bf08      	it	eq
 801674e:	4613      	moveq	r3, r2
 8016750:	e72c      	b.n	80165ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016752:	140f      	asrs	r7, r1, #16
 8016754:	d453      	bmi.n	80167fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016756:	f8de 5008 	ldr.w	r5, [lr, #8]
 801675a:	42bd      	cmp	r5, r7
 801675c:	dd4f      	ble.n	80167fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801675e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016762:	d44c      	bmi.n	80167fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016764:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016768:	4560      	cmp	r0, ip
 801676a:	dd48      	ble.n	80167fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801676c:	9803      	ldr	r0, [sp, #12]
 801676e:	b22d      	sxth	r5, r5
 8016770:	fb0c 0505 	mla	r5, ip, r5, r0
 8016774:	5de8      	ldrb	r0, [r5, r7]
 8016776:	9d04      	ldr	r5, [sp, #16]
 8016778:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801677c:	f06f 0501 	mvn.w	r5, #1
 8016780:	fb05 fb08 	mul.w	fp, r5, r8
 8016784:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016788:	f834 500b 	ldrh.w	r5, [r4, fp]
 801678c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016790:	122f      	asrs	r7, r5, #8
 8016792:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016796:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801679a:	00ed      	lsls	r5, r5, #3
 801679c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80167a0:	fb17 f706 	smulbb	r7, r7, r6
 80167a4:	b2ed      	uxtb	r5, r5
 80167a6:	fb19 f906 	smulbb	r9, r9, r6
 80167aa:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80167ae:	10c7      	asrs	r7, r0, #3
 80167b0:	fb15 f506 	smulbb	r5, r5, r6
 80167b4:	00c0      	lsls	r0, r0, #3
 80167b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80167ba:	fa1f fc8c 	uxth.w	ip, ip
 80167be:	b2c0      	uxtb	r0, r0
 80167c0:	fb07 970a 	mla	r7, r7, sl, r9
 80167c4:	fb00 500a 	mla	r0, r0, sl, r5
 80167c8:	f10c 0501 	add.w	r5, ip, #1
 80167cc:	b2bf      	uxth	r7, r7
 80167ce:	b280      	uxth	r0, r0
 80167d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80167d4:	f107 0901 	add.w	r9, r7, #1
 80167d8:	1c45      	adds	r5, r0, #1
 80167da:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80167de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80167e2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80167e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80167ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80167ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80167f2:	ea45 0c0c 	orr.w	ip, r5, ip
 80167f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80167fa:	f824 c00b 	strh.w	ip, [r4, fp]
 80167fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016800:	f108 38ff 	add.w	r8, r8, #4294967295
 8016804:	4401      	add	r1, r0
 8016806:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016808:	4402      	add	r2, r0
 801680a:	e75c      	b.n	80166c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801680c:	b007      	add	sp, #28
 801680e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016812 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016812:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016816:	b085      	sub	sp, #20
 8016818:	4693      	mov	fp, r2
 801681a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801681e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016820:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016822:	6870      	ldr	r0, [r6, #4]
 8016824:	9100      	str	r1, [sp, #0]
 8016826:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801682a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801682e:	fb00 2404 	mla	r4, r0, r4, r2
 8016832:	6832      	ldr	r2, [r6, #0]
 8016834:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016838:	682a      	ldr	r2, [r5, #0]
 801683a:	9201      	str	r2, [sp, #4]
 801683c:	686a      	ldr	r2, [r5, #4]
 801683e:	3204      	adds	r2, #4
 8016840:	9202      	str	r2, [sp, #8]
 8016842:	9a00      	ldr	r2, [sp, #0]
 8016844:	2a00      	cmp	r2, #0
 8016846:	dc03      	bgt.n	8016850 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016848:	f1bb 0f00 	cmp.w	fp, #0
 801684c:	f340 80a0 	ble.w	8016990 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8016850:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016852:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016856:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801685a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801685c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016860:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016864:	2b00      	cmp	r3, #0
 8016866:	dd0c      	ble.n	8016882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016868:	1406      	asrs	r6, r0, #16
 801686a:	d405      	bmi.n	8016878 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801686c:	454e      	cmp	r6, r9
 801686e:	da03      	bge.n	8016878 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016870:	1416      	asrs	r6, r2, #16
 8016872:	d401      	bmi.n	8016878 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016874:	4546      	cmp	r6, r8
 8016876:	db05      	blt.n	8016884 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016878:	4470      	add	r0, lr
 801687a:	4462      	add	r2, ip
 801687c:	3b01      	subs	r3, #1
 801687e:	3402      	adds	r4, #2
 8016880:	e7f0      	b.n	8016864 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016882:	d00f      	beq.n	80168a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016884:	1e5e      	subs	r6, r3, #1
 8016886:	fb0e 0706 	mla	r7, lr, r6, r0
 801688a:	143f      	asrs	r7, r7, #16
 801688c:	d541      	bpl.n	8016912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801688e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016892:	4698      	mov	r8, r3
 8016894:	9603      	str	r6, [sp, #12]
 8016896:	f1b8 0f00 	cmp.w	r8, #0
 801689a:	dc59      	bgt.n	8016950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801689c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80168a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80168a4:	9b00      	ldr	r3, [sp, #0]
 80168a6:	2b00      	cmp	r3, #0
 80168a8:	dd72      	ble.n	8016990 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80168aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80168ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80168b4:	eeb0 6a62 	vmov.f32	s12, s5
 80168b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80168bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80168c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80168c8:	eeb0 6a43 	vmov.f32	s12, s6
 80168cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168d0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80168d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80168d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80168dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80168e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80168e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80168e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80168ec:	ee12 2a90 	vmov	r2, s5
 80168f0:	eef0 2a47 	vmov.f32	s5, s14
 80168f4:	fb92 fef3 	sdiv	lr, r2, r3
 80168f8:	ee13 2a10 	vmov	r2, s6
 80168fc:	eeb0 3a67 	vmov.f32	s6, s15
 8016900:	fb92 fcf3 	sdiv	ip, r2, r3
 8016904:	9b00      	ldr	r3, [sp, #0]
 8016906:	3b01      	subs	r3, #1
 8016908:	9300      	str	r3, [sp, #0]
 801690a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801690c:	bf08      	it	eq
 801690e:	465b      	moveq	r3, fp
 8016910:	e797      	b.n	8016842 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016912:	454f      	cmp	r7, r9
 8016914:	dabb      	bge.n	801688e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016916:	fb0c 2606 	mla	r6, ip, r6, r2
 801691a:	1436      	asrs	r6, r6, #16
 801691c:	d4b7      	bmi.n	801688e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801691e:	4546      	cmp	r6, r8
 8016920:	dab5      	bge.n	801688e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016922:	461e      	mov	r6, r3
 8016924:	46a0      	mov	r8, r4
 8016926:	2e00      	cmp	r6, #0
 8016928:	ddb8      	ble.n	801689c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801692a:	1417      	asrs	r7, r2, #16
 801692c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016930:	9901      	ldr	r1, [sp, #4]
 8016932:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016936:	4462      	add	r2, ip
 8016938:	4470      	add	r0, lr
 801693a:	fb0a 1707 	mla	r7, sl, r7, r1
 801693e:	9902      	ldr	r1, [sp, #8]
 8016940:	3e01      	subs	r6, #1
 8016942:	f817 7009 	ldrb.w	r7, [r7, r9]
 8016946:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801694a:	f828 7b02 	strh.w	r7, [r8], #2
 801694e:	e7ea      	b.n	8016926 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8016950:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016954:	d417      	bmi.n	8016986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016956:	68ae      	ldr	r6, [r5, #8]
 8016958:	454e      	cmp	r6, r9
 801695a:	dd14      	ble.n	8016986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801695c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016960:	d411      	bmi.n	8016986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016962:	68ef      	ldr	r7, [r5, #12]
 8016964:	4557      	cmp	r7, sl
 8016966:	dd0e      	ble.n	8016986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016968:	9f01      	ldr	r7, [sp, #4]
 801696a:	b236      	sxth	r6, r6
 801696c:	f06f 0101 	mvn.w	r1, #1
 8016970:	fb0a 7606 	mla	r6, sl, r6, r7
 8016974:	9f02      	ldr	r7, [sp, #8]
 8016976:	f816 6009 	ldrb.w	r6, [r6, r9]
 801697a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801697e:	fb01 f608 	mul.w	r6, r1, r8
 8016982:	9903      	ldr	r1, [sp, #12]
 8016984:	538f      	strh	r7, [r1, r6]
 8016986:	4470      	add	r0, lr
 8016988:	4462      	add	r2, ip
 801698a:	f108 38ff 	add.w	r8, r8, #4294967295
 801698e:	e782      	b.n	8016896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016990:	b005      	add	sp, #20
 8016992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016996 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016996:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801699a:	b087      	sub	sp, #28
 801699c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801699e:	9205      	str	r2, [sp, #20]
 80169a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80169a4:	9102      	str	r1, [sp, #8]
 80169a6:	9203      	str	r2, [sp, #12]
 80169a8:	6861      	ldr	r1, [r4, #4]
 80169aa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80169ae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80169b2:	fb01 2000 	mla	r0, r1, r0, r2
 80169b6:	6822      	ldr	r2, [r4, #0]
 80169b8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80169bc:	9200      	str	r2, [sp, #0]
 80169be:	f8dc 2000 	ldr.w	r2, [ip]
 80169c2:	9204      	str	r2, [sp, #16]
 80169c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80169c8:	3204      	adds	r2, #4
 80169ca:	9201      	str	r2, [sp, #4]
 80169cc:	9a03      	ldr	r2, [sp, #12]
 80169ce:	43d5      	mvns	r5, r2
 80169d0:	b2ed      	uxtb	r5, r5
 80169d2:	9a02      	ldr	r2, [sp, #8]
 80169d4:	2a00      	cmp	r2, #0
 80169d6:	dc03      	bgt.n	80169e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80169d8:	9a05      	ldr	r2, [sp, #20]
 80169da:	2a00      	cmp	r2, #0
 80169dc:	f340 812c 	ble.w	8016c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80169e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80169e2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80169e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80169ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80169ec:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80169f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80169f4:	2b00      	cmp	r3, #0
 80169f6:	dd10      	ble.n	8016a1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80169f8:	140c      	asrs	r4, r1, #16
 80169fa:	d405      	bmi.n	8016a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80169fc:	4574      	cmp	r4, lr
 80169fe:	da03      	bge.n	8016a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016a00:	1414      	asrs	r4, r2, #16
 8016a02:	d401      	bmi.n	8016a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016a04:	42bc      	cmp	r4, r7
 8016a06:	db09      	blt.n	8016a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016a08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016a0a:	3b01      	subs	r3, #1
 8016a0c:	9800      	ldr	r0, [sp, #0]
 8016a0e:	4421      	add	r1, r4
 8016a10:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016a12:	3002      	adds	r0, #2
 8016a14:	4422      	add	r2, r4
 8016a16:	9000      	str	r0, [sp, #0]
 8016a18:	e7ec      	b.n	80169f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016a1a:	d071      	beq.n	8016b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8016a1c:	1e5c      	subs	r4, r3, #1
 8016a1e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016a20:	fb06 1604 	mla	r6, r6, r4, r1
 8016a24:	1436      	asrs	r6, r6, #16
 8016a26:	d45d      	bmi.n	8016ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016a28:	4576      	cmp	r6, lr
 8016a2a:	da5b      	bge.n	8016ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016a2c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8016a2e:	fb06 2404 	mla	r4, r6, r4, r2
 8016a32:	1424      	asrs	r4, r4, #16
 8016a34:	d456      	bmi.n	8016ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016a36:	42bc      	cmp	r4, r7
 8016a38:	da54      	bge.n	8016ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016a3a:	4698      	mov	r8, r3
 8016a3c:	f8dd 9000 	ldr.w	r9, [sp]
 8016a40:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8016a44:	f1b8 0f00 	cmp.w	r8, #0
 8016a48:	dd54      	ble.n	8016af4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016a4a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016a4e:	1414      	asrs	r4, r2, #16
 8016a50:	9804      	ldr	r0, [sp, #16]
 8016a52:	140e      	asrs	r6, r1, #16
 8016a54:	f108 38ff 	add.w	r8, r8, #4294967295
 8016a58:	fb07 0404 	mla	r4, r7, r4, r0
 8016a5c:	9801      	ldr	r0, [sp, #4]
 8016a5e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8016a62:	f8b9 4000 	ldrh.w	r4, [r9]
 8016a66:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016a6a:	1227      	asrs	r7, r4, #8
 8016a6c:	eb00 0b0e 	add.w	fp, r0, lr
 8016a70:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8016a74:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016a7a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016a7e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016a82:	4401      	add	r1, r0
 8016a84:	fb16 f60a 	smulbb	r6, r6, sl
 8016a88:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016a8a:	fb1b fb0a 	smulbb	fp, fp, sl
 8016a8e:	fb07 6705 	mla	r7, r7, r5, r6
 8016a92:	10e6      	asrs	r6, r4, #3
 8016a94:	00e4      	lsls	r4, r4, #3
 8016a96:	4402      	add	r2, r0
 8016a98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a9c:	b2bf      	uxth	r7, r7
 8016a9e:	b2e4      	uxtb	r4, r4
 8016aa0:	fb06 b605 	mla	r6, r6, r5, fp
 8016aa4:	fb14 f405 	smulbb	r4, r4, r5
 8016aa8:	b2b6      	uxth	r6, r6
 8016aaa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8016aae:	1c7c      	adds	r4, r7, #1
 8016ab0:	f106 0b01 	add.w	fp, r6, #1
 8016ab4:	fa1f fe8e 	uxth.w	lr, lr
 8016ab8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016abc:	f10e 0401 	add.w	r4, lr, #1
 8016ac0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016ac4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016ac8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8016acc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016ad0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016ad4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016ad8:	4327      	orrs	r7, r4
 8016ada:	ea47 070b 	orr.w	r7, r7, fp
 8016ade:	f829 7b02 	strh.w	r7, [r9], #2
 8016ae2:	e7af      	b.n	8016a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8016ae4:	f04f 0e00 	mov.w	lr, #0
 8016ae8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8016aec:	eb03 040e 	add.w	r4, r3, lr
 8016af0:	2c00      	cmp	r4, #0
 8016af2:	dc43      	bgt.n	8016b7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016af4:	9a00      	ldr	r2, [sp, #0]
 8016af6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016afa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016afe:	9300      	str	r3, [sp, #0]
 8016b00:	9b02      	ldr	r3, [sp, #8]
 8016b02:	2b00      	cmp	r3, #0
 8016b04:	f340 8098 	ble.w	8016c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016b08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b16:	eef0 6a62 	vmov.f32	s13, s5
 8016b1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016b1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b26:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8016b2a:	eef0 6a43 	vmov.f32	s13, s6
 8016b2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b32:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8016b36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b4e:	ee12 2a90 	vmov	r2, s5
 8016b52:	eef0 2a47 	vmov.f32	s5, s14
 8016b56:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b5a:	ee13 2a10 	vmov	r2, s6
 8016b5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016b60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b62:	eeb0 3a67 	vmov.f32	s6, s15
 8016b66:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b6a:	9314      	str	r3, [sp, #80]	; 0x50
 8016b6c:	9b02      	ldr	r3, [sp, #8]
 8016b6e:	9a05      	ldr	r2, [sp, #20]
 8016b70:	3b01      	subs	r3, #1
 8016b72:	9302      	str	r3, [sp, #8]
 8016b74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b76:	bf08      	it	eq
 8016b78:	4613      	moveq	r3, r2
 8016b7a:	e72a      	b.n	80169d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016b7c:	140f      	asrs	r7, r1, #16
 8016b7e:	d454      	bmi.n	8016c2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016b80:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8016b84:	42be      	cmp	r6, r7
 8016b86:	dd50      	ble.n	8016c2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016b88:	ea5f 4822 	movs.w	r8, r2, asr #16
 8016b8c:	d44d      	bmi.n	8016c2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016b8e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8016b92:	4544      	cmp	r4, r8
 8016b94:	dd49      	ble.n	8016c2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016b96:	9c04      	ldr	r4, [sp, #16]
 8016b98:	b236      	sxth	r6, r6
 8016b9a:	f06f 0001 	mvn.w	r0, #1
 8016b9e:	fb08 4606 	mla	r6, r8, r6, r4
 8016ba2:	9c01      	ldr	r4, [sp, #4]
 8016ba4:	fb00 fa0e 	mul.w	sl, r0, lr
 8016ba8:	9800      	ldr	r0, [sp, #0]
 8016baa:	f816 8007 	ldrb.w	r8, [r6, r7]
 8016bae:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016bb2:	eb04 0b08 	add.w	fp, r4, r8
 8016bb6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8016bba:	9801      	ldr	r0, [sp, #4]
 8016bbc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016bc0:	1227      	asrs	r7, r4, #8
 8016bc2:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016bc6:	fb16 f609 	smulbb	r6, r6, r9
 8016bca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016bce:	f810 8008 	ldrb.w	r8, [r0, r8]
 8016bd2:	fb1b fb09 	smulbb	fp, fp, r9
 8016bd6:	fb07 6705 	mla	r7, r7, r5, r6
 8016bda:	10e6      	asrs	r6, r4, #3
 8016bdc:	00e4      	lsls	r4, r4, #3
 8016bde:	9800      	ldr	r0, [sp, #0]
 8016be0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016be4:	b2bf      	uxth	r7, r7
 8016be6:	b2e4      	uxtb	r4, r4
 8016be8:	fb06 b605 	mla	r6, r6, r5, fp
 8016bec:	fb14 f405 	smulbb	r4, r4, r5
 8016bf0:	b2b6      	uxth	r6, r6
 8016bf2:	fb08 4809 	mla	r8, r8, r9, r4
 8016bf6:	1c7c      	adds	r4, r7, #1
 8016bf8:	f106 0b01 	add.w	fp, r6, #1
 8016bfc:	fa1f f888 	uxth.w	r8, r8
 8016c00:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016c04:	f108 0401 	add.w	r4, r8, #1
 8016c08:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016c0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016c10:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8016c14:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016c18:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016c1c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016c20:	4327      	orrs	r7, r4
 8016c22:	ea47 070b 	orr.w	r7, r7, fp
 8016c26:	f820 700a 	strh.w	r7, [r0, sl]
 8016c2a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016c2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016c30:	4401      	add	r1, r0
 8016c32:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016c34:	4402      	add	r2, r0
 8016c36:	e759      	b.n	8016aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016c38:	b007      	add	sp, #28
 8016c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c44:	b085      	sub	sp, #20
 8016c46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016c4a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016c4c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016c4e:	9203      	str	r2, [sp, #12]
 8016c50:	6870      	ldr	r0, [r6, #4]
 8016c52:	686f      	ldr	r7, [r5, #4]
 8016c54:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8016c58:	3704      	adds	r7, #4
 8016c5a:	9101      	str	r1, [sp, #4]
 8016c5c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016c60:	fb00 2404 	mla	r4, r0, r4, r2
 8016c64:	6832      	ldr	r2, [r6, #0]
 8016c66:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016c6a:	682a      	ldr	r2, [r5, #0]
 8016c6c:	9202      	str	r2, [sp, #8]
 8016c6e:	9a01      	ldr	r2, [sp, #4]
 8016c70:	2a00      	cmp	r2, #0
 8016c72:	dc03      	bgt.n	8016c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016c74:	9a03      	ldr	r2, [sp, #12]
 8016c76:	2a00      	cmp	r2, #0
 8016c78:	f340 80cc 	ble.w	8016e14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016c7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016c7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016c82:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016c86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016c88:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016c8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016c90:	2b00      	cmp	r3, #0
 8016c92:	dd0d      	ble.n	8016cb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016c94:	1406      	asrs	r6, r0, #16
 8016c96:	d405      	bmi.n	8016ca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016c98:	454e      	cmp	r6, r9
 8016c9a:	da03      	bge.n	8016ca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016c9c:	1416      	asrs	r6, r2, #16
 8016c9e:	d401      	bmi.n	8016ca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016ca0:	4546      	cmp	r6, r8
 8016ca2:	db06      	blt.n	8016cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016ca4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8016ca6:	4460      	add	r0, ip
 8016ca8:	3b01      	subs	r3, #1
 8016caa:	3402      	adds	r4, #2
 8016cac:	4432      	add	r2, r6
 8016cae:	e7ef      	b.n	8016c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8016cb0:	d00f      	beq.n	8016cd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016cb2:	1e5e      	subs	r6, r3, #1
 8016cb4:	fb0c 0e06 	mla	lr, ip, r6, r0
 8016cb8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8016cbc:	d543      	bpl.n	8016d46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016cbe:	4698      	mov	r8, r3
 8016cc0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8016cc4:	f1b8 0f00 	cmp.w	r8, #0
 8016cc8:	dc71      	bgt.n	8016dae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8016cca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016cce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016cd2:	9b01      	ldr	r3, [sp, #4]
 8016cd4:	2b00      	cmp	r3, #0
 8016cd6:	f340 809d 	ble.w	8016e14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016cda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016cde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ce0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016ce4:	eeb0 6a62 	vmov.f32	s12, s5
 8016ce8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016cec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016cf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016cf4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016cf8:	eeb0 6a43 	vmov.f32	s12, s6
 8016cfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d00:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016d04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d1c:	ee12 2a90 	vmov	r2, s5
 8016d20:	eef0 2a47 	vmov.f32	s5, s14
 8016d24:	fb92 fcf3 	sdiv	ip, r2, r3
 8016d28:	ee13 2a10 	vmov	r2, s6
 8016d2c:	eeb0 3a67 	vmov.f32	s6, s15
 8016d30:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d34:	9312      	str	r3, [sp, #72]	; 0x48
 8016d36:	9b01      	ldr	r3, [sp, #4]
 8016d38:	9a03      	ldr	r2, [sp, #12]
 8016d3a:	3b01      	subs	r3, #1
 8016d3c:	9301      	str	r3, [sp, #4]
 8016d3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016d40:	bf08      	it	eq
 8016d42:	4613      	moveq	r3, r2
 8016d44:	e793      	b.n	8016c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8016d46:	45ce      	cmp	lr, r9
 8016d48:	dab9      	bge.n	8016cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016d4a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016d4c:	fb01 2606 	mla	r6, r1, r6, r2
 8016d50:	1436      	asrs	r6, r6, #16
 8016d52:	d4b4      	bmi.n	8016cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016d54:	4546      	cmp	r6, r8
 8016d56:	dab2      	bge.n	8016cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016d58:	4698      	mov	r8, r3
 8016d5a:	46a2      	mov	sl, r4
 8016d5c:	f1b8 0f00 	cmp.w	r8, #0
 8016d60:	ddb3      	ble.n	8016cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016d62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016d66:	1416      	asrs	r6, r2, #16
 8016d68:	9902      	ldr	r1, [sp, #8]
 8016d6a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8016d6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016d72:	4460      	add	r0, ip
 8016d74:	fb09 1606 	mla	r6, r9, r6, r1
 8016d78:	4928      	ldr	r1, [pc, #160]	; (8016e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8016d7a:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8016d7e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016d82:	eb07 0b0e 	add.w	fp, r7, lr
 8016d86:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8016d8a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8016d8e:	00f6      	lsls	r6, r6, #3
 8016d90:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8016d94:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016d96:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016d9a:	440a      	add	r2, r1
 8016d9c:	ea49 0606 	orr.w	r6, r9, r6
 8016da0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8016da4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8016da8:	f82a 6b02 	strh.w	r6, [sl], #2
 8016dac:	e7d6      	b.n	8016d5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016dae:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016db2:	d429      	bmi.n	8016e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016db4:	68ae      	ldr	r6, [r5, #8]
 8016db6:	454e      	cmp	r6, r9
 8016db8:	dd26      	ble.n	8016e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016dba:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8016dbe:	d423      	bmi.n	8016e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016dc0:	68e9      	ldr	r1, [r5, #12]
 8016dc2:	4559      	cmp	r1, fp
 8016dc4:	dd20      	ble.n	8016e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016dc6:	fa0f fe86 	sxth.w	lr, r6
 8016dca:	9902      	ldr	r1, [sp, #8]
 8016dcc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8016dd0:	f06f 0101 	mvn.w	r1, #1
 8016dd4:	f81e e009 	ldrb.w	lr, [lr, r9]
 8016dd8:	fb01 f908 	mul.w	r9, r1, r8
 8016ddc:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8016de0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016de4:	eb07 060e 	add.w	r6, r7, lr
 8016de8:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016dec:	7876      	ldrb	r6, [r6, #1]
 8016dee:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8016df2:	00f6      	lsls	r6, r6, #3
 8016df4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016df8:	ea4b 0606 	orr.w	r6, fp, r6
 8016dfc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8016e00:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8016e04:	f82a 6009 	strh.w	r6, [sl, r9]
 8016e08:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016e0a:	4460      	add	r0, ip
 8016e0c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016e10:	440a      	add	r2, r1
 8016e12:	e757      	b.n	8016cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016e14:	b005      	add	sp, #20
 8016e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e1a:	bf00      	nop
 8016e1c:	fffff800 	.word	0xfffff800

08016e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e24:	b087      	sub	sp, #28
 8016e26:	468b      	mov	fp, r1
 8016e28:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016e2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016e2e:	9204      	str	r2, [sp, #16]
 8016e30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016e34:	6841      	ldr	r1, [r0, #4]
 8016e36:	9205      	str	r2, [sp, #20]
 8016e38:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8016e3c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016e40:	fb01 2404 	mla	r4, r1, r4, r2
 8016e44:	6802      	ldr	r2, [r0, #0]
 8016e46:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016e4a:	f8dc 2000 	ldr.w	r2, [ip]
 8016e4e:	9201      	str	r2, [sp, #4]
 8016e50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016e54:	3204      	adds	r2, #4
 8016e56:	9202      	str	r2, [sp, #8]
 8016e58:	f1bb 0f00 	cmp.w	fp, #0
 8016e5c:	dc03      	bgt.n	8016e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8016e5e:	9a04      	ldr	r2, [sp, #16]
 8016e60:	2a00      	cmp	r2, #0
 8016e62:	f340 8138 	ble.w	80170d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016e66:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016e68:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016e6c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016e70:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016e72:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8016e76:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016e7a:	2b00      	cmp	r3, #0
 8016e7c:	dd0e      	ble.n	8016e9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016e7e:	1402      	asrs	r2, r0, #16
 8016e80:	d405      	bmi.n	8016e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e82:	42ba      	cmp	r2, r7
 8016e84:	da03      	bge.n	8016e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e86:	140a      	asrs	r2, r1, #16
 8016e88:	d401      	bmi.n	8016e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e8a:	42b2      	cmp	r2, r6
 8016e8c:	db07      	blt.n	8016e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016e8e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016e90:	3b01      	subs	r3, #1
 8016e92:	3402      	adds	r4, #2
 8016e94:	4410      	add	r0, r2
 8016e96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016e98:	4411      	add	r1, r2
 8016e9a:	e7ee      	b.n	8016e7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016e9c:	d019      	beq.n	8016ed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016e9e:	1e5a      	subs	r2, r3, #1
 8016ea0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016ea2:	fb05 0502 	mla	r5, r5, r2, r0
 8016ea6:	142d      	asrs	r5, r5, #16
 8016ea8:	d409      	bmi.n	8016ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016eaa:	42bd      	cmp	r5, r7
 8016eac:	da07      	bge.n	8016ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016eae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016eb0:	fb05 1202 	mla	r2, r5, r2, r1
 8016eb4:	1412      	asrs	r2, r2, #16
 8016eb6:	d402      	bmi.n	8016ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016eb8:	42b2      	cmp	r2, r6
 8016eba:	f2c0 80ac 	blt.w	8017016 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8016ebe:	f04f 0e00 	mov.w	lr, #0
 8016ec2:	eb03 020e 	add.w	r2, r3, lr
 8016ec6:	2a00      	cmp	r2, #0
 8016ec8:	dc3e      	bgt.n	8016f48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016eca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016ece:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ed2:	f1bb 0f00 	cmp.w	fp, #0
 8016ed6:	f340 80fe 	ble.w	80170d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016eda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016ede:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ee0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016ee4:	f1bb 0b01 	subs.w	fp, fp, #1
 8016ee8:	eeb0 6a62 	vmov.f32	s12, s5
 8016eec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016ef0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016ef4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ef8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016efc:	eeb0 6a43 	vmov.f32	s12, s6
 8016f00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f04:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016f08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016f18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016f1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016f20:	ee12 2a90 	vmov	r2, s5
 8016f24:	eef0 2a47 	vmov.f32	s5, s14
 8016f28:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f2c:	ee13 2a10 	vmov	r2, s6
 8016f30:	9313      	str	r3, [sp, #76]	; 0x4c
 8016f32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f34:	eeb0 3a67 	vmov.f32	s6, s15
 8016f38:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f3c:	9a04      	ldr	r2, [sp, #16]
 8016f3e:	9314      	str	r3, [sp, #80]	; 0x50
 8016f40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f42:	bf08      	it	eq
 8016f44:	4613      	moveq	r3, r2
 8016f46:	e787      	b.n	8016e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016f48:	1406      	asrs	r6, r0, #16
 8016f4a:	d45d      	bmi.n	8017008 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f4c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8016f50:	42b5      	cmp	r5, r6
 8016f52:	dd59      	ble.n	8017008 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f54:	140f      	asrs	r7, r1, #16
 8016f56:	d457      	bmi.n	8017008 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f58:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016f5c:	42ba      	cmp	r2, r7
 8016f5e:	dd53      	ble.n	8017008 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f60:	9a01      	ldr	r2, [sp, #4]
 8016f62:	b22d      	sxth	r5, r5
 8016f64:	fb07 2505 	mla	r5, r7, r5, r2
 8016f68:	5daa      	ldrb	r2, [r5, r6]
 8016f6a:	9d02      	ldr	r5, [sp, #8]
 8016f6c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016f70:	0e2e      	lsrs	r6, r5, #24
 8016f72:	d049      	beq.n	8017008 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f74:	f06f 0201 	mvn.w	r2, #1
 8016f78:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016f7c:	fb02 f20e 	mul.w	r2, r2, lr
 8016f80:	f834 8002 	ldrh.w	r8, [r4, r2]
 8016f84:	9203      	str	r2, [sp, #12]
 8016f86:	9a05      	ldr	r2, [sp, #20]
 8016f88:	ea4f 2728 	mov.w	r7, r8, asr #8
 8016f8c:	4356      	muls	r6, r2
 8016f8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016f92:	1c72      	adds	r2, r6, #1
 8016f94:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016f98:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016f9c:	b2ed      	uxtb	r5, r5
 8016f9e:	1212      	asrs	r2, r2, #8
 8016fa0:	fa1f f982 	uxth.w	r9, r2
 8016fa4:	43d2      	mvns	r2, r2
 8016fa6:	fb16 f609 	smulbb	r6, r6, r9
 8016faa:	b2d2      	uxtb	r2, r2
 8016fac:	fb15 f509 	smulbb	r5, r5, r9
 8016fb0:	fb07 6702 	mla	r7, r7, r2, r6
 8016fb4:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016fb8:	fb1a fa09 	smulbb	sl, sl, r9
 8016fbc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016fc0:	b2bf      	uxth	r7, r7
 8016fc2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016fc6:	fa5f f888 	uxtb.w	r8, r8
 8016fca:	fb06 a602 	mla	r6, r6, r2, sl
 8016fce:	fb08 5502 	mla	r5, r8, r2, r5
 8016fd2:	1c7a      	adds	r2, r7, #1
 8016fd4:	b2b6      	uxth	r6, r6
 8016fd6:	b2ad      	uxth	r5, r5
 8016fd8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016fdc:	9a03      	ldr	r2, [sp, #12]
 8016fde:	f105 0a01 	add.w	sl, r5, #1
 8016fe2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016fe6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016fea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016fee:	ea4a 0707 	orr.w	r7, sl, r7
 8016ff2:	f106 0a01 	add.w	sl, r6, #1
 8016ff6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016ffa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ffe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017002:	ea47 070a 	orr.w	r7, r7, sl
 8017006:	52a7      	strh	r7, [r4, r2]
 8017008:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801700a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801700e:	4410      	add	r0, r2
 8017010:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017012:	4411      	add	r1, r2
 8017014:	e755      	b.n	8016ec2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017016:	f04f 0800 	mov.w	r8, #0
 801701a:	eba3 0208 	sub.w	r2, r3, r8
 801701e:	2a00      	cmp	r2, #0
 8017020:	f77f af53 	ble.w	8016eca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017024:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8017028:	140a      	asrs	r2, r1, #16
 801702a:	9f01      	ldr	r7, [sp, #4]
 801702c:	1405      	asrs	r5, r0, #16
 801702e:	fb06 7202 	mla	r2, r6, r2, r7
 8017032:	5d52      	ldrb	r2, [r2, r5]
 8017034:	9d02      	ldr	r5, [sp, #8]
 8017036:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801703a:	0e2e      	lsrs	r6, r5, #24
 801703c:	d044      	beq.n	80170c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801703e:	9a05      	ldr	r2, [sp, #20]
 8017040:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017044:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017048:	4356      	muls	r6, r2
 801704a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801704e:	1c72      	adds	r2, r6, #1
 8017050:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017054:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8017058:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801705c:	b2ed      	uxtb	r5, r5
 801705e:	1212      	asrs	r2, r2, #8
 8017060:	fa1f f982 	uxth.w	r9, r2
 8017064:	43d2      	mvns	r2, r2
 8017066:	fb16 f609 	smulbb	r6, r6, r9
 801706a:	b2d2      	uxtb	r2, r2
 801706c:	fb15 f509 	smulbb	r5, r5, r9
 8017070:	fb07 6702 	mla	r7, r7, r2, r6
 8017074:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017078:	fb1a fa09 	smulbb	sl, sl, r9
 801707c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017080:	b2bf      	uxth	r7, r7
 8017082:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017086:	fa5f fe8e 	uxtb.w	lr, lr
 801708a:	fb06 a602 	mla	r6, r6, r2, sl
 801708e:	fb0e 5502 	mla	r5, lr, r2, r5
 8017092:	1c7a      	adds	r2, r7, #1
 8017094:	b2b6      	uxth	r6, r6
 8017096:	b2ad      	uxth	r5, r5
 8017098:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801709c:	f105 0a01 	add.w	sl, r5, #1
 80170a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80170a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80170a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80170ac:	ea4a 0707 	orr.w	r7, sl, r7
 80170b0:	f106 0a01 	add.w	sl, r6, #1
 80170b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80170b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170c0:	ea47 070a 	orr.w	r7, r7, sl
 80170c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80170c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80170ca:	f108 0801 	add.w	r8, r8, #1
 80170ce:	4410      	add	r0, r2
 80170d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80170d2:	4411      	add	r1, r2
 80170d4:	e7a1      	b.n	801701a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80170d6:	b007      	add	sp, #28
 80170d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80170dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170e0:	b085      	sub	sp, #20
 80170e2:	468b      	mov	fp, r1
 80170e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80170e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80170ea:	9203      	str	r2, [sp, #12]
 80170ec:	6841      	ldr	r1, [r0, #4]
 80170ee:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80170f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80170f6:	fb01 2404 	mla	r4, r1, r4, r2
 80170fa:	6802      	ldr	r2, [r0, #0]
 80170fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017100:	f8de 2000 	ldr.w	r2, [lr]
 8017104:	9200      	str	r2, [sp, #0]
 8017106:	f8de 2004 	ldr.w	r2, [lr, #4]
 801710a:	3204      	adds	r2, #4
 801710c:	9201      	str	r2, [sp, #4]
 801710e:	f1bb 0f00 	cmp.w	fp, #0
 8017112:	dc03      	bgt.n	801711c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017114:	9a03      	ldr	r2, [sp, #12]
 8017116:	2a00      	cmp	r2, #0
 8017118:	f340 8153 	ble.w	80173c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801711c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801711e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017122:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017126:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017128:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801712c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017130:	2b00      	cmp	r3, #0
 8017132:	dd0e      	ble.n	8017152 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017134:	1408      	asrs	r0, r1, #16
 8017136:	d405      	bmi.n	8017144 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017138:	42b8      	cmp	r0, r7
 801713a:	da03      	bge.n	8017144 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801713c:	1410      	asrs	r0, r2, #16
 801713e:	d401      	bmi.n	8017144 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017140:	42b0      	cmp	r0, r6
 8017142:	db07      	blt.n	8017154 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017144:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017146:	3b01      	subs	r3, #1
 8017148:	3402      	adds	r4, #2
 801714a:	4401      	add	r1, r0
 801714c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801714e:	4402      	add	r2, r0
 8017150:	e7ee      	b.n	8017130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017152:	d017      	beq.n	8017184 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017154:	1e58      	subs	r0, r3, #1
 8017156:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017158:	fb05 1500 	mla	r5, r5, r0, r1
 801715c:	142d      	asrs	r5, r5, #16
 801715e:	d409      	bmi.n	8017174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017160:	42bd      	cmp	r5, r7
 8017162:	da07      	bge.n	8017174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017164:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017166:	fb05 2000 	mla	r0, r5, r0, r2
 801716a:	1400      	asrs	r0, r0, #16
 801716c:	d402      	bmi.n	8017174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801716e:	42b0      	cmp	r0, r6
 8017170:	f2c0 80bc 	blt.w	80172ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8017174:	2600      	movs	r6, #0
 8017176:	1998      	adds	r0, r3, r6
 8017178:	2800      	cmp	r0, #0
 801717a:	dc3e      	bgt.n	80171fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801717c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017180:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017184:	f1bb 0f00 	cmp.w	fp, #0
 8017188:	f340 811b 	ble.w	80173c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801718c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017190:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017192:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017196:	f1bb 0b01 	subs.w	fp, fp, #1
 801719a:	eeb0 6a62 	vmov.f32	s12, s5
 801719e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80171a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80171a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80171aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80171ae:	eeb0 6a43 	vmov.f32	s12, s6
 80171b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80171b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80171ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80171be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80171c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80171c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80171ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80171ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80171d2:	ee12 2a90 	vmov	r2, s5
 80171d6:	eef0 2a47 	vmov.f32	s5, s14
 80171da:	fb92 f3f3 	sdiv	r3, r2, r3
 80171de:	ee13 2a10 	vmov	r2, s6
 80171e2:	9311      	str	r3, [sp, #68]	; 0x44
 80171e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80171e6:	eeb0 3a67 	vmov.f32	s6, s15
 80171ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80171ee:	9a03      	ldr	r2, [sp, #12]
 80171f0:	9312      	str	r3, [sp, #72]	; 0x48
 80171f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80171f4:	bf08      	it	eq
 80171f6:	4613      	moveq	r3, r2
 80171f8:	e789      	b.n	801710e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80171fa:	140f      	asrs	r7, r1, #16
 80171fc:	d426      	bmi.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80171fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017202:	42bd      	cmp	r5, r7
 8017204:	dd22      	ble.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017206:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801720a:	d41f      	bmi.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801720c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017210:	4560      	cmp	r0, ip
 8017212:	dd1b      	ble.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017214:	9800      	ldr	r0, [sp, #0]
 8017216:	b22d      	sxth	r5, r5
 8017218:	fb0c 0505 	mla	r5, ip, r5, r0
 801721c:	5de8      	ldrb	r0, [r5, r7]
 801721e:	9d01      	ldr	r5, [sp, #4]
 8017220:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8017224:	0e07      	lsrs	r7, r0, #24
 8017226:	2fff      	cmp	r7, #255	; 0xff
 8017228:	d116      	bne.n	8017258 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801722a:	f06f 0501 	mvn.w	r5, #1
 801722e:	fb05 f706 	mul.w	r7, r5, r6
 8017232:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8017236:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801723a:	0945      	lsrs	r5, r0, #5
 801723c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017244:	ea4c 0505 	orr.w	r5, ip, r5
 8017248:	4305      	orrs	r5, r0
 801724a:	53e5      	strh	r5, [r4, r7]
 801724c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801724e:	3e01      	subs	r6, #1
 8017250:	4401      	add	r1, r0
 8017252:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017254:	4402      	add	r2, r0
 8017256:	e78e      	b.n	8017176 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017258:	b2fd      	uxtb	r5, r7
 801725a:	2f00      	cmp	r7, #0
 801725c:	d0f6      	beq.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801725e:	f06f 0701 	mvn.w	r7, #1
 8017262:	fa1f f985 	uxth.w	r9, r5
 8017266:	43ed      	mvns	r5, r5
 8017268:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801726c:	4377      	muls	r7, r6
 801726e:	fb1a fa09 	smulbb	sl, sl, r9
 8017272:	b2ed      	uxtb	r5, r5
 8017274:	f834 8007 	ldrh.w	r8, [r4, r7]
 8017278:	9702      	str	r7, [sp, #8]
 801727a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801727e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8017282:	fb17 f709 	smulbb	r7, r7, r9
 8017286:	b2c0      	uxtb	r0, r0
 8017288:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801728c:	fb10 f009 	smulbb	r0, r0, r9
 8017290:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017294:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017298:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801729c:	fa1f fc8c 	uxth.w	ip, ip
 80172a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80172a4:	fa5f f888 	uxtb.w	r8, r8
 80172a8:	fb07 a705 	mla	r7, r7, r5, sl
 80172ac:	fb08 0005 	mla	r0, r8, r5, r0
 80172b0:	f10c 0501 	add.w	r5, ip, #1
 80172b4:	b2bf      	uxth	r7, r7
 80172b6:	b280      	uxth	r0, r0
 80172b8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80172bc:	f100 0a01 	add.w	sl, r0, #1
 80172c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80172c4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80172c8:	9802      	ldr	r0, [sp, #8]
 80172ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80172ce:	ea4a 0c0c 	orr.w	ip, sl, ip
 80172d2:	f107 0a01 	add.w	sl, r7, #1
 80172d6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80172da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80172de:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80172e2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80172e6:	f824 c000 	strh.w	ip, [r4, r0]
 80172ea:	e7af      	b.n	801724c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80172ec:	f04f 0800 	mov.w	r8, #0
 80172f0:	eba3 0008 	sub.w	r0, r3, r8
 80172f4:	2800      	cmp	r0, #0
 80172f6:	f77f af41 	ble.w	801717c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80172fa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80172fe:	1410      	asrs	r0, r2, #16
 8017300:	9f00      	ldr	r7, [sp, #0]
 8017302:	140d      	asrs	r5, r1, #16
 8017304:	fb06 7000 	mla	r0, r6, r0, r7
 8017308:	5d40      	ldrb	r0, [r0, r5]
 801730a:	9d01      	ldr	r5, [sp, #4]
 801730c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017310:	0e2e      	lsrs	r6, r5, #24
 8017312:	2eff      	cmp	r6, #255	; 0xff
 8017314:	d112      	bne.n	801733c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8017316:	482c      	ldr	r0, [pc, #176]	; (80173c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8017318:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801731c:	0968      	lsrs	r0, r5, #5
 801731e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017322:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017326:	4330      	orrs	r0, r6
 8017328:	4328      	orrs	r0, r5
 801732a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801732e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017330:	f108 0801 	add.w	r8, r8, #1
 8017334:	4401      	add	r1, r0
 8017336:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017338:	4402      	add	r2, r0
 801733a:	e7d9      	b.n	80172f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801733c:	b2f0      	uxtb	r0, r6
 801733e:	2e00      	cmp	r6, #0
 8017340:	d0f5      	beq.n	801732e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017342:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8017346:	fa1f f980 	uxth.w	r9, r0
 801734a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801734e:	43c0      	mvns	r0, r0
 8017350:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017354:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017358:	fb16 f609 	smulbb	r6, r6, r9
 801735c:	b2c0      	uxtb	r0, r0
 801735e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017362:	b2ed      	uxtb	r5, r5
 8017364:	fb1a fa09 	smulbb	sl, sl, r9
 8017368:	fb07 6700 	mla	r7, r7, r0, r6
 801736c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017370:	fb15 f509 	smulbb	r5, r5, r9
 8017374:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017378:	b2bf      	uxth	r7, r7
 801737a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801737e:	fa5f fc8c 	uxtb.w	ip, ip
 8017382:	fb06 a600 	mla	r6, r6, r0, sl
 8017386:	fb0c 5500 	mla	r5, ip, r0, r5
 801738a:	1c78      	adds	r0, r7, #1
 801738c:	b2b6      	uxth	r6, r6
 801738e:	b2ad      	uxth	r5, r5
 8017390:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017394:	f105 0a01 	add.w	sl, r5, #1
 8017398:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801739c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80173a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80173a4:	ea4a 0707 	orr.w	r7, sl, r7
 80173a8:	f106 0a01 	add.w	sl, r6, #1
 80173ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80173b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80173b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80173b8:	ea47 070a 	orr.w	r7, r7, sl
 80173bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80173c0:	e7b5      	b.n	801732e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80173c2:	b005      	add	sp, #20
 80173c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c8:	fffff800 	.word	0xfffff800

080173cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80173cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d0:	b087      	sub	sp, #28
 80173d2:	468b      	mov	fp, r1
 80173d4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80173d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173da:	9204      	str	r2, [sp, #16]
 80173dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80173e0:	6861      	ldr	r1, [r4, #4]
 80173e2:	9205      	str	r2, [sp, #20]
 80173e4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80173e8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80173ec:	fb01 2000 	mla	r0, r1, r0, r2
 80173f0:	6822      	ldr	r2, [r4, #0]
 80173f2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80173f6:	f8de 2000 	ldr.w	r2, [lr]
 80173fa:	9201      	str	r2, [sp, #4]
 80173fc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017400:	9202      	str	r2, [sp, #8]
 8017402:	f1bb 0f00 	cmp.w	fp, #0
 8017406:	dc03      	bgt.n	8017410 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8017408:	9a04      	ldr	r2, [sp, #16]
 801740a:	2a00      	cmp	r2, #0
 801740c:	f340 8142 	ble.w	8017694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8017410:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017412:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017416:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801741a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801741c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8017420:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017424:	2b00      	cmp	r3, #0
 8017426:	dd0e      	ble.n	8017446 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017428:	140c      	asrs	r4, r1, #16
 801742a:	d405      	bmi.n	8017438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801742c:	42bc      	cmp	r4, r7
 801742e:	da03      	bge.n	8017438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017430:	1414      	asrs	r4, r2, #16
 8017432:	d401      	bmi.n	8017438 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017434:	42b4      	cmp	r4, r6
 8017436:	db07      	blt.n	8017448 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017438:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801743a:	3b01      	subs	r3, #1
 801743c:	3002      	adds	r0, #2
 801743e:	4421      	add	r1, r4
 8017440:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017442:	4422      	add	r2, r4
 8017444:	e7ee      	b.n	8017424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017446:	d019      	beq.n	801747c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017448:	1e5c      	subs	r4, r3, #1
 801744a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801744c:	fb05 1504 	mla	r5, r5, r4, r1
 8017450:	142d      	asrs	r5, r5, #16
 8017452:	d409      	bmi.n	8017468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017454:	42bd      	cmp	r5, r7
 8017456:	da07      	bge.n	8017468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017458:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801745a:	fb05 2404 	mla	r4, r5, r4, r2
 801745e:	1424      	asrs	r4, r4, #16
 8017460:	d402      	bmi.n	8017468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017462:	42b4      	cmp	r4, r6
 8017464:	f2c0 80b1 	blt.w	80175ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8017468:	f04f 0800 	mov.w	r8, #0
 801746c:	eb03 0408 	add.w	r4, r3, r8
 8017470:	2c00      	cmp	r4, #0
 8017472:	dc3e      	bgt.n	80174f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017474:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017478:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801747c:	f1bb 0f00 	cmp.w	fp, #0
 8017480:	f340 8108 	ble.w	8017694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8017484:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017488:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801748a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801748e:	f1bb 0b01 	subs.w	fp, fp, #1
 8017492:	eeb0 6a62 	vmov.f32	s12, s5
 8017496:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801749a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801749e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80174a2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80174a6:	eeb0 6a43 	vmov.f32	s12, s6
 80174aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80174ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80174b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80174b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80174ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80174be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80174c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80174c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80174ca:	ee12 2a90 	vmov	r2, s5
 80174ce:	eef0 2a47 	vmov.f32	s5, s14
 80174d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80174d6:	ee13 2a10 	vmov	r2, s6
 80174da:	9313      	str	r3, [sp, #76]	; 0x4c
 80174dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80174de:	eeb0 3a67 	vmov.f32	s6, s15
 80174e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80174e6:	9a04      	ldr	r2, [sp, #16]
 80174e8:	9314      	str	r3, [sp, #80]	; 0x50
 80174ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80174ec:	bf08      	it	eq
 80174ee:	4613      	moveq	r3, r2
 80174f0:	e787      	b.n	8017402 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80174f2:	140e      	asrs	r6, r1, #16
 80174f4:	d462      	bmi.n	80175bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80174f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80174fa:	42b5      	cmp	r5, r6
 80174fc:	dd5e      	ble.n	80175bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80174fe:	1417      	asrs	r7, r2, #16
 8017500:	d45c      	bmi.n	80175bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8017502:	f8de 400c 	ldr.w	r4, [lr, #12]
 8017506:	42bc      	cmp	r4, r7
 8017508:	dd58      	ble.n	80175bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801750a:	b22d      	sxth	r5, r5
 801750c:	9c02      	ldr	r4, [sp, #8]
 801750e:	fb07 6505 	mla	r5, r7, r5, r6
 8017512:	5d66      	ldrb	r6, [r4, r5]
 8017514:	2e00      	cmp	r6, #0
 8017516:	d051      	beq.n	80175bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8017518:	9c01      	ldr	r4, [sp, #4]
 801751a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801751e:	f06f 0401 	mvn.w	r4, #1
 8017522:	fb04 f408 	mul.w	r4, r4, r8
 8017526:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801752a:	5b05      	ldrh	r5, [r0, r4]
 801752c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017530:	9403      	str	r4, [sp, #12]
 8017532:	9c05      	ldr	r4, [sp, #20]
 8017534:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017538:	4366      	muls	r6, r4
 801753a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801753e:	1c74      	adds	r4, r6, #1
 8017540:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8017544:	122e      	asrs	r6, r5, #8
 8017546:	1224      	asrs	r4, r4, #8
 8017548:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801754c:	00ed      	lsls	r5, r5, #3
 801754e:	b2a7      	uxth	r7, r4
 8017550:	43e4      	mvns	r4, r4
 8017552:	b2ed      	uxtb	r5, r5
 8017554:	b2e4      	uxtb	r4, r4
 8017556:	fb16 f604 	smulbb	r6, r6, r4
 801755a:	fb15 f504 	smulbb	r5, r5, r4
 801755e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017562:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8017566:	fb1a fa04 	smulbb	sl, sl, r4
 801756a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801756e:	fa1f fc8c 	uxth.w	ip, ip
 8017572:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017576:	fa5f f989 	uxtb.w	r9, r9
 801757a:	fb06 a607 	mla	r6, r6, r7, sl
 801757e:	f10c 0401 	add.w	r4, ip, #1
 8017582:	fb09 5507 	mla	r5, r9, r7, r5
 8017586:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801758a:	9c03      	ldr	r4, [sp, #12]
 801758c:	b2ad      	uxth	r5, r5
 801758e:	b2b6      	uxth	r6, r6
 8017590:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017594:	f105 0a01 	add.w	sl, r5, #1
 8017598:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801759c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80175a0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80175a4:	f106 0a01 	add.w	sl, r6, #1
 80175a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80175ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80175b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80175b4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80175b8:	f820 c004 	strh.w	ip, [r0, r4]
 80175bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80175be:	f108 38ff 	add.w	r8, r8, #4294967295
 80175c2:	4421      	add	r1, r4
 80175c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80175c6:	4422      	add	r2, r4
 80175c8:	e750      	b.n	801746c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80175ca:	f04f 0900 	mov.w	r9, #0
 80175ce:	eba3 0409 	sub.w	r4, r3, r9
 80175d2:	2c00      	cmp	r4, #0
 80175d4:	f77f af4e 	ble.w	8017474 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80175d8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80175dc:	140d      	asrs	r5, r1, #16
 80175de:	1414      	asrs	r4, r2, #16
 80175e0:	fb06 5404 	mla	r4, r6, r4, r5
 80175e4:	9d02      	ldr	r5, [sp, #8]
 80175e6:	5d2e      	ldrb	r6, [r5, r4]
 80175e8:	2e00      	cmp	r6, #0
 80175ea:	d04c      	beq.n	8017686 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80175ec:	9d01      	ldr	r5, [sp, #4]
 80175ee:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80175f2:	9c05      	ldr	r4, [sp, #20]
 80175f4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80175f8:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80175fc:	4366      	muls	r6, r4
 80175fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017602:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017606:	1c74      	adds	r4, r6, #1
 8017608:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801760c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8017610:	122e      	asrs	r6, r5, #8
 8017612:	1224      	asrs	r4, r4, #8
 8017614:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017618:	00ed      	lsls	r5, r5, #3
 801761a:	b2a7      	uxth	r7, r4
 801761c:	43e4      	mvns	r4, r4
 801761e:	b2ed      	uxtb	r5, r5
 8017620:	b2e4      	uxtb	r4, r4
 8017622:	fb16 f604 	smulbb	r6, r6, r4
 8017626:	fb15 f504 	smulbb	r5, r5, r4
 801762a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801762e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8017632:	fb1a fa04 	smulbb	sl, sl, r4
 8017636:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801763a:	fa1f fc8c 	uxth.w	ip, ip
 801763e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017642:	fa5f f888 	uxtb.w	r8, r8
 8017646:	fb06 a607 	mla	r6, r6, r7, sl
 801764a:	f10c 0401 	add.w	r4, ip, #1
 801764e:	fb08 5507 	mla	r5, r8, r7, r5
 8017652:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017656:	b2ad      	uxth	r5, r5
 8017658:	b2b6      	uxth	r6, r6
 801765a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801765e:	f105 0a01 	add.w	sl, r5, #1
 8017662:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017666:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801766a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801766e:	f106 0a01 	add.w	sl, r6, #1
 8017672:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017676:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801767a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801767e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017682:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017686:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017688:	f109 0901 	add.w	r9, r9, #1
 801768c:	4421      	add	r1, r4
 801768e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017690:	4422      	add	r2, r4
 8017692:	e79c      	b.n	80175ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8017694:	b007      	add	sp, #28
 8017696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801769a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801769a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801769e:	b085      	sub	sp, #20
 80176a0:	468b      	mov	fp, r1
 80176a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80176a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80176a8:	9203      	str	r2, [sp, #12]
 80176aa:	6861      	ldr	r1, [r4, #4]
 80176ac:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80176b0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80176b4:	fb01 2000 	mla	r0, r1, r0, r2
 80176b8:	6822      	ldr	r2, [r4, #0]
 80176ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80176be:	f8d8 2000 	ldr.w	r2, [r8]
 80176c2:	9200      	str	r2, [sp, #0]
 80176c4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80176c8:	9201      	str	r2, [sp, #4]
 80176ca:	f1bb 0f00 	cmp.w	fp, #0
 80176ce:	dc03      	bgt.n	80176d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80176d0:	9a03      	ldr	r2, [sp, #12]
 80176d2:	2a00      	cmp	r2, #0
 80176d4:	f340 8146 	ble.w	8017964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80176d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80176da:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80176de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80176e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80176e4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80176e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80176ec:	2b00      	cmp	r3, #0
 80176ee:	dd0e      	ble.n	801770e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80176f0:	140c      	asrs	r4, r1, #16
 80176f2:	d405      	bmi.n	8017700 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80176f4:	42bc      	cmp	r4, r7
 80176f6:	da03      	bge.n	8017700 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80176f8:	1414      	asrs	r4, r2, #16
 80176fa:	d401      	bmi.n	8017700 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80176fc:	42b4      	cmp	r4, r6
 80176fe:	db07      	blt.n	8017710 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017700:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017702:	3b01      	subs	r3, #1
 8017704:	3002      	adds	r0, #2
 8017706:	4421      	add	r1, r4
 8017708:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801770a:	4422      	add	r2, r4
 801770c:	e7ee      	b.n	80176ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801770e:	d017      	beq.n	8017740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017710:	1e5c      	subs	r4, r3, #1
 8017712:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017714:	fb05 1504 	mla	r5, r5, r4, r1
 8017718:	142d      	asrs	r5, r5, #16
 801771a:	d409      	bmi.n	8017730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801771c:	42bd      	cmp	r5, r7
 801771e:	da07      	bge.n	8017730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017720:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017722:	fb05 2404 	mla	r4, r5, r4, r2
 8017726:	1424      	asrs	r4, r4, #16
 8017728:	d402      	bmi.n	8017730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801772a:	42b4      	cmp	r4, r6
 801772c:	f2c0 80b3 	blt.w	8017896 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8017730:	2600      	movs	r6, #0
 8017732:	199c      	adds	r4, r3, r6
 8017734:	2c00      	cmp	r4, #0
 8017736:	dc3e      	bgt.n	80177b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017738:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801773c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017740:	f1bb 0f00 	cmp.w	fp, #0
 8017744:	f340 810e 	ble.w	8017964 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8017748:	ee30 0a04 	vadd.f32	s0, s0, s8
 801774c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801774e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017752:	f1bb 0b01 	subs.w	fp, fp, #1
 8017756:	eeb0 6a62 	vmov.f32	s12, s5
 801775a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801775e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017762:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017766:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801776a:	eeb0 6a43 	vmov.f32	s12, s6
 801776e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017772:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017776:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801777a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801777e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017782:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017786:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801778a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801778e:	ee12 2a90 	vmov	r2, s5
 8017792:	eef0 2a47 	vmov.f32	s5, s14
 8017796:	fb92 f3f3 	sdiv	r3, r2, r3
 801779a:	ee13 2a10 	vmov	r2, s6
 801779e:	9311      	str	r3, [sp, #68]	; 0x44
 80177a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80177a2:	eeb0 3a67 	vmov.f32	s6, s15
 80177a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80177aa:	9a03      	ldr	r2, [sp, #12]
 80177ac:	9312      	str	r3, [sp, #72]	; 0x48
 80177ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80177b0:	bf08      	it	eq
 80177b2:	4613      	moveq	r3, r2
 80177b4:	e789      	b.n	80176ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80177b6:	140f      	asrs	r7, r1, #16
 80177b8:	d418      	bmi.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80177ba:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80177be:	42bd      	cmp	r5, r7
 80177c0:	dd14      	ble.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80177c2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80177c6:	d411      	bmi.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80177c8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80177cc:	4564      	cmp	r4, ip
 80177ce:	dd0d      	ble.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80177d0:	b22d      	sxth	r5, r5
 80177d2:	9c01      	ldr	r4, [sp, #4]
 80177d4:	fb0c 7505 	mla	r5, ip, r5, r7
 80177d8:	5d64      	ldrb	r4, [r4, r5]
 80177da:	2cff      	cmp	r4, #255	; 0xff
 80177dc:	d10c      	bne.n	80177f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80177de:	9c00      	ldr	r4, [sp, #0]
 80177e0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80177e4:	f06f 0401 	mvn.w	r4, #1
 80177e8:	4374      	muls	r4, r6
 80177ea:	5305      	strh	r5, [r0, r4]
 80177ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80177ee:	3e01      	subs	r6, #1
 80177f0:	4421      	add	r1, r4
 80177f2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80177f4:	4422      	add	r2, r4
 80177f6:	e79c      	b.n	8017732 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80177f8:	2c00      	cmp	r4, #0
 80177fa:	d0f7      	beq.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80177fc:	9f00      	ldr	r7, [sp, #0]
 80177fe:	fa1f fc84 	uxth.w	ip, r4
 8017802:	43e4      	mvns	r4, r4
 8017804:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8017808:	f06f 0501 	mvn.w	r5, #1
 801780c:	b2e4      	uxtb	r4, r4
 801780e:	4375      	muls	r5, r6
 8017810:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8017814:	9502      	str	r5, [sp, #8]
 8017816:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801781a:	5b45      	ldrh	r5, [r0, r5]
 801781c:	122f      	asrs	r7, r5, #8
 801781e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017822:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017826:	00ed      	lsls	r5, r5, #3
 8017828:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801782c:	fb17 f704 	smulbb	r7, r7, r4
 8017830:	b2ed      	uxtb	r5, r5
 8017832:	fb1a fa04 	smulbb	sl, sl, r4
 8017836:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801783a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801783e:	fb15 f504 	smulbb	r5, r5, r4
 8017842:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8017846:	fa1f fe8e 	uxth.w	lr, lr
 801784a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801784e:	fa5f f989 	uxtb.w	r9, r9
 8017852:	fb07 a70c 	mla	r7, r7, ip, sl
 8017856:	f10e 0401 	add.w	r4, lr, #1
 801785a:	fb09 550c 	mla	r5, r9, ip, r5
 801785e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8017862:	9c02      	ldr	r4, [sp, #8]
 8017864:	b2ad      	uxth	r5, r5
 8017866:	b2bf      	uxth	r7, r7
 8017868:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801786c:	f105 0a01 	add.w	sl, r5, #1
 8017870:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017874:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017878:	ea4a 0e0e 	orr.w	lr, sl, lr
 801787c:	f107 0a01 	add.w	sl, r7, #1
 8017880:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017884:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017888:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801788c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8017890:	f820 e004 	strh.w	lr, [r0, r4]
 8017894:	e7aa      	b.n	80177ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017896:	f04f 0900 	mov.w	r9, #0
 801789a:	eba3 0409 	sub.w	r4, r3, r9
 801789e:	2c00      	cmp	r4, #0
 80178a0:	f77f af4a 	ble.w	8017738 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80178a4:	1414      	asrs	r4, r2, #16
 80178a6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80178aa:	140d      	asrs	r5, r1, #16
 80178ac:	fb06 5504 	mla	r5, r6, r4, r5
 80178b0:	9c01      	ldr	r4, [sp, #4]
 80178b2:	5d64      	ldrb	r4, [r4, r5]
 80178b4:	2cff      	cmp	r4, #255	; 0xff
 80178b6:	d10b      	bne.n	80178d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80178b8:	9c00      	ldr	r4, [sp, #0]
 80178ba:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80178be:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80178c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80178c4:	f109 0901 	add.w	r9, r9, #1
 80178c8:	4421      	add	r1, r4
 80178ca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80178cc:	4422      	add	r2, r4
 80178ce:	e7e4      	b.n	801789a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80178d0:	2c00      	cmp	r4, #0
 80178d2:	d0f6      	beq.n	80178c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80178d4:	9e00      	ldr	r6, [sp, #0]
 80178d6:	b2a7      	uxth	r7, r4
 80178d8:	43e4      	mvns	r4, r4
 80178da:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80178de:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80178e2:	b2e4      	uxtb	r4, r4
 80178e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80178e8:	122e      	asrs	r6, r5, #8
 80178ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80178ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80178f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80178f6:	00ed      	lsls	r5, r5, #3
 80178f8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80178fc:	fb16 f604 	smulbb	r6, r6, r4
 8017900:	b2ed      	uxtb	r5, r5
 8017902:	fb1a fa04 	smulbb	sl, sl, r4
 8017906:	fb0c 6c07 	mla	ip, ip, r7, r6
 801790a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801790e:	fb15 f504 	smulbb	r5, r5, r4
 8017912:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017916:	fa1f fc8c 	uxth.w	ip, ip
 801791a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801791e:	fa5f fe8e 	uxtb.w	lr, lr
 8017922:	fb06 a607 	mla	r6, r6, r7, sl
 8017926:	f10c 0401 	add.w	r4, ip, #1
 801792a:	fb0e 5507 	mla	r5, lr, r7, r5
 801792e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017932:	b2ad      	uxth	r5, r5
 8017934:	b2b6      	uxth	r6, r6
 8017936:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801793a:	f105 0a01 	add.w	sl, r5, #1
 801793e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017942:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017946:	ea4a 0c0c 	orr.w	ip, sl, ip
 801794a:	f106 0a01 	add.w	sl, r6, #1
 801794e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017952:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017956:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801795a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801795e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017962:	e7ae      	b.n	80178c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017964:	b005      	add	sp, #20
 8017966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801796a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801796a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801796e:	b085      	sub	sp, #20
 8017970:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017972:	9203      	str	r2, [sp, #12]
 8017974:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8017978:	9100      	str	r1, [sp, #0]
 801797a:	9201      	str	r2, [sp, #4]
 801797c:	6841      	ldr	r1, [r0, #4]
 801797e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8017982:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017986:	fb01 2404 	mla	r4, r1, r4, r2
 801798a:	6802      	ldr	r2, [r0, #0]
 801798c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017990:	f8de 2000 	ldr.w	r2, [lr]
 8017994:	9202      	str	r2, [sp, #8]
 8017996:	9a01      	ldr	r2, [sp, #4]
 8017998:	43d6      	mvns	r6, r2
 801799a:	b2f6      	uxtb	r6, r6
 801799c:	9a00      	ldr	r2, [sp, #0]
 801799e:	2a00      	cmp	r2, #0
 80179a0:	dc03      	bgt.n	80179aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80179a2:	9a03      	ldr	r2, [sp, #12]
 80179a4:	2a00      	cmp	r2, #0
 80179a6:	f340 8124 	ble.w	8017bf2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80179aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179ac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80179b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80179b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80179b6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80179ba:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80179be:	2b00      	cmp	r3, #0
 80179c0:	dd0e      	ble.n	80179e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80179c2:	1408      	asrs	r0, r1, #16
 80179c4:	d405      	bmi.n	80179d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80179c6:	4560      	cmp	r0, ip
 80179c8:	da03      	bge.n	80179d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80179ca:	1410      	asrs	r0, r2, #16
 80179cc:	d401      	bmi.n	80179d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80179ce:	42b8      	cmp	r0, r7
 80179d0:	db07      	blt.n	80179e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80179d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80179d4:	3b01      	subs	r3, #1
 80179d6:	3402      	adds	r4, #2
 80179d8:	4401      	add	r1, r0
 80179da:	9812      	ldr	r0, [sp, #72]	; 0x48
 80179dc:	4402      	add	r2, r0
 80179de:	e7ee      	b.n	80179be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80179e0:	d06e      	beq.n	8017ac0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80179e2:	1e58      	subs	r0, r3, #1
 80179e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80179e6:	fb05 1500 	mla	r5, r5, r0, r1
 80179ea:	142d      	asrs	r5, r5, #16
 80179ec:	d45c      	bmi.n	8017aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80179ee:	4565      	cmp	r5, ip
 80179f0:	da5a      	bge.n	8017aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80179f2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80179f4:	fb05 2000 	mla	r0, r5, r0, r2
 80179f8:	1400      	asrs	r0, r0, #16
 80179fa:	d455      	bmi.n	8017aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80179fc:	42b8      	cmp	r0, r7
 80179fe:	da53      	bge.n	8017aa8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017a00:	4699      	mov	r9, r3
 8017a02:	46a2      	mov	sl, r4
 8017a04:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8017a08:	f1b9 0f00 	cmp.w	r9, #0
 8017a0c:	dd54      	ble.n	8017ab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017a0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017a12:	140d      	asrs	r5, r1, #16
 8017a14:	1410      	asrs	r0, r2, #16
 8017a16:	f109 39ff 	add.w	r9, r9, #4294967295
 8017a1a:	fb07 5000 	mla	r0, r7, r0, r5
 8017a1e:	9d02      	ldr	r5, [sp, #8]
 8017a20:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017a24:	f8ba 5000 	ldrh.w	r5, [sl]
 8017a28:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017a2c:	122f      	asrs	r7, r5, #8
 8017a2e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017a32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017a36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017a3a:	00ed      	lsls	r5, r5, #3
 8017a3c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8017a40:	fb17 f706 	smulbb	r7, r7, r6
 8017a44:	b2ed      	uxtb	r5, r5
 8017a46:	fb18 f806 	smulbb	r8, r8, r6
 8017a4a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017a4e:	10c7      	asrs	r7, r0, #3
 8017a50:	fb15 f506 	smulbb	r5, r5, r6
 8017a54:	00c0      	lsls	r0, r0, #3
 8017a56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017a5a:	fa1f fc8c 	uxth.w	ip, ip
 8017a5e:	b2c0      	uxtb	r0, r0
 8017a60:	fb07 870b 	mla	r7, r7, fp, r8
 8017a64:	fb00 500b 	mla	r0, r0, fp, r5
 8017a68:	f10c 0501 	add.w	r5, ip, #1
 8017a6c:	b2bf      	uxth	r7, r7
 8017a6e:	b280      	uxth	r0, r0
 8017a70:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017a74:	f107 0801 	add.w	r8, r7, #1
 8017a78:	1c45      	adds	r5, r0, #1
 8017a7a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017a7e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017a82:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017a86:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017a88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017a8c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017a90:	4401      	add	r1, r0
 8017a92:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017a96:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017a98:	ea45 0c0c 	orr.w	ip, r5, ip
 8017a9c:	4402      	add	r2, r0
 8017a9e:	ea4c 0c08 	orr.w	ip, ip, r8
 8017aa2:	f82a cb02 	strh.w	ip, [sl], #2
 8017aa6:	e7af      	b.n	8017a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017aa8:	f04f 0800 	mov.w	r8, #0
 8017aac:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8017ab0:	eb03 0008 	add.w	r0, r3, r8
 8017ab4:	2800      	cmp	r0, #0
 8017ab6:	dc41      	bgt.n	8017b3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017ab8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017abc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017ac0:	9b00      	ldr	r3, [sp, #0]
 8017ac2:	2b00      	cmp	r3, #0
 8017ac4:	f340 8095 	ble.w	8017bf2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017ac8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017acc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017ace:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ad2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017ad6:	eef0 6a62 	vmov.f32	s13, s5
 8017ada:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017ade:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017ae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017ae6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8017aea:	eef0 6a43 	vmov.f32	s13, s6
 8017aee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017af2:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8017af6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017afa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017afe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017b02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017b06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017b0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017b0e:	ee12 2a90 	vmov	r2, s5
 8017b12:	eef0 2a47 	vmov.f32	s5, s14
 8017b16:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b1a:	ee13 2a10 	vmov	r2, s6
 8017b1e:	9311      	str	r3, [sp, #68]	; 0x44
 8017b20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b22:	eeb0 3a67 	vmov.f32	s6, s15
 8017b26:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b2a:	9312      	str	r3, [sp, #72]	; 0x48
 8017b2c:	9b00      	ldr	r3, [sp, #0]
 8017b2e:	9a03      	ldr	r2, [sp, #12]
 8017b30:	3b01      	subs	r3, #1
 8017b32:	9300      	str	r3, [sp, #0]
 8017b34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b36:	bf08      	it	eq
 8017b38:	4613      	moveq	r3, r2
 8017b3a:	e72f      	b.n	801799c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017b3c:	140f      	asrs	r7, r1, #16
 8017b3e:	d451      	bmi.n	8017be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017b40:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017b44:	42bd      	cmp	r5, r7
 8017b46:	dd4d      	ble.n	8017be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017b48:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017b4c:	d44a      	bmi.n	8017be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017b4e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017b52:	4560      	cmp	r0, ip
 8017b54:	dd46      	ble.n	8017be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017b56:	b22d      	sxth	r5, r5
 8017b58:	9802      	ldr	r0, [sp, #8]
 8017b5a:	fb0c 7505 	mla	r5, ip, r5, r7
 8017b5e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8017b62:	f06f 0501 	mvn.w	r5, #1
 8017b66:	fb05 fb08 	mul.w	fp, r5, r8
 8017b6a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017b6e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017b72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017b76:	122f      	asrs	r7, r5, #8
 8017b78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017b7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017b80:	00ed      	lsls	r5, r5, #3
 8017b82:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017b86:	fb17 f706 	smulbb	r7, r7, r6
 8017b8a:	b2ed      	uxtb	r5, r5
 8017b8c:	fb19 f906 	smulbb	r9, r9, r6
 8017b90:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017b94:	10c7      	asrs	r7, r0, #3
 8017b96:	fb15 f506 	smulbb	r5, r5, r6
 8017b9a:	00c0      	lsls	r0, r0, #3
 8017b9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017ba0:	fa1f fc8c 	uxth.w	ip, ip
 8017ba4:	b2c0      	uxtb	r0, r0
 8017ba6:	fb07 970a 	mla	r7, r7, sl, r9
 8017baa:	fb00 500a 	mla	r0, r0, sl, r5
 8017bae:	f10c 0501 	add.w	r5, ip, #1
 8017bb2:	b2bf      	uxth	r7, r7
 8017bb4:	b280      	uxth	r0, r0
 8017bb6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017bba:	f107 0901 	add.w	r9, r7, #1
 8017bbe:	1c45      	adds	r5, r0, #1
 8017bc0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017bc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017bc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017bcc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017bd0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017bd4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017bd8:	ea45 0c0c 	orr.w	ip, r5, ip
 8017bdc:	ea4c 0c09 	orr.w	ip, ip, r9
 8017be0:	f824 c00b 	strh.w	ip, [r4, fp]
 8017be4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017be6:	f108 38ff 	add.w	r8, r8, #4294967295
 8017bea:	4401      	add	r1, r0
 8017bec:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017bee:	4402      	add	r2, r0
 8017bf0:	e75e      	b.n	8017ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8017bf2:	b005      	add	sp, #20
 8017bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017bf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bfc:	b085      	sub	sp, #20
 8017bfe:	4693      	mov	fp, r2
 8017c00:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017c04:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017c06:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017c08:	6870      	ldr	r0, [r6, #4]
 8017c0a:	9101      	str	r1, [sp, #4]
 8017c0c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017c10:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8017c14:	fb00 2404 	mla	r4, r0, r4, r2
 8017c18:	6832      	ldr	r2, [r6, #0]
 8017c1a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017c1e:	682a      	ldr	r2, [r5, #0]
 8017c20:	9202      	str	r2, [sp, #8]
 8017c22:	9a01      	ldr	r2, [sp, #4]
 8017c24:	2a00      	cmp	r2, #0
 8017c26:	dc03      	bgt.n	8017c30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017c28:	f1bb 0f00 	cmp.w	fp, #0
 8017c2c:	f340 809a 	ble.w	8017d64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8017c30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017c32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017c36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017c3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017c3c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017c40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017c44:	2b00      	cmp	r3, #0
 8017c46:	dd0c      	ble.n	8017c62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8017c48:	1406      	asrs	r6, r0, #16
 8017c4a:	d405      	bmi.n	8017c58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017c4c:	454e      	cmp	r6, r9
 8017c4e:	da03      	bge.n	8017c58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017c50:	1416      	asrs	r6, r2, #16
 8017c52:	d401      	bmi.n	8017c58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017c54:	4546      	cmp	r6, r8
 8017c56:	db05      	blt.n	8017c64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017c58:	4470      	add	r0, lr
 8017c5a:	4462      	add	r2, ip
 8017c5c:	3b01      	subs	r3, #1
 8017c5e:	3402      	adds	r4, #2
 8017c60:	e7f0      	b.n	8017c44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017c62:	d00f      	beq.n	8017c84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017c64:	1e5e      	subs	r6, r3, #1
 8017c66:	fb0e 0706 	mla	r7, lr, r6, r0
 8017c6a:	143f      	asrs	r7, r7, #16
 8017c6c:	d541      	bpl.n	8017cf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8017c6e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017c72:	4698      	mov	r8, r3
 8017c74:	9603      	str	r6, [sp, #12]
 8017c76:	f1b8 0f00 	cmp.w	r8, #0
 8017c7a:	dc56      	bgt.n	8017d2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8017c7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017c80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017c84:	9b01      	ldr	r3, [sp, #4]
 8017c86:	2b00      	cmp	r3, #0
 8017c88:	dd6c      	ble.n	8017d64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8017c8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017c90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c94:	eeb0 6a62 	vmov.f32	s12, s5
 8017c98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017c9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017ca0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ca4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017ca8:	eeb0 6a43 	vmov.f32	s12, s6
 8017cac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017cb0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017cb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017cb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017cbc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017cc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017cc4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017cc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017ccc:	ee12 2a90 	vmov	r2, s5
 8017cd0:	eef0 2a47 	vmov.f32	s5, s14
 8017cd4:	fb92 fef3 	sdiv	lr, r2, r3
 8017cd8:	ee13 2a10 	vmov	r2, s6
 8017cdc:	eeb0 3a67 	vmov.f32	s6, s15
 8017ce0:	fb92 fcf3 	sdiv	ip, r2, r3
 8017ce4:	9b01      	ldr	r3, [sp, #4]
 8017ce6:	3b01      	subs	r3, #1
 8017ce8:	9301      	str	r3, [sp, #4]
 8017cea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017cec:	bf08      	it	eq
 8017cee:	465b      	moveq	r3, fp
 8017cf0:	e797      	b.n	8017c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017cf2:	454f      	cmp	r7, r9
 8017cf4:	dabb      	bge.n	8017c6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017cf6:	fb0c 2606 	mla	r6, ip, r6, r2
 8017cfa:	1436      	asrs	r6, r6, #16
 8017cfc:	d4b7      	bmi.n	8017c6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017cfe:	4546      	cmp	r6, r8
 8017d00:	dab5      	bge.n	8017c6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017d02:	461e      	mov	r6, r3
 8017d04:	46a0      	mov	r8, r4
 8017d06:	2e00      	cmp	r6, #0
 8017d08:	ddb8      	ble.n	8017c7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017d0a:	1417      	asrs	r7, r2, #16
 8017d0c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017d10:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017d14:	9902      	ldr	r1, [sp, #8]
 8017d16:	4470      	add	r0, lr
 8017d18:	4462      	add	r2, ip
 8017d1a:	fb0a 9707 	mla	r7, sl, r7, r9
 8017d1e:	3e01      	subs	r6, #1
 8017d20:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017d24:	f828 7b02 	strh.w	r7, [r8], #2
 8017d28:	e7ed      	b.n	8017d06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8017d2a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017d2e:	d414      	bmi.n	8017d5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017d30:	68ae      	ldr	r6, [r5, #8]
 8017d32:	454e      	cmp	r6, r9
 8017d34:	dd11      	ble.n	8017d5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017d36:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017d3a:	d40e      	bmi.n	8017d5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017d3c:	68ef      	ldr	r7, [r5, #12]
 8017d3e:	4557      	cmp	r7, sl
 8017d40:	dd0b      	ble.n	8017d5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017d42:	b236      	sxth	r6, r6
 8017d44:	f06f 0101 	mvn.w	r1, #1
 8017d48:	9f02      	ldr	r7, [sp, #8]
 8017d4a:	fb0a 9606 	mla	r6, sl, r6, r9
 8017d4e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017d52:	fb01 f608 	mul.w	r6, r1, r8
 8017d56:	9903      	ldr	r1, [sp, #12]
 8017d58:	538f      	strh	r7, [r1, r6]
 8017d5a:	4470      	add	r0, lr
 8017d5c:	4462      	add	r2, ip
 8017d5e:	f108 38ff 	add.w	r8, r8, #4294967295
 8017d62:	e788      	b.n	8017c76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017d64:	b005      	add	sp, #20
 8017d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017d6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017d6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d6e:	b087      	sub	sp, #28
 8017d70:	468b      	mov	fp, r1
 8017d72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017d76:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017d78:	9203      	str	r2, [sp, #12]
 8017d7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017d7e:	6841      	ldr	r1, [r0, #4]
 8017d80:	9204      	str	r2, [sp, #16]
 8017d82:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017d86:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8017d8a:	fb01 2505 	mla	r5, r1, r5, r2
 8017d8e:	6802      	ldr	r2, [r0, #0]
 8017d90:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017d94:	f8d9 2000 	ldr.w	r2, [r9]
 8017d98:	9201      	str	r2, [sp, #4]
 8017d9a:	f1bb 0f00 	cmp.w	fp, #0
 8017d9e:	dc03      	bgt.n	8017da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017da0:	9a03      	ldr	r2, [sp, #12]
 8017da2:	2a00      	cmp	r2, #0
 8017da4:	f340 8158 	ble.w	8018058 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8017da8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017daa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017dae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017db2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017db4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017db8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017dbc:	2b00      	cmp	r3, #0
 8017dbe:	dd0e      	ble.n	8017dde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8017dc0:	1402      	asrs	r2, r0, #16
 8017dc2:	d405      	bmi.n	8017dd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017dc4:	42ba      	cmp	r2, r7
 8017dc6:	da03      	bge.n	8017dd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017dc8:	140a      	asrs	r2, r1, #16
 8017dca:	d401      	bmi.n	8017dd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017dcc:	42b2      	cmp	r2, r6
 8017dce:	db07      	blt.n	8017de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017dd0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017dd2:	3b01      	subs	r3, #1
 8017dd4:	3502      	adds	r5, #2
 8017dd6:	4410      	add	r0, r2
 8017dd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017dda:	4411      	add	r1, r2
 8017ddc:	e7ee      	b.n	8017dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017dde:	d017      	beq.n	8017e10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017de0:	1e5a      	subs	r2, r3, #1
 8017de2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017de4:	fb04 0402 	mla	r4, r4, r2, r0
 8017de8:	1424      	asrs	r4, r4, #16
 8017dea:	d409      	bmi.n	8017e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017dec:	42bc      	cmp	r4, r7
 8017dee:	da07      	bge.n	8017e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017df0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017df2:	fb04 1202 	mla	r2, r4, r2, r1
 8017df6:	1412      	asrs	r2, r2, #16
 8017df8:	d402      	bmi.n	8017e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017dfa:	42b2      	cmp	r2, r6
 8017dfc:	f2c0 80bf 	blt.w	8017f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017e00:	2700      	movs	r7, #0
 8017e02:	19da      	adds	r2, r3, r7
 8017e04:	2a00      	cmp	r2, #0
 8017e06:	dc3e      	bgt.n	8017e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017e08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017e0c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017e10:	f1bb 0f00 	cmp.w	fp, #0
 8017e14:	f340 8120 	ble.w	8018058 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8017e18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e22:	f1bb 0b01 	subs.w	fp, fp, #1
 8017e26:	eeb0 6a62 	vmov.f32	s12, s5
 8017e2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017e2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e36:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017e3a:	eeb0 6a43 	vmov.f32	s12, s6
 8017e3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e42:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017e46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017e4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017e4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017e52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e5e:	ee12 2a90 	vmov	r2, s5
 8017e62:	eef0 2a47 	vmov.f32	s5, s14
 8017e66:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e6a:	ee13 2a10 	vmov	r2, s6
 8017e6e:	9313      	str	r3, [sp, #76]	; 0x4c
 8017e70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e72:	eeb0 3a67 	vmov.f32	s6, s15
 8017e76:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e7a:	9a03      	ldr	r2, [sp, #12]
 8017e7c:	9314      	str	r3, [sp, #80]	; 0x50
 8017e7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e80:	bf08      	it	eq
 8017e82:	4613      	moveq	r3, r2
 8017e84:	e789      	b.n	8017d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017e86:	1406      	asrs	r6, r0, #16
 8017e88:	d42d      	bmi.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017e8a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8017e8e:	42b4      	cmp	r4, r6
 8017e90:	dd29      	ble.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017e92:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8017e96:	d426      	bmi.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017e98:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017e9c:	4562      	cmp	r2, ip
 8017e9e:	dd22      	ble.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017ea0:	b224      	sxth	r4, r4
 8017ea2:	9a01      	ldr	r2, [sp, #4]
 8017ea4:	fb0c 6404 	mla	r4, ip, r4, r6
 8017ea8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8017eac:	0e22      	lsrs	r2, r4, #24
 8017eae:	d01a      	beq.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017eb0:	9e04      	ldr	r6, [sp, #16]
 8017eb2:	4372      	muls	r2, r6
 8017eb4:	1c56      	adds	r6, r2, #1
 8017eb6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017eba:	0a26      	lsrs	r6, r4, #8
 8017ebc:	1212      	asrs	r2, r2, #8
 8017ebe:	9605      	str	r6, [sp, #20]
 8017ec0:	2aff      	cmp	r2, #255	; 0xff
 8017ec2:	d116      	bne.n	8017ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017ec4:	f06f 0201 	mvn.w	r2, #1
 8017ec8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017ecc:	fb02 fc07 	mul.w	ip, r2, r7
 8017ed0:	0962      	lsrs	r2, r4, #5
 8017ed2:	f026 0607 	bic.w	r6, r6, #7
 8017ed6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017eda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017ede:	4316      	orrs	r6, r2
 8017ee0:	4326      	orrs	r6, r4
 8017ee2:	f825 600c 	strh.w	r6, [r5, ip]
 8017ee6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017ee8:	3f01      	subs	r7, #1
 8017eea:	4410      	add	r0, r2
 8017eec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017eee:	4411      	add	r1, r2
 8017ef0:	e787      	b.n	8017e02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ef2:	f06f 0601 	mvn.w	r6, #1
 8017ef6:	fa1f fa82 	uxth.w	sl, r2
 8017efa:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8017efe:	43d2      	mvns	r2, r2
 8017f00:	437e      	muls	r6, r7
 8017f02:	b2e4      	uxtb	r4, r4
 8017f04:	fb1c fc0a 	smulbb	ip, ip, sl
 8017f08:	b2d2      	uxtb	r2, r2
 8017f0a:	f835 8006 	ldrh.w	r8, [r5, r6]
 8017f0e:	fb14 f40a 	smulbb	r4, r4, sl
 8017f12:	9602      	str	r6, [sp, #8]
 8017f14:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017f18:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017f1c:	fb16 f60a 	smulbb	r6, r6, sl
 8017f20:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017f24:	fb0e ce02 	mla	lr, lr, r2, ip
 8017f28:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017f2c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017f30:	fa1f fe8e 	uxth.w	lr, lr
 8017f34:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017f38:	fa5f f888 	uxtb.w	r8, r8
 8017f3c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017f40:	fb08 4402 	mla	r4, r8, r2, r4
 8017f44:	f10e 0201 	add.w	r2, lr, #1
 8017f48:	fa1f fc8c 	uxth.w	ip, ip
 8017f4c:	b2a4      	uxth	r4, r4
 8017f4e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017f52:	9a02      	ldr	r2, [sp, #8]
 8017f54:	1c66      	adds	r6, r4, #1
 8017f56:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8017f5a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017f5e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017f62:	ea46 0e0e 	orr.w	lr, r6, lr
 8017f66:	f10c 0601 	add.w	r6, ip, #1
 8017f6a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017f6e:	0976      	lsrs	r6, r6, #5
 8017f70:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017f74:	ea4e 0e06 	orr.w	lr, lr, r6
 8017f78:	f825 e002 	strh.w	lr, [r5, r2]
 8017f7c:	e7b3      	b.n	8017ee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017f7e:	f04f 0800 	mov.w	r8, #0
 8017f82:	eba3 0208 	sub.w	r2, r3, r8
 8017f86:	2a00      	cmp	r2, #0
 8017f88:	f77f af3e 	ble.w	8017e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017f8c:	1404      	asrs	r4, r0, #16
 8017f8e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8017f92:	140a      	asrs	r2, r1, #16
 8017f94:	fb06 4202 	mla	r2, r6, r2, r4
 8017f98:	9c01      	ldr	r4, [sp, #4]
 8017f9a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8017f9e:	0e22      	lsrs	r2, r4, #24
 8017fa0:	d015      	beq.n	8017fce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017fa2:	9e04      	ldr	r6, [sp, #16]
 8017fa4:	4372      	muls	r2, r6
 8017fa6:	1c56      	adds	r6, r2, #1
 8017fa8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017fac:	0a26      	lsrs	r6, r4, #8
 8017fae:	1212      	asrs	r2, r2, #8
 8017fb0:	2aff      	cmp	r2, #255	; 0xff
 8017fb2:	d113      	bne.n	8017fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8017fb4:	0962      	lsrs	r2, r4, #5
 8017fb6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017fba:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017fbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017fc2:	f026 0607 	bic.w	r6, r6, #7
 8017fc6:	4316      	orrs	r6, r2
 8017fc8:	4326      	orrs	r6, r4
 8017fca:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8017fce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017fd0:	f108 0801 	add.w	r8, r8, #1
 8017fd4:	4410      	add	r0, r2
 8017fd6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017fd8:	4411      	add	r1, r2
 8017fda:	e7d2      	b.n	8017f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8017fdc:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8017fe0:	fa1f fa82 	uxth.w	sl, r2
 8017fe4:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8017fe8:	43d2      	mvns	r2, r2
 8017fea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017fee:	fb17 f70a 	smulbb	r7, r7, sl
 8017ff2:	b2d2      	uxtb	r2, r2
 8017ff4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017ff8:	b2e4      	uxtb	r4, r4
 8017ffa:	b2f6      	uxtb	r6, r6
 8017ffc:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018000:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018004:	fb14 f40a 	smulbb	r4, r4, sl
 8018008:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801800c:	fa1f fc8c 	uxth.w	ip, ip
 8018010:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018014:	fb16 f60a 	smulbb	r6, r6, sl
 8018018:	fa5f fe8e 	uxtb.w	lr, lr
 801801c:	fb0e 4402 	mla	r4, lr, r2, r4
 8018020:	fb07 6702 	mla	r7, r7, r2, r6
 8018024:	f10c 0201 	add.w	r2, ip, #1
 8018028:	b2a4      	uxth	r4, r4
 801802a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801802e:	1c66      	adds	r6, r4, #1
 8018030:	b2bf      	uxth	r7, r7
 8018032:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018036:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801803a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801803e:	ea46 0c0c 	orr.w	ip, r6, ip
 8018042:	1c7e      	adds	r6, r7, #1
 8018044:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018048:	0976      	lsrs	r6, r6, #5
 801804a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801804e:	ea4c 0c06 	orr.w	ip, ip, r6
 8018052:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8018056:	e7ba      	b.n	8017fce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018058:	b007      	add	sp, #28
 801805a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018060 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018064:	b085      	sub	sp, #20
 8018066:	468b      	mov	fp, r1
 8018068:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801806c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801806e:	9203      	str	r2, [sp, #12]
 8018070:	6841      	ldr	r1, [r0, #4]
 8018072:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018076:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801807a:	fb01 2404 	mla	r4, r1, r4, r2
 801807e:	6802      	ldr	r2, [r0, #0]
 8018080:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018084:	f8d8 2000 	ldr.w	r2, [r8]
 8018088:	9201      	str	r2, [sp, #4]
 801808a:	f1bb 0f00 	cmp.w	fp, #0
 801808e:	dc03      	bgt.n	8018098 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018090:	9a03      	ldr	r2, [sp, #12]
 8018092:	2a00      	cmp	r2, #0
 8018094:	f340 814f 	ble.w	8018336 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018098:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801809a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801809e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80180a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80180a4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80180a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80180ac:	2b00      	cmp	r3, #0
 80180ae:	dd0e      	ble.n	80180ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80180b0:	1408      	asrs	r0, r1, #16
 80180b2:	d405      	bmi.n	80180c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80180b4:	42b8      	cmp	r0, r7
 80180b6:	da03      	bge.n	80180c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80180b8:	1410      	asrs	r0, r2, #16
 80180ba:	d401      	bmi.n	80180c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80180bc:	42b0      	cmp	r0, r6
 80180be:	db07      	blt.n	80180d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80180c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80180c2:	3b01      	subs	r3, #1
 80180c4:	3402      	adds	r4, #2
 80180c6:	4401      	add	r1, r0
 80180c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80180ca:	4402      	add	r2, r0
 80180cc:	e7ee      	b.n	80180ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80180ce:	d017      	beq.n	8018100 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80180d0:	1e58      	subs	r0, r3, #1
 80180d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80180d4:	fb05 1500 	mla	r5, r5, r0, r1
 80180d8:	142d      	asrs	r5, r5, #16
 80180da:	d409      	bmi.n	80180f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80180dc:	42bd      	cmp	r5, r7
 80180de:	da07      	bge.n	80180f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80180e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80180e2:	fb05 2000 	mla	r0, r5, r0, r2
 80180e6:	1400      	asrs	r0, r0, #16
 80180e8:	d402      	bmi.n	80180f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80180ea:	42b0      	cmp	r0, r6
 80180ec:	f2c0 80ba 	blt.w	8018264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80180f0:	2600      	movs	r6, #0
 80180f2:	1998      	adds	r0, r3, r6
 80180f4:	2800      	cmp	r0, #0
 80180f6:	dc3e      	bgt.n	8018176 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80180f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80180fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018100:	f1bb 0f00 	cmp.w	fp, #0
 8018104:	f340 8117 	ble.w	8018336 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018108:	ee30 0a04 	vadd.f32	s0, s0, s8
 801810c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801810e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018112:	f1bb 0b01 	subs.w	fp, fp, #1
 8018116:	eeb0 6a62 	vmov.f32	s12, s5
 801811a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801811e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018122:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018126:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801812a:	eeb0 6a43 	vmov.f32	s12, s6
 801812e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018132:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018136:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801813a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801813e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018142:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018146:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801814a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801814e:	ee12 2a90 	vmov	r2, s5
 8018152:	eef0 2a47 	vmov.f32	s5, s14
 8018156:	fb92 f3f3 	sdiv	r3, r2, r3
 801815a:	ee13 2a10 	vmov	r2, s6
 801815e:	9311      	str	r3, [sp, #68]	; 0x44
 8018160:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018162:	eeb0 3a67 	vmov.f32	s6, s15
 8018166:	fb92 f3f3 	sdiv	r3, r2, r3
 801816a:	9a03      	ldr	r2, [sp, #12]
 801816c:	9312      	str	r3, [sp, #72]	; 0x48
 801816e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018170:	bf08      	it	eq
 8018172:	4613      	moveq	r3, r2
 8018174:	e789      	b.n	801808a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018176:	140f      	asrs	r7, r1, #16
 8018178:	d424      	bmi.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801817a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801817e:	42bd      	cmp	r5, r7
 8018180:	dd20      	ble.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018182:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018186:	d41d      	bmi.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018188:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801818c:	4560      	cmp	r0, ip
 801818e:	dd19      	ble.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018190:	b22d      	sxth	r5, r5
 8018192:	9801      	ldr	r0, [sp, #4]
 8018194:	fb0c 7505 	mla	r5, ip, r5, r7
 8018198:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801819c:	0e07      	lsrs	r7, r0, #24
 801819e:	2fff      	cmp	r7, #255	; 0xff
 80181a0:	d116      	bne.n	80181d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80181a2:	f06f 0501 	mvn.w	r5, #1
 80181a6:	fb05 f706 	mul.w	r7, r5, r6
 80181aa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80181ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80181b2:	0945      	lsrs	r5, r0, #5
 80181b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80181b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80181bc:	ea4c 0505 	orr.w	r5, ip, r5
 80181c0:	4305      	orrs	r5, r0
 80181c2:	53e5      	strh	r5, [r4, r7]
 80181c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80181c6:	3e01      	subs	r6, #1
 80181c8:	4401      	add	r1, r0
 80181ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 80181cc:	4402      	add	r2, r0
 80181ce:	e790      	b.n	80180f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80181d0:	b2fd      	uxtb	r5, r7
 80181d2:	2f00      	cmp	r7, #0
 80181d4:	d0f6      	beq.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80181d6:	f06f 0701 	mvn.w	r7, #1
 80181da:	fa1f f985 	uxth.w	r9, r5
 80181de:	43ed      	mvns	r5, r5
 80181e0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80181e4:	4377      	muls	r7, r6
 80181e6:	fb1a fa09 	smulbb	sl, sl, r9
 80181ea:	b2ed      	uxtb	r5, r5
 80181ec:	f834 e007 	ldrh.w	lr, [r4, r7]
 80181f0:	9702      	str	r7, [sp, #8]
 80181f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80181f6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80181fa:	fb17 f709 	smulbb	r7, r7, r9
 80181fe:	b2c0      	uxtb	r0, r0
 8018200:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018204:	fb10 f009 	smulbb	r0, r0, r9
 8018208:	fb0c 7c05 	mla	ip, ip, r5, r7
 801820c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018210:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018214:	fa1f fc8c 	uxth.w	ip, ip
 8018218:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801821c:	fa5f fe8e 	uxtb.w	lr, lr
 8018220:	fb07 a705 	mla	r7, r7, r5, sl
 8018224:	fb0e 0005 	mla	r0, lr, r5, r0
 8018228:	f10c 0501 	add.w	r5, ip, #1
 801822c:	b2bf      	uxth	r7, r7
 801822e:	b280      	uxth	r0, r0
 8018230:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018234:	f100 0a01 	add.w	sl, r0, #1
 8018238:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801823c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018240:	9802      	ldr	r0, [sp, #8]
 8018242:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018246:	ea4a 0c0c 	orr.w	ip, sl, ip
 801824a:	f107 0a01 	add.w	sl, r7, #1
 801824e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018252:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018256:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801825a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801825e:	f824 c000 	strh.w	ip, [r4, r0]
 8018262:	e7af      	b.n	80181c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018264:	f04f 0e00 	mov.w	lr, #0
 8018268:	eba3 000e 	sub.w	r0, r3, lr
 801826c:	2800      	cmp	r0, #0
 801826e:	f77f af43 	ble.w	80180f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018272:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018276:	140d      	asrs	r5, r1, #16
 8018278:	1410      	asrs	r0, r2, #16
 801827a:	fb06 5000 	mla	r0, r6, r0, r5
 801827e:	9d01      	ldr	r5, [sp, #4]
 8018280:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018284:	0e2e      	lsrs	r6, r5, #24
 8018286:	2eff      	cmp	r6, #255	; 0xff
 8018288:	d112      	bne.n	80182b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801828a:	482c      	ldr	r0, [pc, #176]	; (801833c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801828c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018290:	0968      	lsrs	r0, r5, #5
 8018292:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018296:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801829a:	4330      	orrs	r0, r6
 801829c:	4328      	orrs	r0, r5
 801829e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80182a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80182a4:	f10e 0e01 	add.w	lr, lr, #1
 80182a8:	4401      	add	r1, r0
 80182aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80182ac:	4402      	add	r2, r0
 80182ae:	e7db      	b.n	8018268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80182b0:	b2f0      	uxtb	r0, r6
 80182b2:	2e00      	cmp	r6, #0
 80182b4:	d0f5      	beq.n	80182a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80182b6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80182ba:	fa1f f980 	uxth.w	r9, r0
 80182be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80182c2:	43c0      	mvns	r0, r0
 80182c4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80182c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80182cc:	fb16 f609 	smulbb	r6, r6, r9
 80182d0:	b2c0      	uxtb	r0, r0
 80182d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182d6:	b2ed      	uxtb	r5, r5
 80182d8:	fb1a fa09 	smulbb	sl, sl, r9
 80182dc:	fb07 6700 	mla	r7, r7, r0, r6
 80182e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80182e4:	fb15 f509 	smulbb	r5, r5, r9
 80182e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80182ec:	b2bf      	uxth	r7, r7
 80182ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80182f2:	fa5f fc8c 	uxtb.w	ip, ip
 80182f6:	fb06 a600 	mla	r6, r6, r0, sl
 80182fa:	fb0c 5500 	mla	r5, ip, r0, r5
 80182fe:	1c78      	adds	r0, r7, #1
 8018300:	b2b6      	uxth	r6, r6
 8018302:	b2ad      	uxth	r5, r5
 8018304:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8018308:	f105 0a01 	add.w	sl, r5, #1
 801830c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018310:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018314:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018318:	ea4a 0707 	orr.w	r7, sl, r7
 801831c:	f106 0a01 	add.w	sl, r6, #1
 8018320:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018324:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018328:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801832c:	ea47 070a 	orr.w	r7, r7, sl
 8018330:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8018334:	e7b5      	b.n	80182a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018336:	b005      	add	sp, #20
 8018338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801833c:	fffff800 	.word	0xfffff800

08018340 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018344:	b087      	sub	sp, #28
 8018346:	468b      	mov	fp, r1
 8018348:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801834c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801834e:	9203      	str	r2, [sp, #12]
 8018350:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018354:	6841      	ldr	r1, [r0, #4]
 8018356:	9204      	str	r2, [sp, #16]
 8018358:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801835c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018360:	fb01 2404 	mla	r4, r1, r4, r2
 8018364:	6802      	ldr	r2, [r0, #0]
 8018366:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801836a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801836e:	3201      	adds	r2, #1
 8018370:	f022 0201 	bic.w	r2, r2, #1
 8018374:	9200      	str	r2, [sp, #0]
 8018376:	f8d9 2000 	ldr.w	r2, [r9]
 801837a:	9201      	str	r2, [sp, #4]
 801837c:	f1bb 0f00 	cmp.w	fp, #0
 8018380:	dc03      	bgt.n	801838a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018382:	9a03      	ldr	r2, [sp, #12]
 8018384:	2a00      	cmp	r2, #0
 8018386:	f340 816a 	ble.w	801865e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801838a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801838c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018390:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018394:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018396:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801839a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801839e:	2b00      	cmp	r3, #0
 80183a0:	dd0e      	ble.n	80183c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80183a2:	1402      	asrs	r2, r0, #16
 80183a4:	d405      	bmi.n	80183b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80183a6:	42ba      	cmp	r2, r7
 80183a8:	da03      	bge.n	80183b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80183aa:	140a      	asrs	r2, r1, #16
 80183ac:	d401      	bmi.n	80183b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80183ae:	42b2      	cmp	r2, r6
 80183b0:	db07      	blt.n	80183c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80183b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80183b4:	3b01      	subs	r3, #1
 80183b6:	3402      	adds	r4, #2
 80183b8:	4410      	add	r0, r2
 80183ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80183bc:	4411      	add	r1, r2
 80183be:	e7ee      	b.n	801839e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80183c0:	d017      	beq.n	80183f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80183c2:	1e5a      	subs	r2, r3, #1
 80183c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80183c6:	fb05 0502 	mla	r5, r5, r2, r0
 80183ca:	142d      	asrs	r5, r5, #16
 80183cc:	d409      	bmi.n	80183e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80183ce:	42bd      	cmp	r5, r7
 80183d0:	da07      	bge.n	80183e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80183d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80183d4:	fb05 1202 	mla	r2, r5, r2, r1
 80183d8:	1412      	asrs	r2, r2, #16
 80183da:	d402      	bmi.n	80183e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80183dc:	42b2      	cmp	r2, r6
 80183de:	f2c0 80c8 	blt.w	8018572 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80183e2:	2700      	movs	r7, #0
 80183e4:	19da      	adds	r2, r3, r7
 80183e6:	2a00      	cmp	r2, #0
 80183e8:	dc3e      	bgt.n	8018468 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80183ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80183ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80183f2:	f1bb 0f00 	cmp.w	fp, #0
 80183f6:	f340 8132 	ble.w	801865e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80183fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80183fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018400:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018404:	f1bb 0b01 	subs.w	fp, fp, #1
 8018408:	eeb0 6a62 	vmov.f32	s12, s5
 801840c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018410:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018414:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018418:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801841c:	eeb0 6a43 	vmov.f32	s12, s6
 8018420:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018424:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018428:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801842c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018430:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018434:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018438:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801843c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018440:	ee12 2a90 	vmov	r2, s5
 8018444:	eef0 2a47 	vmov.f32	s5, s14
 8018448:	fb92 f3f3 	sdiv	r3, r2, r3
 801844c:	ee13 2a10 	vmov	r2, s6
 8018450:	9313      	str	r3, [sp, #76]	; 0x4c
 8018452:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018454:	eeb0 3a67 	vmov.f32	s6, s15
 8018458:	fb92 f3f3 	sdiv	r3, r2, r3
 801845c:	9a03      	ldr	r2, [sp, #12]
 801845e:	9314      	str	r3, [sp, #80]	; 0x50
 8018460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018462:	bf08      	it	eq
 8018464:	4613      	moveq	r3, r2
 8018466:	e789      	b.n	801837c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018468:	1405      	asrs	r5, r0, #16
 801846a:	d436      	bmi.n	80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801846c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8018470:	42aa      	cmp	r2, r5
 8018472:	dd32      	ble.n	80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018474:	140e      	asrs	r6, r1, #16
 8018476:	d430      	bmi.n	80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018478:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801847c:	42b2      	cmp	r2, r6
 801847e:	dd2c      	ble.n	80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018480:	9a00      	ldr	r2, [sp, #0]
 8018482:	fb06 5502 	mla	r5, r6, r2, r5
 8018486:	9e01      	ldr	r6, [sp, #4]
 8018488:	086a      	lsrs	r2, r5, #1
 801848a:	5cb2      	ldrb	r2, [r6, r2]
 801848c:	07ee      	lsls	r6, r5, #31
 801848e:	bf54      	ite	pl
 8018490:	f002 020f 	andpl.w	r2, r2, #15
 8018494:	1112      	asrmi	r2, r2, #4
 8018496:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801849a:	b2d2      	uxtb	r2, r2
 801849c:	b1ea      	cbz	r2, 80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801849e:	9d04      	ldr	r5, [sp, #16]
 80184a0:	436a      	muls	r2, r5
 80184a2:	1c55      	adds	r5, r2, #1
 80184a4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80184a8:	4d6e      	ldr	r5, [pc, #440]	; (8018664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80184aa:	1212      	asrs	r2, r2, #8
 80184ac:	682d      	ldr	r5, [r5, #0]
 80184ae:	2aff      	cmp	r2, #255	; 0xff
 80184b0:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80184b4:	9605      	str	r6, [sp, #20]
 80184b6:	d116      	bne.n	80184e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80184b8:	f06f 0201 	mvn.w	r2, #1
 80184bc:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80184c0:	fb02 fc07 	mul.w	ip, r2, r7
 80184c4:	096a      	lsrs	r2, r5, #5
 80184c6:	f026 0607 	bic.w	r6, r6, #7
 80184ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80184ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80184d2:	4316      	orrs	r6, r2
 80184d4:	432e      	orrs	r6, r5
 80184d6:	f824 600c 	strh.w	r6, [r4, ip]
 80184da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80184dc:	3f01      	subs	r7, #1
 80184de:	4410      	add	r0, r2
 80184e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80184e2:	4411      	add	r1, r2
 80184e4:	e77e      	b.n	80183e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80184e6:	f06f 0601 	mvn.w	r6, #1
 80184ea:	fa1f fa82 	uxth.w	sl, r2
 80184ee:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80184f2:	43d2      	mvns	r2, r2
 80184f4:	437e      	muls	r6, r7
 80184f6:	b2ed      	uxtb	r5, r5
 80184f8:	fb1c fc0a 	smulbb	ip, ip, sl
 80184fc:	b2d2      	uxtb	r2, r2
 80184fe:	f834 8006 	ldrh.w	r8, [r4, r6]
 8018502:	fb15 f50a 	smulbb	r5, r5, sl
 8018506:	9602      	str	r6, [sp, #8]
 8018508:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801850c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8018510:	fb16 f60a 	smulbb	r6, r6, sl
 8018514:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018518:	fb0e ce02 	mla	lr, lr, r2, ip
 801851c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018520:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018524:	fa1f fe8e 	uxth.w	lr, lr
 8018528:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801852c:	fa5f f888 	uxtb.w	r8, r8
 8018530:	fb0c 6c02 	mla	ip, ip, r2, r6
 8018534:	fb08 5502 	mla	r5, r8, r2, r5
 8018538:	f10e 0201 	add.w	r2, lr, #1
 801853c:	fa1f fc8c 	uxth.w	ip, ip
 8018540:	b2ad      	uxth	r5, r5
 8018542:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018546:	9a02      	ldr	r2, [sp, #8]
 8018548:	1c6e      	adds	r6, r5, #1
 801854a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801854e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8018552:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018556:	ea46 0e0e 	orr.w	lr, r6, lr
 801855a:	f10c 0601 	add.w	r6, ip, #1
 801855e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8018562:	0976      	lsrs	r6, r6, #5
 8018564:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018568:	ea4e 0e06 	orr.w	lr, lr, r6
 801856c:	f824 e002 	strh.w	lr, [r4, r2]
 8018570:	e7b3      	b.n	80184da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018572:	f04f 0800 	mov.w	r8, #0
 8018576:	eba3 0208 	sub.w	r2, r3, r8
 801857a:	2a00      	cmp	r2, #0
 801857c:	f77f af35 	ble.w	80183ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018580:	1402      	asrs	r2, r0, #16
 8018582:	9e00      	ldr	r6, [sp, #0]
 8018584:	140d      	asrs	r5, r1, #16
 8018586:	fb06 2505 	mla	r5, r6, r5, r2
 801858a:	9e01      	ldr	r6, [sp, #4]
 801858c:	086a      	lsrs	r2, r5, #1
 801858e:	07ed      	lsls	r5, r5, #31
 8018590:	5cb2      	ldrb	r2, [r6, r2]
 8018592:	bf54      	ite	pl
 8018594:	f002 020f 	andpl.w	r2, r2, #15
 8018598:	1112      	asrmi	r2, r2, #4
 801859a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801859e:	b2d2      	uxtb	r2, r2
 80185a0:	b1c2      	cbz	r2, 80185d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80185a2:	9d04      	ldr	r5, [sp, #16]
 80185a4:	436a      	muls	r2, r5
 80185a6:	1c55      	adds	r5, r2, #1
 80185a8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80185ac:	4d2d      	ldr	r5, [pc, #180]	; (8018664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80185ae:	1212      	asrs	r2, r2, #8
 80185b0:	682e      	ldr	r6, [r5, #0]
 80185b2:	2aff      	cmp	r2, #255	; 0xff
 80185b4:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80185b8:	d113      	bne.n	80185e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80185ba:	0972      	lsrs	r2, r6, #5
 80185bc:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80185c0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80185c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185c8:	f025 0507 	bic.w	r5, r5, #7
 80185cc:	4315      	orrs	r5, r2
 80185ce:	4335      	orrs	r5, r6
 80185d0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80185d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80185d6:	f108 0801 	add.w	r8, r8, #1
 80185da:	4410      	add	r0, r2
 80185dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80185de:	4411      	add	r1, r2
 80185e0:	e7c9      	b.n	8018576 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80185e2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80185e6:	fa1f fa82 	uxth.w	sl, r2
 80185ea:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80185ee:	43d2      	mvns	r2, r2
 80185f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80185f4:	fb17 f70a 	smulbb	r7, r7, sl
 80185f8:	b2d2      	uxtb	r2, r2
 80185fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185fe:	b2f6      	uxtb	r6, r6
 8018600:	b2ed      	uxtb	r5, r5
 8018602:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018606:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801860a:	fb16 f60a 	smulbb	r6, r6, sl
 801860e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018612:	fa1f fc8c 	uxth.w	ip, ip
 8018616:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801861a:	fb15 f50a 	smulbb	r5, r5, sl
 801861e:	fa5f fe8e 	uxtb.w	lr, lr
 8018622:	fb0e 6602 	mla	r6, lr, r2, r6
 8018626:	fb07 5702 	mla	r7, r7, r2, r5
 801862a:	f10c 0201 	add.w	r2, ip, #1
 801862e:	b2b6      	uxth	r6, r6
 8018630:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018634:	1c75      	adds	r5, r6, #1
 8018636:	b2bf      	uxth	r7, r7
 8018638:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801863c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018640:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018644:	ea45 0c0c 	orr.w	ip, r5, ip
 8018648:	1c7d      	adds	r5, r7, #1
 801864a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801864e:	096d      	lsrs	r5, r5, #5
 8018650:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018654:	ea4c 0c05 	orr.w	ip, ip, r5
 8018658:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801865c:	e7ba      	b.n	80185d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801865e:	b007      	add	sp, #28
 8018660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018664:	240016b8 	.word	0x240016b8

08018668 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801866c:	b087      	sub	sp, #28
 801866e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018672:	f8df 8308 	ldr.w	r8, [pc, #776]	; 801897c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018676:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018678:	9101      	str	r1, [sp, #4]
 801867a:	9205      	str	r2, [sp, #20]
 801867c:	6841      	ldr	r1, [r0, #4]
 801867e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8018682:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018686:	fb01 2404 	mla	r4, r1, r4, r2
 801868a:	6802      	ldr	r2, [r0, #0]
 801868c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018690:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018694:	3201      	adds	r2, #1
 8018696:	f022 0201 	bic.w	r2, r2, #1
 801869a:	9202      	str	r2, [sp, #8]
 801869c:	f8db 2000 	ldr.w	r2, [fp]
 80186a0:	9203      	str	r2, [sp, #12]
 80186a2:	9a01      	ldr	r2, [sp, #4]
 80186a4:	2a00      	cmp	r2, #0
 80186a6:	dc03      	bgt.n	80186b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80186a8:	9a05      	ldr	r2, [sp, #20]
 80186aa:	2a00      	cmp	r2, #0
 80186ac:	f340 8162 	ble.w	8018974 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80186b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80186b2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80186b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80186ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80186bc:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80186c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80186c4:	2b00      	cmp	r3, #0
 80186c6:	dd0e      	ble.n	80186e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80186c8:	1402      	asrs	r2, r0, #16
 80186ca:	d405      	bmi.n	80186d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80186cc:	42ba      	cmp	r2, r7
 80186ce:	da03      	bge.n	80186d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80186d0:	140a      	asrs	r2, r1, #16
 80186d2:	d401      	bmi.n	80186d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80186d4:	42b2      	cmp	r2, r6
 80186d6:	db07      	blt.n	80186e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80186d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80186da:	3b01      	subs	r3, #1
 80186dc:	3402      	adds	r4, #2
 80186de:	4410      	add	r0, r2
 80186e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80186e2:	4411      	add	r1, r2
 80186e4:	e7ee      	b.n	80186c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80186e6:	d017      	beq.n	8018718 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80186e8:	1e5a      	subs	r2, r3, #1
 80186ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80186ec:	fb05 0502 	mla	r5, r5, r2, r0
 80186f0:	142d      	asrs	r5, r5, #16
 80186f2:	d409      	bmi.n	8018708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80186f4:	42bd      	cmp	r5, r7
 80186f6:	da07      	bge.n	8018708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80186f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80186fa:	fb05 1202 	mla	r2, r5, r2, r1
 80186fe:	1412      	asrs	r2, r2, #16
 8018700:	d402      	bmi.n	8018708 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018702:	42b2      	cmp	r2, r6
 8018704:	f2c0 80c3 	blt.w	801888e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8018708:	2500      	movs	r5, #0
 801870a:	195a      	adds	r2, r3, r5
 801870c:	2a00      	cmp	r2, #0
 801870e:	dc3f      	bgt.n	8018790 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018710:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018714:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018718:	9b01      	ldr	r3, [sp, #4]
 801871a:	2b00      	cmp	r3, #0
 801871c:	f340 812a 	ble.w	8018974 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018720:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018724:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018726:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801872a:	eeb0 6a62 	vmov.f32	s12, s5
 801872e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018732:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018736:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801873a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801873e:	eeb0 6a43 	vmov.f32	s12, s6
 8018742:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018746:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801874a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801874e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018752:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018756:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801875a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801875e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018762:	ee12 2a90 	vmov	r2, s5
 8018766:	eef0 2a47 	vmov.f32	s5, s14
 801876a:	fb92 f3f3 	sdiv	r3, r2, r3
 801876e:	ee13 2a10 	vmov	r2, s6
 8018772:	9313      	str	r3, [sp, #76]	; 0x4c
 8018774:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018776:	eeb0 3a67 	vmov.f32	s6, s15
 801877a:	fb92 f3f3 	sdiv	r3, r2, r3
 801877e:	9314      	str	r3, [sp, #80]	; 0x50
 8018780:	9b01      	ldr	r3, [sp, #4]
 8018782:	9a05      	ldr	r2, [sp, #20]
 8018784:	3b01      	subs	r3, #1
 8018786:	9301      	str	r3, [sp, #4]
 8018788:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801878a:	bf08      	it	eq
 801878c:	4613      	moveq	r3, r2
 801878e:	e788      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018790:	1406      	asrs	r6, r0, #16
 8018792:	d42c      	bmi.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018794:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018798:	42b2      	cmp	r2, r6
 801879a:	dd28      	ble.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801879c:	140f      	asrs	r7, r1, #16
 801879e:	d426      	bmi.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80187a0:	f8db 200c 	ldr.w	r2, [fp, #12]
 80187a4:	42ba      	cmp	r2, r7
 80187a6:	dd22      	ble.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80187a8:	9a02      	ldr	r2, [sp, #8]
 80187aa:	fb07 6602 	mla	r6, r7, r2, r6
 80187ae:	9f03      	ldr	r7, [sp, #12]
 80187b0:	0872      	lsrs	r2, r6, #1
 80187b2:	07f6      	lsls	r6, r6, #31
 80187b4:	5cba      	ldrb	r2, [r7, r2]
 80187b6:	bf54      	ite	pl
 80187b8:	f002 020f 	andpl.w	r2, r2, #15
 80187bc:	1112      	asrmi	r2, r2, #4
 80187be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80187c2:	b2d2      	uxtb	r2, r2
 80187c4:	2aff      	cmp	r2, #255	; 0xff
 80187c6:	d118      	bne.n	80187fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80187c8:	f06f 0601 	mvn.w	r6, #1
 80187cc:	f8d8 2000 	ldr.w	r2, [r8]
 80187d0:	fb06 f705 	mul.w	r7, r6, r5
 80187d4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80187d8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80187dc:	0956      	lsrs	r6, r2, #5
 80187de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80187e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80187e6:	ea4c 0606 	orr.w	r6, ip, r6
 80187ea:	4316      	orrs	r6, r2
 80187ec:	53e6      	strh	r6, [r4, r7]
 80187ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80187f0:	3d01      	subs	r5, #1
 80187f2:	4410      	add	r0, r2
 80187f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80187f6:	4411      	add	r1, r2
 80187f8:	e787      	b.n	801870a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80187fa:	2a00      	cmp	r2, #0
 80187fc:	d0f7      	beq.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80187fe:	f06f 0601 	mvn.w	r6, #1
 8018802:	f8d8 c000 	ldr.w	ip, [r8]
 8018806:	fa1f f982 	uxth.w	r9, r2
 801880a:	43d2      	mvns	r2, r2
 801880c:	436e      	muls	r6, r5
 801880e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8018812:	b2d2      	uxtb	r2, r2
 8018814:	f834 e006 	ldrh.w	lr, [r4, r6]
 8018818:	fb1a fa09 	smulbb	sl, sl, r9
 801881c:	9604      	str	r6, [sp, #16]
 801881e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8018822:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018826:	fb16 f609 	smulbb	r6, r6, r9
 801882a:	fa5f fc8c 	uxtb.w	ip, ip
 801882e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018832:	fb1c fc09 	smulbb	ip, ip, r9
 8018836:	fb07 6702 	mla	r7, r7, r2, r6
 801883a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801883e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018842:	b2bf      	uxth	r7, r7
 8018844:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018848:	fa5f fe8e 	uxtb.w	lr, lr
 801884c:	fb06 a602 	mla	r6, r6, r2, sl
 8018850:	fb0e cc02 	mla	ip, lr, r2, ip
 8018854:	1c7a      	adds	r2, r7, #1
 8018856:	b2b6      	uxth	r6, r6
 8018858:	fa1f fc8c 	uxth.w	ip, ip
 801885c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018860:	9a04      	ldr	r2, [sp, #16]
 8018862:	f10c 0a01 	add.w	sl, ip, #1
 8018866:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801886a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801886e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018872:	ea4a 0707 	orr.w	r7, sl, r7
 8018876:	f106 0a01 	add.w	sl, r6, #1
 801887a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801887e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018882:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018886:	ea47 070a 	orr.w	r7, r7, sl
 801888a:	52a7      	strh	r7, [r4, r2]
 801888c:	e7af      	b.n	80187ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801888e:	f04f 0e00 	mov.w	lr, #0
 8018892:	eba3 020e 	sub.w	r2, r3, lr
 8018896:	2a00      	cmp	r2, #0
 8018898:	f77f af3a 	ble.w	8018710 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801889c:	1402      	asrs	r2, r0, #16
 801889e:	9e02      	ldr	r6, [sp, #8]
 80188a0:	140d      	asrs	r5, r1, #16
 80188a2:	fb06 2505 	mla	r5, r6, r5, r2
 80188a6:	9e03      	ldr	r6, [sp, #12]
 80188a8:	086a      	lsrs	r2, r5, #1
 80188aa:	07ed      	lsls	r5, r5, #31
 80188ac:	5cb2      	ldrb	r2, [r6, r2]
 80188ae:	bf54      	ite	pl
 80188b0:	f002 020f 	andpl.w	r2, r2, #15
 80188b4:	1112      	asrmi	r2, r2, #4
 80188b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80188ba:	b2d2      	uxtb	r2, r2
 80188bc:	2aff      	cmp	r2, #255	; 0xff
 80188be:	d115      	bne.n	80188ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80188c0:	f8d8 5000 	ldr.w	r5, [r8]
 80188c4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80188c8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80188cc:	096a      	lsrs	r2, r5, #5
 80188ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80188d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80188d6:	4332      	orrs	r2, r6
 80188d8:	432a      	orrs	r2, r5
 80188da:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80188de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80188e0:	f10e 0e01 	add.w	lr, lr, #1
 80188e4:	4410      	add	r0, r2
 80188e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80188e8:	4411      	add	r1, r2
 80188ea:	e7d2      	b.n	8018892 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80188ec:	2a00      	cmp	r2, #0
 80188ee:	d0f6      	beq.n	80188de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80188f0:	f8d8 7000 	ldr.w	r7, [r8]
 80188f4:	fa1f f982 	uxth.w	r9, r2
 80188f8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80188fc:	43d2      	mvns	r2, r2
 80188fe:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8018902:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8018906:	ea4f 262c 	mov.w	r6, ip, asr #8
 801890a:	fb15 f509 	smulbb	r5, r5, r9
 801890e:	b2d2      	uxtb	r2, r2
 8018910:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018914:	b2ff      	uxtb	r7, r7
 8018916:	fb1a fa09 	smulbb	sl, sl, r9
 801891a:	fb06 5602 	mla	r6, r6, r2, r5
 801891e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018922:	fb17 f709 	smulbb	r7, r7, r9
 8018926:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801892a:	b2b6      	uxth	r6, r6
 801892c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018930:	fa5f fc8c 	uxtb.w	ip, ip
 8018934:	fb05 a502 	mla	r5, r5, r2, sl
 8018938:	fb0c 7702 	mla	r7, ip, r2, r7
 801893c:	1c72      	adds	r2, r6, #1
 801893e:	b2ad      	uxth	r5, r5
 8018940:	b2bf      	uxth	r7, r7
 8018942:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8018946:	f107 0a01 	add.w	sl, r7, #1
 801894a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801894e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018952:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018956:	ea4a 0606 	orr.w	r6, sl, r6
 801895a:	f105 0a01 	add.w	sl, r5, #1
 801895e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018962:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018966:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801896a:	ea46 060a 	orr.w	r6, r6, sl
 801896e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8018972:	e7b4      	b.n	80188de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018974:	b007      	add	sp, #28
 8018976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801897a:	bf00      	nop
 801897c:	240016b8 	.word	0x240016b8

08018980 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8018980:	4770      	bx	lr

08018982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8018982:	4770      	bx	lr

08018984 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8018984:	4770      	bx	lr

08018986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8018986:	4770      	bx	lr

08018988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8018988:	4770      	bx	lr

0801898a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801898a:	4770      	bx	lr

0801898c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801898c:	4770      	bx	lr

0801898e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801898e:	4770      	bx	lr

08018990 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018990:	4770      	bx	lr

08018992 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018992:	4770      	bx	lr

08018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018994:	4770      	bx	lr

08018996 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018996:	4770      	bx	lr

08018998 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018998:	4770      	bx	lr

0801899a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801899a:	4770      	bx	lr

0801899c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801899c:	4770      	bx	lr

0801899e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801899e:	4770      	bx	lr

080189a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80189a0:	4770      	bx	lr

080189a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80189a2:	4770      	bx	lr

080189a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80189a4:	4770      	bx	lr

080189a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80189a6:	4770      	bx	lr

080189a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80189a8:	4770      	bx	lr

080189aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80189aa:	4770      	bx	lr

080189ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80189ac:	4770      	bx	lr

080189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80189ae:	4770      	bx	lr

080189b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80189b0:	4770      	bx	lr

080189b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80189b2:	4770      	bx	lr

080189b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80189b4:	4770      	bx	lr

080189b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80189b6:	4770      	bx	lr

080189b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80189b8:	4770      	bx	lr

080189ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80189ba:	4770      	bx	lr

080189bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80189bc:	4770      	bx	lr

080189be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80189be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80189c2:	b088      	sub	sp, #32
 80189c4:	4606      	mov	r6, r0
 80189c6:	4688      	mov	r8, r1
 80189c8:	4691      	mov	r9, r2
 80189ca:	ac08      	add	r4, sp, #32
 80189cc:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80189d0:	4620      	mov	r0, r4
 80189d2:	f7fd fc63 	bl	801629c <_ZNK8touchgfx6Bitmap7getDataEv>
 80189d6:	6833      	ldr	r3, [r6, #0]
 80189d8:	4605      	mov	r5, r0
 80189da:	4620      	mov	r0, r4
 80189dc:	699f      	ldr	r7, [r3, #24]
 80189de:	f7fd fb71 	bl	80160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80189e2:	4682      	mov	sl, r0
 80189e4:	4620      	mov	r0, r4
 80189e6:	f7fd fba1 	bl	801612c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80189ea:	9500      	str	r5, [sp, #0]
 80189ec:	464b      	mov	r3, r9
 80189ee:	4642      	mov	r2, r8
 80189f0:	4631      	mov	r1, r6
 80189f2:	e9cd a001 	strd	sl, r0, [sp, #4]
 80189f6:	a806      	add	r0, sp, #24
 80189f8:	47b8      	blx	r7
 80189fa:	4628      	mov	r0, r5
 80189fc:	b008      	add	sp, #32
 80189fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08018a04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8018a04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8018a08:	2300      	movs	r3, #0
 8018a0a:	9300      	str	r3, [sp, #0]
 8018a0c:	4b3d      	ldr	r3, [pc, #244]	; (8018b04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8018a0e:	781b      	ldrb	r3, [r3, #0]
 8018a10:	2b00      	cmp	r3, #0
 8018a12:	d137      	bne.n	8018a84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8018a14:	4a3c      	ldr	r2, [pc, #240]	; (8018b08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018a16:	f9b2 2000 	ldrsh.w	r2, [r2]
 8018a1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018a1e:	2b00      	cmp	r3, #0
 8018a20:	d132      	bne.n	8018a88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8018a22:	4b3a      	ldr	r3, [pc, #232]	; (8018b0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018a24:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018a28:	ac02      	add	r4, sp, #8
 8018a2a:	6808      	ldr	r0, [r1, #0]
 8018a2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018a30:	ab02      	add	r3, sp, #8
 8018a32:	6849      	ldr	r1, [r1, #4]
 8018a34:	4d36      	ldr	r5, [pc, #216]	; (8018b10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8018a36:	c303      	stmia	r3!, {r0, r1}
 8018a38:	4669      	mov	r1, sp
 8018a3a:	4620      	mov	r0, r4
 8018a3c:	f7fa fd00 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018a40:	4668      	mov	r0, sp
 8018a42:	f7fa fcd5 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018a46:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018a4a:	f8bd 2000 	ldrh.w	r2, [sp]
 8018a4e:	462f      	mov	r7, r5
 8018a50:	6828      	ldr	r0, [r5, #0]
 8018a52:	4413      	add	r3, r2
 8018a54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018a58:	f8ad 3008 	strh.w	r3, [sp, #8]
 8018a5c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018a60:	4413      	add	r3, r2
 8018a62:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018a66:	6803      	ldr	r3, [r0, #0]
 8018a68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a6a:	4798      	blx	r3
 8018a6c:	f010 0f01 	tst.w	r0, #1
 8018a70:	d00c      	beq.n	8018a8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8018a72:	6828      	ldr	r0, [r5, #0]
 8018a74:	6803      	ldr	r3, [r0, #0]
 8018a76:	e894 0006 	ldmia.w	r4, {r1, r2}
 8018a7a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8018a7c:	4798      	blx	r3
 8018a7e:	b004      	add	sp, #16
 8018a80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018a84:	4a21      	ldr	r2, [pc, #132]	; (8018b0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018a86:	e7c6      	b.n	8018a16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8018a88:	4b1f      	ldr	r3, [pc, #124]	; (8018b08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018a8a:	e7cb      	b.n	8018a24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8018a8c:	6838      	ldr	r0, [r7, #0]
 8018a8e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8018a92:	6803      	ldr	r3, [r0, #0]
 8018a94:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8018a98:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8018a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018a9e:	4798      	blx	r3
 8018aa0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8018aa4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018aa8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8018aac:	fb16 3602 	smlabb	r6, r6, r2, r3
 8018ab0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018ab4:	6838      	ldr	r0, [r7, #0]
 8018ab6:	6803      	ldr	r3, [r0, #0]
 8018ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018aba:	4798      	blx	r3
 8018abc:	4a12      	ldr	r2, [pc, #72]	; (8018b08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018abe:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8018ac2:	8813      	ldrh	r3, [r2, #0]
 8018ac4:	4691      	mov	r9, r2
 8018ac6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8018aca:	435d      	muls	r5, r3
 8018acc:	fb03 1404 	mla	r4, r3, r4, r1
 8018ad0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018ad4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018ad8:	6838      	ldr	r0, [r7, #0]
 8018ada:	42ac      	cmp	r4, r5
 8018adc:	6803      	ldr	r3, [r0, #0]
 8018ade:	d20e      	bcs.n	8018afe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8018ae0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8018ae4:	4632      	mov	r2, r6
 8018ae6:	4643      	mov	r3, r8
 8018ae8:	4621      	mov	r1, r4
 8018aea:	47d0      	blx	sl
 8018aec:	f8b9 3000 	ldrh.w	r3, [r9]
 8018af0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018af4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8018af8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018afc:	e7ec      	b.n	8018ad8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8018afe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b00:	4798      	blx	r3
 8018b02:	e7bc      	b.n	8018a7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8018b04:	240016a8 	.word	0x240016a8
 8018b08:	240016aa 	.word	0x240016aa
 8018b0c:	240016ac 	.word	0x240016ac
 8018b10:	240016b0 	.word	0x240016b0

08018b14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8018b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b18:	b08b      	sub	sp, #44	; 0x2c
 8018b1a:	460f      	mov	r7, r1
 8018b1c:	4616      	mov	r6, r2
 8018b1e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8018b22:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8018b26:	f1bb 0f00 	cmp.w	fp, #0
 8018b2a:	d04a      	beq.n	8018bc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8018b2c:	6810      	ldr	r0, [r2, #0]
 8018b2e:	ad06      	add	r5, sp, #24
 8018b30:	6851      	ldr	r1, [r2, #4]
 8018b32:	c503      	stmia	r5!, {r0, r1}
 8018b34:	6818      	ldr	r0, [r3, #0]
 8018b36:	ad08      	add	r5, sp, #32
 8018b38:	6859      	ldr	r1, [r3, #4]
 8018b3a:	c503      	stmia	r5!, {r0, r1}
 8018b3c:	a806      	add	r0, sp, #24
 8018b3e:	f7fa fc57 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b42:	4631      	mov	r1, r6
 8018b44:	a808      	add	r0, sp, #32
 8018b46:	f7fa fc7b 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018b4a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8018b4e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8018b52:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8018b56:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8018b5a:	fb16 2103 	smlabb	r1, r6, r3, r2
 8018b5e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8018b62:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8018b66:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8018b6a:	4f5f      	ldr	r7, [pc, #380]	; (8018ce8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018b6c:	440a      	add	r2, r1
 8018b6e:	6838      	ldr	r0, [r7, #0]
 8018b70:	46b9      	mov	r9, r7
 8018b72:	f8ad 2020 	strh.w	r2, [sp, #32]
 8018b76:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8018b7a:	4413      	add	r3, r2
 8018b7c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8018b80:	6803      	ldr	r3, [r0, #0]
 8018b82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018b84:	4798      	blx	r3
 8018b86:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018b8a:	d11d      	bne.n	8018bc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8018b8c:	b9fc      	cbnz	r4, 8018bce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8018b8e:	f010 0f01 	tst.w	r0, #1
 8018b92:	d01c      	beq.n	8018bce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8018b94:	f8d9 0000 	ldr.w	r0, [r9]
 8018b98:	2700      	movs	r7, #0
 8018b9a:	b2ad      	uxth	r5, r5
 8018b9c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8018ba0:	6801      	ldr	r1, [r0, #0]
 8018ba2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8018ba6:	f8cd b00c 	str.w	fp, [sp, #12]
 8018baa:	9501      	str	r5, [sp, #4]
 8018bac:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8018bb0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8018bb4:	9402      	str	r4, [sp, #8]
 8018bb6:	fa1f f488 	uxth.w	r4, r8
 8018bba:	9400      	str	r4, [sp, #0]
 8018bbc:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8018bbe:	4631      	mov	r1, r6
 8018bc0:	47a0      	blx	r4
 8018bc2:	b00b      	add	sp, #44	; 0x2c
 8018bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bc8:	f010 0f04 	tst.w	r0, #4
 8018bcc:	e7e1      	b.n	8018b92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8018bce:	f8d9 0000 	ldr.w	r0, [r9]
 8018bd2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8018bd6:	6803      	ldr	r3, [r0, #0]
 8018bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018bda:	4798      	blx	r3
 8018bdc:	4b43      	ldr	r3, [pc, #268]	; (8018cec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8018bde:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8018be2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018be6:	881a      	ldrh	r2, [r3, #0]
 8018be8:	469a      	mov	sl, r3
 8018bea:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8018bee:	fb05 f502 	mul.w	r5, r5, r2
 8018bf2:	fb02 1404 	mla	r4, r2, r4, r1
 8018bf6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018bfa:	d059      	beq.n	8018cb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8018bfc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8018c00:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018c04:	fa1f f28b 	uxth.w	r2, fp
 8018c08:	469e      	mov	lr, r3
 8018c0a:	fa1f f989 	uxth.w	r9, r9
 8018c0e:	42ac      	cmp	r4, r5
 8018c10:	d264      	bcs.n	8018cdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018c12:	eb04 0a07 	add.w	sl, r4, r7
 8018c16:	4554      	cmp	r4, sl
 8018c18:	d23d      	bcs.n	8018c96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8018c1a:	8821      	ldrh	r1, [r4, #0]
 8018c1c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8018c20:	1208      	asrs	r0, r1, #8
 8018c22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018c26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c2a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8018c2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c32:	00c9      	lsls	r1, r1, #3
 8018c34:	fb10 f009 	smulbb	r0, r0, r9
 8018c38:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018c3c:	b2c9      	uxtb	r1, r1
 8018c3e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8018c42:	10d8      	asrs	r0, r3, #3
 8018c44:	fb1b fb09 	smulbb	fp, fp, r9
 8018c48:	00db      	lsls	r3, r3, #3
 8018c4a:	fa1f fc8c 	uxth.w	ip, ip
 8018c4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018c52:	fb11 f109 	smulbb	r1, r1, r9
 8018c56:	b2db      	uxtb	r3, r3
 8018c58:	fb00 b002 	mla	r0, r0, r2, fp
 8018c5c:	f10c 0b01 	add.w	fp, ip, #1
 8018c60:	fb03 1302 	mla	r3, r3, r2, r1
 8018c64:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8018c68:	b29b      	uxth	r3, r3
 8018c6a:	b280      	uxth	r0, r0
 8018c6c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8018c70:	f103 0c01 	add.w	ip, r3, #1
 8018c74:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018c78:	1c43      	adds	r3, r0, #1
 8018c7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018c7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018c82:	0940      	lsrs	r0, r0, #5
 8018c84:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018c88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c8c:	ea4c 0c00 	orr.w	ip, ip, r0
 8018c90:	f824 cb02 	strh.w	ip, [r4], #2
 8018c94:	e7bf      	b.n	8018c16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8018c96:	f8be 3000 	ldrh.w	r3, [lr]
 8018c9a:	eba3 0308 	sub.w	r3, r3, r8
 8018c9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018ca2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8018ca6:	eba3 0308 	sub.w	r3, r3, r8
 8018caa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018cae:	e7ae      	b.n	8018c0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8018cb0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018cb4:	f8d9 0000 	ldr.w	r0, [r9]
 8018cb8:	42ac      	cmp	r4, r5
 8018cba:	6803      	ldr	r3, [r0, #0]
 8018cbc:	d20e      	bcs.n	8018cdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018cbe:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8018cc2:	4632      	mov	r2, r6
 8018cc4:	463b      	mov	r3, r7
 8018cc6:	4621      	mov	r1, r4
 8018cc8:	47c0      	blx	r8
 8018cca:	f8ba 3000 	ldrh.w	r3, [sl]
 8018cce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018cd2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8018cd6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018cda:	e7eb      	b.n	8018cb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8018cdc:	4b02      	ldr	r3, [pc, #8]	; (8018ce8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018cde:	6818      	ldr	r0, [r3, #0]
 8018ce0:	6803      	ldr	r3, [r0, #0]
 8018ce2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ce4:	4798      	blx	r3
 8018ce6:	e76c      	b.n	8018bc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8018ce8:	240016b0 	.word	0x240016b0
 8018cec:	240016aa 	.word	0x240016aa

08018cf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8018cf0:	b510      	push	{r4, lr}
 8018cf2:	4604      	mov	r4, r0
 8018cf4:	2104      	movs	r1, #4
 8018cf6:	f00a fe2c 	bl	8023952 <_ZdlPvj>
 8018cfa:	4620      	mov	r0, r4
 8018cfc:	bd10      	pop	{r4, pc}

08018cfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8018cfe:	b510      	push	{r4, lr}
 8018d00:	4604      	mov	r4, r0
 8018d02:	2104      	movs	r1, #4
 8018d04:	f00a fe25 	bl	8023952 <_ZdlPvj>
 8018d08:	4620      	mov	r0, r4
 8018d0a:	bd10      	pop	{r4, pc}

08018d0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8018d0c:	b510      	push	{r4, lr}
 8018d0e:	4604      	mov	r4, r0
 8018d10:	f640 0144 	movw	r1, #2116	; 0x844
 8018d14:	f00a fe1d 	bl	8023952 <_ZdlPvj>
 8018d18:	4620      	mov	r0, r4
 8018d1a:	bd10      	pop	{r4, pc}

08018d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018d1c:	b510      	push	{r4, lr}
 8018d1e:	4604      	mov	r4, r0
 8018d20:	2104      	movs	r1, #4
 8018d22:	f00a fe16 	bl	8023952 <_ZdlPvj>
 8018d26:	4620      	mov	r0, r4
 8018d28:	bd10      	pop	{r4, pc}

08018d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8018d2a:	b510      	push	{r4, lr}
 8018d2c:	4604      	mov	r4, r0
 8018d2e:	2104      	movs	r1, #4
 8018d30:	f00a fe0f 	bl	8023952 <_ZdlPvj>
 8018d34:	4620      	mov	r0, r4
 8018d36:	bd10      	pop	{r4, pc}

08018d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018d38:	b510      	push	{r4, lr}
 8018d3a:	4604      	mov	r4, r0
 8018d3c:	2104      	movs	r1, #4
 8018d3e:	f00a fe08 	bl	8023952 <_ZdlPvj>
 8018d42:	4620      	mov	r0, r4
 8018d44:	bd10      	pop	{r4, pc}

08018d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8018d46:	b510      	push	{r4, lr}
 8018d48:	4604      	mov	r4, r0
 8018d4a:	2104      	movs	r1, #4
 8018d4c:	f00a fe01 	bl	8023952 <_ZdlPvj>
 8018d50:	4620      	mov	r0, r4
 8018d52:	bd10      	pop	{r4, pc}

08018d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018d54:	b510      	push	{r4, lr}
 8018d56:	4604      	mov	r4, r0
 8018d58:	2104      	movs	r1, #4
 8018d5a:	f00a fdfa 	bl	8023952 <_ZdlPvj>
 8018d5e:	4620      	mov	r0, r4
 8018d60:	bd10      	pop	{r4, pc}

08018d62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8018d62:	b510      	push	{r4, lr}
 8018d64:	4604      	mov	r4, r0
 8018d66:	2104      	movs	r1, #4
 8018d68:	f00a fdf3 	bl	8023952 <_ZdlPvj>
 8018d6c:	4620      	mov	r0, r4
 8018d6e:	bd10      	pop	{r4, pc}

08018d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018d70:	b510      	push	{r4, lr}
 8018d72:	4604      	mov	r4, r0
 8018d74:	2104      	movs	r1, #4
 8018d76:	f00a fdec 	bl	8023952 <_ZdlPvj>
 8018d7a:	4620      	mov	r0, r4
 8018d7c:	bd10      	pop	{r4, pc}

08018d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8018d7e:	b510      	push	{r4, lr}
 8018d80:	4604      	mov	r4, r0
 8018d82:	2104      	movs	r1, #4
 8018d84:	f00a fde5 	bl	8023952 <_ZdlPvj>
 8018d88:	4620      	mov	r0, r4
 8018d8a:	bd10      	pop	{r4, pc}

08018d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018d8c:	b510      	push	{r4, lr}
 8018d8e:	4604      	mov	r4, r0
 8018d90:	2104      	movs	r1, #4
 8018d92:	f00a fdde 	bl	8023952 <_ZdlPvj>
 8018d96:	4620      	mov	r0, r4
 8018d98:	bd10      	pop	{r4, pc}

08018d9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018d9a:	b510      	push	{r4, lr}
 8018d9c:	4604      	mov	r4, r0
 8018d9e:	2104      	movs	r1, #4
 8018da0:	f00a fdd7 	bl	8023952 <_ZdlPvj>
 8018da4:	4620      	mov	r0, r4
 8018da6:	bd10      	pop	{r4, pc}

08018da8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018da8:	b510      	push	{r4, lr}
 8018daa:	4604      	mov	r4, r0
 8018dac:	2104      	movs	r1, #4
 8018dae:	f00a fdd0 	bl	8023952 <_ZdlPvj>
 8018db2:	4620      	mov	r0, r4
 8018db4:	bd10      	pop	{r4, pc}

08018db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018db6:	b510      	push	{r4, lr}
 8018db8:	4604      	mov	r4, r0
 8018dba:	2104      	movs	r1, #4
 8018dbc:	f00a fdc9 	bl	8023952 <_ZdlPvj>
 8018dc0:	4620      	mov	r0, r4
 8018dc2:	bd10      	pop	{r4, pc}

08018dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018dc4:	b510      	push	{r4, lr}
 8018dc6:	4604      	mov	r4, r0
 8018dc8:	2104      	movs	r1, #4
 8018dca:	f00a fdc2 	bl	8023952 <_ZdlPvj>
 8018dce:	4620      	mov	r0, r4
 8018dd0:	bd10      	pop	{r4, pc}

08018dd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8018dd2:	b510      	push	{r4, lr}
 8018dd4:	4604      	mov	r4, r0
 8018dd6:	2104      	movs	r1, #4
 8018dd8:	f00a fdbb 	bl	8023952 <_ZdlPvj>
 8018ddc:	4620      	mov	r0, r4
 8018dde:	bd10      	pop	{r4, pc}

08018de0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018de0:	b510      	push	{r4, lr}
 8018de2:	4604      	mov	r4, r0
 8018de4:	2104      	movs	r1, #4
 8018de6:	f00a fdb4 	bl	8023952 <_ZdlPvj>
 8018dea:	4620      	mov	r0, r4
 8018dec:	bd10      	pop	{r4, pc}

08018dee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018dee:	b510      	push	{r4, lr}
 8018df0:	4604      	mov	r4, r0
 8018df2:	2104      	movs	r1, #4
 8018df4:	f00a fdad 	bl	8023952 <_ZdlPvj>
 8018df8:	4620      	mov	r0, r4
 8018dfa:	bd10      	pop	{r4, pc}

08018dfc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018dfc:	b510      	push	{r4, lr}
 8018dfe:	4604      	mov	r4, r0
 8018e00:	2104      	movs	r1, #4
 8018e02:	f00a fda6 	bl	8023952 <_ZdlPvj>
 8018e06:	4620      	mov	r0, r4
 8018e08:	bd10      	pop	{r4, pc}

08018e0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8018e0a:	b510      	push	{r4, lr}
 8018e0c:	4604      	mov	r4, r0
 8018e0e:	2104      	movs	r1, #4
 8018e10:	f00a fd9f 	bl	8023952 <_ZdlPvj>
 8018e14:	4620      	mov	r0, r4
 8018e16:	bd10      	pop	{r4, pc}

08018e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018e18:	b510      	push	{r4, lr}
 8018e1a:	4604      	mov	r4, r0
 8018e1c:	2104      	movs	r1, #4
 8018e1e:	f00a fd98 	bl	8023952 <_ZdlPvj>
 8018e22:	4620      	mov	r0, r4
 8018e24:	bd10      	pop	{r4, pc}

08018e26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018e26:	b510      	push	{r4, lr}
 8018e28:	4604      	mov	r4, r0
 8018e2a:	2104      	movs	r1, #4
 8018e2c:	f00a fd91 	bl	8023952 <_ZdlPvj>
 8018e30:	4620      	mov	r0, r4
 8018e32:	bd10      	pop	{r4, pc}

08018e34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018e34:	b510      	push	{r4, lr}
 8018e36:	4604      	mov	r4, r0
 8018e38:	2104      	movs	r1, #4
 8018e3a:	f00a fd8a 	bl	8023952 <_ZdlPvj>
 8018e3e:	4620      	mov	r0, r4
 8018e40:	bd10      	pop	{r4, pc}

08018e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018e42:	b510      	push	{r4, lr}
 8018e44:	4604      	mov	r4, r0
 8018e46:	2104      	movs	r1, #4
 8018e48:	f00a fd83 	bl	8023952 <_ZdlPvj>
 8018e4c:	4620      	mov	r0, r4
 8018e4e:	bd10      	pop	{r4, pc}

08018e50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018e50:	b510      	push	{r4, lr}
 8018e52:	4604      	mov	r4, r0
 8018e54:	2104      	movs	r1, #4
 8018e56:	f00a fd7c 	bl	8023952 <_ZdlPvj>
 8018e5a:	4620      	mov	r0, r4
 8018e5c:	bd10      	pop	{r4, pc}

08018e5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018e5e:	b510      	push	{r4, lr}
 8018e60:	4604      	mov	r4, r0
 8018e62:	2104      	movs	r1, #4
 8018e64:	f00a fd75 	bl	8023952 <_ZdlPvj>
 8018e68:	4620      	mov	r0, r4
 8018e6a:	bd10      	pop	{r4, pc}

08018e6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8018e6c:	b510      	push	{r4, lr}
 8018e6e:	4604      	mov	r4, r0
 8018e70:	2104      	movs	r1, #4
 8018e72:	f00a fd6e 	bl	8023952 <_ZdlPvj>
 8018e76:	4620      	mov	r0, r4
 8018e78:	bd10      	pop	{r4, pc}

08018e7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8018e7a:	b510      	push	{r4, lr}
 8018e7c:	4604      	mov	r4, r0
 8018e7e:	2104      	movs	r1, #4
 8018e80:	f00a fd67 	bl	8023952 <_ZdlPvj>
 8018e84:	4620      	mov	r0, r4
 8018e86:	bd10      	pop	{r4, pc}

08018e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8018e88:	b510      	push	{r4, lr}
 8018e8a:	4604      	mov	r4, r0
 8018e8c:	2104      	movs	r1, #4
 8018e8e:	f00a fd60 	bl	8023952 <_ZdlPvj>
 8018e92:	4620      	mov	r0, r4
 8018e94:	bd10      	pop	{r4, pc}

08018e96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8018e96:	b510      	push	{r4, lr}
 8018e98:	4604      	mov	r4, r0
 8018e9a:	2104      	movs	r1, #4
 8018e9c:	f00a fd59 	bl	8023952 <_ZdlPvj>
 8018ea0:	4620      	mov	r0, r4
 8018ea2:	bd10      	pop	{r4, pc}

08018ea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ea8:	b08f      	sub	sp, #60	; 0x3c
 8018eaa:	461c      	mov	r4, r3
 8018eac:	9205      	str	r2, [sp, #20]
 8018eae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018eb2:	9100      	str	r1, [sp, #0]
 8018eb4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018eb6:	9201      	str	r2, [sp, #4]
 8018eb8:	2a00      	cmp	r2, #0
 8018eba:	f000 8116 	beq.w	80190ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8018ebe:	6820      	ldr	r0, [r4, #0]
 8018ec0:	aa0a      	add	r2, sp, #40	; 0x28
 8018ec2:	6861      	ldr	r1, [r4, #4]
 8018ec4:	c203      	stmia	r2!, {r0, r1}
 8018ec6:	6818      	ldr	r0, [r3, #0]
 8018ec8:	aa0c      	add	r2, sp, #48	; 0x30
 8018eca:	6859      	ldr	r1, [r3, #4]
 8018ecc:	c203      	stmia	r2!, {r0, r1}
 8018ece:	a80a      	add	r0, sp, #40	; 0x28
 8018ed0:	f7fa fa8e 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018ed4:	4621      	mov	r1, r4
 8018ed6:	a80c      	add	r0, sp, #48	; 0x30
 8018ed8:	f7fa fab2 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018edc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8018ee0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018ee4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018ee8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8018eec:	bfdb      	ittet	le
 8018eee:	b2b3      	uxthle	r3, r6
 8018ef0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018ef4:	2301      	movgt	r3, #1
 8018ef6:	fb92 f3f3 	sdivle	r3, r2, r3
 8018efa:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018efe:	441d      	add	r5, r3
 8018f00:	fb92 f1f3 	sdiv	r1, r2, r3
 8018f04:	fa1f fc81 	uxth.w	ip, r1
 8018f08:	3d01      	subs	r5, #1
 8018f0a:	fb0c 2413 	mls	r4, ip, r3, r2
 8018f0e:	4661      	mov	r1, ip
 8018f10:	fb14 f406 	smulbb	r4, r4, r6
 8018f14:	4404      	add	r4, r0
 8018f16:	fb95 f5f3 	sdiv	r5, r5, r3
 8018f1a:	b2a4      	uxth	r4, r4
 8018f1c:	b131      	cbz	r1, 8018f2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8018f1e:	9b05      	ldr	r3, [sp, #20]
 8018f20:	9900      	ldr	r1, [sp, #0]
 8018f22:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018f26:	ba1b      	rev	r3, r3
 8018f28:	4419      	add	r1, r3
 8018f2a:	9100      	str	r1, [sp, #0]
 8018f2c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8018f30:	b2ad      	uxth	r5, r5
 8018f32:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8018f36:	4418      	add	r0, r3
 8018f38:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8018f3c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8018f40:	00ad      	lsls	r5, r5, #2
 8018f42:	441a      	add	r2, r3
 8018f44:	4b6a      	ldr	r3, [pc, #424]	; (80190f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018f46:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8018f4a:	6818      	ldr	r0, [r3, #0]
 8018f4c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018f50:	6803      	ldr	r3, [r0, #0]
 8018f52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018f54:	4798      	blx	r3
 8018f56:	4967      	ldr	r1, [pc, #412]	; (80190f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8018f58:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018f5c:	2c00      	cmp	r4, #0
 8018f5e:	880b      	ldrh	r3, [r1, #0]
 8018f60:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8018f64:	bf0c      	ite	eq
 8018f66:	46c6      	moveq	lr, r8
 8018f68:	f04f 0e00 	movne.w	lr, #0
 8018f6c:	9109      	str	r1, [sp, #36]	; 0x24
 8018f6e:	fb03 c202 	mla	r2, r3, r2, ip
 8018f72:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018f76:	4373      	muls	r3, r6
 8018f78:	fa1f fe8e 	uxth.w	lr, lr
 8018f7c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018f80:	9103      	str	r1, [sp, #12]
 8018f82:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018f86:	9306      	str	r3, [sp, #24]
 8018f88:	1d2b      	adds	r3, r5, #4
 8018f8a:	9307      	str	r3, [sp, #28]
 8018f8c:	9b01      	ldr	r3, [sp, #4]
 8018f8e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8018f92:	2300      	movs	r3, #0
 8018f94:	b292      	uxth	r2, r2
 8018f96:	9302      	str	r3, [sp, #8]
 8018f98:	9204      	str	r2, [sp, #16]
 8018f9a:	9a06      	ldr	r2, [sp, #24]
 8018f9c:	4282      	cmp	r2, r0
 8018f9e:	f240 809f 	bls.w	80190e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8018fa2:	b963      	cbnz	r3, 8018fbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8018fa4:	9b00      	ldr	r3, [sp, #0]
 8018fa6:	781a      	ldrb	r2, [r3, #0]
 8018fa8:	0993      	lsrs	r3, r2, #6
 8018faa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8018fae:	9202      	str	r2, [sp, #8]
 8018fb0:	1e5a      	subs	r2, r3, #1
 8018fb2:	2a02      	cmp	r2, #2
 8018fb4:	d815      	bhi.n	8018fe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8018fb6:	9a00      	ldr	r2, [sp, #0]
 8018fb8:	b29b      	uxth	r3, r3
 8018fba:	3201      	adds	r2, #1
 8018fbc:	9200      	str	r2, [sp, #0]
 8018fbe:	b1b4      	cbz	r4, 8018fee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8018fc0:	429c      	cmp	r4, r3
 8018fc2:	bf91      	iteee	ls
 8018fc4:	1b1c      	subls	r4, r3, r4
 8018fc6:	1ae4      	subhi	r4, r4, r3
 8018fc8:	4671      	movhi	r1, lr
 8018fca:	f04f 0a00 	movhi.w	sl, #0
 8018fce:	bf9b      	ittet	ls
 8018fd0:	fa1f fa84 	uxthls.w	sl, r4
 8018fd4:	2400      	movls	r4, #0
 8018fd6:	b2a4      	uxthhi	r4, r4
 8018fd8:	fa1f f188 	uxthls.w	r1, r8
 8018fdc:	4653      	mov	r3, sl
 8018fde:	468e      	mov	lr, r1
 8018fe0:	e7db      	b.n	8018f9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8018fe2:	9a00      	ldr	r2, [sp, #0]
 8018fe4:	9b00      	ldr	r3, [sp, #0]
 8018fe6:	3202      	adds	r2, #2
 8018fe8:	785b      	ldrb	r3, [r3, #1]
 8018fea:	9200      	str	r2, [sp, #0]
 8018fec:	e7e7      	b.n	8018fbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8018fee:	2202      	movs	r2, #2
 8018ff0:	9907      	ldr	r1, [sp, #28]
 8018ff2:	4573      	cmp	r3, lr
 8018ff4:	4615      	mov	r5, r2
 8018ff6:	9a02      	ldr	r2, [sp, #8]
 8018ff8:	bf24      	itt	cs
 8018ffa:	eba3 0a0e 	subcs.w	sl, r3, lr
 8018ffe:	46f1      	movcs	r9, lr
 8019000:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019004:	9905      	ldr	r1, [sp, #20]
 8019006:	bf34      	ite	cc
 8019008:	4699      	movcc	r9, r3
 801900a:	fa1f fa8a 	uxthcs.w	sl, sl
 801900e:	f831 c002 	ldrh.w	ip, [r1, r2]
 8019012:	bf38      	it	cc
 8019014:	ebae 0103 	subcc.w	r1, lr, r3
 8019018:	9a01      	ldr	r2, [sp, #4]
 801901a:	bf2e      	itee	cs
 801901c:	4621      	movcs	r1, r4
 801901e:	b289      	uxthcc	r1, r1
 8019020:	46a2      	movcc	sl, r4
 8019022:	2aff      	cmp	r2, #255	; 0xff
 8019024:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019028:	d105      	bne.n	8019036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801902a:	4481      	add	r9, r0
 801902c:	4581      	cmp	r9, r0
 801902e:	d045      	beq.n	80190bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8019030:	f820 cb02 	strh.w	ip, [r0], #2
 8019034:	e7fa      	b.n	801902c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8019036:	ea4f 222c 	mov.w	r2, ip, asr #8
 801903a:	9d03      	ldr	r5, [sp, #12]
 801903c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8019040:	4481      	add	r9, r0
 8019042:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019046:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801904a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801904e:	fa5f fc8c 	uxtb.w	ip, ip
 8019052:	436a      	muls	r2, r5
 8019054:	fb0b fb05 	mul.w	fp, fp, r5
 8019058:	fb0c fc05 	mul.w	ip, ip, r5
 801905c:	9208      	str	r2, [sp, #32]
 801905e:	4581      	cmp	r9, r0
 8019060:	d02c      	beq.n	80190bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8019062:	8802      	ldrh	r2, [r0, #0]
 8019064:	9d04      	ldr	r5, [sp, #16]
 8019066:	1216      	asrs	r6, r2, #8
 8019068:	9f04      	ldr	r7, [sp, #16]
 801906a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801906e:	fb16 f605 	smulbb	r6, r6, r5
 8019072:	9d08      	ldr	r5, [sp, #32]
 8019074:	442e      	add	r6, r5
 8019076:	10d5      	asrs	r5, r2, #3
 8019078:	00d2      	lsls	r2, r2, #3
 801907a:	b2b6      	uxth	r6, r6
 801907c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019080:	b2d2      	uxtb	r2, r2
 8019082:	fb15 f507 	smulbb	r5, r5, r7
 8019086:	fb12 f207 	smulbb	r2, r2, r7
 801908a:	1c77      	adds	r7, r6, #1
 801908c:	445d      	add	r5, fp
 801908e:	4462      	add	r2, ip
 8019090:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019094:	b2ad      	uxth	r5, r5
 8019096:	b292      	uxth	r2, r2
 8019098:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801909c:	1c57      	adds	r7, r2, #1
 801909e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80190a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80190a6:	4316      	orrs	r6, r2
 80190a8:	1c6a      	adds	r2, r5, #1
 80190aa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80190ae:	096d      	lsrs	r5, r5, #5
 80190b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80190b4:	432e      	orrs	r6, r5
 80190b6:	f820 6b02 	strh.w	r6, [r0], #2
 80190ba:	e7d0      	b.n	801905e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 80190bc:	4573      	cmp	r3, lr
 80190be:	d38d      	bcc.n	8018fdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80190c0:	fa1f f188 	uxth.w	r1, r8
 80190c4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80190c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80190ca:	1a64      	subs	r4, r4, r1
 80190cc:	881b      	ldrh	r3, [r3, #0]
 80190ce:	b2a4      	uxth	r4, r4
 80190d0:	eba3 0308 	sub.w	r3, r3, r8
 80190d4:	2c00      	cmp	r4, #0
 80190d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80190da:	bf18      	it	ne
 80190dc:	2100      	movne	r1, #0
 80190de:	e77d      	b.n	8018fdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80190e0:	4b03      	ldr	r3, [pc, #12]	; (80190f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80190e2:	6818      	ldr	r0, [r3, #0]
 80190e4:	6803      	ldr	r3, [r0, #0]
 80190e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80190e8:	4798      	blx	r3
 80190ea:	b00f      	add	sp, #60	; 0x3c
 80190ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190f0:	240016b0 	.word	0x240016b0
 80190f4:	240016aa 	.word	0x240016aa

080190f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80190f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190fc:	b09f      	sub	sp, #124	; 0x7c
 80190fe:	461d      	mov	r5, r3
 8019100:	4604      	mov	r4, r0
 8019102:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019104:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8019108:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801910c:	9209      	str	r2, [sp, #36]	; 0x24
 801910e:	2a00      	cmp	r2, #0
 8019110:	f000 81ed 	beq.w	80194ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8019114:	6828      	ldr	r0, [r5, #0]
 8019116:	aa1a      	add	r2, sp, #104	; 0x68
 8019118:	6869      	ldr	r1, [r5, #4]
 801911a:	c203      	stmia	r2!, {r0, r1}
 801911c:	6818      	ldr	r0, [r3, #0]
 801911e:	aa1c      	add	r2, sp, #112	; 0x70
 8019120:	6859      	ldr	r1, [r3, #4]
 8019122:	c203      	stmia	r2!, {r0, r1}
 8019124:	a81a      	add	r0, sp, #104	; 0x68
 8019126:	f7fa f963 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801912a:	4629      	mov	r1, r5
 801912c:	a81c      	add	r0, sp, #112	; 0x70
 801912e:	f7fa f987 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019132:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8019136:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801913a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801913e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8019142:	bfdb      	ittet	le
 8019144:	b29a      	uxthle	r2, r3
 8019146:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801914a:	2201      	movgt	r2, #1
 801914c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019150:	9202      	str	r2, [sp, #8]
 8019152:	9802      	ldr	r0, [sp, #8]
 8019154:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8019158:	9902      	ldr	r1, [sp, #8]
 801915a:	fb92 f0f0 	sdiv	r0, r2, r0
 801915e:	b280      	uxth	r0, r0
 8019160:	4488      	add	r8, r1
 8019162:	9010      	str	r0, [sp, #64]	; 0x40
 8019164:	f108 38ff 	add.w	r8, r8, #4294967295
 8019168:	9802      	ldr	r0, [sp, #8]
 801916a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801916c:	fb05 2510 	mls	r5, r5, r0, r2
 8019170:	fb98 f8f1 	sdiv	r8, r8, r1
 8019174:	fb15 f503 	smulbb	r5, r5, r3
 8019178:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801917c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019180:	f108 0801 	add.w	r8, r8, #1
 8019184:	440d      	add	r5, r1
 8019186:	4419      	add	r1, r3
 8019188:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801918c:	fa1f f888 	uxth.w	r8, r8
 8019190:	441a      	add	r2, r3
 8019192:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8019196:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801919a:	b2ad      	uxth	r5, r5
 801919c:	9304      	str	r3, [sp, #16]
 801919e:	4b94      	ldr	r3, [pc, #592]	; (80193f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80191a0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80191a4:	6818      	ldr	r0, [r3, #0]
 80191a6:	6803      	ldr	r3, [r0, #0]
 80191a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80191aa:	4798      	blx	r3
 80191ac:	4b91      	ldr	r3, [pc, #580]	; (80193f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80191ae:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80191b2:	2d00      	cmp	r5, #0
 80191b4:	881a      	ldrh	r2, [r3, #0]
 80191b6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80191ba:	fb02 f606 	mul.w	r6, r2, r6
 80191be:	fb02 7101 	mla	r1, r2, r1, r7
 80191c2:	9318      	str	r3, [sp, #96]	; 0x60
 80191c4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80191c8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80191cc:	f04f 0100 	mov.w	r1, #0
 80191d0:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80191d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80191d6:	4b88      	ldr	r3, [pc, #544]	; (80193f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 80191d8:	920a      	str	r2, [sp, #40]	; 0x28
 80191da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80191dc:	eba3 0304 	sub.w	r3, r3, r4
 80191e0:	910d      	str	r1, [sp, #52]	; 0x34
 80191e2:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80191e6:	9319      	str	r3, [sp, #100]	; 0x64
 80191e8:	f108 0204 	add.w	r2, r8, #4
 80191ec:	9211      	str	r2, [sp, #68]	; 0x44
 80191ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191f0:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80191f4:	9215      	str	r2, [sp, #84]	; 0x54
 80191f6:	9a04      	ldr	r2, [sp, #16]
 80191f8:	bf18      	it	ne
 80191fa:	2200      	movne	r2, #0
 80191fc:	b292      	uxth	r2, r2
 80191fe:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019200:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019202:	fa11 f383 	uxtah	r3, r1, r3
 8019206:	9914      	ldr	r1, [sp, #80]	; 0x50
 8019208:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801920c:	3304      	adds	r3, #4
 801920e:	9306      	str	r3, [sp, #24]
 8019210:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019212:	4283      	cmp	r3, r0
 8019214:	f240 8166 	bls.w	80194e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8019218:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801921c:	f04f 0a01 	mov.w	sl, #1
 8019220:	9902      	ldr	r1, [sp, #8]
 8019222:	9e06      	ldr	r6, [sp, #24]
 8019224:	46d3      	mov	fp, sl
 8019226:	4657      	mov	r7, sl
 8019228:	7836      	ldrb	r6, [r6, #0]
 801922a:	fbb5 f3f3 	udiv	r3, r5, r3
 801922e:	1acb      	subs	r3, r1, r3
 8019230:	9612      	str	r6, [sp, #72]	; 0x48
 8019232:	3601      	adds	r6, #1
 8019234:	b29b      	uxth	r3, r3
 8019236:	9605      	str	r6, [sp, #20]
 8019238:	9316      	str	r3, [sp, #88]	; 0x58
 801923a:	9b06      	ldr	r3, [sp, #24]
 801923c:	7859      	ldrb	r1, [r3, #1]
 801923e:	789b      	ldrb	r3, [r3, #2]
 8019240:	021b      	lsls	r3, r3, #8
 8019242:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8019246:	9906      	ldr	r1, [sp, #24]
 8019248:	78c9      	ldrb	r1, [r1, #3]
 801924a:	430b      	orrs	r3, r1
 801924c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801924e:	4419      	add	r1, r3
 8019250:	1c4e      	adds	r6, r1, #1
 8019252:	7849      	ldrb	r1, [r1, #1]
 8019254:	9603      	str	r6, [sp, #12]
 8019256:	0209      	lsls	r1, r1, #8
 8019258:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801925a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801925e:	5cf3      	ldrb	r3, [r6, r3]
 8019260:	4319      	orrs	r1, r3
 8019262:	b28b      	uxth	r3, r1
 8019264:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8019268:	930c      	str	r3, [sp, #48]	; 0x30
 801926a:	2300      	movs	r3, #0
 801926c:	9307      	str	r3, [sp, #28]
 801926e:	469c      	mov	ip, r3
 8019270:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8019274:	930e      	str	r3, [sp, #56]	; 0x38
 8019276:	2d00      	cmp	r5, #0
 8019278:	d07e      	beq.n	8019378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801927a:	42af      	cmp	r7, r5
 801927c:	d26e      	bcs.n	801935c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801927e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019280:	1bed      	subs	r5, r5, r7
 8019282:	9201      	str	r2, [sp, #4]
 8019284:	4283      	cmp	r3, r0
 8019286:	b2ad      	uxth	r5, r5
 8019288:	d802      	bhi.n	8019290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801928a:	e073      	b.n	8019374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801928c:	2b00      	cmp	r3, #0
 801928e:	d15f      	bne.n	8019350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8019290:	9b03      	ldr	r3, [sp, #12]
 8019292:	f1cb 0207 	rsb	r2, fp, #7
 8019296:	785b      	ldrb	r3, [r3, #1]
 8019298:	4093      	lsls	r3, r2
 801929a:	005b      	lsls	r3, r3, #1
 801929c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80192a0:	9b03      	ldr	r3, [sp, #12]
 80192a2:	781b      	ldrb	r3, [r3, #0]
 80192a4:	fa43 f30b 	asr.w	r3, r3, fp
 80192a8:	b2db      	uxtb	r3, r3
 80192aa:	4313      	orrs	r3, r2
 80192ac:	f10b 0201 	add.w	r2, fp, #1
 80192b0:	fa5f fb82 	uxtb.w	fp, r2
 80192b4:	9a03      	ldr	r2, [sp, #12]
 80192b6:	b29f      	uxth	r7, r3
 80192b8:	f1bb 0f08 	cmp.w	fp, #8
 80192bc:	bf13      	iteet	ne
 80192be:	3201      	addne	r2, #1
 80192c0:	3202      	addeq	r2, #2
 80192c2:	f04f 0b00 	moveq.w	fp, #0
 80192c6:	9203      	strne	r2, [sp, #12]
 80192c8:	bf08      	it	eq
 80192ca:	9203      	streq	r2, [sp, #12]
 80192cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80192ce:	42ba      	cmp	r2, r7
 80192d0:	d309      	bcc.n	80192e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 80192d2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80192d6:	2301      	movs	r3, #1
 80192d8:	9a05      	ldr	r2, [sp, #20]
 80192da:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80192de:	d30e      	bcc.n	80192fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80192e0:	469a      	mov	sl, r3
 80192e2:	2600      	movs	r6, #0
 80192e4:	e035      	b.n	8019352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80192e6:	9b05      	ldr	r3, [sp, #20]
 80192e8:	429f      	cmp	r7, r3
 80192ea:	d318      	bcc.n	801931e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80192ec:	eb04 030a 	add.w	r3, r4, sl
 80192f0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 80192f4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 80192f8:	f10a 0301 	add.w	r3, sl, #1
 80192fc:	b29b      	uxth	r3, r3
 80192fe:	9a05      	ldr	r2, [sp, #20]
 8019300:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8019304:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8019308:	990c      	ldr	r1, [sp, #48]	; 0x30
 801930a:	7116      	strb	r6, [r2, #4]
 801930c:	f10a 0601 	add.w	r6, sl, #1
 8019310:	80d1      	strh	r1, [r2, #6]
 8019312:	7156      	strb	r6, [r2, #5]
 8019314:	9a05      	ldr	r2, [sp, #20]
 8019316:	3201      	adds	r2, #1
 8019318:	b292      	uxth	r2, r2
 801931a:	9205      	str	r2, [sp, #20]
 801931c:	e7e0      	b.n	80192e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801931e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8019322:	463a      	mov	r2, r7
 8019324:	795b      	ldrb	r3, [r3, #5]
 8019326:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801932a:	4426      	add	r6, r4
 801932c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801932e:	eb01 0c06 	add.w	ip, r1, r6
 8019332:	f1bc 0f00 	cmp.w	ip, #0
 8019336:	dd07      	ble.n	8019348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8019338:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801933c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8019340:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8019344:	88d2      	ldrh	r2, [r2, #6]
 8019346:	e7f1      	b.n	801932c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8019348:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801934c:	b29b      	uxth	r3, r3
 801934e:	e7c3      	b.n	80192d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8019350:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019352:	970c      	str	r7, [sp, #48]	; 0x30
 8019354:	46b4      	mov	ip, r6
 8019356:	9a01      	ldr	r2, [sp, #4]
 8019358:	461f      	mov	r7, r3
 801935a:	e78c      	b.n	8019276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801935c:	1b7b      	subs	r3, r7, r5
 801935e:	eb0c 0605 	add.w	r6, ip, r5
 8019362:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019366:	b29b      	uxth	r3, r3
 8019368:	b2b6      	uxth	r6, r6
 801936a:	9201      	str	r2, [sp, #4]
 801936c:	2500      	movs	r5, #0
 801936e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019370:	4282      	cmp	r2, r0
 8019372:	d88b      	bhi.n	801928c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8019374:	9a01      	ldr	r2, [sp, #4]
 8019376:	e74b      	b.n	8019210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8019378:	4297      	cmp	r7, r2
 801937a:	d332      	bcc.n	80193e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801937c:	1abb      	subs	r3, r7, r2
 801937e:	9208      	str	r2, [sp, #32]
 8019380:	9501      	str	r5, [sp, #4]
 8019382:	b29b      	uxth	r3, r3
 8019384:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019386:	29ff      	cmp	r1, #255	; 0xff
 8019388:	9908      	ldr	r1, [sp, #32]
 801938a:	eb0c 0601 	add.w	r6, ip, r1
 801938e:	d135      	bne.n	80193fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8019390:	f1a0 0e02 	sub.w	lr, r0, #2
 8019394:	b2b6      	uxth	r6, r6
 8019396:	45b4      	cmp	ip, r6
 8019398:	f040 808c 	bne.w	80194b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 801939c:	9908      	ldr	r1, [sp, #32]
 801939e:	4297      	cmp	r7, r2
 80193a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80193a4:	d3e2      	bcc.n	801936c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 80193a6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80193a8:	9904      	ldr	r1, [sp, #16]
 80193aa:	8812      	ldrh	r2, [r2, #0]
 80193ac:	1a52      	subs	r2, r2, r1
 80193ae:	9916      	ldr	r1, [sp, #88]	; 0x58
 80193b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80193b4:	9a07      	ldr	r2, [sp, #28]
 80193b6:	3201      	adds	r2, #1
 80193b8:	428a      	cmp	r2, r1
 80193ba:	9207      	str	r2, [sp, #28]
 80193bc:	f040 8087 	bne.w	80194ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80193c0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80193c4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 80193c8:	9b04      	ldr	r3, [sp, #16]
 80193ca:	1bed      	subs	r5, r5, r7
 80193cc:	b2ad      	uxth	r5, r5
 80193ce:	2d00      	cmp	r5, #0
 80193d0:	bf08      	it	eq
 80193d2:	461a      	moveq	r2, r3
 80193d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80193d6:	bf18      	it	ne
 80193d8:	2200      	movne	r2, #0
 80193da:	3301      	adds	r3, #1
 80193dc:	b292      	uxth	r2, r2
 80193de:	930d      	str	r3, [sp, #52]	; 0x34
 80193e0:	e70d      	b.n	80191fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80193e2:	1bd1      	subs	r1, r2, r7
 80193e4:	9708      	str	r7, [sp, #32]
 80193e6:	b28b      	uxth	r3, r1
 80193e8:	9301      	str	r3, [sp, #4]
 80193ea:	462b      	mov	r3, r5
 80193ec:	e7ca      	b.n	8019384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80193ee:	bf00      	nop
 80193f0:	240016b0 	.word	0x240016b0
 80193f4:	240016aa 	.word	0x240016aa
 80193f8:	fffff7fb 	.word	0xfffff7fb
 80193fc:	b2b6      	uxth	r6, r6
 80193fe:	900b      	str	r0, [sp, #44]	; 0x2c
 8019400:	45b4      	cmp	ip, r6
 8019402:	d0cb      	beq.n	801939c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8019404:	f10c 0101 	add.w	r1, ip, #1
 8019408:	44a4      	add	ip, r4
 801940a:	9117      	str	r1, [sp, #92]	; 0x5c
 801940c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8019410:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019412:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8019416:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019418:	ea4f 2825 	mov.w	r8, r5, asr #8
 801941c:	f8b1 c000 	ldrh.w	ip, [r1]
 8019420:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019422:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8019426:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801942a:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801942e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019432:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019436:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801943a:	fb1e fe01 	smulbb	lr, lr, r1
 801943e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019440:	fa5f fc8c 	uxtb.w	ip, ip
 8019444:	fb08 e801 	mla	r8, r8, r1, lr
 8019448:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801944c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801944e:	00ed      	lsls	r5, r5, #3
 8019450:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019454:	fa1f f888 	uxth.w	r8, r8
 8019458:	fb19 f901 	smulbb	r9, r9, r1
 801945c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801945e:	b2ed      	uxtb	r5, r5
 8019460:	fb0e 9e01 	mla	lr, lr, r1, r9
 8019464:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019466:	fb1c fc01 	smulbb	ip, ip, r1
 801946a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801946c:	fa1f fe8e 	uxth.w	lr, lr
 8019470:	fb05 c501 	mla	r5, r5, r1, ip
 8019474:	f108 0c01 	add.w	ip, r8, #1
 8019478:	f10e 0901 	add.w	r9, lr, #1
 801947c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801947e:	b2ad      	uxth	r5, r5
 8019480:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019484:	f105 0c01 	add.w	ip, r5, #1
 8019488:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801948c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8019490:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8019494:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019498:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801949c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80194a0:	ea4c 0808 	orr.w	r8, ip, r8
 80194a4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 80194a8:	ea48 0809 	orr.w	r8, r8, r9
 80194ac:	f821 8b02 	strh.w	r8, [r1], #2
 80194b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80194b2:	e7a5      	b.n	8019400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80194b4:	f10c 0801 	add.w	r8, ip, #1
 80194b8:	44a4      	add	ip, r4
 80194ba:	9911      	ldr	r1, [sp, #68]	; 0x44
 80194bc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80194c0:	fa1f fc88 	uxth.w	ip, r8
 80194c4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80194c8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80194cc:	e763      	b.n	8019396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 80194ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80194d2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80194d6:	1aad      	subs	r5, r5, r2
 80194d8:	b2ad      	uxth	r5, r5
 80194da:	2d00      	cmp	r5, #0
 80194dc:	bf18      	it	ne
 80194de:	2200      	movne	r2, #0
 80194e0:	9201      	str	r2, [sp, #4]
 80194e2:	e744      	b.n	801936e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80194e4:	4b03      	ldr	r3, [pc, #12]	; (80194f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80194e6:	6818      	ldr	r0, [r3, #0]
 80194e8:	6803      	ldr	r3, [r0, #0]
 80194ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80194ec:	4798      	blx	r3
 80194ee:	b01f      	add	sp, #124	; 0x7c
 80194f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194f4:	240016b0 	.word	0x240016b0

080194f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80194f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194fc:	b08f      	sub	sp, #60	; 0x3c
 80194fe:	461c      	mov	r4, r3
 8019500:	460f      	mov	r7, r1
 8019502:	9203      	str	r2, [sp, #12]
 8019504:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019508:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801950a:	9202      	str	r2, [sp, #8]
 801950c:	2a00      	cmp	r2, #0
 801950e:	f000 8128 	beq.w	8019762 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8019512:	6820      	ldr	r0, [r4, #0]
 8019514:	aa0a      	add	r2, sp, #40	; 0x28
 8019516:	6861      	ldr	r1, [r4, #4]
 8019518:	c203      	stmia	r2!, {r0, r1}
 801951a:	6818      	ldr	r0, [r3, #0]
 801951c:	aa0c      	add	r2, sp, #48	; 0x30
 801951e:	6859      	ldr	r1, [r3, #4]
 8019520:	c203      	stmia	r2!, {r0, r1}
 8019522:	a80a      	add	r0, sp, #40	; 0x28
 8019524:	f7f9 ff64 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019528:	4621      	mov	r1, r4
 801952a:	a80c      	add	r0, sp, #48	; 0x30
 801952c:	f7f9 ff88 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019530:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019534:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8019538:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801953c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8019540:	bfdb      	ittet	le
 8019542:	b2b3      	uxthle	r3, r6
 8019544:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8019548:	2301      	movgt	r3, #1
 801954a:	fb92 f3f3 	sdivle	r3, r2, r3
 801954e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8019552:	441d      	add	r5, r3
 8019554:	fb92 f1f3 	sdiv	r1, r2, r3
 8019558:	fa1f fc81 	uxth.w	ip, r1
 801955c:	3d01      	subs	r5, #1
 801955e:	fb0c 2413 	mls	r4, ip, r3, r2
 8019562:	4661      	mov	r1, ip
 8019564:	fb14 f406 	smulbb	r4, r4, r6
 8019568:	4404      	add	r4, r0
 801956a:	fb95 f5f3 	sdiv	r5, r5, r3
 801956e:	b2a4      	uxth	r4, r4
 8019570:	b121      	cbz	r1, 801957c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8019572:	9b03      	ldr	r3, [sp, #12]
 8019574:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019578:	ba1b      	rev	r3, r3
 801957a:	441f      	add	r7, r3
 801957c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019580:	b2ad      	uxth	r5, r5
 8019582:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8019586:	4418      	add	r0, r3
 8019588:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801958c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8019590:	00ad      	lsls	r5, r5, #2
 8019592:	441a      	add	r2, r3
 8019594:	4b74      	ldr	r3, [pc, #464]	; (8019768 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019596:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801959a:	6818      	ldr	r0, [r3, #0]
 801959c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80195a0:	6803      	ldr	r3, [r0, #0]
 80195a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80195a4:	4798      	blx	r3
 80195a6:	4a71      	ldr	r2, [pc, #452]	; (801976c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80195a8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80195ac:	2c00      	cmp	r4, #0
 80195ae:	8813      	ldrh	r3, [r2, #0]
 80195b0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80195b4:	bf0c      	ite	eq
 80195b6:	46c8      	moveq	r8, r9
 80195b8:	f04f 0800 	movne.w	r8, #0
 80195bc:	9209      	str	r2, [sp, #36]	; 0x24
 80195be:	fb03 c101 	mla	r1, r3, r1, ip
 80195c2:	4373      	muls	r3, r6
 80195c4:	fa1f f888 	uxth.w	r8, r8
 80195c8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80195cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80195d0:	9304      	str	r3, [sp, #16]
 80195d2:	1d2b      	adds	r3, r5, #4
 80195d4:	9305      	str	r3, [sp, #20]
 80195d6:	2300      	movs	r3, #0
 80195d8:	9301      	str	r3, [sp, #4]
 80195da:	9a04      	ldr	r2, [sp, #16]
 80195dc:	4282      	cmp	r2, r0
 80195de:	f240 80bb 	bls.w	8019758 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80195e2:	b95b      	cbnz	r3, 80195fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80195e4:	783a      	ldrb	r2, [r7, #0]
 80195e6:	0993      	lsrs	r3, r2, #6
 80195e8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80195ec:	9201      	str	r2, [sp, #4]
 80195ee:	1e5a      	subs	r2, r3, #1
 80195f0:	2a02      	cmp	r2, #2
 80195f2:	bf8d      	iteet	hi
 80195f4:	787b      	ldrbhi	r3, [r7, #1]
 80195f6:	3701      	addls	r7, #1
 80195f8:	b29b      	uxthls	r3, r3
 80195fa:	3702      	addhi	r7, #2
 80195fc:	b184      	cbz	r4, 8019620 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 80195fe:	429c      	cmp	r4, r3
 8019600:	bf91      	iteee	ls
 8019602:	1b1c      	subls	r4, r3, r4
 8019604:	1ae4      	subhi	r4, r4, r3
 8019606:	46c4      	movhi	ip, r8
 8019608:	f04f 0a00 	movhi.w	sl, #0
 801960c:	bf9b      	ittet	ls
 801960e:	fa1f fa84 	uxthls.w	sl, r4
 8019612:	2400      	movls	r4, #0
 8019614:	b2a4      	uxthhi	r4, r4
 8019616:	fa1f fc89 	uxthls.w	ip, r9
 801961a:	4653      	mov	r3, sl
 801961c:	46e0      	mov	r8, ip
 801961e:	e7dc      	b.n	80195da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8019620:	2204      	movs	r2, #4
 8019622:	9905      	ldr	r1, [sp, #20]
 8019624:	4543      	cmp	r3, r8
 8019626:	4615      	mov	r5, r2
 8019628:	9a01      	ldr	r2, [sp, #4]
 801962a:	bf24      	itt	cs
 801962c:	eba3 0a08 	subcs.w	sl, r3, r8
 8019630:	46c6      	movcs	lr, r8
 8019632:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019636:	9903      	ldr	r1, [sp, #12]
 8019638:	bf3c      	itt	cc
 801963a:	eba8 0c03 	subcc.w	ip, r8, r3
 801963e:	469e      	movcc	lr, r3
 8019640:	588a      	ldr	r2, [r1, r2]
 8019642:	bf26      	itte	cs
 8019644:	fa1f fa8a 	uxthcs.w	sl, sl
 8019648:	46a4      	movcs	ip, r4
 801964a:	fa1f fc8c 	uxthcc.w	ip, ip
 801964e:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8019652:	bf38      	it	cc
 8019654:	46a2      	movcc	sl, r4
 8019656:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801965a:	2900      	cmp	r1, #0
 801965c:	d066      	beq.n	801972c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801965e:	29ff      	cmp	r1, #255	; 0xff
 8019660:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8019664:	d114      	bne.n	8019690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019666:	9d02      	ldr	r5, [sp, #8]
 8019668:	2dff      	cmp	r5, #255	; 0xff
 801966a:	d111      	bne.n	8019690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801966c:	0951      	lsrs	r1, r2, #5
 801966e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019672:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019676:	4486      	add	lr, r0
 8019678:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801967c:	f026 0607 	bic.w	r6, r6, #7
 8019680:	430e      	orrs	r6, r1
 8019682:	4316      	orrs	r6, r2
 8019684:	b2b6      	uxth	r6, r6
 8019686:	4586      	cmp	lr, r0
 8019688:	d051      	beq.n	801972e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801968a:	f820 6b02 	strh.w	r6, [r0], #2
 801968e:	e7fa      	b.n	8019686 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8019690:	9d02      	ldr	r5, [sp, #8]
 8019692:	b2f6      	uxtb	r6, r6
 8019694:	4486      	add	lr, r0
 8019696:	4369      	muls	r1, r5
 8019698:	1c4d      	adds	r5, r1, #1
 801969a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801969e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80196a2:	b2d2      	uxtb	r2, r2
 80196a4:	122d      	asrs	r5, r5, #8
 80196a6:	ea6f 0b05 	mvn.w	fp, r5
 80196aa:	b2ad      	uxth	r5, r5
 80196ac:	fb11 f105 	smulbb	r1, r1, r5
 80196b0:	fa5f fb8b 	uxtb.w	fp, fp
 80196b4:	fb16 f605 	smulbb	r6, r6, r5
 80196b8:	fb12 f205 	smulbb	r2, r2, r5
 80196bc:	b289      	uxth	r1, r1
 80196be:	b2b6      	uxth	r6, r6
 80196c0:	b292      	uxth	r2, r2
 80196c2:	9106      	str	r1, [sp, #24]
 80196c4:	9607      	str	r6, [sp, #28]
 80196c6:	9208      	str	r2, [sp, #32]
 80196c8:	4586      	cmp	lr, r0
 80196ca:	d030      	beq.n	801972e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80196cc:	8802      	ldrh	r2, [r0, #0]
 80196ce:	9906      	ldr	r1, [sp, #24]
 80196d0:	1216      	asrs	r6, r2, #8
 80196d2:	10d5      	asrs	r5, r2, #3
 80196d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80196d8:	00d2      	lsls	r2, r2, #3
 80196da:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80196de:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80196e2:	b2d2      	uxtb	r2, r2
 80196e4:	fb06 160b 	mla	r6, r6, fp, r1
 80196e8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80196ec:	9907      	ldr	r1, [sp, #28]
 80196ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80196f2:	b2b6      	uxth	r6, r6
 80196f4:	fb05 150b 	mla	r5, r5, fp, r1
 80196f8:	9908      	ldr	r1, [sp, #32]
 80196fa:	fb02 120b 	mla	r2, r2, fp, r1
 80196fe:	1c71      	adds	r1, r6, #1
 8019700:	b2ad      	uxth	r5, r5
 8019702:	b292      	uxth	r2, r2
 8019704:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8019708:	1c51      	adds	r1, r2, #1
 801970a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801970e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019712:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019716:	4316      	orrs	r6, r2
 8019718:	1c6a      	adds	r2, r5, #1
 801971a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801971e:	096d      	lsrs	r5, r5, #5
 8019720:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019724:	432e      	orrs	r6, r5
 8019726:	f820 6b02 	strh.w	r6, [r0], #2
 801972a:	e7cd      	b.n	80196c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801972c:	4470      	add	r0, lr
 801972e:	4543      	cmp	r3, r8
 8019730:	f4ff af73 	bcc.w	801961a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8019734:	fa1f fc89 	uxth.w	ip, r9
 8019738:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801973c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801973e:	eba4 040c 	sub.w	r4, r4, ip
 8019742:	881b      	ldrh	r3, [r3, #0]
 8019744:	b2a4      	uxth	r4, r4
 8019746:	eba3 0309 	sub.w	r3, r3, r9
 801974a:	2c00      	cmp	r4, #0
 801974c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019750:	bf18      	it	ne
 8019752:	f04f 0c00 	movne.w	ip, #0
 8019756:	e760      	b.n	801961a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8019758:	4b03      	ldr	r3, [pc, #12]	; (8019768 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801975a:	6818      	ldr	r0, [r3, #0]
 801975c:	6803      	ldr	r3, [r0, #0]
 801975e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019760:	4798      	blx	r3
 8019762:	b00f      	add	sp, #60	; 0x3c
 8019764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019768:	240016b0 	.word	0x240016b0
 801976c:	240016aa 	.word	0x240016aa

08019770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019774:	b093      	sub	sp, #76	; 0x4c
 8019776:	461c      	mov	r4, r3
 8019778:	9205      	str	r2, [sp, #20]
 801977a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801977e:	9101      	str	r1, [sp, #4]
 8019780:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019782:	9202      	str	r2, [sp, #8]
 8019784:	2a00      	cmp	r2, #0
 8019786:	f000 812e 	beq.w	80199e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801978a:	6820      	ldr	r0, [r4, #0]
 801978c:	aa0e      	add	r2, sp, #56	; 0x38
 801978e:	6861      	ldr	r1, [r4, #4]
 8019790:	c203      	stmia	r2!, {r0, r1}
 8019792:	6818      	ldr	r0, [r3, #0]
 8019794:	aa10      	add	r2, sp, #64	; 0x40
 8019796:	6859      	ldr	r1, [r3, #4]
 8019798:	c203      	stmia	r2!, {r0, r1}
 801979a:	a80e      	add	r0, sp, #56	; 0x38
 801979c:	f7f9 fe28 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80197a0:	4621      	mov	r1, r4
 80197a2:	a810      	add	r0, sp, #64	; 0x40
 80197a4:	f7f9 fe4c 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80197a8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80197ac:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80197b0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80197b4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80197b8:	bfdb      	ittet	le
 80197ba:	b2b3      	uxthle	r3, r6
 80197bc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80197c0:	2301      	movgt	r3, #1
 80197c2:	fb92 f3f3 	sdivle	r3, r2, r3
 80197c6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80197ca:	441d      	add	r5, r3
 80197cc:	fb92 f1f3 	sdiv	r1, r2, r3
 80197d0:	fa1f fc81 	uxth.w	ip, r1
 80197d4:	3d01      	subs	r5, #1
 80197d6:	fb0c 2413 	mls	r4, ip, r3, r2
 80197da:	4661      	mov	r1, ip
 80197dc:	fb14 f406 	smulbb	r4, r4, r6
 80197e0:	4404      	add	r4, r0
 80197e2:	fb95 f5f3 	sdiv	r5, r5, r3
 80197e6:	b2a4      	uxth	r4, r4
 80197e8:	b131      	cbz	r1, 80197f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80197ea:	9b05      	ldr	r3, [sp, #20]
 80197ec:	9901      	ldr	r1, [sp, #4]
 80197ee:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80197f2:	ba1b      	rev	r3, r3
 80197f4:	4419      	add	r1, r3
 80197f6:	9101      	str	r1, [sp, #4]
 80197f8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80197fc:	b2ad      	uxth	r5, r5
 80197fe:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019802:	4418      	add	r0, r3
 8019804:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8019808:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801980c:	00ad      	lsls	r5, r5, #2
 801980e:	441a      	add	r2, r3
 8019810:	4b76      	ldr	r3, [pc, #472]	; (80199ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8019812:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8019816:	6818      	ldr	r0, [r3, #0]
 8019818:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801981c:	6803      	ldr	r3, [r0, #0]
 801981e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019820:	4798      	blx	r3
 8019822:	4973      	ldr	r1, [pc, #460]	; (80199f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8019824:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8019828:	2c00      	cmp	r4, #0
 801982a:	880b      	ldrh	r3, [r1, #0]
 801982c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8019830:	910d      	str	r1, [sp, #52]	; 0x34
 8019832:	fb03 c202 	mla	r2, r3, r2, ip
 8019836:	bf08      	it	eq
 8019838:	46dc      	moveq	ip, fp
 801983a:	fb03 f306 	mul.w	r3, r3, r6
 801983e:	bf18      	it	ne
 8019840:	f04f 0c00 	movne.w	ip, #0
 8019844:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019848:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801984c:	fa1f fc8c 	uxth.w	ip, ip
 8019850:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019854:	9106      	str	r1, [sp, #24]
 8019856:	9308      	str	r3, [sp, #32]
 8019858:	1d2b      	adds	r3, r5, #4
 801985a:	9309      	str	r3, [sp, #36]	; 0x24
 801985c:	9b02      	ldr	r3, [sp, #8]
 801985e:	43da      	mvns	r2, r3
 8019860:	2300      	movs	r3, #0
 8019862:	b2d2      	uxtb	r2, r2
 8019864:	9303      	str	r3, [sp, #12]
 8019866:	9207      	str	r2, [sp, #28]
 8019868:	9a08      	ldr	r2, [sp, #32]
 801986a:	4282      	cmp	r2, r0
 801986c:	f240 80b6 	bls.w	80199dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8019870:	b963      	cbnz	r3, 801988c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8019872:	9b01      	ldr	r3, [sp, #4]
 8019874:	781a      	ldrb	r2, [r3, #0]
 8019876:	0993      	lsrs	r3, r2, #6
 8019878:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801987c:	9203      	str	r2, [sp, #12]
 801987e:	1e5a      	subs	r2, r3, #1
 8019880:	2a02      	cmp	r2, #2
 8019882:	d815      	bhi.n	80198b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8019884:	9a01      	ldr	r2, [sp, #4]
 8019886:	b29b      	uxth	r3, r3
 8019888:	3201      	adds	r2, #1
 801988a:	9201      	str	r2, [sp, #4]
 801988c:	b1b4      	cbz	r4, 80198bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801988e:	429c      	cmp	r4, r3
 8019890:	bf91      	iteee	ls
 8019892:	1b1c      	subls	r4, r3, r4
 8019894:	1ae4      	subhi	r4, r4, r3
 8019896:	4666      	movhi	r6, ip
 8019898:	f04f 0800 	movhi.w	r8, #0
 801989c:	bf9b      	ittet	ls
 801989e:	fa1f f884 	uxthls.w	r8, r4
 80198a2:	2400      	movls	r4, #0
 80198a4:	b2a4      	uxthhi	r4, r4
 80198a6:	fa1f f68b 	uxthls.w	r6, fp
 80198aa:	4643      	mov	r3, r8
 80198ac:	46b4      	mov	ip, r6
 80198ae:	e7db      	b.n	8019868 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 80198b0:	9a01      	ldr	r2, [sp, #4]
 80198b2:	9b01      	ldr	r3, [sp, #4]
 80198b4:	3202      	adds	r2, #2
 80198b6:	785b      	ldrb	r3, [r3, #1]
 80198b8:	9201      	str	r2, [sp, #4]
 80198ba:	e7e7      	b.n	801988c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80198bc:	2203      	movs	r2, #3
 80198be:	9909      	ldr	r1, [sp, #36]	; 0x24
 80198c0:	4563      	cmp	r3, ip
 80198c2:	4615      	mov	r5, r2
 80198c4:	9a03      	ldr	r2, [sp, #12]
 80198c6:	bf2c      	ite	cs
 80198c8:	eba3 080c 	subcs.w	r8, r3, ip
 80198cc:	ebac 0603 	subcc.w	r6, ip, r3
 80198d0:	fb15 1202 	smlabb	r2, r5, r2, r1
 80198d4:	9905      	ldr	r1, [sp, #20]
 80198d6:	bf24      	itt	cs
 80198d8:	fa1f f888 	uxthcs.w	r8, r8
 80198dc:	46e1      	movcs	r9, ip
 80198de:	eb01 0502 	add.w	r5, r1, r2
 80198e2:	9902      	ldr	r1, [sp, #8]
 80198e4:	bf2f      	iteee	cs
 80198e6:	4626      	movcs	r6, r4
 80198e8:	b2b6      	uxthcc	r6, r6
 80198ea:	4699      	movcc	r9, r3
 80198ec:	46a0      	movcc	r8, r4
 80198ee:	29ff      	cmp	r1, #255	; 0xff
 80198f0:	d04a      	beq.n	8019988 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80198f2:	9f06      	ldr	r7, [sp, #24]
 80198f4:	46ca      	mov	sl, r9
 80198f6:	78a9      	ldrb	r1, [r5, #2]
 80198f8:	9004      	str	r0, [sp, #16]
 80198fa:	4379      	muls	r1, r7
 80198fc:	910a      	str	r1, [sp, #40]	; 0x28
 80198fe:	7869      	ldrb	r1, [r5, #1]
 8019900:	4379      	muls	r1, r7
 8019902:	910b      	str	r1, [sp, #44]	; 0x2c
 8019904:	9905      	ldr	r1, [sp, #20]
 8019906:	5c8a      	ldrb	r2, [r1, r2]
 8019908:	437a      	muls	r2, r7
 801990a:	920c      	str	r2, [sp, #48]	; 0x30
 801990c:	f1ba 0f00 	cmp.w	sl, #0
 8019910:	d03d      	beq.n	801998e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8019912:	9a04      	ldr	r2, [sp, #16]
 8019914:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019918:	9f07      	ldr	r7, [sp, #28]
 801991a:	8812      	ldrh	r2, [r2, #0]
 801991c:	fa1f fa8a 	uxth.w	sl, sl
 8019920:	46be      	mov	lr, r7
 8019922:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019924:	1215      	asrs	r5, r2, #8
 8019926:	10d1      	asrs	r1, r2, #3
 8019928:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801992c:	00d2      	lsls	r2, r2, #3
 801992e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019932:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019936:	b2d2      	uxtb	r2, r2
 8019938:	fb05 750e 	mla	r5, r5, lr, r7
 801993c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019940:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019942:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019946:	b2ad      	uxth	r5, r5
 8019948:	fb01 710e 	mla	r1, r1, lr, r7
 801994c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801994e:	fb02 720e 	mla	r2, r2, lr, r7
 8019952:	f105 0e01 	add.w	lr, r5, #1
 8019956:	b289      	uxth	r1, r1
 8019958:	b292      	uxth	r2, r2
 801995a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801995e:	f102 0e01 	add.w	lr, r2, #1
 8019962:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019966:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801996a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801996e:	4315      	orrs	r5, r2
 8019970:	1c4a      	adds	r2, r1, #1
 8019972:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019976:	9a04      	ldr	r2, [sp, #16]
 8019978:	0949      	lsrs	r1, r1, #5
 801997a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801997e:	430d      	orrs	r5, r1
 8019980:	f822 5b02 	strh.w	r5, [r2], #2
 8019984:	9204      	str	r2, [sp, #16]
 8019986:	e7c1      	b.n	801990c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8019988:	4649      	mov	r1, r9
 801998a:	4686      	mov	lr, r0
 801998c:	b999      	cbnz	r1, 80199b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801998e:	4563      	cmp	r3, ip
 8019990:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019994:	d389      	bcc.n	80198aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8019996:	fa1f f68b 	uxth.w	r6, fp
 801999a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801999e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80199a0:	1ba4      	subs	r4, r4, r6
 80199a2:	881b      	ldrh	r3, [r3, #0]
 80199a4:	b2a4      	uxth	r4, r4
 80199a6:	eba3 030b 	sub.w	r3, r3, fp
 80199aa:	2c00      	cmp	r4, #0
 80199ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80199b0:	bf18      	it	ne
 80199b2:	2600      	movne	r6, #0
 80199b4:	e779      	b.n	80198aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80199b6:	78aa      	ldrb	r2, [r5, #2]
 80199b8:	3901      	subs	r1, #1
 80199ba:	4f0e      	ldr	r7, [pc, #56]	; (80199f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 80199bc:	b289      	uxth	r1, r1
 80199be:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80199c2:	786a      	ldrb	r2, [r5, #1]
 80199c4:	00d2      	lsls	r2, r2, #3
 80199c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199ca:	ea4a 0202 	orr.w	r2, sl, r2
 80199ce:	f895 a000 	ldrb.w	sl, [r5]
 80199d2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80199d6:	f82e 2b02 	strh.w	r2, [lr], #2
 80199da:	e7d7      	b.n	801998c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 80199dc:	4b03      	ldr	r3, [pc, #12]	; (80199ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80199de:	6818      	ldr	r0, [r3, #0]
 80199e0:	6803      	ldr	r3, [r0, #0]
 80199e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80199e4:	4798      	blx	r3
 80199e6:	b013      	add	sp, #76	; 0x4c
 80199e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199ec:	240016b0 	.word	0x240016b0
 80199f0:	240016aa 	.word	0x240016aa
 80199f4:	fffff800 	.word	0xfffff800

080199f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80199f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199fc:	b09d      	sub	sp, #116	; 0x74
 80199fe:	461c      	mov	r4, r3
 8019a00:	4683      	mov	fp, r0
 8019a02:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019a04:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8019a08:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8019a0c:	920e      	str	r2, [sp, #56]	; 0x38
 8019a0e:	2a00      	cmp	r2, #0
 8019a10:	f000 81e4 	beq.w	8019ddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8019a14:	6820      	ldr	r0, [r4, #0]
 8019a16:	aa18      	add	r2, sp, #96	; 0x60
 8019a18:	6861      	ldr	r1, [r4, #4]
 8019a1a:	c203      	stmia	r2!, {r0, r1}
 8019a1c:	6818      	ldr	r0, [r3, #0]
 8019a1e:	aa1a      	add	r2, sp, #104	; 0x68
 8019a20:	6859      	ldr	r1, [r3, #4]
 8019a22:	c203      	stmia	r2!, {r0, r1}
 8019a24:	a818      	add	r0, sp, #96	; 0x60
 8019a26:	f7f9 fce3 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019a2a:	4621      	mov	r1, r4
 8019a2c:	a81a      	add	r0, sp, #104	; 0x68
 8019a2e:	f7f9 fd07 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019a32:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8019a36:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8019a3a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8019a3e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8019a42:	bfdb      	ittet	le
 8019a44:	b29a      	uxthle	r2, r3
 8019a46:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8019a4a:	2201      	movgt	r2, #1
 8019a4c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019a50:	9202      	str	r2, [sp, #8]
 8019a52:	9802      	ldr	r0, [sp, #8]
 8019a54:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8019a58:	9902      	ldr	r1, [sp, #8]
 8019a5a:	fb92 f0f0 	sdiv	r0, r2, r0
 8019a5e:	b280      	uxth	r0, r0
 8019a60:	440c      	add	r4, r1
 8019a62:	900f      	str	r0, [sp, #60]	; 0x3c
 8019a64:	3c01      	subs	r4, #1
 8019a66:	9802      	ldr	r0, [sp, #8]
 8019a68:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019a6a:	fb05 2510 	mls	r5, r5, r0, r2
 8019a6e:	fb94 f4f1 	sdiv	r4, r4, r1
 8019a72:	fb15 f503 	smulbb	r5, r5, r3
 8019a76:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8019a7a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8019a7e:	3401      	adds	r4, #1
 8019a80:	440d      	add	r5, r1
 8019a82:	4419      	add	r1, r3
 8019a84:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8019a88:	b2a4      	uxth	r4, r4
 8019a8a:	441a      	add	r2, r3
 8019a8c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8019a90:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8019a94:	00a4      	lsls	r4, r4, #2
 8019a96:	9306      	str	r3, [sp, #24]
 8019a98:	b2ad      	uxth	r5, r5
 8019a9a:	4bb3      	ldr	r3, [pc, #716]	; (8019d68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8019a9c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8019aa0:	6818      	ldr	r0, [r3, #0]
 8019aa2:	6803      	ldr	r3, [r0, #0]
 8019aa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019aa6:	4798      	blx	r3
 8019aa8:	4bb0      	ldr	r3, [pc, #704]	; (8019d6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8019aaa:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8019aae:	2d00      	cmp	r5, #0
 8019ab0:	881a      	ldrh	r2, [r3, #0]
 8019ab2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8019ab6:	fb02 f606 	mul.w	r6, r2, r6
 8019aba:	fb02 7101 	mla	r1, r2, r1, r7
 8019abe:	9316      	str	r3, [sp, #88]	; 0x58
 8019ac0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8019ac4:	4baa      	ldr	r3, [pc, #680]	; (8019d70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8019ac6:	bf18      	it	ne
 8019ac8:	2100      	movne	r1, #0
 8019aca:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8019ace:	eba3 030b 	sub.w	r3, r3, fp
 8019ad2:	920a      	str	r2, [sp, #40]	; 0x28
 8019ad4:	f104 0204 	add.w	r2, r4, #4
 8019ad8:	9317      	str	r3, [sp, #92]	; 0x5c
 8019ada:	9213      	str	r2, [sp, #76]	; 0x4c
 8019adc:	9a06      	ldr	r2, [sp, #24]
 8019ade:	bf08      	it	eq
 8019ae0:	4611      	moveq	r1, r2
 8019ae2:	2200      	movs	r2, #0
 8019ae4:	b289      	uxth	r1, r1
 8019ae6:	920d      	str	r2, [sp, #52]	; 0x34
 8019ae8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019aea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019aec:	fa12 f383 	uxtah	r3, r2, r3
 8019af0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019af2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019af6:	3304      	adds	r3, #4
 8019af8:	9308      	str	r3, [sp, #32]
 8019afa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019afc:	4543      	cmp	r3, r8
 8019afe:	f240 8168 	bls.w	8019dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8019b02:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8019b06:	f04f 0e01 	mov.w	lr, #1
 8019b0a:	9a02      	ldr	r2, [sp, #8]
 8019b0c:	9808      	ldr	r0, [sp, #32]
 8019b0e:	fbb5 f3f3 	udiv	r3, r5, r3
 8019b12:	1ad3      	subs	r3, r2, r3
 8019b14:	7800      	ldrb	r0, [r0, #0]
 8019b16:	b29b      	uxth	r3, r3
 8019b18:	9010      	str	r0, [sp, #64]	; 0x40
 8019b1a:	3001      	adds	r0, #1
 8019b1c:	9314      	str	r3, [sp, #80]	; 0x50
 8019b1e:	9b08      	ldr	r3, [sp, #32]
 8019b20:	9007      	str	r0, [sp, #28]
 8019b22:	785a      	ldrb	r2, [r3, #1]
 8019b24:	789b      	ldrb	r3, [r3, #2]
 8019b26:	021b      	lsls	r3, r3, #8
 8019b28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019b2c:	9a08      	ldr	r2, [sp, #32]
 8019b2e:	78d2      	ldrb	r2, [r2, #3]
 8019b30:	4313      	orrs	r3, r2
 8019b32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019b34:	441a      	add	r2, r3
 8019b36:	1c50      	adds	r0, r2, #1
 8019b38:	7852      	ldrb	r2, [r2, #1]
 8019b3a:	9005      	str	r0, [sp, #20]
 8019b3c:	0212      	lsls	r2, r2, #8
 8019b3e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b40:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8019b44:	5cc3      	ldrb	r3, [r0, r3]
 8019b46:	431a      	orrs	r2, r3
 8019b48:	b293      	uxth	r3, r2
 8019b4a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8019b4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019b50:	2300      	movs	r3, #0
 8019b52:	9309      	str	r3, [sp, #36]	; 0x24
 8019b54:	2301      	movs	r3, #1
 8019b56:	9301      	str	r3, [sp, #4]
 8019b58:	9304      	str	r3, [sp, #16]
 8019b5a:	2300      	movs	r3, #0
 8019b5c:	9303      	str	r3, [sp, #12]
 8019b5e:	2d00      	cmp	r5, #0
 8019b60:	d07d      	beq.n	8019c5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8019b62:	45ae      	cmp	lr, r5
 8019b64:	d26c      	bcs.n	8019c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8019b66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b68:	eba5 050e 	sub.w	r5, r5, lr
 8019b6c:	460c      	mov	r4, r1
 8019b6e:	4543      	cmp	r3, r8
 8019b70:	b2ad      	uxth	r5, r5
 8019b72:	d802      	bhi.n	8019b7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8019b74:	e071      	b.n	8019c5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8019b76:	2b00      	cmp	r3, #0
 8019b78:	d15d      	bne.n	8019c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8019b7a:	9b05      	ldr	r3, [sp, #20]
 8019b7c:	9a04      	ldr	r2, [sp, #16]
 8019b7e:	785b      	ldrb	r3, [r3, #1]
 8019b80:	f1c2 0207 	rsb	r2, r2, #7
 8019b84:	9904      	ldr	r1, [sp, #16]
 8019b86:	4093      	lsls	r3, r2
 8019b88:	005b      	lsls	r3, r3, #1
 8019b8a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8019b8e:	9b05      	ldr	r3, [sp, #20]
 8019b90:	781b      	ldrb	r3, [r3, #0]
 8019b92:	410b      	asrs	r3, r1
 8019b94:	3101      	adds	r1, #1
 8019b96:	b2c9      	uxtb	r1, r1
 8019b98:	b2db      	uxtb	r3, r3
 8019b9a:	2908      	cmp	r1, #8
 8019b9c:	9104      	str	r1, [sp, #16]
 8019b9e:	9905      	ldr	r1, [sp, #20]
 8019ba0:	ea43 0302 	orr.w	r3, r3, r2
 8019ba4:	bf0c      	ite	eq
 8019ba6:	3102      	addeq	r1, #2
 8019ba8:	3101      	addne	r1, #1
 8019baa:	b29a      	uxth	r2, r3
 8019bac:	bf05      	ittet	eq
 8019bae:	9105      	streq	r1, [sp, #20]
 8019bb0:	2100      	moveq	r1, #0
 8019bb2:	9105      	strne	r1, [sp, #20]
 8019bb4:	9104      	streq	r1, [sp, #16]
 8019bb6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019bb8:	4291      	cmp	r1, r2
 8019bba:	d30a      	bcc.n	8019bd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8019bbc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8019bc0:	2301      	movs	r3, #1
 8019bc2:	9907      	ldr	r1, [sp, #28]
 8019bc4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8019bc8:	d30f      	bcc.n	8019bea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8019bca:	2100      	movs	r1, #0
 8019bcc:	9301      	str	r3, [sp, #4]
 8019bce:	9103      	str	r1, [sp, #12]
 8019bd0:	e032      	b.n	8019c38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8019bd2:	9b07      	ldr	r3, [sp, #28]
 8019bd4:	429a      	cmp	r2, r3
 8019bd6:	d318      	bcc.n	8019c0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8019bd8:	9b01      	ldr	r3, [sp, #4]
 8019bda:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8019bde:	445b      	add	r3, fp
 8019be0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8019be4:	9b01      	ldr	r3, [sp, #4]
 8019be6:	3301      	adds	r3, #1
 8019be8:	b29b      	uxth	r3, r3
 8019bea:	9907      	ldr	r1, [sp, #28]
 8019bec:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8019bf0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019bf4:	7108      	strb	r0, [r1, #4]
 8019bf6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019bf8:	80c8      	strh	r0, [r1, #6]
 8019bfa:	9801      	ldr	r0, [sp, #4]
 8019bfc:	3001      	adds	r0, #1
 8019bfe:	7148      	strb	r0, [r1, #5]
 8019c00:	9907      	ldr	r1, [sp, #28]
 8019c02:	3101      	adds	r1, #1
 8019c04:	b289      	uxth	r1, r1
 8019c06:	9107      	str	r1, [sp, #28]
 8019c08:	e7df      	b.n	8019bca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8019c0a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8019c0e:	4611      	mov	r1, r2
 8019c10:	795b      	ldrb	r3, [r3, #5]
 8019c12:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8019c16:	4458      	add	r0, fp
 8019c18:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8019c1a:	4406      	add	r6, r0
 8019c1c:	2e00      	cmp	r6, #0
 8019c1e:	dd06      	ble.n	8019c2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019c20:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019c24:	790e      	ldrb	r6, [r1, #4]
 8019c26:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8019c2a:	88c9      	ldrh	r1, [r1, #6]
 8019c2c:	e7f4      	b.n	8019c18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8019c2e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8019c32:	b29b      	uxth	r3, r3
 8019c34:	e7c5      	b.n	8019bc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8019c36:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c38:	4621      	mov	r1, r4
 8019c3a:	920b      	str	r2, [sp, #44]	; 0x2c
 8019c3c:	469e      	mov	lr, r3
 8019c3e:	e78e      	b.n	8019b5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8019c40:	9a03      	ldr	r2, [sp, #12]
 8019c42:	ebae 0305 	sub.w	r3, lr, r5
 8019c46:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019c4a:	442a      	add	r2, r5
 8019c4c:	b29b      	uxth	r3, r3
 8019c4e:	b292      	uxth	r2, r2
 8019c50:	9203      	str	r2, [sp, #12]
 8019c52:	2500      	movs	r5, #0
 8019c54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019c56:	4542      	cmp	r2, r8
 8019c58:	d88d      	bhi.n	8019b76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8019c5a:	4621      	mov	r1, r4
 8019c5c:	e74d      	b.n	8019afa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8019c5e:	458e      	cmp	lr, r1
 8019c60:	f04f 0900 	mov.w	r9, #0
 8019c64:	bf2b      	itete	cs
 8019c66:	ebae 0301 	subcs.w	r3, lr, r1
 8019c6a:	eba1 040e 	subcc.w	r4, r1, lr
 8019c6e:	462c      	movcs	r4, r5
 8019c70:	462b      	movcc	r3, r5
 8019c72:	bf27      	ittee	cs
 8019c74:	b29b      	uxthcs	r3, r3
 8019c76:	910c      	strcs	r1, [sp, #48]	; 0x30
 8019c78:	b2a4      	uxthcc	r4, r4
 8019c7a:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8019c7e:	9a03      	ldr	r2, [sp, #12]
 8019c80:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019c82:	444a      	add	r2, r9
 8019c84:	4548      	cmp	r0, r9
 8019c86:	b292      	uxth	r2, r2
 8019c88:	d074      	beq.n	8019d74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8019c8a:	2004      	movs	r0, #4
 8019c8c:	445a      	add	r2, fp
 8019c8e:	4605      	mov	r5, r0
 8019c90:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8019c94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c96:	fb15 0202 	smlabb	r2, r5, r2, r0
 8019c9a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019c9c:	5880      	ldr	r0, [r0, r2]
 8019c9e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8019ca2:	d014      	beq.n	8019cce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8019ca4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019ca8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8019cac:	d112      	bne.n	8019cd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8019cae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019cb0:	2aff      	cmp	r2, #255	; 0xff
 8019cb2:	d10f      	bne.n	8019cd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8019cb4:	0942      	lsrs	r2, r0, #5
 8019cb6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8019cba:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019cbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019cc2:	f025 0507 	bic.w	r5, r5, #7
 8019cc6:	4315      	orrs	r5, r2
 8019cc8:	4305      	orrs	r5, r0
 8019cca:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8019cce:	f109 0901 	add.w	r9, r9, #1
 8019cd2:	e7d4      	b.n	8019c7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8019cd4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8019cd8:	b2ed      	uxtb	r5, r5
 8019cda:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019cde:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019ce2:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8019ce6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019cea:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8019cee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cf2:	9215      	str	r2, [sp, #84]	; 0x54
 8019cf4:	fa5f fc8c 	uxtb.w	ip, ip
 8019cf8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019cfa:	b2c0      	uxtb	r0, r0
 8019cfc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8019d00:	fb02 fa0a 	mul.w	sl, r2, sl
 8019d04:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8019d08:	f10a 0201 	add.w	r2, sl, #1
 8019d0c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8019d10:	1212      	asrs	r2, r2, #8
 8019d12:	fa1f fa82 	uxth.w	sl, r2
 8019d16:	43d2      	mvns	r2, r2
 8019d18:	fb16 f60a 	smulbb	r6, r6, sl
 8019d1c:	b2d2      	uxtb	r2, r2
 8019d1e:	fb10 f00a 	smulbb	r0, r0, sl
 8019d22:	fb07 6702 	mla	r7, r7, r2, r6
 8019d26:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8019d28:	fb0c 0002 	mla	r0, ip, r2, r0
 8019d2c:	fb15 f50a 	smulbb	r5, r5, sl
 8019d30:	b2bf      	uxth	r7, r7
 8019d32:	b280      	uxth	r0, r0
 8019d34:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019d38:	fb06 5602 	mla	r6, r6, r2, r5
 8019d3c:	1c7a      	adds	r2, r7, #1
 8019d3e:	1c45      	adds	r5, r0, #1
 8019d40:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019d44:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019d48:	b2b6      	uxth	r6, r6
 8019d4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019d4e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d52:	432f      	orrs	r7, r5
 8019d54:	1c75      	adds	r5, r6, #1
 8019d56:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019d5a:	096d      	lsrs	r5, r5, #5
 8019d5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019d60:	432f      	orrs	r7, r5
 8019d62:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8019d66:	e7b2      	b.n	8019cce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8019d68:	240016b0 	.word	0x240016b0
 8019d6c:	240016aa 	.word	0x240016aa
 8019d70:	fffff7fb 	.word	0xfffff7fb
 8019d74:	9203      	str	r2, [sp, #12]
 8019d76:	458e      	cmp	lr, r1
 8019d78:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019d7a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019d7e:	f4ff af68 	bcc.w	8019c52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8019d82:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019d84:	9906      	ldr	r1, [sp, #24]
 8019d86:	8812      	ldrh	r2, [r2, #0]
 8019d88:	1a52      	subs	r2, r2, r1
 8019d8a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8019d8c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019d90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019d92:	3201      	adds	r2, #1
 8019d94:	428a      	cmp	r2, r1
 8019d96:	9209      	str	r2, [sp, #36]	; 0x24
 8019d98:	d111      	bne.n	8019dbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8019d9a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8019d9e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8019da2:	9b06      	ldr	r3, [sp, #24]
 8019da4:	eba5 0509 	sub.w	r5, r5, r9
 8019da8:	b2ad      	uxth	r5, r5
 8019daa:	2d00      	cmp	r5, #0
 8019dac:	bf08      	it	eq
 8019dae:	4619      	moveq	r1, r3
 8019db0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019db2:	bf18      	it	ne
 8019db4:	2100      	movne	r1, #0
 8019db6:	3301      	adds	r3, #1
 8019db8:	b289      	uxth	r1, r1
 8019dba:	930d      	str	r3, [sp, #52]	; 0x34
 8019dbc:	e694      	b.n	8019ae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8019dbe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019dc2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019dc6:	1b2d      	subs	r5, r5, r4
 8019dc8:	b2ad      	uxth	r5, r5
 8019dca:	2d00      	cmp	r5, #0
 8019dcc:	bf18      	it	ne
 8019dce:	2400      	movne	r4, #0
 8019dd0:	e740      	b.n	8019c54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8019dd2:	4b04      	ldr	r3, [pc, #16]	; (8019de4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8019dd4:	6818      	ldr	r0, [r3, #0]
 8019dd6:	6803      	ldr	r3, [r0, #0]
 8019dd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019dda:	4798      	blx	r3
 8019ddc:	b01d      	add	sp, #116	; 0x74
 8019dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019de2:	bf00      	nop
 8019de4:	240016b0 	.word	0x240016b0

08019de8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019dec:	b09f      	sub	sp, #124	; 0x7c
 8019dee:	461d      	mov	r5, r3
 8019df0:	4604      	mov	r4, r0
 8019df2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019df4:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8019df8:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8019dfc:	920a      	str	r2, [sp, #40]	; 0x28
 8019dfe:	2a00      	cmp	r2, #0
 8019e00:	f000 81fe 	beq.w	801a200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8019e04:	6828      	ldr	r0, [r5, #0]
 8019e06:	aa1a      	add	r2, sp, #104	; 0x68
 8019e08:	6869      	ldr	r1, [r5, #4]
 8019e0a:	c203      	stmia	r2!, {r0, r1}
 8019e0c:	6818      	ldr	r0, [r3, #0]
 8019e0e:	aa1c      	add	r2, sp, #112	; 0x70
 8019e10:	6859      	ldr	r1, [r3, #4]
 8019e12:	c203      	stmia	r2!, {r0, r1}
 8019e14:	a81a      	add	r0, sp, #104	; 0x68
 8019e16:	f7f9 faeb 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019e1a:	4629      	mov	r1, r5
 8019e1c:	a81c      	add	r0, sp, #112	; 0x70
 8019e1e:	f7f9 fb0f 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019e22:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8019e26:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8019e2a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8019e2e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8019e32:	bfdb      	ittet	le
 8019e34:	b29a      	uxthle	r2, r3
 8019e36:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8019e3a:	2201      	movgt	r2, #1
 8019e3c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019e40:	9201      	str	r2, [sp, #4]
 8019e42:	9801      	ldr	r0, [sp, #4]
 8019e44:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8019e48:	9901      	ldr	r1, [sp, #4]
 8019e4a:	fb92 f0f0 	sdiv	r0, r2, r0
 8019e4e:	b280      	uxth	r0, r0
 8019e50:	440e      	add	r6, r1
 8019e52:	9010      	str	r0, [sp, #64]	; 0x40
 8019e54:	3e01      	subs	r6, #1
 8019e56:	9801      	ldr	r0, [sp, #4]
 8019e58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019e5a:	fb05 2510 	mls	r5, r5, r0, r2
 8019e5e:	fb96 f6f1 	sdiv	r6, r6, r1
 8019e62:	fb15 f503 	smulbb	r5, r5, r3
 8019e66:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8019e6a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019e6e:	3601      	adds	r6, #1
 8019e70:	440d      	add	r5, r1
 8019e72:	4419      	add	r1, r3
 8019e74:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8019e78:	b2b6      	uxth	r6, r6
 8019e7a:	441a      	add	r2, r3
 8019e7c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8019e80:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8019e84:	b2ad      	uxth	r5, r5
 8019e86:	9304      	str	r3, [sp, #16]
 8019e88:	4b96      	ldr	r3, [pc, #600]	; (801a0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8019e8a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8019e8e:	6818      	ldr	r0, [r3, #0]
 8019e90:	6803      	ldr	r3, [r0, #0]
 8019e92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019e94:	4798      	blx	r3
 8019e96:	4b94      	ldr	r3, [pc, #592]	; (801a0e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8019e98:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8019e9c:	2d00      	cmp	r5, #0
 8019e9e:	881a      	ldrh	r2, [r3, #0]
 8019ea0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8019ea4:	fb02 f707 	mul.w	r7, r2, r7
 8019ea8:	fb02 c101 	mla	r1, r2, r1, ip
 8019eac:	9318      	str	r3, [sp, #96]	; 0x60
 8019eae:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8019eb2:	4b8e      	ldr	r3, [pc, #568]	; (801a0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8019eb4:	bf18      	it	ne
 8019eb6:	2100      	movne	r1, #0
 8019eb8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8019ebc:	eba3 0304 	sub.w	r3, r3, r4
 8019ec0:	920b      	str	r2, [sp, #44]	; 0x2c
 8019ec2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019ec4:	9319      	str	r3, [sp, #100]	; 0x64
 8019ec6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8019eca:	f106 0204 	add.w	r2, r6, #4
 8019ece:	9206      	str	r2, [sp, #24]
 8019ed0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019ed2:	ea6f 0202 	mvn.w	r2, r2
 8019ed6:	b2d2      	uxtb	r2, r2
 8019ed8:	9215      	str	r2, [sp, #84]	; 0x54
 8019eda:	9a04      	ldr	r2, [sp, #16]
 8019edc:	bf08      	it	eq
 8019ede:	4611      	moveq	r1, r2
 8019ee0:	2200      	movs	r2, #0
 8019ee2:	b289      	uxth	r1, r1
 8019ee4:	920d      	str	r2, [sp, #52]	; 0x34
 8019ee6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ee8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019eea:	fa12 f383 	uxtah	r3, r2, r3
 8019eee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019ef0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019ef4:	3304      	adds	r3, #4
 8019ef6:	9307      	str	r3, [sp, #28]
 8019ef8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019efa:	455b      	cmp	r3, fp
 8019efc:	f240 817b 	bls.w	801a1f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8019f00:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8019f04:	f04f 0801 	mov.w	r8, #1
 8019f08:	9a01      	ldr	r2, [sp, #4]
 8019f0a:	9807      	ldr	r0, [sp, #28]
 8019f0c:	46c4      	mov	ip, r8
 8019f0e:	f8cd 8008 	str.w	r8, [sp, #8]
 8019f12:	7800      	ldrb	r0, [r0, #0]
 8019f14:	fbb5 f3f3 	udiv	r3, r5, r3
 8019f18:	1ad3      	subs	r3, r2, r3
 8019f1a:	9011      	str	r0, [sp, #68]	; 0x44
 8019f1c:	3001      	adds	r0, #1
 8019f1e:	b29b      	uxth	r3, r3
 8019f20:	9005      	str	r0, [sp, #20]
 8019f22:	9316      	str	r3, [sp, #88]	; 0x58
 8019f24:	9b07      	ldr	r3, [sp, #28]
 8019f26:	785a      	ldrb	r2, [r3, #1]
 8019f28:	789b      	ldrb	r3, [r3, #2]
 8019f2a:	021b      	lsls	r3, r3, #8
 8019f2c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019f30:	9a07      	ldr	r2, [sp, #28]
 8019f32:	78d2      	ldrb	r2, [r2, #3]
 8019f34:	4313      	orrs	r3, r2
 8019f36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019f38:	441a      	add	r2, r3
 8019f3a:	1c50      	adds	r0, r2, #1
 8019f3c:	7852      	ldrb	r2, [r2, #1]
 8019f3e:	9003      	str	r0, [sp, #12]
 8019f40:	0212      	lsls	r2, r2, #8
 8019f42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f44:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8019f48:	5cc3      	ldrb	r3, [r0, r3]
 8019f4a:	431a      	orrs	r2, r3
 8019f4c:	b293      	uxth	r3, r2
 8019f4e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8019f52:	930c      	str	r3, [sp, #48]	; 0x30
 8019f54:	2300      	movs	r3, #0
 8019f56:	9308      	str	r3, [sp, #32]
 8019f58:	461a      	mov	r2, r3
 8019f5a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019f5e:	930e      	str	r3, [sp, #56]	; 0x38
 8019f60:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8019f64:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f66:	2d00      	cmp	r5, #0
 8019f68:	d07d      	beq.n	801a066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8019f6a:	45ac      	cmp	ip, r5
 8019f6c:	d26d      	bcs.n	801a04a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8019f6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f70:	eba5 050c 	sub.w	r5, r5, ip
 8019f74:	4608      	mov	r0, r1
 8019f76:	455b      	cmp	r3, fp
 8019f78:	b2ad      	uxth	r5, r5
 8019f7a:	d802      	bhi.n	8019f82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8019f7c:	e071      	b.n	801a062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8019f7e:	2b00      	cmp	r3, #0
 8019f80:	d15d      	bne.n	801a03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8019f82:	9b03      	ldr	r3, [sp, #12]
 8019f84:	9a02      	ldr	r2, [sp, #8]
 8019f86:	785b      	ldrb	r3, [r3, #1]
 8019f88:	f1c2 0207 	rsb	r2, r2, #7
 8019f8c:	9902      	ldr	r1, [sp, #8]
 8019f8e:	4093      	lsls	r3, r2
 8019f90:	005b      	lsls	r3, r3, #1
 8019f92:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8019f96:	9b03      	ldr	r3, [sp, #12]
 8019f98:	781b      	ldrb	r3, [r3, #0]
 8019f9a:	410b      	asrs	r3, r1
 8019f9c:	3101      	adds	r1, #1
 8019f9e:	b2c9      	uxtb	r1, r1
 8019fa0:	b2db      	uxtb	r3, r3
 8019fa2:	2908      	cmp	r1, #8
 8019fa4:	9102      	str	r1, [sp, #8]
 8019fa6:	9903      	ldr	r1, [sp, #12]
 8019fa8:	ea43 0302 	orr.w	r3, r3, r2
 8019fac:	bf0c      	ite	eq
 8019fae:	3102      	addeq	r1, #2
 8019fb0:	3101      	addne	r1, #1
 8019fb2:	b29a      	uxth	r2, r3
 8019fb4:	bf05      	ittet	eq
 8019fb6:	9103      	streq	r1, [sp, #12]
 8019fb8:	2100      	moveq	r1, #0
 8019fba:	9103      	strne	r1, [sp, #12]
 8019fbc:	9102      	streq	r1, [sp, #8]
 8019fbe:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019fc0:	4291      	cmp	r1, r2
 8019fc2:	d30a      	bcc.n	8019fda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8019fc4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8019fc8:	2301      	movs	r3, #1
 8019fca:	9905      	ldr	r1, [sp, #20]
 8019fcc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8019fd0:	d30f      	bcc.n	8019ff2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8019fd2:	2100      	movs	r1, #0
 8019fd4:	4698      	mov	r8, r3
 8019fd6:	9100      	str	r1, [sp, #0]
 8019fd8:	e032      	b.n	801a040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8019fda:	9b05      	ldr	r3, [sp, #20]
 8019fdc:	429a      	cmp	r2, r3
 8019fde:	d318      	bcc.n	801a012 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8019fe0:	eb04 0308 	add.w	r3, r4, r8
 8019fe4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8019fe8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8019fec:	f108 0301 	add.w	r3, r8, #1
 8019ff0:	b29b      	uxth	r3, r3
 8019ff2:	9905      	ldr	r1, [sp, #20]
 8019ff4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8019ff8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019ffc:	710e      	strb	r6, [r1, #4]
 8019ffe:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a000:	80ce      	strh	r6, [r1, #6]
 801a002:	f108 0601 	add.w	r6, r8, #1
 801a006:	714e      	strb	r6, [r1, #5]
 801a008:	9905      	ldr	r1, [sp, #20]
 801a00a:	3101      	adds	r1, #1
 801a00c:	b289      	uxth	r1, r1
 801a00e:	9105      	str	r1, [sp, #20]
 801a010:	e7df      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a012:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801a016:	4611      	mov	r1, r2
 801a018:	795b      	ldrb	r3, [r3, #5]
 801a01a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801a01e:	4426      	add	r6, r4
 801a020:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801a022:	4437      	add	r7, r6
 801a024:	2f00      	cmp	r7, #0
 801a026:	dd06      	ble.n	801a036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 801a028:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a02c:	790f      	ldrb	r7, [r1, #4]
 801a02e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801a032:	88c9      	ldrh	r1, [r1, #6]
 801a034:	e7f4      	b.n	801a020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801a036:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801a03a:	b29b      	uxth	r3, r3
 801a03c:	e7c5      	b.n	8019fca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801a03e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a040:	920c      	str	r2, [sp, #48]	; 0x30
 801a042:	4601      	mov	r1, r0
 801a044:	9a00      	ldr	r2, [sp, #0]
 801a046:	469c      	mov	ip, r3
 801a048:	e78d      	b.n	8019f66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801a04a:	ebac 0305 	sub.w	r3, ip, r5
 801a04e:	1957      	adds	r7, r2, r5
 801a050:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a054:	b2ba      	uxth	r2, r7
 801a056:	b29b      	uxth	r3, r3
 801a058:	9200      	str	r2, [sp, #0]
 801a05a:	2500      	movs	r5, #0
 801a05c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a05e:	455a      	cmp	r2, fp
 801a060:	d88d      	bhi.n	8019f7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801a062:	4601      	mov	r1, r0
 801a064:	e748      	b.n	8019ef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801a066:	458c      	cmp	ip, r1
 801a068:	bf27      	ittee	cs
 801a06a:	ebac 0301 	subcs.w	r3, ip, r1
 801a06e:	4628      	movcs	r0, r5
 801a070:	eba1 000c 	subcc.w	r0, r1, ip
 801a074:	462b      	movcc	r3, r5
 801a076:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a078:	bf27      	ittee	cs
 801a07a:	b29b      	uxthcs	r3, r3
 801a07c:	9109      	strcs	r1, [sp, #36]	; 0x24
 801a07e:	b280      	uxthcc	r0, r0
 801a080:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801a084:	2dff      	cmp	r5, #255	; 0xff
 801a086:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a088:	eb02 0705 	add.w	r7, r2, r5
 801a08c:	b2bd      	uxth	r5, r7
 801a08e:	9500      	str	r5, [sp, #0]
 801a090:	d12e      	bne.n	801a0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801a092:	465e      	mov	r6, fp
 801a094:	9d00      	ldr	r5, [sp, #0]
 801a096:	42aa      	cmp	r2, r5
 801a098:	f040 8083 	bne.w	801a1a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 801a09c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a09e:	458c      	cmp	ip, r1
 801a0a0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a0a4:	d3d9      	bcc.n	801a05a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a0a6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a0a8:	9904      	ldr	r1, [sp, #16]
 801a0aa:	8812      	ldrh	r2, [r2, #0]
 801a0ac:	1a52      	subs	r2, r2, r1
 801a0ae:	9916      	ldr	r1, [sp, #88]	; 0x58
 801a0b0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a0b4:	9a08      	ldr	r2, [sp, #32]
 801a0b6:	3201      	adds	r2, #1
 801a0b8:	428a      	cmp	r2, r1
 801a0ba:	9208      	str	r2, [sp, #32]
 801a0bc:	f040 8091 	bne.w	801a1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801a0c0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801a0c4:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801a0c8:	9b04      	ldr	r3, [sp, #16]
 801a0ca:	eba5 050c 	sub.w	r5, r5, ip
 801a0ce:	b2ad      	uxth	r5, r5
 801a0d0:	2d00      	cmp	r5, #0
 801a0d2:	bf08      	it	eq
 801a0d4:	4619      	moveq	r1, r3
 801a0d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a0d8:	bf18      	it	ne
 801a0da:	2100      	movne	r1, #0
 801a0dc:	3301      	adds	r3, #1
 801a0de:	b289      	uxth	r1, r1
 801a0e0:	930d      	str	r3, [sp, #52]	; 0x34
 801a0e2:	e700      	b.n	8019ee6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 801a0e4:	240016b0 	.word	0x240016b0
 801a0e8:	240016aa 	.word	0x240016aa
 801a0ec:	fffff7fb 	.word	0xfffff7fb
 801a0f0:	46d9      	mov	r9, fp
 801a0f2:	9d00      	ldr	r5, [sp, #0]
 801a0f4:	42aa      	cmp	r2, r5
 801a0f6:	d0d1      	beq.n	801a09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801a0f8:	1c55      	adds	r5, r2, #1
 801a0fa:	4422      	add	r2, r4
 801a0fc:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801a100:	9a06      	ldr	r2, [sp, #24]
 801a102:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a106:	9517      	str	r5, [sp, #92]	; 0x5c
 801a108:	4472      	add	r2, lr
 801a10a:	9212      	str	r2, [sp, #72]	; 0x48
 801a10c:	f8b9 2000 	ldrh.w	r2, [r9]
 801a110:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801a112:	1216      	asrs	r6, r2, #8
 801a114:	f897 a002 	ldrb.w	sl, [r7, #2]
 801a118:	10d5      	asrs	r5, r2, #3
 801a11a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801a11c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a120:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a124:	00d2      	lsls	r2, r2, #3
 801a126:	fb1a fa07 	smulbb	sl, sl, r7
 801a12a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a12e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a130:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a134:	b2d2      	uxtb	r2, r2
 801a136:	fb06 a607 	mla	r6, r6, r7, sl
 801a13a:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801a13c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a140:	f897 a001 	ldrb.w	sl, [r7, #1]
 801a144:	b2b6      	uxth	r6, r6
 801a146:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801a148:	fb1a fa07 	smulbb	sl, sl, r7
 801a14c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a14e:	fb05 a507 	mla	r5, r5, r7, sl
 801a152:	9f06      	ldr	r7, [sp, #24]
 801a154:	f106 0a01 	add.w	sl, r6, #1
 801a158:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a15c:	b2ad      	uxth	r5, r5
 801a15e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801a160:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a164:	f105 0a01 	add.w	sl, r5, #1
 801a168:	fb1e fe07 	smulbb	lr, lr, r7
 801a16c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a16e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a172:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a176:	fb02 e207 	mla	r2, r2, r7, lr
 801a17a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a17e:	b292      	uxth	r2, r2
 801a180:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a184:	f102 0e01 	add.w	lr, r2, #1
 801a188:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a18c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801a190:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a194:	ea4e 0606 	orr.w	r6, lr, r6
 801a198:	ea46 060a 	orr.w	r6, r6, sl
 801a19c:	f829 6b02 	strh.w	r6, [r9], #2
 801a1a0:	e7a7      	b.n	801a0f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801a1a2:	f102 0e01 	add.w	lr, r2, #1
 801a1a6:	4422      	add	r2, r4
 801a1a8:	9f06      	ldr	r7, [sp, #24]
 801a1aa:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801a1ae:	9a06      	ldr	r2, [sp, #24]
 801a1b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a1b4:	eb02 0a05 	add.w	sl, r2, r5
 801a1b8:	4a13      	ldr	r2, [pc, #76]	; (801a208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801a1ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801a1be:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801a1c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a1c6:	00d2      	lsls	r2, r2, #3
 801a1c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a1cc:	ea49 0202 	orr.w	r2, r9, r2
 801a1d0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801a1d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801a1d8:	f826 2b02 	strh.w	r2, [r6], #2
 801a1dc:	fa1f f28e 	uxth.w	r2, lr
 801a1e0:	e758      	b.n	801a094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801a1e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a1e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801a1ea:	1a2d      	subs	r5, r5, r0
 801a1ec:	b2ad      	uxth	r5, r5
 801a1ee:	2d00      	cmp	r5, #0
 801a1f0:	bf18      	it	ne
 801a1f2:	2000      	movne	r0, #0
 801a1f4:	e732      	b.n	801a05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801a1f6:	4b05      	ldr	r3, [pc, #20]	; (801a20c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801a1f8:	6818      	ldr	r0, [r3, #0]
 801a1fa:	6803      	ldr	r3, [r0, #0]
 801a1fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a1fe:	4798      	blx	r3
 801a200:	b01f      	add	sp, #124	; 0x7c
 801a202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a206:	bf00      	nop
 801a208:	fffff800 	.word	0xfffff800
 801a20c:	240016b0 	.word	0x240016b0

0801a210 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801a210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a214:	b091      	sub	sp, #68	; 0x44
 801a216:	469b      	mov	fp, r3
 801a218:	4616      	mov	r6, r2
 801a21a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a21e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801a222:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a226:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801a22a:	4604      	mov	r4, r0
 801a22c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801a230:	4640      	mov	r0, r8
 801a232:	460d      	mov	r5, r1
 801a234:	4659      	mov	r1, fp
 801a236:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801a23a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801a23e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801a242:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801a246:	f7f6 f895 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801a24a:	4631      	mov	r1, r6
 801a24c:	4640      	mov	r0, r8
 801a24e:	f7f6 f891 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801a252:	4b74      	ldr	r3, [pc, #464]	; (801a424 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801a254:	8818      	ldrh	r0, [r3, #0]
 801a256:	4b74      	ldr	r3, [pc, #464]	; (801a428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801a258:	b202      	sxth	r2, r0
 801a25a:	8819      	ldrh	r1, [r3, #0]
 801a25c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a260:	b20e      	sxth	r6, r1
 801a262:	2b00      	cmp	r3, #0
 801a264:	da07      	bge.n	801a276 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801a266:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801a26a:	4463      	add	r3, ip
 801a26c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801a270:	2300      	movs	r3, #0
 801a272:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801a276:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a27a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801a27e:	1ad2      	subs	r2, r2, r3
 801a280:	4594      	cmp	ip, r2
 801a282:	bfc4      	itt	gt
 801a284:	1ac2      	subgt	r2, r0, r3
 801a286:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801a28a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801a28e:	2a00      	cmp	r2, #0
 801a290:	da07      	bge.n	801a2a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801a292:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801a296:	4462      	add	r2, ip
 801a298:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801a29c:	2200      	movs	r2, #0
 801a29e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801a2a2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801a2a6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801a2aa:	eba6 060a 	sub.w	r6, r6, sl
 801a2ae:	42b2      	cmp	r2, r6
 801a2b0:	bfc4      	itt	gt
 801a2b2:	eba1 020a 	subgt.w	r2, r1, sl
 801a2b6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801a2ba:	4a5c      	ldr	r2, [pc, #368]	; (801a42c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801a2bc:	7812      	ldrb	r2, [r2, #0]
 801a2be:	b9a2      	cbnz	r2, 801a2ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801a2c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a2c4:	4286      	cmp	r6, r0
 801a2c6:	4640      	mov	r0, r8
 801a2c8:	9303      	str	r3, [sp, #12]
 801a2ca:	bf14      	ite	ne
 801a2cc:	2600      	movne	r6, #0
 801a2ce:	2601      	moveq	r6, #1
 801a2d0:	f7f6 f893 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801a2d4:	9b03      	ldr	r3, [sp, #12]
 801a2d6:	b160      	cbz	r0, 801a2f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801a2d8:	2300      	movs	r3, #0
 801a2da:	8023      	strh	r3, [r4, #0]
 801a2dc:	8063      	strh	r3, [r4, #2]
 801a2de:	80a3      	strh	r3, [r4, #4]
 801a2e0:	4620      	mov	r0, r4
 801a2e2:	80e3      	strh	r3, [r4, #6]
 801a2e4:	b011      	add	sp, #68	; 0x44
 801a2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2ea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801a2ee:	428e      	cmp	r6, r1
 801a2f0:	e7e9      	b.n	801a2c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801a2f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801a2f6:	a90e      	add	r1, sp, #56	; 0x38
 801a2f8:	900e      	str	r0, [sp, #56]	; 0x38
 801a2fa:	a80c      	add	r0, sp, #48	; 0x30
 801a2fc:	9205      	str	r2, [sp, #20]
 801a2fe:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801a302:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801a306:	9206      	str	r2, [sp, #24]
 801a308:	f8bb 2000 	ldrh.w	r2, [fp]
 801a30c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801a310:	1a9b      	subs	r3, r3, r2
 801a312:	b21b      	sxth	r3, r3
 801a314:	9303      	str	r3, [sp, #12]
 801a316:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a31a:	f8df b118 	ldr.w	fp, [pc, #280]	; 801a434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a31e:	ebaa 0a03 	sub.w	sl, sl, r3
 801a322:	fa0f f38a 	sxth.w	r3, sl
 801a326:	9304      	str	r3, [sp, #16]
 801a328:	9b03      	ldr	r3, [sp, #12]
 801a32a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801a32e:	9b04      	ldr	r3, [sp, #16]
 801a330:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a334:	9b05      	ldr	r3, [sp, #20]
 801a336:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801a33a:	9b06      	ldr	r3, [sp, #24]
 801a33c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801a340:	f7f9 f87e 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a344:	4640      	mov	r0, r8
 801a346:	f7f9 f853 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a34a:	a80e      	add	r0, sp, #56	; 0x38
 801a34c:	f7f9 f850 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a350:	4b37      	ldr	r3, [pc, #220]	; (801a430 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801a352:	4628      	mov	r0, r5
 801a354:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801a358:	881b      	ldrh	r3, [r3, #0]
 801a35a:	9307      	str	r3, [sp, #28]
 801a35c:	682b      	ldr	r3, [r5, #0]
 801a35e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a360:	4798      	blx	r3
 801a362:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801a366:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801a36a:	4681      	mov	r9, r0
 801a36c:	f8db 0000 	ldr.w	r0, [fp]
 801a370:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801a374:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801a376:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a37a:	6803      	ldr	r3, [r0, #0]
 801a37c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a37e:	4798      	blx	r3
 801a380:	4607      	mov	r7, r0
 801a382:	f8db 0000 	ldr.w	r0, [fp]
 801a386:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801a38a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801a38e:	6803      	ldr	r3, [r0, #0]
 801a390:	9109      	str	r1, [sp, #36]	; 0x24
 801a392:	9208      	str	r2, [sp, #32]
 801a394:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a396:	4798      	blx	r3
 801a398:	f010 0f01 	tst.w	r0, #1
 801a39c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a3a0:	d012      	beq.n	801a3c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801a3a2:	f8db 0000 	ldr.w	r0, [fp]
 801a3a6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801a3aa:	6803      	ldr	r3, [r0, #0]
 801a3ac:	9200      	str	r2, [sp, #0]
 801a3ae:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801a3b0:	462b      	mov	r3, r5
 801a3b2:	e898 0006 	ldmia.w	r8, {r1, r2}
 801a3b6:	47b0      	blx	r6
 801a3b8:	9b03      	ldr	r3, [sp, #12]
 801a3ba:	8023      	strh	r3, [r4, #0]
 801a3bc:	9b04      	ldr	r3, [sp, #16]
 801a3be:	8063      	strh	r3, [r4, #2]
 801a3c0:	9b05      	ldr	r3, [sp, #20]
 801a3c2:	80a3      	strh	r3, [r4, #4]
 801a3c4:	9b06      	ldr	r3, [sp, #24]
 801a3c6:	e78b      	b.n	801a2e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801a3c8:	fb09 f202 	mul.w	r2, r9, r2
 801a3cc:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801a3d0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801a3d4:	440f      	add	r7, r1
 801a3d6:	b166      	cbz	r6, 801a3f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a3d8:	9a07      	ldr	r2, [sp, #28]
 801a3da:	4592      	cmp	sl, r2
 801a3dc:	d109      	bne.n	801a3f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a3de:	f8db 0000 	ldr.w	r0, [fp]
 801a3e2:	fb09 f303 	mul.w	r3, r9, r3
 801a3e6:	4629      	mov	r1, r5
 801a3e8:	6802      	ldr	r2, [r0, #0]
 801a3ea:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801a3ec:	463a      	mov	r2, r7
 801a3ee:	47b0      	blx	r6
 801a3f0:	e7e2      	b.n	801a3b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a3f2:	fb0a f303 	mul.w	r3, sl, r3
 801a3f6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801a3fa:	f8df b038 	ldr.w	fp, [pc, #56]	; 801a434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a3fe:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801a402:	4545      	cmp	r5, r8
 801a404:	d2d8      	bcs.n	801a3b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a406:	f8db 0000 	ldr.w	r0, [fp]
 801a40a:	4629      	mov	r1, r5
 801a40c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801a410:	4435      	add	r5, r6
 801a412:	6802      	ldr	r2, [r0, #0]
 801a414:	005b      	lsls	r3, r3, #1
 801a416:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801a41a:	463a      	mov	r2, r7
 801a41c:	47d0      	blx	sl
 801a41e:	444f      	add	r7, r9
 801a420:	e7ef      	b.n	801a402 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801a422:	bf00      	nop
 801a424:	240016a4 	.word	0x240016a4
 801a428:	240016a6 	.word	0x240016a6
 801a42c:	240016a8 	.word	0x240016a8
 801a430:	240016aa 	.word	0x240016aa
 801a434:	240016b0 	.word	0x240016b0

0801a438 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801a438:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a43a:	4606      	mov	r6, r0
 801a43c:	b087      	sub	sp, #28
 801a43e:	460c      	mov	r4, r1
 801a440:	4617      	mov	r7, r2
 801a442:	461d      	mov	r5, r3
 801a444:	b333      	cbz	r3, 801a494 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a446:	4608      	mov	r0, r1
 801a448:	f7f5 ffd7 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801a44c:	bb10      	cbnz	r0, 801a494 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a44e:	6820      	ldr	r0, [r4, #0]
 801a450:	ab04      	add	r3, sp, #16
 801a452:	6861      	ldr	r1, [r4, #4]
 801a454:	4c1b      	ldr	r4, [pc, #108]	; (801a4c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801a456:	c303      	stmia	r3!, {r0, r1}
 801a458:	a804      	add	r0, sp, #16
 801a45a:	f7f8 ffc9 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a45e:	6820      	ldr	r0, [r4, #0]
 801a460:	6803      	ldr	r3, [r0, #0]
 801a462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a464:	4798      	blx	r3
 801a466:	2dff      	cmp	r5, #255	; 0xff
 801a468:	d016      	beq.n	801a498 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801a46a:	f010 0f08 	tst.w	r0, #8
 801a46e:	6820      	ldr	r0, [r4, #0]
 801a470:	d015      	beq.n	801a49e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801a472:	2400      	movs	r4, #0
 801a474:	6801      	ldr	r1, [r0, #0]
 801a476:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a47a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a47e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801a482:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801a486:	9401      	str	r4, [sp, #4]
 801a488:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801a48c:	9400      	str	r4, [sp, #0]
 801a48e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801a490:	4639      	mov	r1, r7
 801a492:	47a0      	blx	r4
 801a494:	b007      	add	sp, #28
 801a496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a498:	f010 0f02 	tst.w	r0, #2
 801a49c:	e7e7      	b.n	801a46e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801a49e:	6803      	ldr	r3, [r0, #0]
 801a4a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a4a2:	4798      	blx	r3
 801a4a4:	4b08      	ldr	r3, [pc, #32]	; (801a4c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801a4a6:	4601      	mov	r1, r0
 801a4a8:	4630      	mov	r0, r6
 801a4aa:	881a      	ldrh	r2, [r3, #0]
 801a4ac:	6833      	ldr	r3, [r6, #0]
 801a4ae:	e9cd 7500 	strd	r7, r5, [sp]
 801a4b2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801a4b4:	ab04      	add	r3, sp, #16
 801a4b6:	47a8      	blx	r5
 801a4b8:	6820      	ldr	r0, [r4, #0]
 801a4ba:	6803      	ldr	r3, [r0, #0]
 801a4bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4be:	4798      	blx	r3
 801a4c0:	e7e8      	b.n	801a494 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a4c2:	bf00      	nop
 801a4c4:	240016b0 	.word	0x240016b0
 801a4c8:	240016aa 	.word	0x240016aa

0801a4cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801a4cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a4d0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801a4d4:	4688      	mov	r8, r1
 801a4d6:	4614      	mov	r4, r2
 801a4d8:	461d      	mov	r5, r3
 801a4da:	9e08      	ldr	r6, [sp, #32]
 801a4dc:	2f00      	cmp	r7, #0
 801a4de:	f000 80ab 	beq.w	801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a4e2:	4618      	mov	r0, r3
 801a4e4:	f7f5 ff89 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801a4e8:	2800      	cmp	r0, #0
 801a4ea:	f040 80a5 	bne.w	801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a4ee:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a4f2:	2fff      	cmp	r7, #255	; 0xff
 801a4f4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801a4f8:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801a4fc:	fb04 1303 	mla	r3, r4, r3, r1
 801a500:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801a504:	eba4 0200 	sub.w	r2, r4, r0
 801a508:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801a50c:	fb04 f505 	mul.w	r5, r4, r5
 801a510:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801a514:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801a518:	d04a      	beq.n	801a5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801a51a:	b2bc      	uxth	r4, r7
 801a51c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801a520:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801a524:	fa5f f788 	uxtb.w	r7, r8
 801a528:	b2f3      	uxtb	r3, r6
 801a52a:	0040      	lsls	r0, r0, #1
 801a52c:	fb0e fe04 	mul.w	lr, lr, r4
 801a530:	4367      	muls	r7, r4
 801a532:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801a536:	4363      	muls	r3, r4
 801a538:	fa1f fc8c 	uxth.w	ip, ip
 801a53c:	42a9      	cmp	r1, r5
 801a53e:	d27b      	bcs.n	801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a540:	eb01 0900 	add.w	r9, r1, r0
 801a544:	4549      	cmp	r1, r9
 801a546:	d231      	bcs.n	801a5ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801a548:	880a      	ldrh	r2, [r1, #0]
 801a54a:	1214      	asrs	r4, r2, #8
 801a54c:	10d6      	asrs	r6, r2, #3
 801a54e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a552:	00d2      	lsls	r2, r2, #3
 801a554:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a558:	b2d2      	uxtb	r2, r2
 801a55a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a55e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a562:	fb14 f40c 	smulbb	r4, r4, ip
 801a566:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a56a:	fb12 f20c 	smulbb	r2, r2, ip
 801a56e:	fb16 f60c 	smulbb	r6, r6, ip
 801a572:	4474      	add	r4, lr
 801a574:	441a      	add	r2, r3
 801a576:	b2a4      	uxth	r4, r4
 801a578:	443e      	add	r6, r7
 801a57a:	b292      	uxth	r2, r2
 801a57c:	f104 0a01 	add.w	sl, r4, #1
 801a580:	b2b6      	uxth	r6, r6
 801a582:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a586:	f102 0a01 	add.w	sl, r2, #1
 801a58a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801a58e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a592:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a596:	4322      	orrs	r2, r4
 801a598:	1c74      	adds	r4, r6, #1
 801a59a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801a59e:	0976      	lsrs	r6, r6, #5
 801a5a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a5a4:	4332      	orrs	r2, r6
 801a5a6:	f821 2b02 	strh.w	r2, [r1], #2
 801a5aa:	e7cb      	b.n	801a544 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801a5ac:	4441      	add	r1, r8
 801a5ae:	e7c5      	b.n	801a53c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801a5b0:	0973      	lsrs	r3, r6, #5
 801a5b2:	4f22      	ldr	r7, [pc, #136]	; (801a63c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801a5b4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a5b8:	ea08 0707 	and.w	r7, r8, r7
 801a5bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5c0:	433b      	orrs	r3, r7
 801a5c2:	07e7      	lsls	r7, r4, #31
 801a5c4:	ea43 0306 	orr.w	r3, r3, r6
 801a5c8:	b29b      	uxth	r3, r3
 801a5ca:	d50b      	bpl.n	801a5e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801a5cc:	0040      	lsls	r0, r0, #1
 801a5ce:	0052      	lsls	r2, r2, #1
 801a5d0:	42a9      	cmp	r1, r5
 801a5d2:	d231      	bcs.n	801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a5d4:	180c      	adds	r4, r1, r0
 801a5d6:	42a1      	cmp	r1, r4
 801a5d8:	d202      	bcs.n	801a5e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801a5da:	f821 3b02 	strh.w	r3, [r1], #2
 801a5de:	e7fa      	b.n	801a5d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801a5e0:	4411      	add	r1, r2
 801a5e2:	e7f5      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801a5e4:	078e      	lsls	r6, r1, #30
 801a5e6:	d008      	beq.n	801a5fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801a5e8:	0066      	lsls	r6, r4, #1
 801a5ea:	460a      	mov	r2, r1
 801a5ec:	42aa      	cmp	r2, r5
 801a5ee:	d202      	bcs.n	801a5f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801a5f0:	8013      	strh	r3, [r2, #0]
 801a5f2:	4432      	add	r2, r6
 801a5f4:	e7fa      	b.n	801a5ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801a5f6:	3102      	adds	r1, #2
 801a5f8:	3801      	subs	r0, #1
 801a5fa:	07c2      	lsls	r2, r0, #31
 801a5fc:	d50b      	bpl.n	801a616 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801a5fe:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801a602:	0066      	lsls	r6, r4, #1
 801a604:	3a01      	subs	r2, #1
 801a606:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a60a:	42aa      	cmp	r2, r5
 801a60c:	d202      	bcs.n	801a614 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801a60e:	8013      	strh	r3, [r2, #0]
 801a610:	4432      	add	r2, r6
 801a612:	e7fa      	b.n	801a60a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801a614:	3801      	subs	r0, #1
 801a616:	b178      	cbz	r0, 801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a618:	1040      	asrs	r0, r0, #1
 801a61a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801a61e:	0080      	lsls	r0, r0, #2
 801a620:	0064      	lsls	r4, r4, #1
 801a622:	42a9      	cmp	r1, r5
 801a624:	d208      	bcs.n	801a638 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a626:	180e      	adds	r6, r1, r0
 801a628:	460a      	mov	r2, r1
 801a62a:	42b2      	cmp	r2, r6
 801a62c:	d202      	bcs.n	801a634 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a62e:	f842 3b04 	str.w	r3, [r2], #4
 801a632:	e7fa      	b.n	801a62a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801a634:	4421      	add	r1, r4
 801a636:	e7f4      	b.n	801a622 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801a638:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a63c:	00fff800 	.word	0x00fff800

0801a640 <_ZN8touchgfx8LCD16bppC1Ev>:
 801a640:	2200      	movs	r2, #0
 801a642:	4912      	ldr	r1, [pc, #72]	; (801a68c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801a644:	6042      	str	r2, [r0, #4]
 801a646:	6001      	str	r1, [r0, #0]
 801a648:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801a64c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801a650:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801a654:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801a658:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801a65c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801a660:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801a664:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801a668:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801a66c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801a670:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801a674:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801a678:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801a67c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801a680:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801a684:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801a688:	4770      	bx	lr
 801a68a:	bf00      	nop
 801a68c:	080264b8 	.word	0x080264b8

0801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801a690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a694:	b08d      	sub	sp, #52	; 0x34
 801a696:	460d      	mov	r5, r1
 801a698:	4604      	mov	r4, r0
 801a69a:	4699      	mov	r9, r3
 801a69c:	6808      	ldr	r0, [r1, #0]
 801a69e:	ab08      	add	r3, sp, #32
 801a6a0:	6849      	ldr	r1, [r1, #4]
 801a6a2:	c303      	stmia	r3!, {r0, r1}
 801a6a4:	6810      	ldr	r0, [r2, #0]
 801a6a6:	ab0a      	add	r3, sp, #40	; 0x28
 801a6a8:	6851      	ldr	r1, [r2, #4]
 801a6aa:	c303      	stmia	r3!, {r0, r1}
 801a6ac:	a808      	add	r0, sp, #32
 801a6ae:	f7f8 fe9f 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a6b2:	4629      	mov	r1, r5
 801a6b4:	a80a      	add	r0, sp, #40	; 0x28
 801a6b6:	4d67      	ldr	r5, [pc, #412]	; (801a854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a6b8:	f7f8 fec2 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a6bc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801a6c0:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801a6c4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801a6c8:	6828      	ldr	r0, [r5, #0]
 801a6ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a6ce:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801a6d2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801a6d6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a6da:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801a6de:	440a      	add	r2, r1
 801a6e0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801a6e4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801a6e8:	4413      	add	r3, r2
 801a6ea:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801a6ee:	6803      	ldr	r3, [r0, #0]
 801a6f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a6f2:	4798      	blx	r3
 801a6f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a6f8:	d119      	bne.n	801a72e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801a6fa:	f010 0f20 	tst.w	r0, #32
 801a6fe:	6828      	ldr	r0, [r5, #0]
 801a700:	d018      	beq.n	801a734 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801a702:	2500      	movs	r5, #0
 801a704:	6801      	ldr	r1, [r0, #0]
 801a706:	b2b6      	uxth	r6, r6
 801a708:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a70c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801a710:	9601      	str	r6, [sp, #4]
 801a712:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801a716:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801a71a:	9502      	str	r5, [sp, #8]
 801a71c:	fa1f f588 	uxth.w	r5, r8
 801a720:	9500      	str	r5, [sp, #0]
 801a722:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801a724:	4621      	mov	r1, r4
 801a726:	47a8      	blx	r5
 801a728:	b00d      	add	sp, #52	; 0x34
 801a72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a72e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a732:	e7e4      	b.n	801a6fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801a734:	6803      	ldr	r3, [r0, #0]
 801a736:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a738:	4798      	blx	r3
 801a73a:	4947      	ldr	r1, [pc, #284]	; (801a858 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801a73c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801a740:	880b      	ldrh	r3, [r1, #0]
 801a742:	468a      	mov	sl, r1
 801a744:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801a748:	fb03 5202 	mla	r2, r3, r2, r5
 801a74c:	4373      	muls	r3, r6
 801a74e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a752:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a756:	9307      	str	r3, [sp, #28]
 801a758:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a75c:	9306      	str	r3, [sp, #24]
 801a75e:	9b07      	ldr	r3, [sp, #28]
 801a760:	4298      	cmp	r0, r3
 801a762:	d270      	bcs.n	801a846 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801a764:	9b06      	ldr	r3, [sp, #24]
 801a766:	4621      	mov	r1, r4
 801a768:	eb00 0b03 	add.w	fp, r0, r3
 801a76c:	4558      	cmp	r0, fp
 801a76e:	d25d      	bcs.n	801a82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801a770:	f851 4b04 	ldr.w	r4, [r1], #4
 801a774:	0e23      	lsrs	r3, r4, #24
 801a776:	d014      	beq.n	801a7a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a778:	2bff      	cmp	r3, #255	; 0xff
 801a77a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801a77e:	d112      	bne.n	801a7a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a780:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a784:	d10f      	bne.n	801a7a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a786:	0963      	lsrs	r3, r4, #5
 801a788:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801a78c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a790:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a794:	f02c 0c07 	bic.w	ip, ip, #7
 801a798:	ea43 0c0c 	orr.w	ip, r3, ip
 801a79c:	ea4c 0404 	orr.w	r4, ip, r4
 801a7a0:	8004      	strh	r4, [r0, #0]
 801a7a2:	3002      	adds	r0, #2
 801a7a4:	e7e2      	b.n	801a76c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801a7a6:	fb09 f303 	mul.w	r3, r9, r3
 801a7aa:	8807      	ldrh	r7, [r0, #0]
 801a7ac:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801a7b0:	fa5f fc8c 	uxtb.w	ip, ip
 801a7b4:	1c5a      	adds	r2, r3, #1
 801a7b6:	123e      	asrs	r6, r7, #8
 801a7b8:	10fd      	asrs	r5, r7, #3
 801a7ba:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801a7be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a7c2:	00ff      	lsls	r7, r7, #3
 801a7c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a7c8:	1212      	asrs	r2, r2, #8
 801a7ca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a7ce:	b293      	uxth	r3, r2
 801a7d0:	43d2      	mvns	r2, r2
 801a7d2:	b2ff      	uxtb	r7, r7
 801a7d4:	fb1e fe03 	smulbb	lr, lr, r3
 801a7d8:	b2d2      	uxtb	r2, r2
 801a7da:	fb1c fc03 	smulbb	ip, ip, r3
 801a7de:	b2e4      	uxtb	r4, r4
 801a7e0:	fb06 e602 	mla	r6, r6, r2, lr
 801a7e4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a7e8:	fb14 f403 	smulbb	r4, r4, r3
 801a7ec:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a7f0:	b2b6      	uxth	r6, r6
 801a7f2:	fb05 c502 	mla	r5, r5, r2, ip
 801a7f6:	fb07 4702 	mla	r7, r7, r2, r4
 801a7fa:	f106 0e01 	add.w	lr, r6, #1
 801a7fe:	b2ad      	uxth	r5, r5
 801a800:	b2bf      	uxth	r7, r7
 801a802:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a806:	f105 0c01 	add.w	ip, r5, #1
 801a80a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801a80e:	1c7e      	adds	r6, r7, #1
 801a810:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a814:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a818:	096d      	lsrs	r5, r5, #5
 801a81a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a81e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a822:	ea46 060e 	orr.w	r6, r6, lr
 801a826:	432e      	orrs	r6, r5
 801a828:	8006      	strh	r6, [r0, #0]
 801a82a:	e7ba      	b.n	801a7a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a82c:	f8ba 3000 	ldrh.w	r3, [sl]
 801a830:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801a834:	eba3 0308 	sub.w	r3, r3, r8
 801a838:	eba4 0408 	sub.w	r4, r4, r8
 801a83c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a840:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801a844:	e78b      	b.n	801a75e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801a846:	4b03      	ldr	r3, [pc, #12]	; (801a854 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a848:	6818      	ldr	r0, [r3, #0]
 801a84a:	6803      	ldr	r3, [r0, #0]
 801a84c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a84e:	4798      	blx	r3
 801a850:	e76a      	b.n	801a728 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801a852:	bf00      	nop
 801a854:	240016b0 	.word	0x240016b0
 801a858:	240016aa 	.word	0x240016aa

0801a85c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801a85c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a860:	b085      	sub	sp, #20
 801a862:	6810      	ldr	r0, [r2, #0]
 801a864:	460c      	mov	r4, r1
 801a866:	6851      	ldr	r1, [r2, #4]
 801a868:	466d      	mov	r5, sp
 801a86a:	4616      	mov	r6, r2
 801a86c:	c503      	stmia	r5!, {r0, r1}
 801a86e:	6818      	ldr	r0, [r3, #0]
 801a870:	6859      	ldr	r1, [r3, #4]
 801a872:	c503      	stmia	r5!, {r0, r1}
 801a874:	4668      	mov	r0, sp
 801a876:	4d2e      	ldr	r5, [pc, #184]	; (801a930 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801a878:	f7f8 fdba 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a87c:	4631      	mov	r1, r6
 801a87e:	a802      	add	r0, sp, #8
 801a880:	4e2c      	ldr	r6, [pc, #176]	; (801a934 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801a882:	f7f8 fddd 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a886:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801a88a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801a88e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a892:	6828      	ldr	r0, [r5, #0]
 801a894:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a898:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a89c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801a8a0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a8a4:	f8bd 1000 	ldrh.w	r1, [sp]
 801a8a8:	440a      	add	r2, r1
 801a8aa:	f8ad 2008 	strh.w	r2, [sp, #8]
 801a8ae:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a8b2:	4413      	add	r3, r2
 801a8b4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a8b8:	6803      	ldr	r3, [r0, #0]
 801a8ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a8bc:	4798      	blx	r3
 801a8be:	8833      	ldrh	r3, [r6, #0]
 801a8c0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801a8c4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801a8c8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a8cc:	f8df e068 	ldr.w	lr, [pc, #104]	; 801a938 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801a8d0:	fb03 1202 	mla	r2, r3, r2, r1
 801a8d4:	fb08 f303 	mul.w	r3, r8, r3
 801a8d8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a8dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a8e0:	4298      	cmp	r0, r3
 801a8e2:	d21d      	bcs.n	801a920 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801a8e4:	eb00 080c 	add.w	r8, r0, ip
 801a8e8:	4540      	cmp	r0, r8
 801a8ea:	d20f      	bcs.n	801a90c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801a8ec:	f854 1b04 	ldr.w	r1, [r4], #4
 801a8f0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801a8f4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801a8f8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a8fc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a900:	ea42 0209 	orr.w	r2, r2, r9
 801a904:	430a      	orrs	r2, r1
 801a906:	f820 2b02 	strh.w	r2, [r0], #2
 801a90a:	e7ed      	b.n	801a8e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801a90c:	8832      	ldrh	r2, [r6, #0]
 801a90e:	1bd2      	subs	r2, r2, r7
 801a910:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a914:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801a918:	1bd2      	subs	r2, r2, r7
 801a91a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801a91e:	e7df      	b.n	801a8e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801a920:	6828      	ldr	r0, [r5, #0]
 801a922:	6803      	ldr	r3, [r0, #0]
 801a924:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a926:	4798      	blx	r3
 801a928:	b005      	add	sp, #20
 801a92a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a92e:	bf00      	nop
 801a930:	240016b0 	.word	0x240016b0
 801a934:	240016aa 	.word	0x240016aa
 801a938:	fffff800 	.word	0xfffff800

0801a93c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801a93c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a940:	b08e      	sub	sp, #56	; 0x38
 801a942:	460e      	mov	r6, r1
 801a944:	4604      	mov	r4, r0
 801a946:	461d      	mov	r5, r3
 801a948:	6808      	ldr	r0, [r1, #0]
 801a94a:	ab0a      	add	r3, sp, #40	; 0x28
 801a94c:	6849      	ldr	r1, [r1, #4]
 801a94e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801ab24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801a952:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 801ab28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801a956:	c303      	stmia	r3!, {r0, r1}
 801a958:	6810      	ldr	r0, [r2, #0]
 801a95a:	ab0c      	add	r3, sp, #48	; 0x30
 801a95c:	6851      	ldr	r1, [r2, #4]
 801a95e:	c303      	stmia	r3!, {r0, r1}
 801a960:	a80a      	add	r0, sp, #40	; 0x28
 801a962:	f7f8 fd45 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a966:	4631      	mov	r1, r6
 801a968:	a80c      	add	r0, sp, #48	; 0x30
 801a96a:	f7f8 fd69 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a96e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801a972:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801a976:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a97a:	f8d8 0000 	ldr.w	r0, [r8]
 801a97e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a982:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801a986:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a98a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a98e:	440c      	add	r4, r1
 801a990:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801a994:	440a      	add	r2, r1
 801a996:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801a99a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801a99e:	4413      	add	r3, r2
 801a9a0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a9a4:	6803      	ldr	r3, [r0, #0]
 801a9a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a9a8:	4798      	blx	r3
 801a9aa:	2dff      	cmp	r5, #255	; 0xff
 801a9ac:	d124      	bne.n	801a9f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801a9ae:	f010 0f01 	tst.w	r0, #1
 801a9b2:	f8d8 0000 	ldr.w	r0, [r8]
 801a9b6:	d022      	beq.n	801a9fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801a9b8:	2100      	movs	r1, #0
 801a9ba:	f04f 0e01 	mov.w	lr, #1
 801a9be:	f8d0 c000 	ldr.w	ip, [r0]
 801a9c2:	b2b6      	uxth	r6, r6
 801a9c4:	f8cd e018 	str.w	lr, [sp, #24]
 801a9c8:	b2bf      	uxth	r7, r7
 801a9ca:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801a9ce:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801a9d2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801a9d6:	f8b9 e000 	ldrh.w	lr, [r9]
 801a9da:	9503      	str	r5, [sp, #12]
 801a9dc:	9601      	str	r6, [sp, #4]
 801a9de:	9700      	str	r7, [sp, #0]
 801a9e0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801a9e4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a9e8:	9102      	str	r1, [sp, #8]
 801a9ea:	4621      	mov	r1, r4
 801a9ec:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801a9f0:	47a8      	blx	r5
 801a9f2:	b00e      	add	sp, #56	; 0x38
 801a9f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a9f8:	f010 0f04 	tst.w	r0, #4
 801a9fc:	e7d9      	b.n	801a9b2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801a9fe:	6803      	ldr	r3, [r0, #0]
 801aa00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa02:	4798      	blx	r3
 801aa04:	f8b9 3000 	ldrh.w	r3, [r9]
 801aa08:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801aa0c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801aa10:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801aa14:	435e      	muls	r6, r3
 801aa16:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801aa1a:	2dff      	cmp	r5, #255	; 0xff
 801aa1c:	fb03 1202 	mla	r2, r3, r2, r1
 801aa20:	ebac 0c07 	sub.w	ip, ip, r7
 801aa24:	eba3 0707 	sub.w	r7, r3, r7
 801aa28:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801aa2c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801aa30:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801aa34:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801aa38:	d049      	beq.n	801aace <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801aa3a:	43eb      	mvns	r3, r5
 801aa3c:	fa1f f985 	uxth.w	r9, r5
 801aa40:	b2db      	uxtb	r3, r3
 801aa42:	42b0      	cmp	r0, r6
 801aa44:	d266      	bcs.n	801ab14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801aa46:	eb00 0a0e 	add.w	sl, r0, lr
 801aa4a:	4550      	cmp	r0, sl
 801aa4c:	4621      	mov	r1, r4
 801aa4e:	f104 0403 	add.w	r4, r4, #3
 801aa52:	d25b      	bcs.n	801ab0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801aa54:	8802      	ldrh	r2, [r0, #0]
 801aa56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801aa5a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801aa5e:	fb11 f109 	smulbb	r1, r1, r9
 801aa62:	10d5      	asrs	r5, r2, #3
 801aa64:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801aa68:	00d2      	lsls	r2, r2, #3
 801aa6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aa6e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801aa72:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801aa76:	fb08 1803 	mla	r8, r8, r3, r1
 801aa7a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801aa7e:	b2d2      	uxtb	r2, r2
 801aa80:	fb11 f109 	smulbb	r1, r1, r9
 801aa84:	fa1f f888 	uxth.w	r8, r8
 801aa88:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801aa8c:	fb05 1503 	mla	r5, r5, r3, r1
 801aa90:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801aa94:	fb11 f109 	smulbb	r1, r1, r9
 801aa98:	b2ad      	uxth	r5, r5
 801aa9a:	fb02 1203 	mla	r2, r2, r3, r1
 801aa9e:	f108 0101 	add.w	r1, r8, #1
 801aaa2:	b292      	uxth	r2, r2
 801aaa4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801aaa8:	1c51      	adds	r1, r2, #1
 801aaaa:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801aaae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aab2:	1c69      	adds	r1, r5, #1
 801aab4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801aab8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aabc:	096d      	lsrs	r5, r5, #5
 801aabe:	ea42 0208 	orr.w	r2, r2, r8
 801aac2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aac6:	432a      	orrs	r2, r5
 801aac8:	f820 2b02 	strh.w	r2, [r0], #2
 801aacc:	e7bd      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801aace:	4a14      	ldr	r2, [pc, #80]	; (801ab20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801aad0:	42b0      	cmp	r0, r6
 801aad2:	d21f      	bcs.n	801ab14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801aad4:	eb00 050e 	add.w	r5, r0, lr
 801aad8:	42a8      	cmp	r0, r5
 801aada:	4621      	mov	r1, r4
 801aadc:	f104 0403 	add.w	r4, r4, #3
 801aae0:	d210      	bcs.n	801ab04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801aae2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801aae6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801aaea:	00db      	lsls	r3, r3, #3
 801aaec:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801aaf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aaf4:	430b      	orrs	r3, r1
 801aaf6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801aafa:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801aafe:	f820 3b02 	strh.w	r3, [r0], #2
 801ab02:	e7e9      	b.n	801aad8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ab04:	4438      	add	r0, r7
 801ab06:	eb01 040c 	add.w	r4, r1, ip
 801ab0a:	e7e1      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ab0c:	4438      	add	r0, r7
 801ab0e:	eb01 040c 	add.w	r4, r1, ip
 801ab12:	e796      	b.n	801aa42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ab14:	4b03      	ldr	r3, [pc, #12]	; (801ab24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ab16:	6818      	ldr	r0, [r3, #0]
 801ab18:	6803      	ldr	r3, [r0, #0]
 801ab1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab1c:	4798      	blx	r3
 801ab1e:	e768      	b.n	801a9f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ab20:	fffff800 	.word	0xfffff800
 801ab24:	240016b0 	.word	0x240016b0
 801ab28:	240016aa 	.word	0x240016aa

0801ab2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ab2c:	b4f0      	push	{r4, r5, r6, r7}
 801ab2e:	4616      	mov	r6, r2
 801ab30:	461c      	mov	r4, r3
 801ab32:	460d      	mov	r5, r1
 801ab34:	9a04      	ldr	r2, [sp, #16]
 801ab36:	2e01      	cmp	r6, #1
 801ab38:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ab3c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ab40:	d012      	beq.n	801ab68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ab42:	d303      	bcc.n	801ab4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ab44:	2e02      	cmp	r6, #2
 801ab46:	d00a      	beq.n	801ab5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ab48:	bcf0      	pop	{r4, r5, r6, r7}
 801ab4a:	4770      	bx	lr
 801ab4c:	6805      	ldr	r5, [r0, #0]
 801ab4e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ab52:	68ed      	ldr	r5, [r5, #12]
 801ab54:	4613      	mov	r3, r2
 801ab56:	4622      	mov	r2, r4
 801ab58:	46ac      	mov	ip, r5
 801ab5a:	bcf0      	pop	{r4, r5, r6, r7}
 801ab5c:	4760      	bx	ip
 801ab5e:	4621      	mov	r1, r4
 801ab60:	4628      	mov	r0, r5
 801ab62:	bcf0      	pop	{r4, r5, r6, r7}
 801ab64:	f7ff bd94 	b.w	801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ab68:	4621      	mov	r1, r4
 801ab6a:	4628      	mov	r0, r5
 801ab6c:	bcf0      	pop	{r4, r5, r6, r7}
 801ab6e:	f7ff bee5 	b.w	801a93c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ab74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ab74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab78:	b093      	sub	sp, #76	; 0x4c
 801ab7a:	4681      	mov	r9, r0
 801ab7c:	4688      	mov	r8, r1
 801ab7e:	6810      	ldr	r0, [r2, #0]
 801ab80:	6851      	ldr	r1, [r2, #4]
 801ab82:	ac0e      	add	r4, sp, #56	; 0x38
 801ab84:	4616      	mov	r6, r2
 801ab86:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ab8a:	4f6b      	ldr	r7, [pc, #428]	; (801ad38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ab8c:	c403      	stmia	r4!, {r0, r1}
 801ab8e:	6818      	ldr	r0, [r3, #0]
 801ab90:	ac10      	add	r4, sp, #64	; 0x40
 801ab92:	6859      	ldr	r1, [r3, #4]
 801ab94:	c403      	stmia	r4!, {r0, r1}
 801ab96:	a80e      	add	r0, sp, #56	; 0x38
 801ab98:	f7f8 fc2a 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab9c:	4631      	mov	r1, r6
 801ab9e:	a810      	add	r0, sp, #64	; 0x40
 801aba0:	4e66      	ldr	r6, [pc, #408]	; (801ad3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801aba2:	f7f8 fc4d 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aba6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801abaa:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801abae:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801abb2:	6830      	ldr	r0, [r6, #0]
 801abb4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801abb8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801abbc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801abc0:	4489      	add	r9, r1
 801abc2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801abc6:	440a      	add	r2, r1
 801abc8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801abcc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801abd0:	4413      	add	r3, r2
 801abd2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801abd6:	6803      	ldr	r3, [r0, #0]
 801abd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801abda:	4798      	blx	r3
 801abdc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801abe0:	6830      	ldr	r0, [r6, #0]
 801abe2:	d01d      	beq.n	801ac20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801abe4:	2200      	movs	r2, #0
 801abe6:	6801      	ldr	r1, [r0, #0]
 801abe8:	b2a4      	uxth	r4, r4
 801abea:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801abee:	b2ad      	uxth	r5, r5
 801abf0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801abf4:	220b      	movs	r2, #11
 801abf6:	9207      	str	r2, [sp, #28]
 801abf8:	883a      	ldrh	r2, [r7, #0]
 801abfa:	9502      	str	r5, [sp, #8]
 801abfc:	9206      	str	r2, [sp, #24]
 801abfe:	2201      	movs	r2, #1
 801ac00:	9401      	str	r4, [sp, #4]
 801ac02:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ac06:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ac0a:	9203      	str	r2, [sp, #12]
 801ac0c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ac10:	9200      	str	r2, [sp, #0]
 801ac12:	4642      	mov	r2, r8
 801ac14:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ac16:	4649      	mov	r1, r9
 801ac18:	47a0      	blx	r4
 801ac1a:	b013      	add	sp, #76	; 0x4c
 801ac1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac20:	6803      	ldr	r3, [r0, #0]
 801ac22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ac24:	4798      	blx	r3
 801ac26:	883b      	ldrh	r3, [r7, #0]
 801ac28:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ac2c:	f04f 0e04 	mov.w	lr, #4
 801ac30:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ac34:	435d      	muls	r5, r3
 801ac36:	fb03 1202 	mla	r2, r3, r2, r1
 801ac3a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac3e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ac42:	920c      	str	r2, [sp, #48]	; 0x30
 801ac44:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ac48:	1b12      	subs	r2, r2, r4
 801ac4a:	920d      	str	r2, [sp, #52]	; 0x34
 801ac4c:	0062      	lsls	r2, r4, #1
 801ac4e:	1b1c      	subs	r4, r3, r4
 801ac50:	920a      	str	r2, [sp, #40]	; 0x28
 801ac52:	0063      	lsls	r3, r4, #1
 801ac54:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac58:	4298      	cmp	r0, r3
 801ac5a:	d266      	bcs.n	801ad2a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ac5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac5e:	eb00 0b03 	add.w	fp, r0, r3
 801ac62:	4558      	cmp	r0, fp
 801ac64:	d25c      	bcs.n	801ad20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ac66:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ac6a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ac6e:	f858 2003 	ldr.w	r2, [r8, r3]
 801ac72:	0e11      	lsrs	r1, r2, #24
 801ac74:	d012      	beq.n	801ac9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ac76:	29ff      	cmp	r1, #255	; 0xff
 801ac78:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ac7c:	d110      	bne.n	801aca0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ac7e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ac82:	d10d      	bne.n	801aca0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ac84:	0953      	lsrs	r3, r2, #5
 801ac86:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ac8a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ac8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac92:	f027 0707 	bic.w	r7, r7, #7
 801ac96:	431f      	orrs	r7, r3
 801ac98:	433a      	orrs	r2, r7
 801ac9a:	8002      	strh	r2, [r0, #0]
 801ac9c:	3002      	adds	r0, #2
 801ac9e:	e7e0      	b.n	801ac62 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801aca0:	fb0a f101 	mul.w	r1, sl, r1
 801aca4:	8806      	ldrh	r6, [r0, #0]
 801aca6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801acaa:	b2d2      	uxtb	r2, r2
 801acac:	1c4b      	adds	r3, r1, #1
 801acae:	1235      	asrs	r5, r6, #8
 801acb0:	10f4      	asrs	r4, r6, #3
 801acb2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801acb6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801acba:	00f6      	lsls	r6, r6, #3
 801acbc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801acc0:	121b      	asrs	r3, r3, #8
 801acc2:	b2f6      	uxtb	r6, r6
 801acc4:	b299      	uxth	r1, r3
 801acc6:	43db      	mvns	r3, r3
 801acc8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801accc:	fb1c fc01 	smulbb	ip, ip, r1
 801acd0:	b2db      	uxtb	r3, r3
 801acd2:	fb12 f201 	smulbb	r2, r2, r1
 801acd6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801acda:	fb05 c503 	mla	r5, r5, r3, ip
 801acde:	b2ff      	uxtb	r7, r7
 801ace0:	fb06 2203 	mla	r2, r6, r3, r2
 801ace4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ace8:	fb17 f701 	smulbb	r7, r7, r1
 801acec:	b2ad      	uxth	r5, r5
 801acee:	b292      	uxth	r2, r2
 801acf0:	fb04 7403 	mla	r4, r4, r3, r7
 801acf4:	f105 0c01 	add.w	ip, r5, #1
 801acf8:	1c57      	adds	r7, r2, #1
 801acfa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801acfe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ad02:	b2a4      	uxth	r4, r4
 801ad04:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ad08:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ad0c:	433d      	orrs	r5, r7
 801ad0e:	1c67      	adds	r7, r4, #1
 801ad10:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ad14:	0964      	lsrs	r4, r4, #5
 801ad16:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ad1a:	4325      	orrs	r5, r4
 801ad1c:	8005      	strh	r5, [r0, #0]
 801ad1e:	e7bd      	b.n	801ac9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ad20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ad22:	4418      	add	r0, r3
 801ad24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ad26:	4499      	add	r9, r3
 801ad28:	e795      	b.n	801ac56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ad2a:	4b04      	ldr	r3, [pc, #16]	; (801ad3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ad2c:	6818      	ldr	r0, [r3, #0]
 801ad2e:	6803      	ldr	r3, [r0, #0]
 801ad30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ad32:	4798      	blx	r3
 801ad34:	e771      	b.n	801ac1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ad36:	bf00      	nop
 801ad38:	240016aa 	.word	0x240016aa
 801ad3c:	240016b0 	.word	0x240016b0

0801ad40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ad40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad44:	b087      	sub	sp, #28
 801ad46:	4680      	mov	r8, r0
 801ad48:	460d      	mov	r5, r1
 801ad4a:	4614      	mov	r4, r2
 801ad4c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ad50:	2e00      	cmp	r6, #0
 801ad52:	f000 80b9 	beq.w	801aec8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ad56:	6810      	ldr	r0, [r2, #0]
 801ad58:	af02      	add	r7, sp, #8
 801ad5a:	6851      	ldr	r1, [r2, #4]
 801ad5c:	c703      	stmia	r7!, {r0, r1}
 801ad5e:	6818      	ldr	r0, [r3, #0]
 801ad60:	af04      	add	r7, sp, #16
 801ad62:	6859      	ldr	r1, [r3, #4]
 801ad64:	c703      	stmia	r7!, {r0, r1}
 801ad66:	a802      	add	r0, sp, #8
 801ad68:	f7f8 fb42 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad6c:	4621      	mov	r1, r4
 801ad6e:	a804      	add	r0, sp, #16
 801ad70:	f7f8 fb66 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad74:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ad78:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ad7c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ad80:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ad84:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ad88:	eb08 0401 	add.w	r4, r8, r1
 801ad8c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ad90:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ad94:	440a      	add	r2, r1
 801ad96:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ad9a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ad9e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ada2:	4413      	add	r3, r2
 801ada4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ada8:	4b49      	ldr	r3, [pc, #292]	; (801aed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801adaa:	6818      	ldr	r0, [r3, #0]
 801adac:	6803      	ldr	r3, [r0, #0]
 801adae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801adb0:	4798      	blx	r3
 801adb2:	4b48      	ldr	r3, [pc, #288]	; (801aed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801adb4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801adb8:	2eff      	cmp	r6, #255	; 0xff
 801adba:	881a      	ldrh	r2, [r3, #0]
 801adbc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801adc0:	fb02 c101 	mla	r1, r2, r1, ip
 801adc4:	fb02 f207 	mul.w	r2, r2, r7
 801adc8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801adcc:	f105 0104 	add.w	r1, r5, #4
 801add0:	461d      	mov	r5, r3
 801add2:	d05a      	beq.n	801ae8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801add4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801add8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801addc:	b2b6      	uxth	r6, r6
 801adde:	9301      	str	r3, [sp, #4]
 801ade0:	fa1f fe8e 	uxth.w	lr, lr
 801ade4:	4282      	cmp	r2, r0
 801ade6:	d96a      	bls.n	801aebe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ade8:	eb00 0b0a 	add.w	fp, r0, sl
 801adec:	4583      	cmp	fp, r0
 801adee:	d940      	bls.n	801ae72 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801adf0:	8805      	ldrh	r5, [r0, #0]
 801adf2:	f814 3b01 	ldrb.w	r3, [r4], #1
 801adf6:	122f      	asrs	r7, r5, #8
 801adf8:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801adfc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ae00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae04:	00ed      	lsls	r5, r5, #3
 801ae06:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ae0a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ae0e:	fb17 f70e 	smulbb	r7, r7, lr
 801ae12:	b2ed      	uxtb	r5, r5
 801ae14:	fb19 f90e 	smulbb	r9, r9, lr
 801ae18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae1c:	fb15 f50e 	smulbb	r5, r5, lr
 801ae20:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ae24:	10df      	asrs	r7, r3, #3
 801ae26:	00db      	lsls	r3, r3, #3
 801ae28:	fa1f fc8c 	uxth.w	ip, ip
 801ae2c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae30:	b2db      	uxtb	r3, r3
 801ae32:	fb07 9706 	mla	r7, r7, r6, r9
 801ae36:	f10c 0901 	add.w	r9, ip, #1
 801ae3a:	fb03 5306 	mla	r3, r3, r6, r5
 801ae3e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ae42:	b29b      	uxth	r3, r3
 801ae44:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801ae48:	b2bf      	uxth	r7, r7
 801ae4a:	f103 0c01 	add.w	ip, r3, #1
 801ae4e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ae52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ae56:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae5a:	f107 0901 	add.w	r9, r7, #1
 801ae5e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ae62:	097f      	lsrs	r7, r7, #5
 801ae64:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ae68:	ea4c 0c07 	orr.w	ip, ip, r7
 801ae6c:	f820 cb02 	strh.w	ip, [r0], #2
 801ae70:	e7bc      	b.n	801adec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ae72:	9b01      	ldr	r3, [sp, #4]
 801ae74:	881b      	ldrh	r3, [r3, #0]
 801ae76:	eba3 0308 	sub.w	r3, r3, r8
 801ae7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ae7e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ae82:	eba3 0308 	sub.w	r3, r3, r8
 801ae86:	441c      	add	r4, r3
 801ae88:	e7ac      	b.n	801ade4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ae8a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ae8e:	4282      	cmp	r2, r0
 801ae90:	d915      	bls.n	801aebe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ae92:	eb00 060a 	add.w	r6, r0, sl
 801ae96:	4286      	cmp	r6, r0
 801ae98:	d906      	bls.n	801aea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ae9a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ae9e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801aea2:	f820 3b02 	strh.w	r3, [r0], #2
 801aea6:	e7f6      	b.n	801ae96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801aea8:	882b      	ldrh	r3, [r5, #0]
 801aeaa:	eba3 0308 	sub.w	r3, r3, r8
 801aeae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aeb2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801aeb6:	eba3 0308 	sub.w	r3, r3, r8
 801aeba:	441c      	add	r4, r3
 801aebc:	e7e7      	b.n	801ae8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801aebe:	4b04      	ldr	r3, [pc, #16]	; (801aed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801aec0:	6818      	ldr	r0, [r3, #0]
 801aec2:	6803      	ldr	r3, [r0, #0]
 801aec4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aec6:	4798      	blx	r3
 801aec8:	b007      	add	sp, #28
 801aeca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aece:	bf00      	nop
 801aed0:	240016b0 	.word	0x240016b0
 801aed4:	240016aa 	.word	0x240016aa

0801aed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801aed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aedc:	b091      	sub	sp, #68	; 0x44
 801aede:	4680      	mov	r8, r0
 801aee0:	460f      	mov	r7, r1
 801aee2:	4614      	mov	r4, r2
 801aee4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801aee8:	2d00      	cmp	r5, #0
 801aeea:	d051      	beq.n	801af90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801aeec:	6810      	ldr	r0, [r2, #0]
 801aeee:	ae0c      	add	r6, sp, #48	; 0x30
 801aef0:	6851      	ldr	r1, [r2, #4]
 801aef2:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801b0f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801aef6:	c603      	stmia	r6!, {r0, r1}
 801aef8:	6818      	ldr	r0, [r3, #0]
 801aefa:	ae0e      	add	r6, sp, #56	; 0x38
 801aefc:	6859      	ldr	r1, [r3, #4]
 801aefe:	c603      	stmia	r6!, {r0, r1}
 801af00:	a80c      	add	r0, sp, #48	; 0x30
 801af02:	f7f8 fa75 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af06:	4621      	mov	r1, r4
 801af08:	a80e      	add	r0, sp, #56	; 0x38
 801af0a:	f7f8 fa99 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af0e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801af12:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801af16:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801af1a:	f8d9 0000 	ldr.w	r0, [r9]
 801af1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801af22:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801af26:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801af2a:	eb08 0401 	add.w	r4, r8, r1
 801af2e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801af32:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801b0f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801af36:	440a      	add	r2, r1
 801af38:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801af3c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801af40:	4413      	add	r3, r2
 801af42:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801af46:	6803      	ldr	r3, [r0, #0]
 801af48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801af4a:	4798      	blx	r3
 801af4c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801af50:	f8d9 0000 	ldr.w	r0, [r9]
 801af54:	d01f      	beq.n	801af96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801af56:	2200      	movs	r2, #0
 801af58:	6801      	ldr	r1, [r0, #0]
 801af5a:	b2b6      	uxth	r6, r6
 801af5c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801af60:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801af64:	220b      	movs	r2, #11
 801af66:	9207      	str	r2, [sp, #28]
 801af68:	f8b8 2000 	ldrh.w	r2, [r8]
 801af6c:	9601      	str	r6, [sp, #4]
 801af6e:	9206      	str	r2, [sp, #24]
 801af70:	2201      	movs	r2, #1
 801af72:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801af76:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801af7a:	9203      	str	r2, [sp, #12]
 801af7c:	fa1f f28a 	uxth.w	r2, sl
 801af80:	9202      	str	r2, [sp, #8]
 801af82:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801af86:	9200      	str	r2, [sp, #0]
 801af88:	463a      	mov	r2, r7
 801af8a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801af8c:	4621      	mov	r1, r4
 801af8e:	47a8      	blx	r5
 801af90:	b011      	add	sp, #68	; 0x44
 801af92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af96:	6803      	ldr	r3, [r0, #0]
 801af98:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801af9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801af9e:	4798      	blx	r3
 801afa0:	f8b8 2000 	ldrh.w	r2, [r8]
 801afa4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801afa8:	2dff      	cmp	r5, #255	; 0xff
 801afaa:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801afae:	fb0a fa02 	mul.w	sl, sl, r2
 801afb2:	fb02 1303 	mla	r3, r2, r3, r1
 801afb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801afba:	d062      	beq.n	801b082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801afbc:	ea6f 0c05 	mvn.w	ip, r5
 801afc0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801afc4:	b2ad      	uxth	r5, r5
 801afc6:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801afca:	fa5f fc8c 	uxtb.w	ip, ip
 801afce:	930a      	str	r3, [sp, #40]	; 0x28
 801afd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801afd2:	4298      	cmp	r0, r3
 801afd4:	f080 8085 	bcs.w	801b0e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801afd8:	eb00 0b09 	add.w	fp, r0, r9
 801afdc:	4558      	cmp	r0, fp
 801afde:	d246      	bcs.n	801b06e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801afe0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801afe4:	2303      	movs	r3, #3
 801afe6:	2204      	movs	r2, #4
 801afe8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801afec:	8803      	ldrh	r3, [r0, #0]
 801afee:	eb07 0a0e 	add.w	sl, r7, lr
 801aff2:	1219      	asrs	r1, r3, #8
 801aff4:	10da      	asrs	r2, r3, #3
 801aff6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801affa:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801affe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b002:	00db      	lsls	r3, r3, #3
 801b004:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b008:	fb18 f805 	smulbb	r8, r8, r5
 801b00c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801b010:	fb1e fe05 	smulbb	lr, lr, r5
 801b014:	b2db      	uxtb	r3, r3
 801b016:	fb01 810c 	mla	r1, r1, ip, r8
 801b01a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b01e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801b022:	fb18 f805 	smulbb	r8, r8, r5
 801b026:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801b02a:	b289      	uxth	r1, r1
 801b02c:	fb02 820c 	mla	r2, r2, ip, r8
 801b030:	fb03 e30c 	mla	r3, r3, ip, lr
 801b034:	f101 0801 	add.w	r8, r1, #1
 801b038:	b292      	uxth	r2, r2
 801b03a:	b29b      	uxth	r3, r3
 801b03c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801b040:	f102 0801 	add.w	r8, r2, #1
 801b044:	f103 0e01 	add.w	lr, r3, #1
 801b048:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801b04c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b050:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801b054:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b058:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b05c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b060:	ea4e 0101 	orr.w	r1, lr, r1
 801b064:	ea41 0108 	orr.w	r1, r1, r8
 801b068:	f820 1b02 	strh.w	r1, [r0], #2
 801b06c:	e7b6      	b.n	801afdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801b06e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b070:	881b      	ldrh	r3, [r3, #0]
 801b072:	1b9b      	subs	r3, r3, r6
 801b074:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b078:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b07c:	1b9b      	subs	r3, r3, r6
 801b07e:	441c      	add	r4, r3
 801b080:	e7a6      	b.n	801afd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801b082:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801b086:	2203      	movs	r2, #3
 801b088:	2504      	movs	r5, #4
 801b08a:	4919      	ldr	r1, [pc, #100]	; (801b0f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801b08c:	4550      	cmp	r0, sl
 801b08e:	d228      	bcs.n	801b0e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b090:	eb00 0c09 	add.w	ip, r0, r9
 801b094:	4560      	cmp	r0, ip
 801b096:	4623      	mov	r3, r4
 801b098:	d219      	bcs.n	801b0ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801b09a:	f893 e000 	ldrb.w	lr, [r3]
 801b09e:	3401      	adds	r4, #1
 801b0a0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801b0a4:	eb07 0b0e 	add.w	fp, r7, lr
 801b0a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b0ac:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801b0b0:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b0b4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801b0b8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801b0bc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b0c0:	ea43 030b 	orr.w	r3, r3, fp
 801b0c4:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801b0c8:	f820 3b02 	strh.w	r3, [r0], #2
 801b0cc:	e7e2      	b.n	801b094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801b0ce:	f8b8 3000 	ldrh.w	r3, [r8]
 801b0d2:	1b9b      	subs	r3, r3, r6
 801b0d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b0d8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b0dc:	1b9b      	subs	r3, r3, r6
 801b0de:	441c      	add	r4, r3
 801b0e0:	e7d4      	b.n	801b08c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801b0e2:	4b04      	ldr	r3, [pc, #16]	; (801b0f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801b0e4:	6818      	ldr	r0, [r3, #0]
 801b0e6:	6803      	ldr	r3, [r0, #0]
 801b0e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b0ea:	4798      	blx	r3
 801b0ec:	e750      	b.n	801af90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b0ee:	bf00      	nop
 801b0f0:	fffff800 	.word	0xfffff800
 801b0f4:	240016b0 	.word	0x240016b0
 801b0f8:	240016aa 	.word	0x240016aa

0801b0fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801b0fc:	b4f0      	push	{r4, r5, r6, r7}
 801b0fe:	460c      	mov	r4, r1
 801b100:	4611      	mov	r1, r2
 801b102:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801b106:	461a      	mov	r2, r3
 801b108:	780f      	ldrb	r7, [r1, #0]
 801b10a:	9b04      	ldr	r3, [sp, #16]
 801b10c:	2f01      	cmp	r7, #1
 801b10e:	784e      	ldrb	r6, [r1, #1]
 801b110:	d036      	beq.n	801b180 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801b112:	d31e      	bcc.n	801b152 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801b114:	2f02      	cmp	r7, #2
 801b116:	d14a      	bne.n	801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b118:	2e03      	cmp	r6, #3
 801b11a:	d848      	bhi.n	801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b11c:	e8df f006 	tbb	[pc, r6]
 801b120:	16140702 	.word	0x16140702
 801b124:	9504      	str	r5, [sp, #16]
 801b126:	4620      	mov	r0, r4
 801b128:	bcf0      	pop	{r4, r5, r6, r7}
 801b12a:	f7ff be09 	b.w	801ad40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801b12e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801b130:	2800      	cmp	r0, #0
 801b132:	d03c      	beq.n	801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b134:	6806      	ldr	r6, [r0, #0]
 801b136:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b13a:	68b5      	ldr	r5, [r6, #8]
 801b13c:	4613      	mov	r3, r2
 801b13e:	46ac      	mov	ip, r5
 801b140:	460a      	mov	r2, r1
 801b142:	4621      	mov	r1, r4
 801b144:	bcf0      	pop	{r4, r5, r6, r7}
 801b146:	4760      	bx	ip
 801b148:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801b14a:	e7f1      	b.n	801b130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b14c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801b150:	e7ee      	b.n	801b130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b152:	2e03      	cmp	r6, #3
 801b154:	d82b      	bhi.n	801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b156:	e8df f006 	tbb	[pc, r6]
 801b15a:	0702      	.short	0x0702
 801b15c:	100e      	.short	0x100e
 801b15e:	9504      	str	r5, [sp, #16]
 801b160:	4620      	mov	r0, r4
 801b162:	bcf0      	pop	{r4, r5, r6, r7}
 801b164:	f7ff bd06 	b.w	801ab74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801b168:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801b16a:	b300      	cbz	r0, 801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b16c:	6806      	ldr	r6, [r0, #0]
 801b16e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b172:	68f5      	ldr	r5, [r6, #12]
 801b174:	e7e2      	b.n	801b13c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b176:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801b178:	e7f7      	b.n	801b16a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801b17a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801b17e:	e7f4      	b.n	801b16a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801b180:	2e03      	cmp	r6, #3
 801b182:	d814      	bhi.n	801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b184:	e8df f006 	tbb	[pc, r6]
 801b188:	100e0702 	.word	0x100e0702
 801b18c:	9504      	str	r5, [sp, #16]
 801b18e:	4620      	mov	r0, r4
 801b190:	bcf0      	pop	{r4, r5, r6, r7}
 801b192:	f7ff bea1 	b.w	801aed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801b196:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801b198:	b148      	cbz	r0, 801b1ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801b19a:	6806      	ldr	r6, [r0, #0]
 801b19c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b1a0:	6935      	ldr	r5, [r6, #16]
 801b1a2:	e7cb      	b.n	801b13c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b1a4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801b1a6:	e7f7      	b.n	801b198 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801b1a8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801b1ac:	e7f4      	b.n	801b198 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801b1ae:	bcf0      	pop	{r4, r5, r6, r7}
 801b1b0:	4770      	bx	lr
	...

0801b1b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801b1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1b8:	b087      	sub	sp, #28
 801b1ba:	4604      	mov	r4, r0
 801b1bc:	460e      	mov	r6, r1
 801b1be:	6810      	ldr	r0, [r2, #0]
 801b1c0:	6851      	ldr	r1, [r2, #4]
 801b1c2:	ad02      	add	r5, sp, #8
 801b1c4:	4617      	mov	r7, r2
 801b1c6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801b1ca:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801b3fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801b1ce:	c503      	stmia	r5!, {r0, r1}
 801b1d0:	6818      	ldr	r0, [r3, #0]
 801b1d2:	ad04      	add	r5, sp, #16
 801b1d4:	6859      	ldr	r1, [r3, #4]
 801b1d6:	c503      	stmia	r5!, {r0, r1}
 801b1d8:	a802      	add	r0, sp, #8
 801b1da:	f7f8 f909 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b1de:	4639      	mov	r1, r7
 801b1e0:	a804      	add	r0, sp, #16
 801b1e2:	f7f8 f92d 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b1e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b1ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b1ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801b1f2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b1f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b1fa:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801b1fe:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b202:	440e      	add	r6, r1
 801b204:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b208:	440a      	add	r2, r1
 801b20a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b20e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b212:	4413      	add	r3, r2
 801b214:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b218:	4b77      	ldr	r3, [pc, #476]	; (801b3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b21a:	6818      	ldr	r0, [r3, #0]
 801b21c:	6803      	ldr	r3, [r0, #0]
 801b21e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b220:	4798      	blx	r3
 801b222:	f8b9 b000 	ldrh.w	fp, [r9]
 801b226:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b22a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b22e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b232:	fb05 f50b 	mul.w	r5, r5, fp
 801b236:	fb0b 2303 	mla	r3, fp, r3, r2
 801b23a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b23e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b242:	9300      	str	r3, [sp, #0]
 801b244:	d069      	beq.n	801b31a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801b246:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801b24a:	4558      	cmp	r0, fp
 801b24c:	f080 80cc 	bcs.w	801b3e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b250:	9b00      	ldr	r3, [sp, #0]
 801b252:	4631      	mov	r1, r6
 801b254:	18c3      	adds	r3, r0, r3
 801b256:	9301      	str	r3, [sp, #4]
 801b258:	9b01      	ldr	r3, [sp, #4]
 801b25a:	4298      	cmp	r0, r3
 801b25c:	d24f      	bcs.n	801b2fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801b25e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801b262:	2a00      	cmp	r2, #0
 801b264:	d048      	beq.n	801b2f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b266:	fb0a f202 	mul.w	r2, sl, r2
 801b26a:	1c53      	adds	r3, r2, #1
 801b26c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b270:	121b      	asrs	r3, r3, #8
 801b272:	d041      	beq.n	801b2f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b274:	8802      	ldrh	r2, [r0, #0]
 801b276:	b29e      	uxth	r6, r3
 801b278:	f8b4 c000 	ldrh.w	ip, [r4]
 801b27c:	43db      	mvns	r3, r3
 801b27e:	1215      	asrs	r5, r2, #8
 801b280:	b2db      	uxtb	r3, r3
 801b282:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b286:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b28a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b28e:	fb15 f503 	smulbb	r5, r5, r3
 801b292:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b296:	00d2      	lsls	r2, r2, #3
 801b298:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b29c:	fb07 5706 	mla	r7, r7, r6, r5
 801b2a0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b2a4:	b2d2      	uxtb	r2, r2
 801b2a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b2aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b2ae:	fb1e fe03 	smulbb	lr, lr, r3
 801b2b2:	b2bf      	uxth	r7, r7
 801b2b4:	fb12 f203 	smulbb	r2, r2, r3
 801b2b8:	fa5f fc8c 	uxtb.w	ip, ip
 801b2bc:	fb05 e506 	mla	r5, r5, r6, lr
 801b2c0:	f107 0e01 	add.w	lr, r7, #1
 801b2c4:	fb0c 2c06 	mla	ip, ip, r6, r2
 801b2c8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801b2cc:	fa1f fc8c 	uxth.w	ip, ip
 801b2d0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801b2d4:	b2ad      	uxth	r5, r5
 801b2d6:	f10c 0701 	add.w	r7, ip, #1
 801b2da:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b2de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b2e2:	ea47 070e 	orr.w	r7, r7, lr
 801b2e6:	f105 0e01 	add.w	lr, r5, #1
 801b2ea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b2ee:	096d      	lsrs	r5, r5, #5
 801b2f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b2f4:	432f      	orrs	r7, r5
 801b2f6:	8007      	strh	r7, [r0, #0]
 801b2f8:	3002      	adds	r0, #2
 801b2fa:	3402      	adds	r4, #2
 801b2fc:	e7ac      	b.n	801b258 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801b2fe:	f8b9 3000 	ldrh.w	r3, [r9]
 801b302:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b306:	eba3 0308 	sub.w	r3, r3, r8
 801b30a:	eba6 0608 	sub.w	r6, r6, r8
 801b30e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b312:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b316:	440e      	add	r6, r1
 801b318:	e797      	b.n	801b24a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801b31a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801b31e:	42a8      	cmp	r0, r5
 801b320:	d262      	bcs.n	801b3e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b322:	9b00      	ldr	r3, [sp, #0]
 801b324:	4631      	mov	r1, r6
 801b326:	eb00 0b03 	add.w	fp, r0, r3
 801b32a:	4558      	cmp	r0, fp
 801b32c:	d24e      	bcs.n	801b3cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801b32e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b332:	b12b      	cbz	r3, 801b340 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b334:	2bff      	cmp	r3, #255	; 0xff
 801b336:	f8b4 e000 	ldrh.w	lr, [r4]
 801b33a:	d104      	bne.n	801b346 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801b33c:	f8a0 e000 	strh.w	lr, [r0]
 801b340:	3002      	adds	r0, #2
 801b342:	3402      	adds	r4, #2
 801b344:	e7f1      	b.n	801b32a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801b346:	8802      	ldrh	r2, [r0, #0]
 801b348:	b29f      	uxth	r7, r3
 801b34a:	43db      	mvns	r3, r3
 801b34c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b350:	1216      	asrs	r6, r2, #8
 801b352:	b2db      	uxtb	r3, r3
 801b354:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b358:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b35c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b360:	00d2      	lsls	r2, r2, #3
 801b362:	fb16 f603 	smulbb	r6, r6, r3
 801b366:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b36a:	b2d2      	uxtb	r2, r2
 801b36c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b370:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b374:	fb1a fa03 	smulbb	sl, sl, r3
 801b378:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b37c:	fa1f fc8c 	uxth.w	ip, ip
 801b380:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b384:	fb12 f303 	smulbb	r3, r2, r3
 801b388:	fa5f fe8e 	uxtb.w	lr, lr
 801b38c:	fb06 a607 	mla	r6, r6, r7, sl
 801b390:	f10c 0201 	add.w	r2, ip, #1
 801b394:	fb0e 3307 	mla	r3, lr, r7, r3
 801b398:	b2b6      	uxth	r6, r6
 801b39a:	b29b      	uxth	r3, r3
 801b39c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b3a0:	f106 0a01 	add.w	sl, r6, #1
 801b3a4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801b3a8:	f103 0c01 	add.w	ip, r3, #1
 801b3ac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b3b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b3b4:	0976      	lsrs	r6, r6, #5
 801b3b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b3ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3be:	ea4c 0c02 	orr.w	ip, ip, r2
 801b3c2:	ea4c 0c06 	orr.w	ip, ip, r6
 801b3c6:	f8a0 c000 	strh.w	ip, [r0]
 801b3ca:	e7b9      	b.n	801b340 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b3cc:	f8b9 3000 	ldrh.w	r3, [r9]
 801b3d0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b3d4:	eba3 0308 	sub.w	r3, r3, r8
 801b3d8:	eba6 0608 	sub.w	r6, r6, r8
 801b3dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b3e0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b3e4:	440e      	add	r6, r1
 801b3e6:	e79a      	b.n	801b31e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801b3e8:	4b03      	ldr	r3, [pc, #12]	; (801b3f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b3ea:	6818      	ldr	r0, [r3, #0]
 801b3ec:	6803      	ldr	r3, [r0, #0]
 801b3ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b3f0:	4798      	blx	r3
 801b3f2:	b007      	add	sp, #28
 801b3f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3f8:	240016b0 	.word	0x240016b0
 801b3fc:	240016aa 	.word	0x240016aa

0801b400 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801b400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b404:	b089      	sub	sp, #36	; 0x24
 801b406:	4682      	mov	sl, r0
 801b408:	460f      	mov	r7, r1
 801b40a:	4691      	mov	r9, r2
 801b40c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801b410:	4698      	mov	r8, r3
 801b412:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b414:	2e00      	cmp	r6, #0
 801b416:	d03d      	beq.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b418:	4608      	mov	r0, r1
 801b41a:	f7fa fe53 	bl	80160c4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b41e:	4605      	mov	r5, r0
 801b420:	4638      	mov	r0, r7
 801b422:	f7fa fe83 	bl	801612c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b426:	f8ad 000e 	strh.w	r0, [sp, #14]
 801b42a:	4638      	mov	r0, r7
 801b42c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801b430:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b434:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b438:	f7fa ff30 	bl	801629c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b43c:	4605      	mov	r5, r0
 801b43e:	4638      	mov	r0, r7
 801b440:	f7fa ff5c 	bl	80162fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801b444:	4681      	mov	r9, r0
 801b446:	4638      	mov	r0, r7
 801b448:	f7fa ffac 	bl	80163a4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b44c:	280b      	cmp	r0, #11
 801b44e:	d821      	bhi.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b450:	e8df f000 	tbb	[pc, r0]
 801b454:	2006aebe 	.word	0x2006aebe
 801b458:	20202020 	.word	0x20202020
 801b45c:	b5202020 	.word	0xb5202020
 801b460:	4bb0      	ldr	r3, [pc, #704]	; (801b724 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801b462:	6818      	ldr	r0, [r3, #0]
 801b464:	6803      	ldr	r3, [r0, #0]
 801b466:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b468:	4798      	blx	r3
 801b46a:	2eff      	cmp	r6, #255	; 0xff
 801b46c:	d101      	bne.n	801b472 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801b46e:	0683      	lsls	r3, r0, #26
 801b470:	d506      	bpl.n	801b480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801b472:	4633      	mov	r3, r6
 801b474:	4622      	mov	r2, r4
 801b476:	a902      	add	r1, sp, #8
 801b478:	4628      	mov	r0, r5
 801b47a:	f7ff f909 	bl	801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b47e:	e009      	b.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b480:	4638      	mov	r0, r7
 801b482:	f7fa fed3 	bl	801622c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b486:	b940      	cbnz	r0, 801b49a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801b488:	4623      	mov	r3, r4
 801b48a:	aa02      	add	r2, sp, #8
 801b48c:	4629      	mov	r1, r5
 801b48e:	4650      	mov	r0, sl
 801b490:	f7ff f9e4 	bl	801a85c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b494:	b009      	add	sp, #36	; 0x24
 801b496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b49a:	f10d 0818 	add.w	r8, sp, #24
 801b49e:	4639      	mov	r1, r7
 801b4a0:	af04      	add	r7, sp, #16
 801b4a2:	4640      	mov	r0, r8
 801b4a4:	f7fa fe76 	bl	8016194 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b4a8:	e898 0003 	ldmia.w	r8, {r0, r1}
 801b4ac:	e887 0003 	stmia.w	r7, {r0, r1}
 801b4b0:	4638      	mov	r0, r7
 801b4b2:	4621      	mov	r1, r4
 801b4b4:	f7f4 ff5e 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801b4b8:	4638      	mov	r0, r7
 801b4ba:	f7f4 ff9e 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801b4be:	2800      	cmp	r0, #0
 801b4c0:	d1d7      	bne.n	801b472 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801b4c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b4c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b4ca:	4293      	cmp	r3, r2
 801b4cc:	dd12      	ble.n	801b4f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801b4ce:	1a9b      	subs	r3, r3, r2
 801b4d0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b4d4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b4d8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b4dc:	4628      	mov	r0, r5
 801b4de:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b4e2:	4642      	mov	r2, r8
 801b4e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b4e8:	a902      	add	r1, sp, #8
 801b4ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b4ee:	4633      	mov	r3, r6
 801b4f0:	f7ff f8ce 	bl	801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b4f4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b4f8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b4fc:	4293      	cmp	r3, r2
 801b4fe:	dd12      	ble.n	801b526 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801b500:	1a9b      	subs	r3, r3, r2
 801b502:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b506:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b50a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b50e:	4642      	mov	r2, r8
 801b510:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b514:	4628      	mov	r0, r5
 801b516:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b51a:	23ff      	movs	r3, #255	; 0xff
 801b51c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b520:	a902      	add	r1, sp, #8
 801b522:	f7ff f8b5 	bl	801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b526:	463b      	mov	r3, r7
 801b528:	aa02      	add	r2, sp, #8
 801b52a:	4629      	mov	r1, r5
 801b52c:	4650      	mov	r0, sl
 801b52e:	f7ff f995 	bl	801a85c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b532:	88a2      	ldrh	r2, [r4, #4]
 801b534:	8823      	ldrh	r3, [r4, #0]
 801b536:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b53a:	4413      	add	r3, r2
 801b53c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b540:	440a      	add	r2, r1
 801b542:	b29b      	uxth	r3, r3
 801b544:	b292      	uxth	r2, r2
 801b546:	b218      	sxth	r0, r3
 801b548:	b211      	sxth	r1, r2
 801b54a:	4288      	cmp	r0, r1
 801b54c:	dd12      	ble.n	801b574 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801b54e:	1a9b      	subs	r3, r3, r2
 801b550:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b554:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801b558:	4642      	mov	r2, r8
 801b55a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b55e:	a902      	add	r1, sp, #8
 801b560:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b564:	23ff      	movs	r3, #255	; 0xff
 801b566:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b56a:	4628      	mov	r0, r5
 801b56c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801b570:	f7ff f88e 	bl	801a690 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b574:	88e2      	ldrh	r2, [r4, #6]
 801b576:	8863      	ldrh	r3, [r4, #2]
 801b578:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b57c:	4413      	add	r3, r2
 801b57e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b582:	440a      	add	r2, r1
 801b584:	b29b      	uxth	r3, r3
 801b586:	b292      	uxth	r2, r2
 801b588:	b218      	sxth	r0, r3
 801b58a:	b211      	sxth	r1, r2
 801b58c:	4288      	cmp	r0, r1
 801b58e:	dd81      	ble.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b590:	1a9b      	subs	r3, r3, r2
 801b592:	f9b4 6000 	ldrsh.w	r6, [r4]
 801b596:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b59a:	4642      	mov	r2, r8
 801b59c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b5a0:	23ff      	movs	r3, #255	; 0xff
 801b5a2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801b5a6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b5aa:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b5ae:	e762      	b.n	801b476 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801b5b0:	4633      	mov	r3, r6
 801b5b2:	4622      	mov	r2, r4
 801b5b4:	a902      	add	r1, sp, #8
 801b5b6:	4628      	mov	r0, r5
 801b5b8:	f7ff f9c0 	bl	801a93c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801b5bc:	e76a      	b.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b5be:	e9cd 4600 	strd	r4, r6, [sp]
 801b5c2:	ab02      	add	r3, sp, #8
 801b5c4:	464a      	mov	r2, r9
 801b5c6:	4629      	mov	r1, r5
 801b5c8:	4650      	mov	r0, sl
 801b5ca:	f7ff fd97 	bl	801b0fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801b5ce:	e761      	b.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b5d0:	4638      	mov	r0, r7
 801b5d2:	f7fa fe2b 	bl	801622c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b5d6:	b950      	cbnz	r0, 801b5ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801b5d8:	f8da 3000 	ldr.w	r3, [sl]
 801b5dc:	aa02      	add	r2, sp, #8
 801b5de:	4629      	mov	r1, r5
 801b5e0:	e9cd 6000 	strd	r6, r0, [sp]
 801b5e4:	4650      	mov	r0, sl
 801b5e6:	68de      	ldr	r6, [r3, #12]
 801b5e8:	4623      	mov	r3, r4
 801b5ea:	47b0      	blx	r6
 801b5ec:	e752      	b.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b5ee:	f10d 0818 	add.w	r8, sp, #24
 801b5f2:	4639      	mov	r1, r7
 801b5f4:	af04      	add	r7, sp, #16
 801b5f6:	4640      	mov	r0, r8
 801b5f8:	f7fa fdcc 	bl	8016194 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b5fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 801b600:	e887 0003 	stmia.w	r7, {r0, r1}
 801b604:	4638      	mov	r0, r7
 801b606:	4621      	mov	r1, r4
 801b608:	f7f4 feb4 	bl	8010374 <_ZN8touchgfx4RectaNERKS0_>
 801b60c:	4638      	mov	r0, r7
 801b60e:	f7f4 fef4 	bl	80103fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801b612:	b138      	cbz	r0, 801b624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801b614:	4623      	mov	r3, r4
 801b616:	9600      	str	r6, [sp, #0]
 801b618:	aa02      	add	r2, sp, #8
 801b61a:	4649      	mov	r1, r9
 801b61c:	4628      	mov	r0, r5
 801b61e:	f7ff fdc9 	bl	801b1b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b622:	e737      	b.n	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b624:	f8da 3000 	ldr.w	r3, [sl]
 801b628:	aa02      	add	r2, sp, #8
 801b62a:	4629      	mov	r1, r5
 801b62c:	e9cd 6000 	strd	r6, r0, [sp]
 801b630:	4650      	mov	r0, sl
 801b632:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801b636:	463b      	mov	r3, r7
 801b638:	47d8      	blx	fp
 801b63a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b63e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b642:	4293      	cmp	r3, r2
 801b644:	dd13      	ble.n	801b66e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801b646:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b64a:	1a9b      	subs	r3, r3, r2
 801b64c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b650:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b654:	4628      	mov	r0, r5
 801b656:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b65a:	aa02      	add	r2, sp, #8
 801b65c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b660:	4649      	mov	r1, r9
 801b662:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b666:	4643      	mov	r3, r8
 801b668:	9600      	str	r6, [sp, #0]
 801b66a:	f7ff fda3 	bl	801b1b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b66e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b672:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b676:	4293      	cmp	r3, r2
 801b678:	dd13      	ble.n	801b6a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801b67a:	1a9b      	subs	r3, r3, r2
 801b67c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b680:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b684:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b688:	aa02      	add	r2, sp, #8
 801b68a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b68e:	4628      	mov	r0, r5
 801b690:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b694:	4643      	mov	r3, r8
 801b696:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b69a:	4649      	mov	r1, r9
 801b69c:	9600      	str	r6, [sp, #0]
 801b69e:	f7ff fd89 	bl	801b1b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b6a2:	88a2      	ldrh	r2, [r4, #4]
 801b6a4:	8823      	ldrh	r3, [r4, #0]
 801b6a6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b6aa:	4413      	add	r3, r2
 801b6ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b6b0:	440a      	add	r2, r1
 801b6b2:	b29b      	uxth	r3, r3
 801b6b4:	b292      	uxth	r2, r2
 801b6b6:	b218      	sxth	r0, r3
 801b6b8:	b211      	sxth	r1, r2
 801b6ba:	4288      	cmp	r0, r1
 801b6bc:	dd13      	ble.n	801b6e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801b6be:	1a9b      	subs	r3, r3, r2
 801b6c0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b6c4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801b6c8:	aa02      	add	r2, sp, #8
 801b6ca:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b6ce:	4649      	mov	r1, r9
 801b6d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b6d4:	4643      	mov	r3, r8
 801b6d6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b6da:	4628      	mov	r0, r5
 801b6dc:	9600      	str	r6, [sp, #0]
 801b6de:	f8ad 701a 	strh.w	r7, [sp, #26]
 801b6e2:	f7ff fd67 	bl	801b1b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b6e6:	88e2      	ldrh	r2, [r4, #6]
 801b6e8:	8863      	ldrh	r3, [r4, #2]
 801b6ea:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b6ee:	4413      	add	r3, r2
 801b6f0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b6f4:	440a      	add	r2, r1
 801b6f6:	b29b      	uxth	r3, r3
 801b6f8:	b292      	uxth	r2, r2
 801b6fa:	b218      	sxth	r0, r3
 801b6fc:	b211      	sxth	r1, r2
 801b6fe:	4288      	cmp	r0, r1
 801b700:	f77f aec8 	ble.w	801b494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b704:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b708:	1a9b      	subs	r3, r3, r2
 801b70a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b70e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b712:	4643      	mov	r3, r8
 801b714:	f8ad 7018 	strh.w	r7, [sp, #24]
 801b718:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b71c:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b720:	9600      	str	r6, [sp, #0]
 801b722:	e779      	b.n	801b618 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801b724:	240016b0 	.word	0x240016b0

0801b728 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801b728:	b180      	cbz	r0, 801b74c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801b72a:	2903      	cmp	r1, #3
 801b72c:	d81c      	bhi.n	801b768 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b72e:	e8df f001 	tbb	[pc, r1]
 801b732:	1d02      	.short	0x1d02
 801b734:	1f08      	.short	0x1f08
 801b736:	4b10      	ldr	r3, [pc, #64]	; (801b778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b738:	8818      	ldrh	r0, [r3, #0]
 801b73a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b73e:	4240      	negs	r0, r0
 801b740:	4770      	bx	lr
 801b742:	4b0d      	ldr	r3, [pc, #52]	; (801b778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b744:	8818      	ldrh	r0, [r3, #0]
 801b746:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b74a:	4770      	bx	lr
 801b74c:	2903      	cmp	r1, #3
 801b74e:	d80b      	bhi.n	801b768 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b750:	a301      	add	r3, pc, #4	; (adr r3, 801b758 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801b752:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b756:	bf00      	nop
 801b758:	0801b76d 	.word	0x0801b76d
 801b75c:	0801b743 	.word	0x0801b743
 801b760:	0801b771 	.word	0x0801b771
 801b764:	0801b737 	.word	0x0801b737
 801b768:	2000      	movs	r0, #0
 801b76a:	4770      	bx	lr
 801b76c:	2001      	movs	r0, #1
 801b76e:	4770      	bx	lr
 801b770:	f04f 30ff 	mov.w	r0, #4294967295
 801b774:	4770      	bx	lr
 801b776:	bf00      	nop
 801b778:	240016aa 	.word	0x240016aa

0801b77c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801b77c:	b180      	cbz	r0, 801b7a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801b77e:	2903      	cmp	r1, #3
 801b780:	d81c      	bhi.n	801b7bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b782:	e8df f001 	tbb	[pc, r1]
 801b786:	021d      	.short	0x021d
 801b788:	071f      	.short	0x071f
 801b78a:	4b10      	ldr	r3, [pc, #64]	; (801b7cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b78c:	8818      	ldrh	r0, [r3, #0]
 801b78e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b792:	4770      	bx	lr
 801b794:	4b0d      	ldr	r3, [pc, #52]	; (801b7cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b796:	8818      	ldrh	r0, [r3, #0]
 801b798:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b79c:	4240      	negs	r0, r0
 801b79e:	4770      	bx	lr
 801b7a0:	2903      	cmp	r1, #3
 801b7a2:	d80b      	bhi.n	801b7bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b7a4:	a301      	add	r3, pc, #4	; (adr r3, 801b7ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801b7a6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b7aa:	bf00      	nop
 801b7ac:	0801b78b 	.word	0x0801b78b
 801b7b0:	0801b7c5 	.word	0x0801b7c5
 801b7b4:	0801b795 	.word	0x0801b795
 801b7b8:	0801b7c1 	.word	0x0801b7c1
 801b7bc:	2000      	movs	r0, #0
 801b7be:	4770      	bx	lr
 801b7c0:	2001      	movs	r0, #1
 801b7c2:	4770      	bx	lr
 801b7c4:	f04f 30ff 	mov.w	r0, #4294967295
 801b7c8:	4770      	bx	lr
 801b7ca:	bf00      	nop
 801b7cc:	240016aa 	.word	0x240016aa

0801b7d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801b7d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7d4:	b099      	sub	sp, #100	; 0x64
 801b7d6:	910b      	str	r1, [sp, #44]	; 0x2c
 801b7d8:	a914      	add	r1, sp, #80	; 0x50
 801b7da:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801b7de:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801b7e2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801b7e6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801b7ea:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801b7ee:	e881 000c 	stmia.w	r1, {r2, r3}
 801b7f2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801b7f6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801b7fa:	9309      	str	r3, [sp, #36]	; 0x24
 801b7fc:	f891 900d 	ldrb.w	r9, [r1, #13]
 801b800:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801b804:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801b808:	9310      	str	r3, [sp, #64]	; 0x40
 801b80a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801b80e:	930c      	str	r3, [sp, #48]	; 0x30
 801b810:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801b814:	798f      	ldrb	r7, [r1, #6]
 801b816:	431f      	orrs	r7, r3
 801b818:	f000 8195 	beq.w	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b81c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801b820:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801b824:	f891 9007 	ldrb.w	r9, [r1, #7]
 801b828:	ea59 0903 	orrs.w	r9, r9, r3
 801b82c:	f000 818b 	beq.w	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b830:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801b834:	b29b      	uxth	r3, r3
 801b836:	2d00      	cmp	r5, #0
 801b838:	f000 812e 	beq.w	801ba98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801b83c:	1aed      	subs	r5, r5, r3
 801b83e:	b2ad      	uxth	r5, r5
 801b840:	042b      	lsls	r3, r5, #16
 801b842:	d502      	bpl.n	801b84a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801b844:	1b64      	subs	r4, r4, r5
 801b846:	2500      	movs	r5, #0
 801b848:	b224      	sxth	r4, r4
 801b84a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801b84e:	a814      	add	r0, sp, #80	; 0x50
 801b850:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801b854:	428c      	cmp	r4, r1
 801b856:	b28b      	uxth	r3, r1
 801b858:	bfbf      	itttt	lt
 801b85a:	18ed      	addlt	r5, r5, r3
 801b85c:	1b2c      	sublt	r4, r5, r4
 801b85e:	b2a5      	uxthlt	r5, r4
 801b860:	460c      	movlt	r4, r1
 801b862:	8891      	ldrh	r1, [r2, #4]
 801b864:	440b      	add	r3, r1
 801b866:	4621      	mov	r1, r4
 801b868:	b21b      	sxth	r3, r3
 801b86a:	930f      	str	r3, [sp, #60]	; 0x3c
 801b86c:	88d3      	ldrh	r3, [r2, #6]
 801b86e:	8852      	ldrh	r2, [r2, #2]
 801b870:	4413      	add	r3, r2
 801b872:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b874:	b21b      	sxth	r3, r3
 801b876:	930d      	str	r3, [sp, #52]	; 0x34
 801b878:	4bbd      	ldr	r3, [pc, #756]	; (801bb70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801b87a:	f893 b000 	ldrb.w	fp, [r3]
 801b87e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801b882:	f1dc 0300 	rsbs	r3, ip, #0
 801b886:	eb43 030c 	adc.w	r3, r3, ip
 801b88a:	930e      	str	r3, [sp, #56]	; 0x38
 801b88c:	4653      	mov	r3, sl
 801b88e:	f7f7 fc24 	bl	80130da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801b892:	4621      	mov	r1, r4
 801b894:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801b898:	4653      	mov	r3, sl
 801b89a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b89c:	a814      	add	r0, sp, #80	; 0x50
 801b89e:	f7f7 fc39 	bl	8013114 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801b8a2:	a918      	add	r1, sp, #96	; 0x60
 801b8a4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801b8a8:	a817      	add	r0, sp, #92	; 0x5c
 801b8aa:	f7f7 fd5f 	bl	801336c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801b8ae:	f1ba 0f00 	cmp.w	sl, #0
 801b8b2:	f040 80f4 	bne.w	801ba9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801b8b6:	f1bb 0f01 	cmp.w	fp, #1
 801b8ba:	f040 80f8 	bne.w	801baae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801b8be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b8c0:	2b00      	cmp	r3, #0
 801b8c2:	f040 8145 	bne.w	801bb50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801b8c6:	b2ba      	uxth	r2, r7
 801b8c8:	b905      	cbnz	r5, 801b8cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801b8ca:	b16e      	cbz	r6, 801b8e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801b8cc:	fb06 5302 	mla	r3, r6, r2, r5
 801b8d0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801b8d2:	4631      	mov	r1, r6
 801b8d4:	fb08 f303 	mul.w	r3, r8, r3
 801b8d8:	f003 0607 	and.w	r6, r3, #7
 801b8dc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801b8e0:	9328      	str	r3, [sp, #160]	; 0xa0
 801b8e2:	eba9 0301 	sub.w	r3, r9, r1
 801b8e6:	930a      	str	r3, [sp, #40]	; 0x28
 801b8e8:	4651      	mov	r1, sl
 801b8ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b8ec:	f7ff ff1c 	bl	801b728 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801b8f0:	4681      	mov	r9, r0
 801b8f2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b8f4:	f7ff ff42 	bl	801b77c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801b8f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b8fa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b8fc:	4683      	mov	fp, r0
 801b8fe:	eba3 0a01 	sub.w	sl, r3, r1
 801b902:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b904:	459a      	cmp	sl, r3
 801b906:	bfa8      	it	ge
 801b908:	469a      	movge	sl, r3
 801b90a:	f1ba 0f00 	cmp.w	sl, #0
 801b90e:	f340 811a 	ble.w	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b912:	1b64      	subs	r4, r4, r5
 801b914:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b916:	1b1c      	subs	r4, r3, r4
 801b918:	42bc      	cmp	r4, r7
 801b91a:	bfd4      	ite	le
 801b91c:	ebc5 0504 	rsble	r5, r5, r4
 801b920:	ebc5 0507 	rsbgt	r5, r5, r7
 801b924:	2d00      	cmp	r5, #0
 801b926:	f340 810e 	ble.w	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b92a:	1b52      	subs	r2, r2, r5
 801b92c:	fb08 f302 	mul.w	r3, r8, r2
 801b930:	930f      	str	r3, [sp, #60]	; 0x3c
 801b932:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b934:	2b00      	cmp	r3, #0
 801b936:	f040 8116 	bne.w	801bb66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801b93a:	4b8e      	ldr	r3, [pc, #568]	; (801bb74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801b93c:	6818      	ldr	r0, [r3, #0]
 801b93e:	6803      	ldr	r3, [r0, #0]
 801b940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b942:	4798      	blx	r3
 801b944:	2301      	movs	r3, #1
 801b946:	4a8c      	ldr	r2, [pc, #560]	; (801bb78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801b948:	fa03 f308 	lsl.w	r3, r3, r8
 801b94c:	8811      	ldrh	r1, [r2, #0]
 801b94e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801b952:	3b01      	subs	r3, #1
 801b954:	b2db      	uxtb	r3, r3
 801b956:	930e      	str	r3, [sp, #56]	; 0x38
 801b958:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801b95c:	fb01 2303 	mla	r3, r1, r3, r2
 801b960:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b964:	930a      	str	r3, [sp, #40]	; 0x28
 801b966:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b968:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b96c:	9313      	str	r3, [sp, #76]	; 0x4c
 801b96e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b970:	0a19      	lsrs	r1, r3, #8
 801b972:	b2cb      	uxtb	r3, r1
 801b974:	9312      	str	r3, [sp, #72]	; 0x48
 801b976:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b978:	b2db      	uxtb	r3, r3
 801b97a:	9311      	str	r3, [sp, #68]	; 0x44
 801b97c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b97e:	095a      	lsrs	r2, r3, #5
 801b980:	4b7e      	ldr	r3, [pc, #504]	; (801bb7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801b982:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b986:	400b      	ands	r3, r1
 801b988:	4313      	orrs	r3, r2
 801b98a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b98c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b990:	4313      	orrs	r3, r2
 801b992:	b29b      	uxth	r3, r3
 801b994:	9310      	str	r3, [sp, #64]	; 0x40
 801b996:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b998:	781a      	ldrb	r2, [r3, #0]
 801b99a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801b99e:	fb05 b919 	mls	r9, r5, r9, fp
 801b9a2:	4132      	asrs	r2, r6
 801b9a4:	fb03 fb05 	mul.w	fp, r3, r5
 801b9a8:	930d      	str	r3, [sp, #52]	; 0x34
 801b9aa:	b2d2      	uxtb	r2, r2
 801b9ac:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801b9b0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801b9b4:	f0c0 80f5 	bcc.w	801bba2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801b9b8:	46ae      	mov	lr, r5
 801b9ba:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801b9be:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801b9c2:	f0c0 80dd 	bcc.w	801bb80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801b9c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b9c8:	4013      	ands	r3, r2
 801b9ca:	d055      	beq.n	801ba78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801b9cc:	20ff      	movs	r0, #255	; 0xff
 801b9ce:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b9d0:	fb90 f1f1 	sdiv	r1, r0, r1
 801b9d4:	434b      	muls	r3, r1
 801b9d6:	2bfe      	cmp	r3, #254	; 0xfe
 801b9d8:	dd03      	ble.n	801b9e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801b9da:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b9dc:	4281      	cmp	r1, r0
 801b9de:	f000 80c4 	beq.w	801bb6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801b9e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b9e4:	f8bc 4000 	ldrh.w	r4, [ip]
 801b9e8:	fb11 f303 	smulbb	r3, r1, r3
 801b9ec:	1220      	asrs	r0, r4, #8
 801b9ee:	b29b      	uxth	r3, r3
 801b9f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b9f4:	1c59      	adds	r1, r3, #1
 801b9f6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801b9fa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b9fe:	10e1      	asrs	r1, r4, #3
 801ba00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ba04:	00e4      	lsls	r4, r4, #3
 801ba06:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ba0a:	b29f      	uxth	r7, r3
 801ba0c:	43db      	mvns	r3, r3
 801ba0e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ba12:	b2db      	uxtb	r3, r3
 801ba14:	b2e4      	uxtb	r4, r4
 801ba16:	9309      	str	r3, [sp, #36]	; 0x24
 801ba18:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ba1a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ba1e:	fb13 f907 	smulbb	r9, r3, r7
 801ba22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba24:	fb00 9003 	mla	r0, r0, r3, r9
 801ba28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ba2a:	fb13 f907 	smulbb	r9, r3, r7
 801ba2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba30:	b280      	uxth	r0, r0
 801ba32:	fb01 9103 	mla	r1, r1, r3, r9
 801ba36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ba38:	fb13 f707 	smulbb	r7, r3, r7
 801ba3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba3e:	b289      	uxth	r1, r1
 801ba40:	fb04 7403 	mla	r4, r4, r3, r7
 801ba44:	1c43      	adds	r3, r0, #1
 801ba46:	b2a4      	uxth	r4, r4
 801ba48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ba4c:	f104 0901 	add.w	r9, r4, #1
 801ba50:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ba54:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ba58:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ba5c:	ea49 0000 	orr.w	r0, r9, r0
 801ba60:	f101 0901 	add.w	r9, r1, #1
 801ba64:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ba68:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ba6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ba70:	ea40 0009 	orr.w	r0, r0, r9
 801ba74:	f8ac 0000 	strh.w	r0, [ip]
 801ba78:	4446      	add	r6, r8
 801ba7a:	b2b6      	uxth	r6, r6
 801ba7c:	2e07      	cmp	r6, #7
 801ba7e:	bf89      	itett	hi
 801ba80:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ba82:	fa42 f208 	asrls.w	r2, r2, r8
 801ba86:	2600      	movhi	r6, #0
 801ba88:	785a      	ldrbhi	r2, [r3, #1]
 801ba8a:	bf8a      	itet	hi
 801ba8c:	3301      	addhi	r3, #1
 801ba8e:	b2d2      	uxtbls	r2, r2
 801ba90:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ba92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba94:	449c      	add	ip, r3
 801ba96:	e792      	b.n	801b9be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ba98:	441c      	add	r4, r3
 801ba9a:	b224      	sxth	r4, r4
 801ba9c:	e6d5      	b.n	801b84a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ba9e:	f1ba 0f01 	cmp.w	sl, #1
 801baa2:	f47f af0c 	bne.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801baa6:	f1bb 0f01 	cmp.w	fp, #1
 801baaa:	f47f af08 	bne.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801baae:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801bb74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801bab2:	f8db 0000 	ldr.w	r0, [fp]
 801bab6:	6803      	ldr	r3, [r0, #0]
 801bab8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801baba:	4798      	blx	r3
 801babc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801bac0:	465a      	mov	r2, fp
 801bac2:	d006      	beq.n	801bad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801bac4:	f1b8 0f04 	cmp.w	r8, #4
 801bac8:	d140      	bne.n	801bb4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801baca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bacc:	3300      	adds	r3, #0
 801bace:	bf18      	it	ne
 801bad0:	2301      	movne	r3, #1
 801bad2:	0580      	lsls	r0, r0, #22
 801bad4:	d56e      	bpl.n	801bbb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801bad6:	f1b8 0f08 	cmp.w	r8, #8
 801bada:	d16b      	bne.n	801bbb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801badc:	2b00      	cmp	r3, #0
 801bade:	bf0c      	ite	eq
 801bae0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801bae4:	f44f 7180 	movne.w	r1, #256	; 0x100
 801bae8:	2d00      	cmp	r5, #0
 801baea:	f47f aee8 	bne.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801baee:	2e00      	cmp	r6, #0
 801baf0:	f47f aee5 	bne.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801baf4:	19e3      	adds	r3, r4, r7
 801baf6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801baf8:	4283      	cmp	r3, r0
 801bafa:	f73f aee0 	bgt.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bafe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb00:	980d      	ldr	r0, [sp, #52]	; 0x34
 801bb02:	444b      	add	r3, r9
 801bb04:	4283      	cmp	r3, r0
 801bb06:	f73f aeda 	bgt.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bb0a:	b2bf      	uxth	r7, r7
 801bb0c:	f1b8 0f08 	cmp.w	r8, #8
 801bb10:	6810      	ldr	r0, [r2, #0]
 801bb12:	f04f 0500 	mov.w	r5, #0
 801bb16:	bf18      	it	ne
 801bb18:	3701      	addne	r7, #1
 801bb1a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801bb1e:	6804      	ldr	r4, [r0, #0]
 801bb20:	bf18      	it	ne
 801bb22:	f027 0701 	bicne.w	r7, r7, #1
 801bb26:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801bb2a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bb2e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bb30:	bf18      	it	ne
 801bb32:	b2bf      	uxthne	r7, r7
 801bb34:	9104      	str	r1, [sp, #16]
 801bb36:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801bb38:	e9cd 7900 	strd	r7, r9, [sp]
 801bb3c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801bb40:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bb42:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801bb44:	47a0      	blx	r4
 801bb46:	b019      	add	sp, #100	; 0x64
 801bb48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb4c:	2300      	movs	r3, #0
 801bb4e:	e7c0      	b.n	801bad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801bb50:	2208      	movs	r2, #8
 801bb52:	fb92 f3f8 	sdiv	r3, r2, r8
 801bb56:	1e5a      	subs	r2, r3, #1
 801bb58:	443a      	add	r2, r7
 801bb5a:	fb92 f2f3 	sdiv	r2, r2, r3
 801bb5e:	fb12 f203 	smulbb	r2, r2, r3
 801bb62:	b292      	uxth	r2, r2
 801bb64:	e6b0      	b.n	801b8c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801bb66:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bb68:	e6ec      	b.n	801b944 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801bb6a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801bb6c:	e782      	b.n	801ba74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801bb6e:	bf00      	nop
 801bb70:	240016a8 	.word	0x240016a8
 801bb74:	240016b0 	.word	0x240016b0
 801bb78:	240016aa 	.word	0x240016aa
 801bb7c:	00fff800 	.word	0x00fff800
 801bb80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb82:	b153      	cbz	r3, 801bb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801bb84:	441e      	add	r6, r3
 801bb86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb88:	b2b6      	uxth	r6, r6
 801bb8a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801bb8e:	f006 0607 	and.w	r6, r6, #7
 801bb92:	781a      	ldrb	r2, [r3, #0]
 801bb94:	9328      	str	r3, [sp, #160]	; 0xa0
 801bb96:	4132      	asrs	r2, r6
 801bb98:	b2d2      	uxtb	r2, r2
 801bb9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bb9c:	445b      	add	r3, fp
 801bb9e:	930a      	str	r3, [sp, #40]	; 0x28
 801bba0:	e706      	b.n	801b9b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801bba2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bba4:	2b00      	cmp	r3, #0
 801bba6:	d1ce      	bne.n	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bba8:	4b05      	ldr	r3, [pc, #20]	; (801bbc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801bbaa:	6818      	ldr	r0, [r3, #0]
 801bbac:	6803      	ldr	r3, [r0, #0]
 801bbae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bbb0:	4798      	blx	r3
 801bbb2:	e7c8      	b.n	801bb46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bbb4:	2b00      	cmp	r3, #0
 801bbb6:	f43f ae82 	beq.w	801b8be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bbba:	f44f 7180 	mov.w	r1, #256	; 0x100
 801bbbe:	e793      	b.n	801bae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801bbc0:	240016b0 	.word	0x240016b0

0801bbc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801bbc4:	b538      	push	{r3, r4, r5, lr}
 801bbc6:	4c15      	ldr	r4, [pc, #84]	; (801bc1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801bbc8:	4605      	mov	r5, r0
 801bbca:	7823      	ldrb	r3, [r4, #0]
 801bbcc:	f3bf 8f5b 	dmb	ish
 801bbd0:	07da      	lsls	r2, r3, #31
 801bbd2:	d40b      	bmi.n	801bbec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801bbd4:	4620      	mov	r0, r4
 801bbd6:	f007 febe 	bl	8023956 <__cxa_guard_acquire>
 801bbda:	b138      	cbz	r0, 801bbec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801bbdc:	4620      	mov	r0, r4
 801bbde:	f007 fec6 	bl	802396e <__cxa_guard_release>
 801bbe2:	4a0f      	ldr	r2, [pc, #60]	; (801bc20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801bbe4:	490f      	ldr	r1, [pc, #60]	; (801bc24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801bbe6:	4810      	ldr	r0, [pc, #64]	; (801bc28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801bbe8:	f007 feae 	bl	8023948 <__aeabi_atexit>
 801bbec:	4c0f      	ldr	r4, [pc, #60]	; (801bc2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801bbee:	7823      	ldrb	r3, [r4, #0]
 801bbf0:	f3bf 8f5b 	dmb	ish
 801bbf4:	07db      	lsls	r3, r3, #31
 801bbf6:	d40b      	bmi.n	801bc10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801bbf8:	4620      	mov	r0, r4
 801bbfa:	f007 feac 	bl	8023956 <__cxa_guard_acquire>
 801bbfe:	b138      	cbz	r0, 801bc10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801bc00:	4620      	mov	r0, r4
 801bc02:	f007 feb4 	bl	802396e <__cxa_guard_release>
 801bc06:	4a06      	ldr	r2, [pc, #24]	; (801bc20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801bc08:	4909      	ldr	r1, [pc, #36]	; (801bc30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801bc0a:	480a      	ldr	r0, [pc, #40]	; (801bc34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801bc0c:	f007 fe9c 	bl	8023948 <__aeabi_atexit>
 801bc10:	4b05      	ldr	r3, [pc, #20]	; (801bc28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801bc12:	612b      	str	r3, [r5, #16]
 801bc14:	4b07      	ldr	r3, [pc, #28]	; (801bc34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801bc16:	616b      	str	r3, [r5, #20]
 801bc18:	bd38      	pop	{r3, r4, r5, pc}
 801bc1a:	bf00      	nop
 801bc1c:	24001788 	.word	0x24001788
 801bc20:	24000000 	.word	0x24000000
 801bc24:	080189b9 	.word	0x080189b9
 801bc28:	24000064 	.word	0x24000064
 801bc2c:	2400178c 	.word	0x2400178c
 801bc30:	080189b7 	.word	0x080189b7
 801bc34:	24000068 	.word	0x24000068

0801bc38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801bc38:	b538      	push	{r3, r4, r5, lr}
 801bc3a:	4c15      	ldr	r4, [pc, #84]	; (801bc90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801bc3c:	4605      	mov	r5, r0
 801bc3e:	7823      	ldrb	r3, [r4, #0]
 801bc40:	f3bf 8f5b 	dmb	ish
 801bc44:	07da      	lsls	r2, r3, #31
 801bc46:	d40b      	bmi.n	801bc60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801bc48:	4620      	mov	r0, r4
 801bc4a:	f007 fe84 	bl	8023956 <__cxa_guard_acquire>
 801bc4e:	b138      	cbz	r0, 801bc60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801bc50:	4620      	mov	r0, r4
 801bc52:	f007 fe8c 	bl	802396e <__cxa_guard_release>
 801bc56:	4a0f      	ldr	r2, [pc, #60]	; (801bc94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801bc58:	490f      	ldr	r1, [pc, #60]	; (801bc98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801bc5a:	4810      	ldr	r0, [pc, #64]	; (801bc9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801bc5c:	f007 fe74 	bl	8023948 <__aeabi_atexit>
 801bc60:	4c0f      	ldr	r4, [pc, #60]	; (801bca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801bc62:	7823      	ldrb	r3, [r4, #0]
 801bc64:	f3bf 8f5b 	dmb	ish
 801bc68:	07db      	lsls	r3, r3, #31
 801bc6a:	d40b      	bmi.n	801bc84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801bc6c:	4620      	mov	r0, r4
 801bc6e:	f007 fe72 	bl	8023956 <__cxa_guard_acquire>
 801bc72:	b138      	cbz	r0, 801bc84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801bc74:	4620      	mov	r0, r4
 801bc76:	f007 fe7a 	bl	802396e <__cxa_guard_release>
 801bc7a:	4a06      	ldr	r2, [pc, #24]	; (801bc94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801bc7c:	4909      	ldr	r1, [pc, #36]	; (801bca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801bc7e:	480a      	ldr	r0, [pc, #40]	; (801bca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bc80:	f007 fe62 	bl	8023948 <__aeabi_atexit>
 801bc84:	4b05      	ldr	r3, [pc, #20]	; (801bc9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801bc86:	60ab      	str	r3, [r5, #8]
 801bc88:	4b07      	ldr	r3, [pc, #28]	; (801bca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bc8a:	60eb      	str	r3, [r5, #12]
 801bc8c:	bd38      	pop	{r3, r4, r5, pc}
 801bc8e:	bf00      	nop
 801bc90:	24001760 	.word	0x24001760
 801bc94:	24000000 	.word	0x24000000
 801bc98:	080189bd 	.word	0x080189bd
 801bc9c:	2400003c 	.word	0x2400003c
 801bca0:	24001764 	.word	0x24001764
 801bca4:	080189bb 	.word	0x080189bb
 801bca8:	24000040 	.word	0x24000040

0801bcac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801bcac:	b510      	push	{r4, lr}
 801bcae:	4604      	mov	r4, r0
 801bcb0:	f7ff ff88 	bl	801bbc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801bcb4:	4620      	mov	r0, r4
 801bcb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bcba:	f7ff bfbd 	b.w	801bc38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801bcc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801bcc0:	b538      	push	{r3, r4, r5, lr}
 801bcc2:	4c15      	ldr	r4, [pc, #84]	; (801bd18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801bcc4:	4605      	mov	r5, r0
 801bcc6:	7823      	ldrb	r3, [r4, #0]
 801bcc8:	f3bf 8f5b 	dmb	ish
 801bccc:	07da      	lsls	r2, r3, #31
 801bcce:	d40b      	bmi.n	801bce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bcd0:	4620      	mov	r0, r4
 801bcd2:	f007 fe40 	bl	8023956 <__cxa_guard_acquire>
 801bcd6:	b138      	cbz	r0, 801bce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bcd8:	4620      	mov	r0, r4
 801bcda:	f007 fe48 	bl	802396e <__cxa_guard_release>
 801bcde:	4a0f      	ldr	r2, [pc, #60]	; (801bd1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bce0:	490f      	ldr	r1, [pc, #60]	; (801bd20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801bce2:	4810      	ldr	r0, [pc, #64]	; (801bd24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bce4:	f007 fe30 	bl	8023948 <__aeabi_atexit>
 801bce8:	4c0f      	ldr	r4, [pc, #60]	; (801bd28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801bcea:	7823      	ldrb	r3, [r4, #0]
 801bcec:	f3bf 8f5b 	dmb	ish
 801bcf0:	07db      	lsls	r3, r3, #31
 801bcf2:	d40b      	bmi.n	801bd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bcf4:	4620      	mov	r0, r4
 801bcf6:	f007 fe2e 	bl	8023956 <__cxa_guard_acquire>
 801bcfa:	b138      	cbz	r0, 801bd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bcfc:	4620      	mov	r0, r4
 801bcfe:	f007 fe36 	bl	802396e <__cxa_guard_release>
 801bd02:	4a06      	ldr	r2, [pc, #24]	; (801bd1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bd04:	4909      	ldr	r1, [pc, #36]	; (801bd2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801bd06:	480a      	ldr	r0, [pc, #40]	; (801bd30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bd08:	f007 fe1e 	bl	8023948 <__aeabi_atexit>
 801bd0c:	4b05      	ldr	r3, [pc, #20]	; (801bd24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bd0e:	622b      	str	r3, [r5, #32]
 801bd10:	4b07      	ldr	r3, [pc, #28]	; (801bd30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bd12:	626b      	str	r3, [r5, #36]	; 0x24
 801bd14:	bd38      	pop	{r3, r4, r5, pc}
 801bd16:	bf00      	nop
 801bd18:	24001790 	.word	0x24001790
 801bd1c:	24000000 	.word	0x24000000
 801bd20:	080189b1 	.word	0x080189b1
 801bd24:	2400006c 	.word	0x2400006c
 801bd28:	24001794 	.word	0x24001794
 801bd2c:	080189af 	.word	0x080189af
 801bd30:	24000070 	.word	0x24000070

0801bd34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801bd34:	b538      	push	{r3, r4, r5, lr}
 801bd36:	4c15      	ldr	r4, [pc, #84]	; (801bd8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801bd38:	4605      	mov	r5, r0
 801bd3a:	7823      	ldrb	r3, [r4, #0]
 801bd3c:	f3bf 8f5b 	dmb	ish
 801bd40:	07da      	lsls	r2, r3, #31
 801bd42:	d40b      	bmi.n	801bd5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bd44:	4620      	mov	r0, r4
 801bd46:	f007 fe06 	bl	8023956 <__cxa_guard_acquire>
 801bd4a:	b138      	cbz	r0, 801bd5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bd4c:	4620      	mov	r0, r4
 801bd4e:	f007 fe0e 	bl	802396e <__cxa_guard_release>
 801bd52:	4a0f      	ldr	r2, [pc, #60]	; (801bd90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bd54:	490f      	ldr	r1, [pc, #60]	; (801bd94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801bd56:	4810      	ldr	r0, [pc, #64]	; (801bd98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bd58:	f007 fdf6 	bl	8023948 <__aeabi_atexit>
 801bd5c:	4c0f      	ldr	r4, [pc, #60]	; (801bd9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801bd5e:	7823      	ldrb	r3, [r4, #0]
 801bd60:	f3bf 8f5b 	dmb	ish
 801bd64:	07db      	lsls	r3, r3, #31
 801bd66:	d40b      	bmi.n	801bd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bd68:	4620      	mov	r0, r4
 801bd6a:	f007 fdf4 	bl	8023956 <__cxa_guard_acquire>
 801bd6e:	b138      	cbz	r0, 801bd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bd70:	4620      	mov	r0, r4
 801bd72:	f007 fdfc 	bl	802396e <__cxa_guard_release>
 801bd76:	4a06      	ldr	r2, [pc, #24]	; (801bd90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bd78:	4909      	ldr	r1, [pc, #36]	; (801bda0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801bd7a:	480a      	ldr	r0, [pc, #40]	; (801bda4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bd7c:	f007 fde4 	bl	8023948 <__aeabi_atexit>
 801bd80:	4b05      	ldr	r3, [pc, #20]	; (801bd98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bd82:	61ab      	str	r3, [r5, #24]
 801bd84:	4b07      	ldr	r3, [pc, #28]	; (801bda4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bd86:	61eb      	str	r3, [r5, #28]
 801bd88:	bd38      	pop	{r3, r4, r5, pc}
 801bd8a:	bf00      	nop
 801bd8c:	24001768 	.word	0x24001768
 801bd90:	24000000 	.word	0x24000000
 801bd94:	080189b5 	.word	0x080189b5
 801bd98:	24000044 	.word	0x24000044
 801bd9c:	2400176c 	.word	0x2400176c
 801bda0:	080189b3 	.word	0x080189b3
 801bda4:	24000048 	.word	0x24000048

0801bda8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801bda8:	b510      	push	{r4, lr}
 801bdaa:	4604      	mov	r4, r0
 801bdac:	f7ff ff88 	bl	801bcc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801bdb0:	4620      	mov	r0, r4
 801bdb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bdb6:	f7ff bfbd 	b.w	801bd34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801bdbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801bdbc:	b538      	push	{r3, r4, r5, lr}
 801bdbe:	4c15      	ldr	r4, [pc, #84]	; (801be14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801bdc0:	4605      	mov	r5, r0
 801bdc2:	7823      	ldrb	r3, [r4, #0]
 801bdc4:	f3bf 8f5b 	dmb	ish
 801bdc8:	07da      	lsls	r2, r3, #31
 801bdca:	d40b      	bmi.n	801bde4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801bdcc:	4620      	mov	r0, r4
 801bdce:	f007 fdc2 	bl	8023956 <__cxa_guard_acquire>
 801bdd2:	b138      	cbz	r0, 801bde4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801bdd4:	4620      	mov	r0, r4
 801bdd6:	f007 fdca 	bl	802396e <__cxa_guard_release>
 801bdda:	4a0f      	ldr	r2, [pc, #60]	; (801be18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801bddc:	490f      	ldr	r1, [pc, #60]	; (801be1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801bdde:	4810      	ldr	r0, [pc, #64]	; (801be20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801bde0:	f007 fdb2 	bl	8023948 <__aeabi_atexit>
 801bde4:	4c0f      	ldr	r4, [pc, #60]	; (801be24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801bde6:	7823      	ldrb	r3, [r4, #0]
 801bde8:	f3bf 8f5b 	dmb	ish
 801bdec:	07db      	lsls	r3, r3, #31
 801bdee:	d40b      	bmi.n	801be08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801bdf0:	4620      	mov	r0, r4
 801bdf2:	f007 fdb0 	bl	8023956 <__cxa_guard_acquire>
 801bdf6:	b138      	cbz	r0, 801be08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801bdf8:	4620      	mov	r0, r4
 801bdfa:	f007 fdb8 	bl	802396e <__cxa_guard_release>
 801bdfe:	4a06      	ldr	r2, [pc, #24]	; (801be18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801be00:	4909      	ldr	r1, [pc, #36]	; (801be28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801be02:	480a      	ldr	r0, [pc, #40]	; (801be2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801be04:	f007 fda0 	bl	8023948 <__aeabi_atexit>
 801be08:	4b05      	ldr	r3, [pc, #20]	; (801be20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801be0a:	632b      	str	r3, [r5, #48]	; 0x30
 801be0c:	4b07      	ldr	r3, [pc, #28]	; (801be2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801be0e:	636b      	str	r3, [r5, #52]	; 0x34
 801be10:	bd38      	pop	{r3, r4, r5, pc}
 801be12:	bf00      	nop
 801be14:	240017a0 	.word	0x240017a0
 801be18:	24000000 	.word	0x24000000
 801be1c:	080189a9 	.word	0x080189a9
 801be20:	2400007c 	.word	0x2400007c
 801be24:	240017a4 	.word	0x240017a4
 801be28:	080189a7 	.word	0x080189a7
 801be2c:	24000080 	.word	0x24000080

0801be30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801be30:	b538      	push	{r3, r4, r5, lr}
 801be32:	4c15      	ldr	r4, [pc, #84]	; (801be88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801be34:	4605      	mov	r5, r0
 801be36:	7823      	ldrb	r3, [r4, #0]
 801be38:	f3bf 8f5b 	dmb	ish
 801be3c:	07da      	lsls	r2, r3, #31
 801be3e:	d40b      	bmi.n	801be58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801be40:	4620      	mov	r0, r4
 801be42:	f007 fd88 	bl	8023956 <__cxa_guard_acquire>
 801be46:	b138      	cbz	r0, 801be58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801be48:	4620      	mov	r0, r4
 801be4a:	f007 fd90 	bl	802396e <__cxa_guard_release>
 801be4e:	4a0f      	ldr	r2, [pc, #60]	; (801be8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801be50:	490f      	ldr	r1, [pc, #60]	; (801be90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801be52:	4810      	ldr	r0, [pc, #64]	; (801be94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801be54:	f007 fd78 	bl	8023948 <__aeabi_atexit>
 801be58:	4c0f      	ldr	r4, [pc, #60]	; (801be98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801be5a:	7823      	ldrb	r3, [r4, #0]
 801be5c:	f3bf 8f5b 	dmb	ish
 801be60:	07db      	lsls	r3, r3, #31
 801be62:	d40b      	bmi.n	801be7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801be64:	4620      	mov	r0, r4
 801be66:	f007 fd76 	bl	8023956 <__cxa_guard_acquire>
 801be6a:	b138      	cbz	r0, 801be7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801be6c:	4620      	mov	r0, r4
 801be6e:	f007 fd7e 	bl	802396e <__cxa_guard_release>
 801be72:	4a06      	ldr	r2, [pc, #24]	; (801be8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801be74:	4909      	ldr	r1, [pc, #36]	; (801be9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801be76:	480a      	ldr	r0, [pc, #40]	; (801bea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801be78:	f007 fd66 	bl	8023948 <__aeabi_atexit>
 801be7c:	4b05      	ldr	r3, [pc, #20]	; (801be94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801be7e:	62ab      	str	r3, [r5, #40]	; 0x28
 801be80:	4b07      	ldr	r3, [pc, #28]	; (801bea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801be82:	62eb      	str	r3, [r5, #44]	; 0x2c
 801be84:	bd38      	pop	{r3, r4, r5, pc}
 801be86:	bf00      	nop
 801be88:	24001770 	.word	0x24001770
 801be8c:	24000000 	.word	0x24000000
 801be90:	080189ad 	.word	0x080189ad
 801be94:	2400004c 	.word	0x2400004c
 801be98:	24001774 	.word	0x24001774
 801be9c:	080189ab 	.word	0x080189ab
 801bea0:	24000050 	.word	0x24000050

0801bea4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801bea4:	b510      	push	{r4, lr}
 801bea6:	4604      	mov	r4, r0
 801bea8:	f7ff ff88 	bl	801bdbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801beac:	4620      	mov	r0, r4
 801beae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801beb2:	f7ff bfbd 	b.w	801be30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801beb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801beb8:	b538      	push	{r3, r4, r5, lr}
 801beba:	4c15      	ldr	r4, [pc, #84]	; (801bf10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801bebc:	4605      	mov	r5, r0
 801bebe:	7823      	ldrb	r3, [r4, #0]
 801bec0:	f3bf 8f5b 	dmb	ish
 801bec4:	07da      	lsls	r2, r3, #31
 801bec6:	d40b      	bmi.n	801bee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801bec8:	4620      	mov	r0, r4
 801beca:	f007 fd44 	bl	8023956 <__cxa_guard_acquire>
 801bece:	b138      	cbz	r0, 801bee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801bed0:	4620      	mov	r0, r4
 801bed2:	f007 fd4c 	bl	802396e <__cxa_guard_release>
 801bed6:	4a0f      	ldr	r2, [pc, #60]	; (801bf14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801bed8:	490f      	ldr	r1, [pc, #60]	; (801bf18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801beda:	4810      	ldr	r0, [pc, #64]	; (801bf1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801bedc:	f007 fd34 	bl	8023948 <__aeabi_atexit>
 801bee0:	4c0f      	ldr	r4, [pc, #60]	; (801bf20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801bee2:	7823      	ldrb	r3, [r4, #0]
 801bee4:	f3bf 8f5b 	dmb	ish
 801bee8:	07db      	lsls	r3, r3, #31
 801beea:	d40b      	bmi.n	801bf04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801beec:	4620      	mov	r0, r4
 801beee:	f007 fd32 	bl	8023956 <__cxa_guard_acquire>
 801bef2:	b138      	cbz	r0, 801bf04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801bef4:	4620      	mov	r0, r4
 801bef6:	f007 fd3a 	bl	802396e <__cxa_guard_release>
 801befa:	4a06      	ldr	r2, [pc, #24]	; (801bf14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801befc:	4909      	ldr	r1, [pc, #36]	; (801bf24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801befe:	480a      	ldr	r0, [pc, #40]	; (801bf28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801bf00:	f007 fd22 	bl	8023948 <__aeabi_atexit>
 801bf04:	4b05      	ldr	r3, [pc, #20]	; (801bf1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801bf06:	652b      	str	r3, [r5, #80]	; 0x50
 801bf08:	4b07      	ldr	r3, [pc, #28]	; (801bf28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801bf0a:	656b      	str	r3, [r5, #84]	; 0x54
 801bf0c:	bd38      	pop	{r3, r4, r5, pc}
 801bf0e:	bf00      	nop
 801bf10:	240017a8 	.word	0x240017a8
 801bf14:	24000000 	.word	0x24000000
 801bf18:	08018999 	.word	0x08018999
 801bf1c:	24000084 	.word	0x24000084
 801bf20:	240017ac 	.word	0x240017ac
 801bf24:	08018997 	.word	0x08018997
 801bf28:	24000088 	.word	0x24000088

0801bf2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801bf2c:	b538      	push	{r3, r4, r5, lr}
 801bf2e:	4c15      	ldr	r4, [pc, #84]	; (801bf84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801bf30:	4605      	mov	r5, r0
 801bf32:	7823      	ldrb	r3, [r4, #0]
 801bf34:	f3bf 8f5b 	dmb	ish
 801bf38:	07da      	lsls	r2, r3, #31
 801bf3a:	d40b      	bmi.n	801bf54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801bf3c:	4620      	mov	r0, r4
 801bf3e:	f007 fd0a 	bl	8023956 <__cxa_guard_acquire>
 801bf42:	b138      	cbz	r0, 801bf54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801bf44:	4620      	mov	r0, r4
 801bf46:	f007 fd12 	bl	802396e <__cxa_guard_release>
 801bf4a:	4a0f      	ldr	r2, [pc, #60]	; (801bf88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801bf4c:	490f      	ldr	r1, [pc, #60]	; (801bf8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801bf4e:	4810      	ldr	r0, [pc, #64]	; (801bf90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801bf50:	f007 fcfa 	bl	8023948 <__aeabi_atexit>
 801bf54:	4c0f      	ldr	r4, [pc, #60]	; (801bf94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801bf56:	7823      	ldrb	r3, [r4, #0]
 801bf58:	f3bf 8f5b 	dmb	ish
 801bf5c:	07db      	lsls	r3, r3, #31
 801bf5e:	d40b      	bmi.n	801bf78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801bf60:	4620      	mov	r0, r4
 801bf62:	f007 fcf8 	bl	8023956 <__cxa_guard_acquire>
 801bf66:	b138      	cbz	r0, 801bf78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801bf68:	4620      	mov	r0, r4
 801bf6a:	f007 fd00 	bl	802396e <__cxa_guard_release>
 801bf6e:	4a06      	ldr	r2, [pc, #24]	; (801bf88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801bf70:	4909      	ldr	r1, [pc, #36]	; (801bf98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801bf72:	480a      	ldr	r0, [pc, #40]	; (801bf9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801bf74:	f007 fce8 	bl	8023948 <__aeabi_atexit>
 801bf78:	4b05      	ldr	r3, [pc, #20]	; (801bf90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801bf7a:	64ab      	str	r3, [r5, #72]	; 0x48
 801bf7c:	4b07      	ldr	r3, [pc, #28]	; (801bf9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801bf7e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801bf80:	bd38      	pop	{r3, r4, r5, pc}
 801bf82:	bf00      	nop
 801bf84:	240017b0 	.word	0x240017b0
 801bf88:	24000000 	.word	0x24000000
 801bf8c:	0801899d 	.word	0x0801899d
 801bf90:	2400008c 	.word	0x2400008c
 801bf94:	240017b4 	.word	0x240017b4
 801bf98:	0801899b 	.word	0x0801899b
 801bf9c:	24000090 	.word	0x24000090

0801bfa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801bfa0:	b538      	push	{r3, r4, r5, lr}
 801bfa2:	4c15      	ldr	r4, [pc, #84]	; (801bff8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801bfa4:	4605      	mov	r5, r0
 801bfa6:	7823      	ldrb	r3, [r4, #0]
 801bfa8:	f3bf 8f5b 	dmb	ish
 801bfac:	07da      	lsls	r2, r3, #31
 801bfae:	d40b      	bmi.n	801bfc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801bfb0:	4620      	mov	r0, r4
 801bfb2:	f007 fcd0 	bl	8023956 <__cxa_guard_acquire>
 801bfb6:	b138      	cbz	r0, 801bfc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801bfb8:	4620      	mov	r0, r4
 801bfba:	f007 fcd8 	bl	802396e <__cxa_guard_release>
 801bfbe:	4a0f      	ldr	r2, [pc, #60]	; (801bffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801bfc0:	490f      	ldr	r1, [pc, #60]	; (801c000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801bfc2:	4810      	ldr	r0, [pc, #64]	; (801c004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801bfc4:	f007 fcc0 	bl	8023948 <__aeabi_atexit>
 801bfc8:	4c0f      	ldr	r4, [pc, #60]	; (801c008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801bfca:	7823      	ldrb	r3, [r4, #0]
 801bfcc:	f3bf 8f5b 	dmb	ish
 801bfd0:	07db      	lsls	r3, r3, #31
 801bfd2:	d40b      	bmi.n	801bfec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801bfd4:	4620      	mov	r0, r4
 801bfd6:	f007 fcbe 	bl	8023956 <__cxa_guard_acquire>
 801bfda:	b138      	cbz	r0, 801bfec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801bfdc:	4620      	mov	r0, r4
 801bfde:	f007 fcc6 	bl	802396e <__cxa_guard_release>
 801bfe2:	4a06      	ldr	r2, [pc, #24]	; (801bffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801bfe4:	4909      	ldr	r1, [pc, #36]	; (801c00c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801bfe6:	480a      	ldr	r0, [pc, #40]	; (801c010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801bfe8:	f007 fcae 	bl	8023948 <__aeabi_atexit>
 801bfec:	4b05      	ldr	r3, [pc, #20]	; (801c004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801bfee:	642b      	str	r3, [r5, #64]	; 0x40
 801bff0:	4b07      	ldr	r3, [pc, #28]	; (801c010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801bff2:	646b      	str	r3, [r5, #68]	; 0x44
 801bff4:	bd38      	pop	{r3, r4, r5, pc}
 801bff6:	bf00      	nop
 801bff8:	24001778 	.word	0x24001778
 801bffc:	24000000 	.word	0x24000000
 801c000:	080189a1 	.word	0x080189a1
 801c004:	24000054 	.word	0x24000054
 801c008:	2400177c 	.word	0x2400177c
 801c00c:	0801899f 	.word	0x0801899f
 801c010:	24000058 	.word	0x24000058

0801c014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801c014:	b538      	push	{r3, r4, r5, lr}
 801c016:	4c15      	ldr	r4, [pc, #84]	; (801c06c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801c018:	4605      	mov	r5, r0
 801c01a:	7823      	ldrb	r3, [r4, #0]
 801c01c:	f3bf 8f5b 	dmb	ish
 801c020:	07da      	lsls	r2, r3, #31
 801c022:	d40b      	bmi.n	801c03c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c024:	4620      	mov	r0, r4
 801c026:	f007 fc96 	bl	8023956 <__cxa_guard_acquire>
 801c02a:	b138      	cbz	r0, 801c03c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c02c:	4620      	mov	r0, r4
 801c02e:	f007 fc9e 	bl	802396e <__cxa_guard_release>
 801c032:	4a0f      	ldr	r2, [pc, #60]	; (801c070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c034:	490f      	ldr	r1, [pc, #60]	; (801c074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801c036:	4810      	ldr	r0, [pc, #64]	; (801c078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c038:	f007 fc86 	bl	8023948 <__aeabi_atexit>
 801c03c:	4c0f      	ldr	r4, [pc, #60]	; (801c07c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801c03e:	7823      	ldrb	r3, [r4, #0]
 801c040:	f3bf 8f5b 	dmb	ish
 801c044:	07db      	lsls	r3, r3, #31
 801c046:	d40b      	bmi.n	801c060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c048:	4620      	mov	r0, r4
 801c04a:	f007 fc84 	bl	8023956 <__cxa_guard_acquire>
 801c04e:	b138      	cbz	r0, 801c060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c050:	4620      	mov	r0, r4
 801c052:	f007 fc8c 	bl	802396e <__cxa_guard_release>
 801c056:	4a06      	ldr	r2, [pc, #24]	; (801c070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c058:	4909      	ldr	r1, [pc, #36]	; (801c080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801c05a:	480a      	ldr	r0, [pc, #40]	; (801c084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c05c:	f007 fc74 	bl	8023948 <__aeabi_atexit>
 801c060:	4b05      	ldr	r3, [pc, #20]	; (801c078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c062:	63ab      	str	r3, [r5, #56]	; 0x38
 801c064:	4b07      	ldr	r3, [pc, #28]	; (801c084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c066:	63eb      	str	r3, [r5, #60]	; 0x3c
 801c068:	bd38      	pop	{r3, r4, r5, pc}
 801c06a:	bf00      	nop
 801c06c:	24001798 	.word	0x24001798
 801c070:	24000000 	.word	0x24000000
 801c074:	080189a5 	.word	0x080189a5
 801c078:	24000074 	.word	0x24000074
 801c07c:	2400179c 	.word	0x2400179c
 801c080:	080189a3 	.word	0x080189a3
 801c084:	24000078 	.word	0x24000078

0801c088 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801c088:	b510      	push	{r4, lr}
 801c08a:	4604      	mov	r4, r0
 801c08c:	f7ff ff14 	bl	801beb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801c090:	4620      	mov	r0, r4
 801c092:	f7ff ff85 	bl	801bfa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801c096:	4620      	mov	r0, r4
 801c098:	f7ff ff48 	bl	801bf2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801c09c:	4620      	mov	r0, r4
 801c09e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c0a2:	f7ff bfb7 	b.w	801c014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801c0a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801c0a8:	b538      	push	{r3, r4, r5, lr}
 801c0aa:	4c15      	ldr	r4, [pc, #84]	; (801c100 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801c0ac:	4605      	mov	r5, r0
 801c0ae:	7823      	ldrb	r3, [r4, #0]
 801c0b0:	f3bf 8f5b 	dmb	ish
 801c0b4:	07da      	lsls	r2, r3, #31
 801c0b6:	d40b      	bmi.n	801c0d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c0b8:	4620      	mov	r0, r4
 801c0ba:	f007 fc4c 	bl	8023956 <__cxa_guard_acquire>
 801c0be:	b138      	cbz	r0, 801c0d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c0c0:	4620      	mov	r0, r4
 801c0c2:	f007 fc54 	bl	802396e <__cxa_guard_release>
 801c0c6:	4a0f      	ldr	r2, [pc, #60]	; (801c104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c0c8:	490f      	ldr	r1, [pc, #60]	; (801c108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801c0ca:	4810      	ldr	r0, [pc, #64]	; (801c10c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c0cc:	f007 fc3c 	bl	8023948 <__aeabi_atexit>
 801c0d0:	4c0f      	ldr	r4, [pc, #60]	; (801c110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801c0d2:	7823      	ldrb	r3, [r4, #0]
 801c0d4:	f3bf 8f5b 	dmb	ish
 801c0d8:	07db      	lsls	r3, r3, #31
 801c0da:	d40b      	bmi.n	801c0f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c0dc:	4620      	mov	r0, r4
 801c0de:	f007 fc3a 	bl	8023956 <__cxa_guard_acquire>
 801c0e2:	b138      	cbz	r0, 801c0f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c0e4:	4620      	mov	r0, r4
 801c0e6:	f007 fc42 	bl	802396e <__cxa_guard_release>
 801c0ea:	4a06      	ldr	r2, [pc, #24]	; (801c104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c0ec:	4909      	ldr	r1, [pc, #36]	; (801c114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801c0ee:	480a      	ldr	r0, [pc, #40]	; (801c118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c0f0:	f007 fc2a 	bl	8023948 <__aeabi_atexit>
 801c0f4:	4b05      	ldr	r3, [pc, #20]	; (801c10c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c0f6:	662b      	str	r3, [r5, #96]	; 0x60
 801c0f8:	4b07      	ldr	r3, [pc, #28]	; (801c118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c0fa:	666b      	str	r3, [r5, #100]	; 0x64
 801c0fc:	bd38      	pop	{r3, r4, r5, pc}
 801c0fe:	bf00      	nop
 801c100:	24001780 	.word	0x24001780
 801c104:	24000000 	.word	0x24000000
 801c108:	08018991 	.word	0x08018991
 801c10c:	2400005c 	.word	0x2400005c
 801c110:	24001784 	.word	0x24001784
 801c114:	0801898f 	.word	0x0801898f
 801c118:	24000060 	.word	0x24000060

0801c11c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801c11c:	b538      	push	{r3, r4, r5, lr}
 801c11e:	4c15      	ldr	r4, [pc, #84]	; (801c174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801c120:	4605      	mov	r5, r0
 801c122:	7823      	ldrb	r3, [r4, #0]
 801c124:	f3bf 8f5b 	dmb	ish
 801c128:	07da      	lsls	r2, r3, #31
 801c12a:	d40b      	bmi.n	801c144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c12c:	4620      	mov	r0, r4
 801c12e:	f007 fc12 	bl	8023956 <__cxa_guard_acquire>
 801c132:	b138      	cbz	r0, 801c144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c134:	4620      	mov	r0, r4
 801c136:	f007 fc1a 	bl	802396e <__cxa_guard_release>
 801c13a:	4a0f      	ldr	r2, [pc, #60]	; (801c178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c13c:	490f      	ldr	r1, [pc, #60]	; (801c17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801c13e:	4810      	ldr	r0, [pc, #64]	; (801c180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c140:	f007 fc02 	bl	8023948 <__aeabi_atexit>
 801c144:	4c0f      	ldr	r4, [pc, #60]	; (801c184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801c146:	7823      	ldrb	r3, [r4, #0]
 801c148:	f3bf 8f5b 	dmb	ish
 801c14c:	07db      	lsls	r3, r3, #31
 801c14e:	d40b      	bmi.n	801c168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c150:	4620      	mov	r0, r4
 801c152:	f007 fc00 	bl	8023956 <__cxa_guard_acquire>
 801c156:	b138      	cbz	r0, 801c168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c158:	4620      	mov	r0, r4
 801c15a:	f007 fc08 	bl	802396e <__cxa_guard_release>
 801c15e:	4a06      	ldr	r2, [pc, #24]	; (801c178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c160:	4909      	ldr	r1, [pc, #36]	; (801c188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801c162:	480a      	ldr	r0, [pc, #40]	; (801c18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c164:	f007 fbf0 	bl	8023948 <__aeabi_atexit>
 801c168:	4b05      	ldr	r3, [pc, #20]	; (801c180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c16a:	65ab      	str	r3, [r5, #88]	; 0x58
 801c16c:	4b07      	ldr	r3, [pc, #28]	; (801c18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c16e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801c170:	bd38      	pop	{r3, r4, r5, pc}
 801c172:	bf00      	nop
 801c174:	24001758 	.word	0x24001758
 801c178:	24000000 	.word	0x24000000
 801c17c:	08018995 	.word	0x08018995
 801c180:	24000034 	.word	0x24000034
 801c184:	2400175c 	.word	0x2400175c
 801c188:	08018993 	.word	0x08018993
 801c18c:	24000038 	.word	0x24000038

0801c190 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801c190:	b510      	push	{r4, lr}
 801c192:	4604      	mov	r4, r0
 801c194:	f7ff ff88 	bl	801c0a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801c198:	4620      	mov	r0, r4
 801c19a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c19e:	f7ff bfbd 	b.w	801c11c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801c1a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801c1a4:	b538      	push	{r3, r4, r5, lr}
 801c1a6:	4c15      	ldr	r4, [pc, #84]	; (801c1fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801c1a8:	4605      	mov	r5, r0
 801c1aa:	7823      	ldrb	r3, [r4, #0]
 801c1ac:	f3bf 8f5b 	dmb	ish
 801c1b0:	07da      	lsls	r2, r3, #31
 801c1b2:	d40b      	bmi.n	801c1cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c1b4:	4620      	mov	r0, r4
 801c1b6:	f007 fbce 	bl	8023956 <__cxa_guard_acquire>
 801c1ba:	b138      	cbz	r0, 801c1cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c1bc:	4620      	mov	r0, r4
 801c1be:	f007 fbd6 	bl	802396e <__cxa_guard_release>
 801c1c2:	4a0f      	ldr	r2, [pc, #60]	; (801c200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c1c4:	490f      	ldr	r1, [pc, #60]	; (801c204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801c1c6:	4810      	ldr	r0, [pc, #64]	; (801c208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c1c8:	f007 fbbe 	bl	8023948 <__aeabi_atexit>
 801c1cc:	4c0f      	ldr	r4, [pc, #60]	; (801c20c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801c1ce:	7823      	ldrb	r3, [r4, #0]
 801c1d0:	f3bf 8f5b 	dmb	ish
 801c1d4:	07db      	lsls	r3, r3, #31
 801c1d6:	d40b      	bmi.n	801c1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c1d8:	4620      	mov	r0, r4
 801c1da:	f007 fbbc 	bl	8023956 <__cxa_guard_acquire>
 801c1de:	b138      	cbz	r0, 801c1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c1e0:	4620      	mov	r0, r4
 801c1e2:	f007 fbc4 	bl	802396e <__cxa_guard_release>
 801c1e6:	4a06      	ldr	r2, [pc, #24]	; (801c200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c1e8:	4909      	ldr	r1, [pc, #36]	; (801c210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801c1ea:	480a      	ldr	r0, [pc, #40]	; (801c214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c1ec:	f007 fbac 	bl	8023948 <__aeabi_atexit>
 801c1f0:	4b05      	ldr	r3, [pc, #20]	; (801c208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c1f2:	672b      	str	r3, [r5, #112]	; 0x70
 801c1f4:	4b07      	ldr	r3, [pc, #28]	; (801c214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c1f6:	676b      	str	r3, [r5, #116]	; 0x74
 801c1f8:	bd38      	pop	{r3, r4, r5, pc}
 801c1fa:	bf00      	nop
 801c1fc:	24001750 	.word	0x24001750
 801c200:	24000000 	.word	0x24000000
 801c204:	08018989 	.word	0x08018989
 801c208:	2400002c 	.word	0x2400002c
 801c20c:	24001754 	.word	0x24001754
 801c210:	08018987 	.word	0x08018987
 801c214:	24000030 	.word	0x24000030

0801c218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801c218:	b538      	push	{r3, r4, r5, lr}
 801c21a:	4c15      	ldr	r4, [pc, #84]	; (801c270 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801c21c:	4605      	mov	r5, r0
 801c21e:	7823      	ldrb	r3, [r4, #0]
 801c220:	f3bf 8f5b 	dmb	ish
 801c224:	07da      	lsls	r2, r3, #31
 801c226:	d40b      	bmi.n	801c240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c228:	4620      	mov	r0, r4
 801c22a:	f007 fb94 	bl	8023956 <__cxa_guard_acquire>
 801c22e:	b138      	cbz	r0, 801c240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c230:	4620      	mov	r0, r4
 801c232:	f007 fb9c 	bl	802396e <__cxa_guard_release>
 801c236:	4a0f      	ldr	r2, [pc, #60]	; (801c274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c238:	490f      	ldr	r1, [pc, #60]	; (801c278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801c23a:	4810      	ldr	r0, [pc, #64]	; (801c27c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c23c:	f007 fb84 	bl	8023948 <__aeabi_atexit>
 801c240:	4c0f      	ldr	r4, [pc, #60]	; (801c280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801c242:	7823      	ldrb	r3, [r4, #0]
 801c244:	f3bf 8f5b 	dmb	ish
 801c248:	07db      	lsls	r3, r3, #31
 801c24a:	d40b      	bmi.n	801c264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c24c:	4620      	mov	r0, r4
 801c24e:	f007 fb82 	bl	8023956 <__cxa_guard_acquire>
 801c252:	b138      	cbz	r0, 801c264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c254:	4620      	mov	r0, r4
 801c256:	f007 fb8a 	bl	802396e <__cxa_guard_release>
 801c25a:	4a06      	ldr	r2, [pc, #24]	; (801c274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c25c:	4909      	ldr	r1, [pc, #36]	; (801c284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801c25e:	480a      	ldr	r0, [pc, #40]	; (801c288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c260:	f007 fb72 	bl	8023948 <__aeabi_atexit>
 801c264:	4b05      	ldr	r3, [pc, #20]	; (801c27c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c266:	66ab      	str	r3, [r5, #104]	; 0x68
 801c268:	4b07      	ldr	r3, [pc, #28]	; (801c288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c26a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801c26c:	bd38      	pop	{r3, r4, r5, pc}
 801c26e:	bf00      	nop
 801c270:	24001748 	.word	0x24001748
 801c274:	24000000 	.word	0x24000000
 801c278:	0801898d 	.word	0x0801898d
 801c27c:	24000024 	.word	0x24000024
 801c280:	2400174c 	.word	0x2400174c
 801c284:	0801898b 	.word	0x0801898b
 801c288:	24000028 	.word	0x24000028

0801c28c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801c28c:	b510      	push	{r4, lr}
 801c28e:	4604      	mov	r4, r0
 801c290:	f7ff ff88 	bl	801c1a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801c294:	4620      	mov	r0, r4
 801c296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c29a:	f7ff bfbd 	b.w	801c218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801c29e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801c29e:	b510      	push	{r4, lr}
 801c2a0:	4604      	mov	r4, r0
 801c2a2:	f7ff fff3 	bl	801c28c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801c2a6:	4620      	mov	r0, r4
 801c2a8:	f7ff ff72 	bl	801c190 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801c2ac:	4620      	mov	r0, r4
 801c2ae:	f7ff fdf9 	bl	801bea4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801c2b2:	4620      	mov	r0, r4
 801c2b4:	f7ff fcfa 	bl	801bcac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801c2b8:	4620      	mov	r0, r4
 801c2ba:	f7ff fd75 	bl	801bda8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801c2be:	4620      	mov	r0, r4
 801c2c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c2c4:	f7ff bee0 	b.w	801c088 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801c2c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801c2c8:	b538      	push	{r3, r4, r5, lr}
 801c2ca:	4c0b      	ldr	r4, [pc, #44]	; (801c2f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801c2cc:	4605      	mov	r5, r0
 801c2ce:	7823      	ldrb	r3, [r4, #0]
 801c2d0:	f3bf 8f5b 	dmb	ish
 801c2d4:	07db      	lsls	r3, r3, #31
 801c2d6:	d40b      	bmi.n	801c2f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c2d8:	4620      	mov	r0, r4
 801c2da:	f007 fb3c 	bl	8023956 <__cxa_guard_acquire>
 801c2de:	b138      	cbz	r0, 801c2f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c2e0:	4620      	mov	r0, r4
 801c2e2:	f007 fb44 	bl	802396e <__cxa_guard_release>
 801c2e6:	4a05      	ldr	r2, [pc, #20]	; (801c2fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801c2e8:	4905      	ldr	r1, [pc, #20]	; (801c300 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801c2ea:	4806      	ldr	r0, [pc, #24]	; (801c304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c2ec:	f007 fb2c 	bl	8023948 <__aeabi_atexit>
 801c2f0:	4b04      	ldr	r3, [pc, #16]	; (801c304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c2f2:	67ab      	str	r3, [r5, #120]	; 0x78
 801c2f4:	bd38      	pop	{r3, r4, r5, pc}
 801c2f6:	bf00      	nop
 801c2f8:	2400173c 	.word	0x2400173c
 801c2fc:	24000000 	.word	0x24000000
 801c300:	08018985 	.word	0x08018985
 801c304:	2400001c 	.word	0x2400001c

0801c308 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801c308:	b538      	push	{r3, r4, r5, lr}
 801c30a:	4c0b      	ldr	r4, [pc, #44]	; (801c338 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801c30c:	4605      	mov	r5, r0
 801c30e:	7823      	ldrb	r3, [r4, #0]
 801c310:	f3bf 8f5b 	dmb	ish
 801c314:	07db      	lsls	r3, r3, #31
 801c316:	d40b      	bmi.n	801c330 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c318:	4620      	mov	r0, r4
 801c31a:	f007 fb1c 	bl	8023956 <__cxa_guard_acquire>
 801c31e:	b138      	cbz	r0, 801c330 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c320:	4620      	mov	r0, r4
 801c322:	f007 fb24 	bl	802396e <__cxa_guard_release>
 801c326:	4a05      	ldr	r2, [pc, #20]	; (801c33c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801c328:	4905      	ldr	r1, [pc, #20]	; (801c340 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801c32a:	4806      	ldr	r0, [pc, #24]	; (801c344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c32c:	f007 fb0c 	bl	8023948 <__aeabi_atexit>
 801c330:	4b04      	ldr	r3, [pc, #16]	; (801c344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c332:	67eb      	str	r3, [r5, #124]	; 0x7c
 801c334:	bd38      	pop	{r3, r4, r5, pc}
 801c336:	bf00      	nop
 801c338:	24001740 	.word	0x24001740
 801c33c:	24000000 	.word	0x24000000
 801c340:	08018983 	.word	0x08018983
 801c344:	24000020 	.word	0x24000020

0801c348 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801c348:	b570      	push	{r4, r5, r6, lr}
 801c34a:	4d0d      	ldr	r5, [pc, #52]	; (801c380 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801c34c:	4606      	mov	r6, r0
 801c34e:	4c0d      	ldr	r4, [pc, #52]	; (801c384 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801c350:	782b      	ldrb	r3, [r5, #0]
 801c352:	f3bf 8f5b 	dmb	ish
 801c356:	f013 0f01 	tst.w	r3, #1
 801c35a:	d10d      	bne.n	801c378 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c35c:	4628      	mov	r0, r5
 801c35e:	f007 fafa 	bl	8023956 <__cxa_guard_acquire>
 801c362:	b148      	cbz	r0, 801c378 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c364:	4b08      	ldr	r3, [pc, #32]	; (801c388 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801c366:	4628      	mov	r0, r5
 801c368:	6023      	str	r3, [r4, #0]
 801c36a:	f007 fb00 	bl	802396e <__cxa_guard_release>
 801c36e:	4a07      	ldr	r2, [pc, #28]	; (801c38c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801c370:	4620      	mov	r0, r4
 801c372:	4907      	ldr	r1, [pc, #28]	; (801c390 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801c374:	f007 fae8 	bl	8023948 <__aeabi_atexit>
 801c378:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801c37c:	bd70      	pop	{r4, r5, r6, pc}
 801c37e:	bf00      	nop
 801c380:	24001744 	.word	0x24001744
 801c384:	240017b8 	.word	0x240017b8
 801c388:	0802626c 	.word	0x0802626c
 801c38c:	24000000 	.word	0x24000000
 801c390:	08018981 	.word	0x08018981

0801c394 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801c394:	b510      	push	{r4, lr}
 801c396:	4604      	mov	r4, r0
 801c398:	f7ff ff96 	bl	801c2c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801c39c:	4620      	mov	r0, r4
 801c39e:	f7ff ffb3 	bl	801c308 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801c3a2:	4620      	mov	r0, r4
 801c3a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c3a8:	f7ff bfce 	b.w	801c348 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801c3ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801c3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3b0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801c3b4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801c3b8:	2d00      	cmp	r5, #0
 801c3ba:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801c3be:	fb05 4c0e 	mla	ip, r5, lr, r4
 801c3c2:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801c3c6:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801c3ca:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801c3ce:	eb02 0a0c 	add.w	sl, r2, ip
 801c3d2:	8808      	ldrh	r0, [r1, #0]
 801c3d4:	f2c0 80b0 	blt.w	801c538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c3d8:	45ab      	cmp	fp, r5
 801c3da:	f340 80ad 	ble.w	801c538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c3de:	2c00      	cmp	r4, #0
 801c3e0:	f2c0 80a8 	blt.w	801c534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c3e4:	45a6      	cmp	lr, r4
 801c3e6:	f340 80a5 	ble.w	801c534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c3ea:	f812 200c 	ldrb.w	r2, [r2, ip]
 801c3ee:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801c3f2:	1c62      	adds	r2, r4, #1
 801c3f4:	f100 80a3 	bmi.w	801c53e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c3f8:	4596      	cmp	lr, r2
 801c3fa:	f340 80a0 	ble.w	801c53e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c3fe:	f1b9 0f00 	cmp.w	r9, #0
 801c402:	f000 809c 	beq.w	801c53e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c406:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c40a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c40e:	3501      	adds	r5, #1
 801c410:	f100 8099 	bmi.w	801c546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c414:	45ab      	cmp	fp, r5
 801c416:	f340 8096 	ble.w	801c546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c41a:	2f00      	cmp	r7, #0
 801c41c:	f000 8093 	beq.w	801c546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c420:	2c00      	cmp	r4, #0
 801c422:	f2c0 808e 	blt.w	801c542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c426:	45a6      	cmp	lr, r4
 801c428:	f340 808b 	ble.w	801c542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c42c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801c430:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801c434:	3401      	adds	r4, #1
 801c436:	f100 8089 	bmi.w	801c54c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c43a:	45a6      	cmp	lr, r4
 801c43c:	f340 8086 	ble.w	801c54c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c440:	f1b9 0f00 	cmp.w	r9, #0
 801c444:	f000 8082 	beq.w	801c54c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c448:	44d6      	add	lr, sl
 801c44a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c44e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801c452:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c456:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801c45a:	fb19 fe07 	smulbb	lr, r9, r7
 801c45e:	f1c7 0210 	rsb	r2, r7, #16
 801c462:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c466:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c46a:	eba2 0209 	sub.w	r2, r2, r9
 801c46e:	ea44 0808 	orr.w	r8, r4, r8
 801c472:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c476:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c47a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c47e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c482:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c486:	ea44 0c0c 	orr.w	ip, r4, ip
 801c48a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c48e:	fb04 f40c 	mul.w	r4, r4, ip
 801c492:	fb02 4808 	mla	r8, r2, r8, r4
 801c496:	041a      	lsls	r2, r3, #16
 801c498:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c49c:	b2b4      	uxth	r4, r6
 801c49e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c4a2:	43f6      	mvns	r6, r6
 801c4a4:	4313      	orrs	r3, r2
 801c4a6:	042a      	lsls	r2, r5, #16
 801c4a8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c4ac:	b2f6      	uxtb	r6, r6
 801c4ae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c4b2:	fb0e 8303 	mla	r3, lr, r3, r8
 801c4b6:	432a      	orrs	r2, r5
 801c4b8:	fb07 3202 	mla	r2, r7, r2, r3
 801c4bc:	10c7      	asrs	r7, r0, #3
 801c4be:	0d53      	lsrs	r3, r2, #21
 801c4c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c4c4:	0952      	lsrs	r2, r2, #5
 801c4c6:	fb17 f706 	smulbb	r7, r7, r6
 801c4ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c4ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c4d2:	431a      	orrs	r2, r3
 801c4d4:	b293      	uxth	r3, r2
 801c4d6:	1202      	asrs	r2, r0, #8
 801c4d8:	121d      	asrs	r5, r3, #8
 801c4da:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c4de:	00c0      	lsls	r0, r0, #3
 801c4e0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c4e4:	fb12 f206 	smulbb	r2, r2, r6
 801c4e8:	b2c0      	uxtb	r0, r0
 801c4ea:	fb05 2504 	mla	r5, r5, r4, r2
 801c4ee:	10da      	asrs	r2, r3, #3
 801c4f0:	fb10 f006 	smulbb	r0, r0, r6
 801c4f4:	00db      	lsls	r3, r3, #3
 801c4f6:	b2ad      	uxth	r5, r5
 801c4f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c4fc:	b2db      	uxtb	r3, r3
 801c4fe:	fb02 7204 	mla	r2, r2, r4, r7
 801c502:	fb03 0004 	mla	r0, r3, r4, r0
 801c506:	1c6b      	adds	r3, r5, #1
 801c508:	b292      	uxth	r2, r2
 801c50a:	b280      	uxth	r0, r0
 801c50c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c510:	1c43      	adds	r3, r0, #1
 801c512:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c516:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c51a:	1c50      	adds	r0, r2, #1
 801c51c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c520:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c524:	0952      	lsrs	r2, r2, #5
 801c526:	432b      	orrs	r3, r5
 801c528:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c52c:	4313      	orrs	r3, r2
 801c52e:	800b      	strh	r3, [r1, #0]
 801c530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c534:	4680      	mov	r8, r0
 801c536:	e75c      	b.n	801c3f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801c538:	4684      	mov	ip, r0
 801c53a:	4680      	mov	r8, r0
 801c53c:	e767      	b.n	801c40e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c53e:	4684      	mov	ip, r0
 801c540:	e765      	b.n	801c40e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c542:	4605      	mov	r5, r0
 801c544:	e776      	b.n	801c434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801c546:	4603      	mov	r3, r0
 801c548:	4605      	mov	r5, r0
 801c54a:	e782      	b.n	801c452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801c54c:	4603      	mov	r3, r0
 801c54e:	e780      	b.n	801c452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801c550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c554:	b099      	sub	sp, #100	; 0x64
 801c556:	9215      	str	r2, [sp, #84]	; 0x54
 801c558:	9309      	str	r3, [sp, #36]	; 0x24
 801c55a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801c55c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801c560:	9016      	str	r0, [sp, #88]	; 0x58
 801c562:	930d      	str	r3, [sp, #52]	; 0x34
 801c564:	6850      	ldr	r0, [r2, #4]
 801c566:	910c      	str	r1, [sp, #48]	; 0x30
 801c568:	6812      	ldr	r2, [r2, #0]
 801c56a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801c56e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801c572:	fb00 1303 	mla	r3, r0, r3, r1
 801c576:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801c57a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c57c:	681b      	ldr	r3, [r3, #0]
 801c57e:	930b      	str	r3, [sp, #44]	; 0x2c
 801c580:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c582:	685e      	ldr	r6, [r3, #4]
 801c584:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c586:	3604      	adds	r6, #4
 801c588:	43db      	mvns	r3, r3
 801c58a:	b2db      	uxtb	r3, r3
 801c58c:	930a      	str	r3, [sp, #40]	; 0x28
 801c58e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c590:	2b00      	cmp	r3, #0
 801c592:	dc03      	bgt.n	801c59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c594:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801c596:	2b00      	cmp	r3, #0
 801c598:	f340 8225 	ble.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c59c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c59e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5a6:	1e48      	subs	r0, r1, #1
 801c5a8:	1e57      	subs	r7, r2, #1
 801c5aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c5ac:	2b00      	cmp	r3, #0
 801c5ae:	f340 80e3 	ble.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c5b2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801c5b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c5ba:	d406      	bmi.n	801c5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5bc:	4584      	cmp	ip, r0
 801c5be:	da04      	bge.n	801c5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5c0:	2b00      	cmp	r3, #0
 801c5c2:	db02      	blt.n	801c5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c5c4:	42bb      	cmp	r3, r7
 801c5c6:	f2c0 80d8 	blt.w	801c77a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c5ca:	f11c 0c01 	adds.w	ip, ip, #1
 801c5ce:	f100 80c9 	bmi.w	801c764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5d2:	4561      	cmp	r1, ip
 801c5d4:	f2c0 80c6 	blt.w	801c764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5d8:	3301      	adds	r3, #1
 801c5da:	f100 80c3 	bmi.w	801c764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5de:	429a      	cmp	r2, r3
 801c5e0:	f2c0 80c0 	blt.w	801c764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c5e4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c5e8:	4647      	mov	r7, r8
 801c5ea:	f1bb 0f00 	cmp.w	fp, #0
 801c5ee:	f340 80e3 	ble.w	801c7b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801c5f2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801c5f4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c5f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c5fa:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801c5fe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c602:	ea5f 422a 	movs.w	r2, sl, asr #16
 801c606:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c60a:	689b      	ldr	r3, [r3, #8]
 801c60c:	f100 8121 	bmi.w	801c852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c610:	f103 39ff 	add.w	r9, r3, #4294967295
 801c614:	454a      	cmp	r2, r9
 801c616:	f280 811c 	bge.w	801c852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c61a:	f1bc 0f00 	cmp.w	ip, #0
 801c61e:	f2c0 8118 	blt.w	801c852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c622:	f10e 39ff 	add.w	r9, lr, #4294967295
 801c626:	45cc      	cmp	ip, r9
 801c628:	f280 8113 	bge.w	801c852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c62c:	b21b      	sxth	r3, r3
 801c62e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c630:	fb0c 2203 	mla	r2, ip, r3, r2
 801c634:	eb04 0902 	add.w	r9, r4, r2
 801c638:	5ca2      	ldrb	r2, [r4, r2]
 801c63a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801c63e:	2800      	cmp	r0, #0
 801c640:	f000 80fe 	beq.w	801c840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c644:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c648:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801c64c:	9211      	str	r2, [sp, #68]	; 0x44
 801c64e:	b151      	cbz	r1, 801c666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c650:	eb09 0203 	add.w	r2, r9, r3
 801c654:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c658:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c65c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c65e:	7853      	ldrb	r3, [r2, #1]
 801c660:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c664:	9312      	str	r3, [sp, #72]	; 0x48
 801c666:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c668:	fb10 f201 	smulbb	r2, r0, r1
 801c66c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c66e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c672:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c676:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c67a:	10d2      	asrs	r2, r2, #3
 801c67c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c680:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801c684:	ea4c 0c03 	orr.w	ip, ip, r3
 801c688:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c68a:	041b      	lsls	r3, r3, #16
 801c68c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c690:	4323      	orrs	r3, r4
 801c692:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c694:	4353      	muls	r3, r2
 801c696:	fb09 330c 	mla	r3, r9, ip, r3
 801c69a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c69e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c6a2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c6a6:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c6aa:	f1c1 0c10 	rsb	ip, r1, #16
 801c6ae:	ebac 0c00 	sub.w	ip, ip, r0
 801c6b2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c6b6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c6ba:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c6be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c6c0:	0418      	lsls	r0, r3, #16
 801c6c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c6c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c6ca:	4318      	orrs	r0, r3
 801c6cc:	fb02 c200 	mla	r2, r2, r0, ip
 801c6d0:	8838      	ldrh	r0, [r7, #0]
 801c6d2:	0d53      	lsrs	r3, r2, #21
 801c6d4:	0952      	lsrs	r2, r2, #5
 801c6d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6da:	1201      	asrs	r1, r0, #8
 801c6dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c6e0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c6e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c6e8:	00c0      	lsls	r0, r0, #3
 801c6ea:	431a      	orrs	r2, r3
 801c6ec:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801c6f0:	fb11 f104 	smulbb	r1, r1, r4
 801c6f4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c6f8:	b292      	uxth	r2, r2
 801c6fa:	fb1e fe04 	smulbb	lr, lr, r4
 801c6fe:	b2c0      	uxtb	r0, r0
 801c700:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801c704:	fb10 f004 	smulbb	r0, r0, r4
 801c708:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c70c:	fb0c 1c03 	mla	ip, ip, r3, r1
 801c710:	10d1      	asrs	r1, r2, #3
 801c712:	00d2      	lsls	r2, r2, #3
 801c714:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c718:	fa1f fc8c 	uxth.w	ip, ip
 801c71c:	b2d2      	uxtb	r2, r2
 801c71e:	fb01 e103 	mla	r1, r1, r3, lr
 801c722:	fb02 0303 	mla	r3, r2, r3, r0
 801c726:	b289      	uxth	r1, r1
 801c728:	b29a      	uxth	r2, r3
 801c72a:	f10c 0301 	add.w	r3, ip, #1
 801c72e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c732:	1c53      	adds	r3, r2, #1
 801c734:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c738:	1c4a      	adds	r2, r1, #1
 801c73a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c73e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c742:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c746:	0949      	lsrs	r1, r1, #5
 801c748:	ea43 030c 	orr.w	r3, r3, ip
 801c74c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c750:	430b      	orrs	r3, r1
 801c752:	803b      	strh	r3, [r7, #0]
 801c754:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c756:	3702      	adds	r7, #2
 801c758:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c75c:	449a      	add	sl, r3
 801c75e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c760:	441d      	add	r5, r3
 801c762:	e742      	b.n	801c5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c764:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c766:	f108 0802 	add.w	r8, r8, #2
 801c76a:	449a      	add	sl, r3
 801c76c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c76e:	441d      	add	r5, r3
 801c770:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c772:	3b01      	subs	r3, #1
 801c774:	9309      	str	r3, [sp, #36]	; 0x24
 801c776:	e718      	b.n	801c5aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801c778:	d023      	beq.n	801c7c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c77a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c77c:	9825      	ldr	r0, [sp, #148]	; 0x94
 801c77e:	3b01      	subs	r3, #1
 801c780:	fb00 a003 	mla	r0, r0, r3, sl
 801c784:	1400      	asrs	r0, r0, #16
 801c786:	f53f af2d 	bmi.w	801c5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c78a:	3901      	subs	r1, #1
 801c78c:	4288      	cmp	r0, r1
 801c78e:	f6bf af29 	bge.w	801c5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c792:	9926      	ldr	r1, [sp, #152]	; 0x98
 801c794:	fb01 5303 	mla	r3, r1, r3, r5
 801c798:	141b      	asrs	r3, r3, #16
 801c79a:	f53f af23 	bmi.w	801c5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c79e:	3a01      	subs	r2, #1
 801c7a0:	4293      	cmp	r3, r2
 801c7a2:	f6bf af1f 	bge.w	801c5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c7a6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c7aa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801c7ae:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801c7b2:	f1be 0f00 	cmp.w	lr, #0
 801c7b6:	dc6c      	bgt.n	801c892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7ba:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c7be:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c7c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c7c4:	2b00      	cmp	r3, #0
 801c7c6:	f340 810e 	ble.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c7ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c7ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c7d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c7d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c7d8:	eef0 6a62 	vmov.f32	s13, s5
 801c7dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c7e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c7e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c7e8:	ee16 aa90 	vmov	sl, s13
 801c7ec:	eef0 6a43 	vmov.f32	s13, s6
 801c7f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c7f4:	ee16 5a90 	vmov	r5, s13
 801c7f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c7fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c800:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c804:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c808:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c80c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c810:	ee12 2a90 	vmov	r2, s5
 801c814:	eef0 2a47 	vmov.f32	s5, s14
 801c818:	fb92 f3f3 	sdiv	r3, r2, r3
 801c81c:	ee13 2a10 	vmov	r2, s6
 801c820:	9325      	str	r3, [sp, #148]	; 0x94
 801c822:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c824:	eeb0 3a67 	vmov.f32	s6, s15
 801c828:	fb92 f3f3 	sdiv	r3, r2, r3
 801c82c:	9326      	str	r3, [sp, #152]	; 0x98
 801c82e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c830:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801c832:	3b01      	subs	r3, #1
 801c834:	930c      	str	r3, [sp, #48]	; 0x30
 801c836:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c838:	bf08      	it	eq
 801c83a:	4613      	moveq	r3, r2
 801c83c:	9309      	str	r3, [sp, #36]	; 0x24
 801c83e:	e6a6      	b.n	801c58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c840:	2900      	cmp	r1, #0
 801c842:	f43f af10 	beq.w	801c666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c846:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c84a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c84e:	930f      	str	r3, [sp, #60]	; 0x3c
 801c850:	e709      	b.n	801c666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c852:	f112 0901 	adds.w	r9, r2, #1
 801c856:	f53f af7d 	bmi.w	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c85a:	454b      	cmp	r3, r9
 801c85c:	f6ff af7a 	blt.w	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c860:	f11c 0901 	adds.w	r9, ip, #1
 801c864:	f53f af76 	bmi.w	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c868:	45ce      	cmp	lr, r9
 801c86a:	f6ff af73 	blt.w	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c86e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c870:	b21b      	sxth	r3, r3
 801c872:	9202      	str	r2, [sp, #8]
 801c874:	fa0f f28e 	sxth.w	r2, lr
 801c878:	9300      	str	r3, [sp, #0]
 801c87a:	4633      	mov	r3, r6
 801c87c:	9201      	str	r2, [sp, #4]
 801c87e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c880:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c884:	e9cd c003 	strd	ip, r0, [sp, #12]
 801c888:	4639      	mov	r1, r7
 801c88a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801c88c:	f7ff fd8e 	bl	801c3ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801c890:	e760      	b.n	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c892:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c894:	ea4f 422a 	mov.w	r2, sl, asr #16
 801c898:	1429      	asrs	r1, r5, #16
 801c89a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c89c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c8a0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801c8a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c8a8:	fb03 2101 	mla	r1, r3, r1, r2
 801c8ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c8ae:	440a      	add	r2, r1
 801c8b0:	5c61      	ldrb	r1, [r4, r1]
 801c8b2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801c8b6:	f1bc 0f00 	cmp.w	ip, #0
 801c8ba:	f000 808c 	beq.w	801c9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801c8be:	7857      	ldrb	r7, [r2, #1]
 801c8c0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801c8c4:	9413      	str	r4, [sp, #76]	; 0x4c
 801c8c6:	b140      	cbz	r0, 801c8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c8c8:	18d7      	adds	r7, r2, r3
 801c8ca:	5cd3      	ldrb	r3, [r2, r3]
 801c8cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8d0:	9310      	str	r3, [sp, #64]	; 0x40
 801c8d2:	787b      	ldrb	r3, [r7, #1]
 801c8d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8d8:	9314      	str	r3, [sp, #80]	; 0x50
 801c8da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c8dc:	fb1c f200 	smulbb	r2, ip, r0
 801c8e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c8e2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c8e6:	041f      	lsls	r7, r3, #16
 801c8e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c8ec:	10d2      	asrs	r2, r2, #3
 801c8ee:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801c8f2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801c8f6:	431f      	orrs	r7, r3
 801c8f8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801c8fc:	9317      	str	r3, [sp, #92]	; 0x5c
 801c8fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c900:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c902:	041b      	lsls	r3, r3, #16
 801c904:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c908:	ea43 030b 	orr.w	r3, r3, fp
 801c90c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c910:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c914:	4353      	muls	r3, r2
 801c916:	fb04 3707 	mla	r7, r4, r7, r3
 801c91a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801c91e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c920:	ea43 0b01 	orr.w	fp, r3, r1
 801c924:	f1c0 0110 	rsb	r1, r0, #16
 801c928:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c92a:	eba1 0c0c 	sub.w	ip, r1, ip
 801c92e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c932:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c936:	fb0c 770b 	mla	r7, ip, fp, r7
 801c93a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c93e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801c942:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c946:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c94a:	fb02 770c 	mla	r7, r2, ip, r7
 801c94e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c950:	0d79      	lsrs	r1, r7, #21
 801c952:	8812      	ldrh	r2, [r2, #0]
 801c954:	097f      	lsrs	r7, r7, #5
 801c956:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c95a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c95e:	430f      	orrs	r7, r1
 801c960:	1211      	asrs	r1, r2, #8
 801c962:	b2bb      	uxth	r3, r7
 801c964:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c968:	10d7      	asrs	r7, r2, #3
 801c96a:	fb11 f104 	smulbb	r1, r1, r4
 801c96e:	1218      	asrs	r0, r3, #8
 801c970:	00d2      	lsls	r2, r2, #3
 801c972:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c976:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c97a:	fb17 f704 	smulbb	r7, r7, r4
 801c97e:	b2d2      	uxtb	r2, r2
 801c980:	fb00 1009 	mla	r0, r0, r9, r1
 801c984:	10d9      	asrs	r1, r3, #3
 801c986:	fb12 f204 	smulbb	r2, r2, r4
 801c98a:	00db      	lsls	r3, r3, #3
 801c98c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c990:	b280      	uxth	r0, r0
 801c992:	b2db      	uxtb	r3, r3
 801c994:	fb01 7109 	mla	r1, r1, r9, r7
 801c998:	fb03 2309 	mla	r3, r3, r9, r2
 801c99c:	1c42      	adds	r2, r0, #1
 801c99e:	b289      	uxth	r1, r1
 801c9a0:	b29b      	uxth	r3, r3
 801c9a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c9a6:	1c4f      	adds	r7, r1, #1
 801c9a8:	1c5a      	adds	r2, r3, #1
 801c9aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c9ae:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c9b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c9b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c9b8:	0949      	lsrs	r1, r1, #5
 801c9ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c9be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c9c2:	4310      	orrs	r0, r2
 801c9c4:	4308      	orrs	r0, r1
 801c9c6:	f823 0b02 	strh.w	r0, [r3], #2
 801c9ca:	930e      	str	r3, [sp, #56]	; 0x38
 801c9cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c9ce:	449a      	add	sl, r3
 801c9d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c9d2:	441d      	add	r5, r3
 801c9d4:	e6ed      	b.n	801c7b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801c9d6:	2800      	cmp	r0, #0
 801c9d8:	f43f af7f 	beq.w	801c8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c9dc:	5cd3      	ldrb	r3, [r2, r3]
 801c9de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c9e2:	9310      	str	r3, [sp, #64]	; 0x40
 801c9e4:	e779      	b.n	801c8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c9e6:	b019      	add	sp, #100	; 0x64
 801c9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c9ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c9ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c9f0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801c9f4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801c9f8:	f1b8 0f00 	cmp.w	r8, #0
 801c9fc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ca00:	fb08 470e 	mla	r7, r8, lr, r4
 801ca04:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ca08:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ca0c:	eb02 0907 	add.w	r9, r2, r7
 801ca10:	8808      	ldrh	r0, [r1, #0]
 801ca12:	db67      	blt.n	801cae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ca14:	45c2      	cmp	sl, r8
 801ca16:	dd65      	ble.n	801cae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ca18:	2c00      	cmp	r4, #0
 801ca1a:	db61      	blt.n	801cae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ca1c:	45a6      	cmp	lr, r4
 801ca1e:	dd5f      	ble.n	801cae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ca20:	5dd2      	ldrb	r2, [r2, r7]
 801ca22:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ca26:	1c62      	adds	r2, r4, #1
 801ca28:	d45f      	bmi.n	801caea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca2a:	4596      	cmp	lr, r2
 801ca2c:	dd5d      	ble.n	801caea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca2e:	2d00      	cmp	r5, #0
 801ca30:	d05b      	beq.n	801caea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ca32:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ca36:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ca3a:	f118 0801 	adds.w	r8, r8, #1
 801ca3e:	d458      	bmi.n	801caf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca40:	45c2      	cmp	sl, r8
 801ca42:	dd56      	ble.n	801caf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca44:	2e00      	cmp	r6, #0
 801ca46:	d054      	beq.n	801caf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ca48:	2c00      	cmp	r4, #0
 801ca4a:	db50      	blt.n	801caee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ca4c:	45a6      	cmp	lr, r4
 801ca4e:	dd4e      	ble.n	801caee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ca50:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ca54:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ca58:	3401      	adds	r4, #1
 801ca5a:	d407      	bmi.n	801ca6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca5c:	45a6      	cmp	lr, r4
 801ca5e:	dd05      	ble.n	801ca6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca60:	b125      	cbz	r5, 801ca6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ca62:	44ce      	add	lr, r9
 801ca64:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ca68:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ca6c:	fb15 f406 	smulbb	r4, r5, r6
 801ca70:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ca74:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ca78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ca7c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ca80:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ca84:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ca88:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ca8c:	ea43 0c0c 	orr.w	ip, r3, ip
 801ca90:	f1c6 0310 	rsb	r3, r6, #16
 801ca94:	ea4e 0707 	orr.w	r7, lr, r7
 801ca98:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ca9c:	1b5b      	subs	r3, r3, r5
 801ca9e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801caa2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801caa6:	437d      	muls	r5, r7
 801caa8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801caac:	0403      	lsls	r3, r0, #16
 801caae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cab2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cab6:	4318      	orrs	r0, r3
 801cab8:	0413      	lsls	r3, r2, #16
 801caba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cabe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cac2:	fb04 c000 	mla	r0, r4, r0, ip
 801cac6:	4313      	orrs	r3, r2
 801cac8:	fb06 0003 	mla	r0, r6, r3, r0
 801cacc:	0d43      	lsrs	r3, r0, #21
 801cace:	0940      	lsrs	r0, r0, #5
 801cad0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cad4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cad8:	4318      	orrs	r0, r3
 801cada:	8008      	strh	r0, [r1, #0]
 801cadc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cae0:	4684      	mov	ip, r0
 801cae2:	e7a0      	b.n	801ca26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801cae4:	4607      	mov	r7, r0
 801cae6:	4684      	mov	ip, r0
 801cae8:	e7a7      	b.n	801ca3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801caea:	4607      	mov	r7, r0
 801caec:	e7a5      	b.n	801ca3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801caee:	4602      	mov	r2, r0
 801caf0:	e7b2      	b.n	801ca58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801caf2:	4602      	mov	r2, r0
 801caf4:	e7ba      	b.n	801ca6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801caf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cafa:	b093      	sub	sp, #76	; 0x4c
 801cafc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cb00:	920f      	str	r2, [sp, #60]	; 0x3c
 801cb02:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cb04:	9010      	str	r0, [sp, #64]	; 0x40
 801cb06:	9108      	str	r1, [sp, #32]
 801cb08:	6850      	ldr	r0, [r2, #4]
 801cb0a:	9306      	str	r3, [sp, #24]
 801cb0c:	6812      	ldr	r2, [r2, #0]
 801cb0e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cb12:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801cb16:	fb00 1303 	mla	r3, r0, r3, r1
 801cb1a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cb1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb20:	681b      	ldr	r3, [r3, #0]
 801cb22:	9307      	str	r3, [sp, #28]
 801cb24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb26:	685f      	ldr	r7, [r3, #4]
 801cb28:	3704      	adds	r7, #4
 801cb2a:	9b08      	ldr	r3, [sp, #32]
 801cb2c:	2b00      	cmp	r3, #0
 801cb2e:	dc03      	bgt.n	801cb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801cb30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cb32:	2b00      	cmp	r3, #0
 801cb34:	f340 81b2 	ble.w	801ce9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cb38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb42:	1e48      	subs	r0, r1, #1
 801cb44:	f102 3cff 	add.w	ip, r2, #4294967295
 801cb48:	9b06      	ldr	r3, [sp, #24]
 801cb4a:	2b00      	cmp	r3, #0
 801cb4c:	f340 80a9 	ble.w	801cca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801cb50:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cb54:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cb58:	d406      	bmi.n	801cb68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb5a:	4586      	cmp	lr, r0
 801cb5c:	da04      	bge.n	801cb68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb5e:	2b00      	cmp	r3, #0
 801cb60:	db02      	blt.n	801cb68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb62:	4563      	cmp	r3, ip
 801cb64:	f2c0 809e 	blt.w	801cca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801cb68:	f11e 0e01 	adds.w	lr, lr, #1
 801cb6c:	f100 808f 	bmi.w	801cc8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb70:	4571      	cmp	r1, lr
 801cb72:	f2c0 808c 	blt.w	801cc8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb76:	3301      	adds	r3, #1
 801cb78:	f100 8089 	bmi.w	801cc8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb7c:	429a      	cmp	r2, r3
 801cb7e:	f2c0 8086 	blt.w	801cc8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb82:	f8dd b018 	ldr.w	fp, [sp, #24]
 801cb86:	46c8      	mov	r8, r9
 801cb88:	f1bb 0f00 	cmp.w	fp, #0
 801cb8c:	f340 80a6 	ble.w	801ccdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cb90:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801cb92:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801cb96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb98:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801cb9c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cba0:	1422      	asrs	r2, r4, #16
 801cba2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cba6:	689b      	ldr	r3, [r3, #8]
 801cba8:	f100 80e3 	bmi.w	801cd72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbac:	f103 3aff 	add.w	sl, r3, #4294967295
 801cbb0:	4552      	cmp	r2, sl
 801cbb2:	f280 80de 	bge.w	801cd72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbb6:	f1bc 0f00 	cmp.w	ip, #0
 801cbba:	f2c0 80da 	blt.w	801cd72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 801cbc2:	45d4      	cmp	ip, sl
 801cbc4:	f280 80d5 	bge.w	801cd72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801cbc8:	b21b      	sxth	r3, r3
 801cbca:	9d07      	ldr	r5, [sp, #28]
 801cbcc:	fb0c 2203 	mla	r2, ip, r3, r2
 801cbd0:	eb05 0a02 	add.w	sl, r5, r2
 801cbd4:	5caa      	ldrb	r2, [r5, r2]
 801cbd6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801cbda:	2800      	cmp	r0, #0
 801cbdc:	f000 80c0 	beq.w	801cd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801cbe0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cbe4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801cbe8:	920b      	str	r2, [sp, #44]	; 0x2c
 801cbea:	b151      	cbz	r1, 801cc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cbec:	eb0a 0203 	add.w	r2, sl, r3
 801cbf0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801cbf4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cbf8:	9309      	str	r3, [sp, #36]	; 0x24
 801cbfa:	7853      	ldrb	r3, [r2, #1]
 801cbfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cc00:	930c      	str	r3, [sp, #48]	; 0x30
 801cc02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cc04:	fb10 f201 	smulbb	r2, r0, r1
 801cc08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cc0a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801cc0e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801cc12:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cc16:	10d2      	asrs	r2, r2, #3
 801cc18:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cc1c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801cc20:	ea4c 0c03 	orr.w	ip, ip, r3
 801cc24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cc26:	041b      	lsls	r3, r3, #16
 801cc28:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801cc2c:	432b      	orrs	r3, r5
 801cc2e:	4353      	muls	r3, r2
 801cc30:	fb0a 330c 	mla	r3, sl, ip, r3
 801cc34:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801cc38:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cc3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cc40:	ea4c 0e0e 	orr.w	lr, ip, lr
 801cc44:	f1c1 0c10 	rsb	ip, r1, #16
 801cc48:	ebac 0c00 	sub.w	ip, ip, r0
 801cc4c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cc50:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801cc54:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801cc58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc5a:	0418      	lsls	r0, r3, #16
 801cc5c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801cc60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cc64:	4318      	orrs	r0, r3
 801cc66:	fb02 c200 	mla	r2, r2, r0, ip
 801cc6a:	0d53      	lsrs	r3, r2, #21
 801cc6c:	0952      	lsrs	r2, r2, #5
 801cc6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cc76:	431a      	orrs	r2, r3
 801cc78:	f8a8 2000 	strh.w	r2, [r8]
 801cc7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cc7e:	f108 0802 	add.w	r8, r8, #2
 801cc82:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cc86:	441c      	add	r4, r3
 801cc88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc8a:	441e      	add	r6, r3
 801cc8c:	e77c      	b.n	801cb88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cc8e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cc90:	f109 0902 	add.w	r9, r9, #2
 801cc94:	441c      	add	r4, r3
 801cc96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc98:	441e      	add	r6, r3
 801cc9a:	9b06      	ldr	r3, [sp, #24]
 801cc9c:	3b01      	subs	r3, #1
 801cc9e:	9306      	str	r3, [sp, #24]
 801cca0:	e752      	b.n	801cb48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cca2:	d020      	beq.n	801cce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cca4:	9b06      	ldr	r3, [sp, #24]
 801cca6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cca8:	3b01      	subs	r3, #1
 801ccaa:	fb00 4003 	mla	r0, r0, r3, r4
 801ccae:	1400      	asrs	r0, r0, #16
 801ccb0:	f53f af67 	bmi.w	801cb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccb4:	3901      	subs	r1, #1
 801ccb6:	4288      	cmp	r0, r1
 801ccb8:	f6bf af63 	bge.w	801cb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccbc:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ccbe:	fb01 6303 	mla	r3, r1, r3, r6
 801ccc2:	141b      	asrs	r3, r3, #16
 801ccc4:	f53f af5d 	bmi.w	801cb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccc8:	3a01      	subs	r2, #1
 801ccca:	4293      	cmp	r3, r2
 801cccc:	f6bf af59 	bge.w	801cb82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ccd0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ccd4:	46ca      	mov	sl, r9
 801ccd6:	f1b8 0f00 	cmp.w	r8, #0
 801ccda:	dc67      	bgt.n	801cdac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ccdc:	9b06      	ldr	r3, [sp, #24]
 801ccde:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cce2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801cce6:	9b08      	ldr	r3, [sp, #32]
 801cce8:	2b00      	cmp	r3, #0
 801ccea:	f340 80d7 	ble.w	801ce9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ccee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccf2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ccf4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccf8:	eeb0 6a62 	vmov.f32	s12, s5
 801ccfc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cd00:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd08:	ee16 4a10 	vmov	r4, s12
 801cd0c:	eeb0 6a43 	vmov.f32	s12, s6
 801cd10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd14:	ee16 6a10 	vmov	r6, s12
 801cd18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd30:	ee12 2a90 	vmov	r2, s5
 801cd34:	eef0 2a47 	vmov.f32	s5, s14
 801cd38:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd3c:	ee13 2a10 	vmov	r2, s6
 801cd40:	931f      	str	r3, [sp, #124]	; 0x7c
 801cd42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd44:	eeb0 3a67 	vmov.f32	s6, s15
 801cd48:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd4c:	9320      	str	r3, [sp, #128]	; 0x80
 801cd4e:	9b08      	ldr	r3, [sp, #32]
 801cd50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cd52:	3b01      	subs	r3, #1
 801cd54:	9308      	str	r3, [sp, #32]
 801cd56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd58:	bf08      	it	eq
 801cd5a:	4613      	moveq	r3, r2
 801cd5c:	9306      	str	r3, [sp, #24]
 801cd5e:	e6e4      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801cd60:	2900      	cmp	r1, #0
 801cd62:	f43f af4e 	beq.w	801cc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cd66:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801cd6a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cd6e:	9309      	str	r3, [sp, #36]	; 0x24
 801cd70:	e747      	b.n	801cc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cd72:	f112 0a01 	adds.w	sl, r2, #1
 801cd76:	d481      	bmi.n	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd78:	4553      	cmp	r3, sl
 801cd7a:	f6ff af7f 	blt.w	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd7e:	f11c 0a01 	adds.w	sl, ip, #1
 801cd82:	f53f af7b 	bmi.w	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd86:	45d6      	cmp	lr, sl
 801cd88:	f6ff af78 	blt.w	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd8c:	b21b      	sxth	r3, r3
 801cd8e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801cd92:	fa0f f28e 	sxth.w	r2, lr
 801cd96:	9300      	str	r3, [sp, #0]
 801cd98:	463b      	mov	r3, r7
 801cd9a:	9201      	str	r2, [sp, #4]
 801cd9c:	9a07      	ldr	r2, [sp, #28]
 801cd9e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801cda2:	4641      	mov	r1, r8
 801cda4:	9810      	ldr	r0, [sp, #64]	; 0x40
 801cda6:	f7ff fe21 	bl	801c9ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cdaa:	e767      	b.n	801cc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cdae:	1422      	asrs	r2, r4, #16
 801cdb0:	1431      	asrs	r1, r6, #16
 801cdb2:	9d07      	ldr	r5, [sp, #28]
 801cdb4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cdb8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801cdbc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cdc0:	fb03 2101 	mla	r1, r3, r1, r2
 801cdc4:	9a07      	ldr	r2, [sp, #28]
 801cdc6:	440a      	add	r2, r1
 801cdc8:	5c69      	ldrb	r1, [r5, r1]
 801cdca:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801cdce:	f1be 0f00 	cmp.w	lr, #0
 801cdd2:	d05c      	beq.n	801ce8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801cdd4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801cdd8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801cddc:	950d      	str	r5, [sp, #52]	; 0x34
 801cdde:	b150      	cbz	r0, 801cdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801cde0:	eb02 0c03 	add.w	ip, r2, r3
 801cde4:	5cd3      	ldrb	r3, [r2, r3]
 801cde6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cdea:	930a      	str	r3, [sp, #40]	; 0x28
 801cdec:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801cdf0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cdf4:	930e      	str	r3, [sp, #56]	; 0x38
 801cdf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cdf8:	fb1e f200 	smulbb	r2, lr, r0
 801cdfc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801cdfe:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce02:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ce06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ce0a:	10d2      	asrs	r2, r2, #3
 801ce0c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ce10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ce14:	ea4c 0c03 	orr.w	ip, ip, r3
 801ce18:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ce1c:	9311      	str	r3, [sp, #68]	; 0x44
 801ce1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ce22:	041b      	lsls	r3, r3, #16
 801ce24:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ce28:	ea43 030b 	orr.w	r3, r3, fp
 801ce2c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ce30:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ce34:	4353      	muls	r3, r2
 801ce36:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ce3a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ce3e:	ea43 0b01 	orr.w	fp, r3, r1
 801ce42:	f1c0 0110 	rsb	r1, r0, #16
 801ce46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce48:	eba1 0e0e 	sub.w	lr, r1, lr
 801ce4c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ce50:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ce54:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ce58:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ce5c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ce60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce64:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ce68:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ce6c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ce70:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ce74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ce7c:	ea43 0c0c 	orr.w	ip, r3, ip
 801ce80:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ce82:	441c      	add	r4, r3
 801ce84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce86:	f82a cb02 	strh.w	ip, [sl], #2
 801ce8a:	441e      	add	r6, r3
 801ce8c:	e723      	b.n	801ccd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ce8e:	2800      	cmp	r0, #0
 801ce90:	d0b1      	beq.n	801cdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ce92:	5cd3      	ldrb	r3, [r2, r3]
 801ce94:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ce98:	930a      	str	r3, [sp, #40]	; 0x28
 801ce9a:	e7ac      	b.n	801cdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ce9c:	b013      	add	sp, #76	; 0x4c
 801ce9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801cea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cea6:	880d      	ldrh	r5, [r1, #0]
 801cea8:	b087      	sub	sp, #28
 801ceaa:	10ef      	asrs	r7, r5, #3
 801ceac:	9103      	str	r1, [sp, #12]
 801ceae:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ceb2:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801ceb6:	00ed      	lsls	r5, r5, #3
 801ceb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cebc:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801cec0:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cec4:	b2ed      	uxtb	r5, r5
 801cec6:	9701      	str	r7, [sp, #4]
 801cec8:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801cecc:	9502      	str	r5, [sp, #8]
 801cece:	9d01      	ldr	r5, [sp, #4]
 801ced0:	9902      	ldr	r1, [sp, #8]
 801ced2:	022d      	lsls	r5, r5, #8
 801ced4:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801ced8:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801cedc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801cee0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801cee4:	430d      	orrs	r5, r1
 801cee6:	fb06 0709 	mla	r7, r6, r9, r0
 801ceea:	2e00      	cmp	r6, #0
 801ceec:	9505      	str	r5, [sp, #20]
 801ceee:	eb02 0c07 	add.w	ip, r2, r7
 801cef2:	f2c0 80b6 	blt.w	801d062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801cef6:	45b3      	cmp	fp, r6
 801cef8:	f340 80b3 	ble.w	801d062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801cefc:	2800      	cmp	r0, #0
 801cefe:	f2c0 80ae 	blt.w	801d05e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801cf02:	4581      	cmp	r9, r0
 801cf04:	f340 80ab 	ble.w	801d05e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801cf08:	5dd7      	ldrb	r7, [r2, r7]
 801cf0a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801cf0e:	441f      	add	r7, r3
 801cf10:	1c42      	adds	r2, r0, #1
 801cf12:	f100 80a9 	bmi.w	801d068 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf16:	4591      	cmp	r9, r2
 801cf18:	f340 80a6 	ble.w	801d068 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf1c:	2c00      	cmp	r4, #0
 801cf1e:	f000 80a3 	beq.w	801d068 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801cf22:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801cf26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cf2a:	441d      	add	r5, r3
 801cf2c:	3601      	adds	r6, #1
 801cf2e:	f100 809f 	bmi.w	801d070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf32:	45b3      	cmp	fp, r6
 801cf34:	f340 809c 	ble.w	801d070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf38:	f1be 0f00 	cmp.w	lr, #0
 801cf3c:	f000 8098 	beq.w	801d070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801cf40:	2800      	cmp	r0, #0
 801cf42:	f2c0 8093 	blt.w	801d06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801cf46:	4581      	cmp	r9, r0
 801cf48:	f340 8090 	ble.w	801d06c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801cf4c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801cf50:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cf54:	441e      	add	r6, r3
 801cf56:	3001      	adds	r0, #1
 801cf58:	f100 808d 	bmi.w	801d076 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf5c:	4581      	cmp	r9, r0
 801cf5e:	f340 808a 	ble.w	801d076 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf62:	2c00      	cmp	r4, #0
 801cf64:	f000 8087 	beq.w	801d076 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801cf68:	44e1      	add	r9, ip
 801cf6a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801cf6e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cf72:	4413      	add	r3, r2
 801cf74:	b2a4      	uxth	r4, r4
 801cf76:	f897 c002 	ldrb.w	ip, [r7, #2]
 801cf7a:	fa1f fe8e 	uxth.w	lr, lr
 801cf7e:	9901      	ldr	r1, [sp, #4]
 801cf80:	fb04 fb0e 	mul.w	fp, r4, lr
 801cf84:	0124      	lsls	r4, r4, #4
 801cf86:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801cf8a:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801cf8e:	eba4 040b 	sub.w	r4, r4, fp
 801cf92:	fa1f f08e 	uxth.w	r0, lr
 801cf96:	b2a2      	uxth	r2, r4
 801cf98:	78ac      	ldrb	r4, [r5, #2]
 801cf9a:	eba9 0900 	sub.w	r9, r9, r0
 801cf9e:	fa1f fe88 	uxth.w	lr, r8
 801cfa2:	4354      	muls	r4, r2
 801cfa4:	ea6f 0808 	mvn.w	r8, r8
 801cfa8:	fa1f f989 	uxth.w	r9, r9
 801cfac:	fa5f f888 	uxtb.w	r8, r8
 801cfb0:	fb09 440c 	mla	r4, r9, ip, r4
 801cfb4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801cfb8:	fb1a fa08 	smulbb	sl, sl, r8
 801cfbc:	fb00 440c 	mla	r4, r0, ip, r4
 801cfc0:	f893 c002 	ldrb.w	ip, [r3, #2]
 801cfc4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801cfc8:	787c      	ldrb	r4, [r7, #1]
 801cfca:	783f      	ldrb	r7, [r7, #0]
 801cfcc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801cfd0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801cfd4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801cfd8:	782d      	ldrb	r5, [r5, #0]
 801cfda:	fb02 fa0a 	mul.w	sl, r2, sl
 801cfde:	fa1f fc8c 	uxth.w	ip, ip
 801cfe2:	436a      	muls	r2, r5
 801cfe4:	7835      	ldrb	r5, [r6, #0]
 801cfe6:	fb09 aa04 	mla	sl, r9, r4, sl
 801cfea:	7874      	ldrb	r4, [r6, #1]
 801cfec:	fb09 2207 	mla	r2, r9, r7, r2
 801cff0:	fb00 aa04 	mla	sl, r0, r4, sl
 801cff4:	785c      	ldrb	r4, [r3, #1]
 801cff6:	fb00 2005 	mla	r0, r0, r5, r2
 801cffa:	781b      	ldrb	r3, [r3, #0]
 801cffc:	fb0b a404 	mla	r4, fp, r4, sl
 801d000:	fb11 fa08 	smulbb	sl, r1, r8
 801d004:	fb0b 0b03 	mla	fp, fp, r3, r0
 801d008:	9b02      	ldr	r3, [sp, #8]
 801d00a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801d00e:	fb13 f808 	smulbb	r8, r3, r8
 801d012:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801d016:	fb04 a40e 	mla	r4, r4, lr, sl
 801d01a:	f10c 0301 	add.w	r3, ip, #1
 801d01e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801d022:	b2a4      	uxth	r4, r4
 801d024:	fa1f fe8e 	uxth.w	lr, lr
 801d028:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d02c:	f104 0a01 	add.w	sl, r4, #1
 801d030:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801d034:	f10e 0c01 	add.w	ip, lr, #1
 801d038:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d03c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d040:	0964      	lsrs	r4, r4, #5
 801d042:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d046:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d04a:	ea4c 0c03 	orr.w	ip, ip, r3
 801d04e:	9b03      	ldr	r3, [sp, #12]
 801d050:	ea4c 0c04 	orr.w	ip, ip, r4
 801d054:	f8a3 c000 	strh.w	ip, [r3]
 801d058:	b007      	add	sp, #28
 801d05a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d05e:	af05      	add	r7, sp, #20
 801d060:	e756      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801d062:	ad05      	add	r5, sp, #20
 801d064:	462f      	mov	r7, r5
 801d066:	e761      	b.n	801cf2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d068:	ad05      	add	r5, sp, #20
 801d06a:	e75f      	b.n	801cf2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d06c:	ae05      	add	r6, sp, #20
 801d06e:	e772      	b.n	801cf56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801d070:	ab05      	add	r3, sp, #20
 801d072:	461e      	mov	r6, r3
 801d074:	e77e      	b.n	801cf74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801d076:	ab05      	add	r3, sp, #20
 801d078:	e77c      	b.n	801cf74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801d07a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d07a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d07e:	b095      	sub	sp, #84	; 0x54
 801d080:	9212      	str	r2, [sp, #72]	; 0x48
 801d082:	9309      	str	r3, [sp, #36]	; 0x24
 801d084:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d086:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801d08a:	9013      	str	r0, [sp, #76]	; 0x4c
 801d08c:	930f      	str	r3, [sp, #60]	; 0x3c
 801d08e:	6850      	ldr	r0, [r2, #4]
 801d090:	910e      	str	r1, [sp, #56]	; 0x38
 801d092:	6812      	ldr	r2, [r2, #0]
 801d094:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801d098:	fb00 1303 	mla	r3, r0, r3, r1
 801d09c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d0a0:	930a      	str	r3, [sp, #40]	; 0x28
 801d0a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d0a4:	681b      	ldr	r3, [r3, #0]
 801d0a6:	930d      	str	r3, [sp, #52]	; 0x34
 801d0a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d0aa:	685c      	ldr	r4, [r3, #4]
 801d0ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d0ae:	3404      	adds	r4, #4
 801d0b0:	43db      	mvns	r3, r3
 801d0b2:	b2db      	uxtb	r3, r3
 801d0b4:	930b      	str	r3, [sp, #44]	; 0x2c
 801d0b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0b8:	2b00      	cmp	r3, #0
 801d0ba:	dc03      	bgt.n	801d0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d0bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d0be:	2b00      	cmp	r3, #0
 801d0c0:	f340 8255 	ble.w	801d56e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d0c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d0c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d0ce:	1e48      	subs	r0, r1, #1
 801d0d0:	1e55      	subs	r5, r2, #1
 801d0d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d0d4:	2b00      	cmp	r3, #0
 801d0d6:	f340 80f9 	ble.w	801d2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d0da:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d0dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d0de:	1436      	asrs	r6, r6, #16
 801d0e0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d0e4:	d406      	bmi.n	801d0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0e6:	4286      	cmp	r6, r0
 801d0e8:	da04      	bge.n	801d0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0ea:	2b00      	cmp	r3, #0
 801d0ec:	db02      	blt.n	801d0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d0ee:	42ab      	cmp	r3, r5
 801d0f0:	f2c0 80ed 	blt.w	801d2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801d0f4:	3601      	adds	r6, #1
 801d0f6:	f100 80da 	bmi.w	801d2ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d0fa:	42b1      	cmp	r1, r6
 801d0fc:	f2c0 80d7 	blt.w	801d2ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d100:	3301      	adds	r3, #1
 801d102:	f100 80d4 	bmi.w	801d2ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d106:	429a      	cmp	r2, r3
 801d108:	f2c0 80d1 	blt.w	801d2ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d10c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d10e:	9311      	str	r3, [sp, #68]	; 0x44
 801d110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d112:	930c      	str	r3, [sp, #48]	; 0x30
 801d114:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d116:	2b00      	cmp	r3, #0
 801d118:	f340 80fa 	ble.w	801d310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d11c:	9826      	ldr	r0, [sp, #152]	; 0x98
 801d11e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d120:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d122:	68c6      	ldr	r6, [r0, #12]
 801d124:	141d      	asrs	r5, r3, #16
 801d126:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d128:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d12c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d12e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d130:	1400      	asrs	r0, r0, #16
 801d132:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d136:	6892      	ldr	r2, [r2, #8]
 801d138:	f100 813e 	bmi.w	801d3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d13c:	1e57      	subs	r7, r2, #1
 801d13e:	42b8      	cmp	r0, r7
 801d140:	f280 813a 	bge.w	801d3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d144:	2d00      	cmp	r5, #0
 801d146:	f2c0 8137 	blt.w	801d3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d14a:	1e77      	subs	r7, r6, #1
 801d14c:	42bd      	cmp	r5, r7
 801d14e:	f280 8133 	bge.w	801d3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d152:	b212      	sxth	r2, r2
 801d154:	fb05 0002 	mla	r0, r5, r2, r0
 801d158:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d15a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801d15e:	182e      	adds	r6, r5, r0
 801d160:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801d164:	eb04 050a 	add.w	r5, r4, sl
 801d168:	2b00      	cmp	r3, #0
 801d16a:	f000 8117 	beq.w	801d39c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801d16e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d172:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d176:	44a4      	add	ip, r4
 801d178:	2900      	cmp	r1, #0
 801d17a:	f000 8117 	beq.w	801d3ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801d17e:	18b0      	adds	r0, r6, r2
 801d180:	5cb2      	ldrb	r2, [r6, r2]
 801d182:	7840      	ldrb	r0, [r0, #1]
 801d184:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d188:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d18c:	4422      	add	r2, r4
 801d18e:	4420      	add	r0, r4
 801d190:	b29b      	uxth	r3, r3
 801d192:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801d196:	b289      	uxth	r1, r1
 801d198:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d19c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d19e:	fb03 f901 	mul.w	r9, r3, r1
 801d1a2:	011b      	lsls	r3, r3, #4
 801d1a4:	f8b6 e000 	ldrh.w	lr, [r6]
 801d1a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d1ac:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801d1b0:	eba3 0309 	sub.w	r3, r3, r9
 801d1b4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801d1b8:	b289      	uxth	r1, r1
 801d1ba:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801d1be:	b29b      	uxth	r3, r3
 801d1c0:	eba8 0801 	sub.w	r8, r8, r1
 801d1c4:	435f      	muls	r7, r3
 801d1c6:	fa1f f888 	uxth.w	r8, r8
 801d1ca:	9310      	str	r3, [sp, #64]	; 0x40
 801d1cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1ce:	fb08 770b 	mla	r7, r8, fp, r7
 801d1d2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d1d6:	fb01 770b 	mla	r7, r1, fp, r7
 801d1da:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d1de:	fb09 770b 	mla	r7, r9, fp, r7
 801d1e2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801d1e6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801d1ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d1ee:	fb1b fb03 	smulbb	fp, fp, r3
 801d1f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1f4:	fb07 b706 	mla	r7, r7, r6, fp
 801d1f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d1fc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d200:	f89c c000 	ldrb.w	ip, [ip]
 801d204:	b2bf      	uxth	r7, r7
 801d206:	435d      	muls	r5, r3
 801d208:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d20a:	fb08 550b 	mla	r5, r8, fp, r5
 801d20e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d212:	fb01 550b 	mla	r5, r1, fp, r5
 801d216:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d21a:	fb09 550b 	mla	r5, r9, fp, r5
 801d21e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801d222:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d226:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d22a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d22e:	fa5f fe8e 	uxtb.w	lr, lr
 801d232:	fb1b fb03 	smulbb	fp, fp, r3
 801d236:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d238:	fb03 f30c 	mul.w	r3, r3, ip
 801d23c:	f892 c000 	ldrb.w	ip, [r2]
 801d240:	fb05 b506 	mla	r5, r5, r6, fp
 801d244:	fb08 330a 	mla	r3, r8, sl, r3
 801d248:	b2ad      	uxth	r5, r5
 801d24a:	fb01 330c 	mla	r3, r1, ip, r3
 801d24e:	f890 c000 	ldrb.w	ip, [r0]
 801d252:	f105 0b01 	add.w	fp, r5, #1
 801d256:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d25a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d25c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d260:	fb1e fe03 	smulbb	lr, lr, r3
 801d264:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d268:	1c7b      	adds	r3, r7, #1
 801d26a:	096d      	lsrs	r5, r5, #5
 801d26c:	fb0c e606 	mla	r6, ip, r6, lr
 801d270:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d274:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d278:	b2b6      	uxth	r6, r6
 801d27a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801d27e:	1c77      	adds	r7, r6, #1
 801d280:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801d284:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d288:	431f      	orrs	r7, r3
 801d28a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d28c:	433d      	orrs	r5, r7
 801d28e:	801d      	strh	r5, [r3, #0]
 801d290:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d292:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d294:	3302      	adds	r3, #2
 801d296:	930c      	str	r3, [sp, #48]	; 0x30
 801d298:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d29a:	4413      	add	r3, r2
 801d29c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d29e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d2a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2a2:	4413      	add	r3, r2
 801d2a4:	9320      	str	r3, [sp, #128]	; 0x80
 801d2a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d2a8:	3b01      	subs	r3, #1
 801d2aa:	9311      	str	r3, [sp, #68]	; 0x44
 801d2ac:	e732      	b.n	801d114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d2ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d2b0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801d2b2:	4433      	add	r3, r6
 801d2b4:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801d2b6:	931f      	str	r3, [sp, #124]	; 0x7c
 801d2b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2ba:	4433      	add	r3, r6
 801d2bc:	9320      	str	r3, [sp, #128]	; 0x80
 801d2be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2c0:	3b01      	subs	r3, #1
 801d2c2:	9309      	str	r3, [sp, #36]	; 0x24
 801d2c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2c6:	3302      	adds	r3, #2
 801d2c8:	930a      	str	r3, [sp, #40]	; 0x28
 801d2ca:	e702      	b.n	801d0d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d2cc:	d027      	beq.n	801d31e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d2ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2d0:	9821      	ldr	r0, [sp, #132]	; 0x84
 801d2d2:	3b01      	subs	r3, #1
 801d2d4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801d2d6:	fb00 5003 	mla	r0, r0, r3, r5
 801d2da:	1400      	asrs	r0, r0, #16
 801d2dc:	f53f af16 	bmi.w	801d10c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2e0:	3901      	subs	r1, #1
 801d2e2:	4288      	cmp	r0, r1
 801d2e4:	f6bf af12 	bge.w	801d10c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2e8:	9922      	ldr	r1, [sp, #136]	; 0x88
 801d2ea:	9820      	ldr	r0, [sp, #128]	; 0x80
 801d2ec:	fb01 0303 	mla	r3, r1, r3, r0
 801d2f0:	141b      	asrs	r3, r3, #16
 801d2f2:	f53f af0b 	bmi.w	801d10c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2f6:	3a01      	subs	r2, #1
 801d2f8:	4293      	cmp	r3, r2
 801d2fa:	f6bf af07 	bge.w	801d10c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d2fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d300:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801d304:	9311      	str	r3, [sp, #68]	; 0x44
 801d306:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d308:	930c      	str	r3, [sp, #48]	; 0x30
 801d30a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d30c:	2b00      	cmp	r3, #0
 801d30e:	dc70      	bgt.n	801d3f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d312:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d314:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d318:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d31c:	930a      	str	r3, [sp, #40]	; 0x28
 801d31e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d320:	2b00      	cmp	r3, #0
 801d322:	f340 8124 	ble.w	801d56e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d326:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d32a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d32c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d330:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d334:	eef0 6a62 	vmov.f32	s13, s5
 801d338:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d33c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d340:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d344:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801d348:	eef0 6a43 	vmov.f32	s13, s6
 801d34c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d350:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801d354:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d358:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d35c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d360:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d364:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d368:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d36c:	ee12 2a90 	vmov	r2, s5
 801d370:	eef0 2a47 	vmov.f32	s5, s14
 801d374:	fb92 f3f3 	sdiv	r3, r2, r3
 801d378:	ee13 2a10 	vmov	r2, s6
 801d37c:	9321      	str	r3, [sp, #132]	; 0x84
 801d37e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d380:	eeb0 3a67 	vmov.f32	s6, s15
 801d384:	fb92 f3f3 	sdiv	r3, r2, r3
 801d388:	9322      	str	r3, [sp, #136]	; 0x88
 801d38a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d38c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d38e:	3b01      	subs	r3, #1
 801d390:	930e      	str	r3, [sp, #56]	; 0x38
 801d392:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d394:	bf08      	it	eq
 801d396:	4613      	moveq	r3, r2
 801d398:	9309      	str	r3, [sp, #36]	; 0x24
 801d39a:	e68c      	b.n	801d0b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d39c:	b149      	cbz	r1, 801d3b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801d39e:	5cb2      	ldrb	r2, [r6, r2]
 801d3a0:	4628      	mov	r0, r5
 801d3a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d3a6:	4422      	add	r2, r4
 801d3a8:	46ac      	mov	ip, r5
 801d3aa:	e6f1      	b.n	801d190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d3ac:	4628      	mov	r0, r5
 801d3ae:	462a      	mov	r2, r5
 801d3b0:	e6ee      	b.n	801d190 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d3b2:	4628      	mov	r0, r5
 801d3b4:	462a      	mov	r2, r5
 801d3b6:	e7f7      	b.n	801d3a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801d3b8:	1c47      	adds	r7, r0, #1
 801d3ba:	f53f af69 	bmi.w	801d290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3be:	42ba      	cmp	r2, r7
 801d3c0:	f6ff af66 	blt.w	801d290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3c4:	1c6f      	adds	r7, r5, #1
 801d3c6:	f53f af63 	bmi.w	801d290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3ca:	42be      	cmp	r6, r7
 801d3cc:	f6ff af60 	blt.w	801d290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d3d2:	b236      	sxth	r6, r6
 801d3d4:	b212      	sxth	r2, r2
 801d3d6:	9002      	str	r0, [sp, #8]
 801d3d8:	9601      	str	r6, [sp, #4]
 801d3da:	9200      	str	r2, [sp, #0]
 801d3dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d3de:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801d3e2:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801d3e6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801d3ea:	4623      	mov	r3, r4
 801d3ec:	f7ff fd59 	bl	801cea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801d3f0:	e74e      	b.n	801d290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d3f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d3f4:	9820      	ldr	r0, [sp, #128]	; 0x80
 801d3f6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d3fa:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801d3fc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801d3fe:	1400      	asrs	r0, r0, #16
 801d400:	142d      	asrs	r5, r5, #16
 801d402:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d404:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d408:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d40c:	fb02 5000 	mla	r0, r2, r0, r5
 801d410:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d412:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d416:	182e      	adds	r6, r5, r0
 801d418:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801d41c:	eb04 0509 	add.w	r5, r4, r9
 801d420:	2b00      	cmp	r3, #0
 801d422:	f000 8096 	beq.w	801d552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801d426:	7877      	ldrb	r7, [r6, #1]
 801d428:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d42c:	4427      	add	r7, r4
 801d42e:	2900      	cmp	r1, #0
 801d430:	f000 8097 	beq.w	801d562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801d434:	18b0      	adds	r0, r6, r2
 801d436:	5cb2      	ldrb	r2, [r6, r2]
 801d438:	7840      	ldrb	r0, [r0, #1]
 801d43a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d43e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d442:	4422      	add	r2, r4
 801d444:	4420      	add	r0, r4
 801d446:	b29b      	uxth	r3, r3
 801d448:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d44a:	b289      	uxth	r1, r1
 801d44c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d450:	f8b6 c000 	ldrh.w	ip, [r6]
 801d454:	fb03 f801 	mul.w	r8, r3, r1
 801d458:	011b      	lsls	r3, r3, #4
 801d45a:	78be      	ldrb	r6, [r7, #2]
 801d45c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801d460:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d464:	eba3 0308 	sub.w	r3, r3, r8
 801d468:	f814 9009 	ldrb.w	r9, [r4, r9]
 801d46c:	b289      	uxth	r1, r1
 801d46e:	b29b      	uxth	r3, r3
 801d470:	ebae 0e01 	sub.w	lr, lr, r1
 801d474:	435e      	muls	r6, r3
 801d476:	fa1f fe8e 	uxth.w	lr, lr
 801d47a:	9310      	str	r3, [sp, #64]	; 0x40
 801d47c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d47e:	fb0e 660b 	mla	r6, lr, fp, r6
 801d482:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d486:	fb01 660b 	mla	r6, r1, fp, r6
 801d48a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d48e:	fb08 660b 	mla	r6, r8, fp, r6
 801d492:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801d496:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801d49a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d49e:	fb1b fb03 	smulbb	fp, fp, r3
 801d4a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4a4:	fb06 b60a 	mla	r6, r6, sl, fp
 801d4a8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d4ac:	787d      	ldrb	r5, [r7, #1]
 801d4ae:	783f      	ldrb	r7, [r7, #0]
 801d4b0:	b2b6      	uxth	r6, r6
 801d4b2:	435d      	muls	r5, r3
 801d4b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4b6:	fb0e 550b 	mla	r5, lr, fp, r5
 801d4ba:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d4be:	fb01 550b 	mla	r5, r1, fp, r5
 801d4c2:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d4c6:	fb08 550b 	mla	r5, r8, fp, r5
 801d4ca:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d4ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4d2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d4d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d4da:	fa5f fc8c 	uxtb.w	ip, ip
 801d4de:	fb1b fb03 	smulbb	fp, fp, r3
 801d4e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4e4:	437b      	muls	r3, r7
 801d4e6:	7817      	ldrb	r7, [r2, #0]
 801d4e8:	fb05 b50a 	mla	r5, r5, sl, fp
 801d4ec:	fb0e 3309 	mla	r3, lr, r9, r3
 801d4f0:	b2ad      	uxth	r5, r5
 801d4f2:	fb01 3307 	mla	r3, r1, r7, r3
 801d4f6:	7807      	ldrb	r7, [r0, #0]
 801d4f8:	f105 0b01 	add.w	fp, r5, #1
 801d4fc:	fb08 3707 	mla	r7, r8, r7, r3
 801d500:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d502:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d506:	fb1c fc03 	smulbb	ip, ip, r3
 801d50a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d50e:	1c73      	adds	r3, r6, #1
 801d510:	096d      	lsrs	r5, r5, #5
 801d512:	fb07 c70a 	mla	r7, r7, sl, ip
 801d516:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d51a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d51e:	b2bf      	uxth	r7, r7
 801d520:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d522:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d526:	1c7a      	adds	r2, r7, #1
 801d528:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d52c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d530:	4316      	orrs	r6, r2
 801d532:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d534:	432e      	orrs	r6, r5
 801d536:	f823 6b02 	strh.w	r6, [r3], #2
 801d53a:	930c      	str	r3, [sp, #48]	; 0x30
 801d53c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d53e:	4413      	add	r3, r2
 801d540:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d542:	931f      	str	r3, [sp, #124]	; 0x7c
 801d544:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d546:	4413      	add	r3, r2
 801d548:	9320      	str	r3, [sp, #128]	; 0x80
 801d54a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d54c:	3b01      	subs	r3, #1
 801d54e:	9311      	str	r3, [sp, #68]	; 0x44
 801d550:	e6db      	b.n	801d30a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801d552:	b149      	cbz	r1, 801d568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d554:	5cb2      	ldrb	r2, [r6, r2]
 801d556:	4628      	mov	r0, r5
 801d558:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d55c:	4422      	add	r2, r4
 801d55e:	462f      	mov	r7, r5
 801d560:	e771      	b.n	801d446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d562:	4628      	mov	r0, r5
 801d564:	462a      	mov	r2, r5
 801d566:	e76e      	b.n	801d446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d568:	4628      	mov	r0, r5
 801d56a:	462a      	mov	r2, r5
 801d56c:	e7f7      	b.n	801d55e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d56e:	b015      	add	sp, #84	; 0x54
 801d570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801d574:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d578:	880f      	ldrh	r7, [r1, #0]
 801d57a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801d57e:	023c      	lsls	r4, r7, #8
 801d580:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d584:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801d588:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801d58c:	017c      	lsls	r4, r7, #5
 801d58e:	00ff      	lsls	r7, r7, #3
 801d590:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d594:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801d598:	b2ff      	uxtb	r7, r7
 801d59a:	ea4b 0404 	orr.w	r4, fp, r4
 801d59e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801d5a2:	4327      	orrs	r7, r4
 801d5a4:	fb05 ca0e 	mla	sl, r5, lr, ip
 801d5a8:	2d00      	cmp	r5, #0
 801d5aa:	9701      	str	r7, [sp, #4]
 801d5ac:	eb02 080a 	add.w	r8, r2, sl
 801d5b0:	db7e      	blt.n	801d6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d5b2:	45a9      	cmp	r9, r5
 801d5b4:	dd7c      	ble.n	801d6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d5b6:	f1bc 0f00 	cmp.w	ip, #0
 801d5ba:	db77      	blt.n	801d6ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d5bc:	45e6      	cmp	lr, ip
 801d5be:	dd75      	ble.n	801d6ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d5c0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801d5c4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d5c8:	441f      	add	r7, r3
 801d5ca:	f11c 0201 	adds.w	r2, ip, #1
 801d5ce:	d472      	bmi.n	801d6b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5d0:	4596      	cmp	lr, r2
 801d5d2:	dd70      	ble.n	801d6b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5d4:	2800      	cmp	r0, #0
 801d5d6:	d06e      	beq.n	801d6b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d5d8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801d5dc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801d5e0:	441c      	add	r4, r3
 801d5e2:	3501      	adds	r5, #1
 801d5e4:	d46b      	bmi.n	801d6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d5e6:	45a9      	cmp	r9, r5
 801d5e8:	dd69      	ble.n	801d6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d5ea:	2e00      	cmp	r6, #0
 801d5ec:	d067      	beq.n	801d6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d5ee:	f1bc 0f00 	cmp.w	ip, #0
 801d5f2:	db62      	blt.n	801d6ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d5f4:	45e6      	cmp	lr, ip
 801d5f6:	dd60      	ble.n	801d6ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d5f8:	f818 500e 	ldrb.w	r5, [r8, lr]
 801d5fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d600:	441d      	add	r5, r3
 801d602:	f11c 0201 	adds.w	r2, ip, #1
 801d606:	d45d      	bmi.n	801d6c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d608:	4596      	cmp	lr, r2
 801d60a:	dd5b      	ble.n	801d6c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d60c:	2800      	cmp	r0, #0
 801d60e:	d059      	beq.n	801d6c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d610:	44c6      	add	lr, r8
 801d612:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d616:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d61a:	4413      	add	r3, r2
 801d61c:	b280      	uxth	r0, r0
 801d61e:	f897 e002 	ldrb.w	lr, [r7, #2]
 801d622:	b2b2      	uxth	r2, r6
 801d624:	f897 9000 	ldrb.w	r9, [r7]
 801d628:	787f      	ldrb	r7, [r7, #1]
 801d62a:	fb00 f602 	mul.w	r6, r0, r2
 801d62e:	0100      	lsls	r0, r0, #4
 801d630:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801d634:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801d638:	1b80      	subs	r0, r0, r6
 801d63a:	fa1f fc82 	uxth.w	ip, r2
 801d63e:	b282      	uxth	r2, r0
 801d640:	78a0      	ldrb	r0, [r4, #2]
 801d642:	eba8 080c 	sub.w	r8, r8, ip
 801d646:	4350      	muls	r0, r2
 801d648:	fa1f f888 	uxth.w	r8, r8
 801d64c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801d650:	78a8      	ldrb	r0, [r5, #2]
 801d652:	fb0c e000 	mla	r0, ip, r0, lr
 801d656:	f893 e002 	ldrb.w	lr, [r3, #2]
 801d65a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801d65e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801d662:	f894 e000 	ldrb.w	lr, [r4]
 801d666:	fb02 fe0e 	mul.w	lr, r2, lr
 801d66a:	fb08 e909 	mla	r9, r8, r9, lr
 801d66e:	f895 e000 	ldrb.w	lr, [r5]
 801d672:	fb0c 990e 	mla	r9, ip, lr, r9
 801d676:	f893 e000 	ldrb.w	lr, [r3]
 801d67a:	785b      	ldrb	r3, [r3, #1]
 801d67c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801d680:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d684:	ea4e 0e00 	orr.w	lr, lr, r0
 801d688:	7860      	ldrb	r0, [r4, #1]
 801d68a:	4350      	muls	r0, r2
 801d68c:	786a      	ldrb	r2, [r5, #1]
 801d68e:	fb08 0007 	mla	r0, r8, r7, r0
 801d692:	fb0c 0202 	mla	r2, ip, r2, r0
 801d696:	fb06 2303 	mla	r3, r6, r3, r2
 801d69a:	095b      	lsrs	r3, r3, #5
 801d69c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d6a0:	ea4e 0303 	orr.w	r3, lr, r3
 801d6a4:	800b      	strh	r3, [r1, #0]
 801d6a6:	b003      	add	sp, #12
 801d6a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6ac:	af01      	add	r7, sp, #4
 801d6ae:	e78c      	b.n	801d5ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801d6b0:	ac01      	add	r4, sp, #4
 801d6b2:	4627      	mov	r7, r4
 801d6b4:	e795      	b.n	801d5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d6b6:	ac01      	add	r4, sp, #4
 801d6b8:	e793      	b.n	801d5e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d6ba:	ad01      	add	r5, sp, #4
 801d6bc:	e7a1      	b.n	801d602 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801d6be:	ab01      	add	r3, sp, #4
 801d6c0:	461d      	mov	r5, r3
 801d6c2:	e7ab      	b.n	801d61c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801d6c4:	ab01      	add	r3, sp, #4
 801d6c6:	e7a9      	b.n	801d61c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6cc:	b08f      	sub	sp, #60	; 0x3c
 801d6ce:	920c      	str	r2, [sp, #48]	; 0x30
 801d6d0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801d6d2:	900d      	str	r0, [sp, #52]	; 0x34
 801d6d4:	910a      	str	r1, [sp, #40]	; 0x28
 801d6d6:	6850      	ldr	r0, [r2, #4]
 801d6d8:	9306      	str	r3, [sp, #24]
 801d6da:	6812      	ldr	r2, [r2, #0]
 801d6dc:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801d6e0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801d6e4:	fb00 1303 	mla	r3, r0, r3, r1
 801d6e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d6ec:	9307      	str	r3, [sp, #28]
 801d6ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6f0:	681b      	ldr	r3, [r3, #0]
 801d6f2:	9308      	str	r3, [sp, #32]
 801d6f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6f6:	685c      	ldr	r4, [r3, #4]
 801d6f8:	3404      	adds	r4, #4
 801d6fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6fc:	2b00      	cmp	r3, #0
 801d6fe:	dc03      	bgt.n	801d708 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d700:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d702:	2b00      	cmp	r3, #0
 801d704:	f340 81d5 	ble.w	801dab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d708:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d70a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d70e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d712:	1e48      	subs	r0, r1, #1
 801d714:	1e56      	subs	r6, r2, #1
 801d716:	9b06      	ldr	r3, [sp, #24]
 801d718:	2b00      	cmp	r3, #0
 801d71a:	f340 80b6 	ble.w	801d88a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d71e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801d722:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d726:	d406      	bmi.n	801d736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d728:	4287      	cmp	r7, r0
 801d72a:	da04      	bge.n	801d736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d72c:	2b00      	cmp	r3, #0
 801d72e:	db02      	blt.n	801d736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d730:	42b3      	cmp	r3, r6
 801d732:	f2c0 80ab 	blt.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801d736:	3701      	adds	r7, #1
 801d738:	f100 809c 	bmi.w	801d874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d73c:	42b9      	cmp	r1, r7
 801d73e:	f2c0 8099 	blt.w	801d874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d742:	3301      	adds	r3, #1
 801d744:	f100 8096 	bmi.w	801d874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d748:	429a      	cmp	r2, r3
 801d74a:	f2c0 8093 	blt.w	801d874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d74e:	9b06      	ldr	r3, [sp, #24]
 801d750:	930b      	str	r3, [sp, #44]	; 0x2c
 801d752:	9b07      	ldr	r3, [sp, #28]
 801d754:	9309      	str	r3, [sp, #36]	; 0x24
 801d756:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d758:	2b00      	cmp	r3, #0
 801d75a:	f340 80b4 	ble.w	801d8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d75e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801d760:	142e      	asrs	r6, r5, #16
 801d762:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d764:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d768:	68c7      	ldr	r7, [r0, #12]
 801d76a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801d76e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d772:	6892      	ldr	r2, [r2, #8]
 801d774:	f100 80fb 	bmi.w	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d778:	f102 3cff 	add.w	ip, r2, #4294967295
 801d77c:	4560      	cmp	r0, ip
 801d77e:	f280 80f6 	bge.w	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d782:	2e00      	cmp	r6, #0
 801d784:	f2c0 80f3 	blt.w	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d788:	f107 3cff 	add.w	ip, r7, #4294967295
 801d78c:	4566      	cmp	r6, ip
 801d78e:	f280 80ee 	bge.w	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d792:	b212      	sxth	r2, r2
 801d794:	fb06 0002 	mla	r0, r6, r2, r0
 801d798:	9e08      	ldr	r6, [sp, #32]
 801d79a:	1837      	adds	r7, r6, r0
 801d79c:	5c30      	ldrb	r0, [r6, r0]
 801d79e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801d7a2:	eb04 0c08 	add.w	ip, r4, r8
 801d7a6:	2b00      	cmp	r3, #0
 801d7a8:	f000 80d3 	beq.w	801d952 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801d7ac:	787e      	ldrb	r6, [r7, #1]
 801d7ae:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d7b2:	4426      	add	r6, r4
 801d7b4:	2900      	cmp	r1, #0
 801d7b6:	f000 80d4 	beq.w	801d962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801d7ba:	18b8      	adds	r0, r7, r2
 801d7bc:	5cba      	ldrb	r2, [r7, r2]
 801d7be:	7840      	ldrb	r0, [r0, #1]
 801d7c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d7c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d7c8:	4422      	add	r2, r4
 801d7ca:	4420      	add	r0, r4
 801d7cc:	b29b      	uxth	r3, r3
 801d7ce:	78b7      	ldrb	r7, [r6, #2]
 801d7d0:	b289      	uxth	r1, r1
 801d7d2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d7d6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d7da:	fb03 f901 	mul.w	r9, r3, r1
 801d7de:	011b      	lsls	r3, r3, #4
 801d7e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d7e4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d7e8:	eba3 0309 	sub.w	r3, r3, r9
 801d7ec:	b289      	uxth	r1, r1
 801d7ee:	b29b      	uxth	r3, r3
 801d7f0:	ebae 0e01 	sub.w	lr, lr, r1
 801d7f4:	435f      	muls	r7, r3
 801d7f6:	fa1f fe8e 	uxth.w	lr, lr
 801d7fa:	fb0e 770a 	mla	r7, lr, sl, r7
 801d7fe:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d802:	fb01 770a 	mla	r7, r1, sl, r7
 801d806:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d80a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d80e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d812:	f896 8000 	ldrb.w	r8, [r6]
 801d816:	7876      	ldrb	r6, [r6, #1]
 801d818:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801d81c:	fb03 f808 	mul.w	r8, r3, r8
 801d820:	4373      	muls	r3, r6
 801d822:	fb0e 8807 	mla	r8, lr, r7, r8
 801d826:	7817      	ldrb	r7, [r2, #0]
 801d828:	fb0e 330c 	mla	r3, lr, ip, r3
 801d82c:	fb01 8807 	mla	r8, r1, r7, r8
 801d830:	7807      	ldrb	r7, [r0, #0]
 801d832:	fb09 8707 	mla	r7, r9, r7, r8
 801d836:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d83a:	ea47 070a 	orr.w	r7, r7, sl
 801d83e:	f892 a001 	ldrb.w	sl, [r2, #1]
 801d842:	fb01 310a 	mla	r1, r1, sl, r3
 801d846:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d84a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d84c:	fb09 1a0a 	mla	sl, r9, sl, r1
 801d850:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d854:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d858:	ea47 070a 	orr.w	r7, r7, sl
 801d85c:	801f      	strh	r7, [r3, #0]
 801d85e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d860:	3302      	adds	r3, #2
 801d862:	9309      	str	r3, [sp, #36]	; 0x24
 801d864:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d866:	449b      	add	fp, r3
 801d868:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d86a:	441d      	add	r5, r3
 801d86c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d86e:	3b01      	subs	r3, #1
 801d870:	930b      	str	r3, [sp, #44]	; 0x2c
 801d872:	e770      	b.n	801d756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d874:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d876:	449b      	add	fp, r3
 801d878:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d87a:	441d      	add	r5, r3
 801d87c:	9b06      	ldr	r3, [sp, #24]
 801d87e:	3b01      	subs	r3, #1
 801d880:	9306      	str	r3, [sp, #24]
 801d882:	9b07      	ldr	r3, [sp, #28]
 801d884:	3302      	adds	r3, #2
 801d886:	9307      	str	r3, [sp, #28]
 801d888:	e745      	b.n	801d716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801d88a:	d023      	beq.n	801d8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801d88c:	9b06      	ldr	r3, [sp, #24]
 801d88e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d890:	3b01      	subs	r3, #1
 801d892:	fb00 b003 	mla	r0, r0, r3, fp
 801d896:	1400      	asrs	r0, r0, #16
 801d898:	f53f af59 	bmi.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d89c:	3901      	subs	r1, #1
 801d89e:	4288      	cmp	r0, r1
 801d8a0:	f6bf af55 	bge.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8a4:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d8a6:	fb01 5303 	mla	r3, r1, r3, r5
 801d8aa:	141b      	asrs	r3, r3, #16
 801d8ac:	f53f af4f 	bmi.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8b0:	3a01      	subs	r2, #1
 801d8b2:	4293      	cmp	r3, r2
 801d8b4:	f6bf af4b 	bge.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d8b8:	9b06      	ldr	r3, [sp, #24]
 801d8ba:	9309      	str	r3, [sp, #36]	; 0x24
 801d8bc:	9b07      	ldr	r3, [sp, #28]
 801d8be:	930b      	str	r3, [sp, #44]	; 0x2c
 801d8c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8c2:	2b00      	cmp	r3, #0
 801d8c4:	dc70      	bgt.n	801d9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d8c6:	9b06      	ldr	r3, [sp, #24]
 801d8c8:	9a07      	ldr	r2, [sp, #28]
 801d8ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d8d2:	9307      	str	r3, [sp, #28]
 801d8d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d8d6:	2b00      	cmp	r3, #0
 801d8d8:	f340 80eb 	ble.w	801dab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d8dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d8e0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d8e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8ea:	eef0 6a62 	vmov.f32	s13, s5
 801d8ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d8f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8fa:	ee16 ba90 	vmov	fp, s13
 801d8fe:	eef0 6a43 	vmov.f32	s13, s6
 801d902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d906:	ee16 5a90 	vmov	r5, s13
 801d90a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d90e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d912:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d916:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d91a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d91e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d922:	ee12 2a90 	vmov	r2, s5
 801d926:	eef0 2a47 	vmov.f32	s5, s14
 801d92a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d92e:	ee13 2a10 	vmov	r2, s6
 801d932:	931b      	str	r3, [sp, #108]	; 0x6c
 801d934:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d936:	eeb0 3a67 	vmov.f32	s6, s15
 801d93a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d93e:	931c      	str	r3, [sp, #112]	; 0x70
 801d940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d942:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d944:	3b01      	subs	r3, #1
 801d946:	930a      	str	r3, [sp, #40]	; 0x28
 801d948:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d94a:	bf08      	it	eq
 801d94c:	4613      	moveq	r3, r2
 801d94e:	9306      	str	r3, [sp, #24]
 801d950:	e6d3      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d952:	b149      	cbz	r1, 801d968 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801d954:	5cba      	ldrb	r2, [r7, r2]
 801d956:	4660      	mov	r0, ip
 801d958:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d95c:	4422      	add	r2, r4
 801d95e:	4666      	mov	r6, ip
 801d960:	e734      	b.n	801d7cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801d962:	4660      	mov	r0, ip
 801d964:	4662      	mov	r2, ip
 801d966:	e731      	b.n	801d7cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801d968:	4660      	mov	r0, ip
 801d96a:	4662      	mov	r2, ip
 801d96c:	e7f7      	b.n	801d95e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d96e:	f110 0c01 	adds.w	ip, r0, #1
 801d972:	f53f af74 	bmi.w	801d85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d976:	4562      	cmp	r2, ip
 801d978:	f6ff af71 	blt.w	801d85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d97c:	f116 0c01 	adds.w	ip, r6, #1
 801d980:	f53f af6d 	bmi.w	801d85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d984:	4567      	cmp	r7, ip
 801d986:	f6ff af6a 	blt.w	801d85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d98a:	b23f      	sxth	r7, r7
 801d98c:	b212      	sxth	r2, r2
 801d98e:	9701      	str	r7, [sp, #4]
 801d990:	9200      	str	r2, [sp, #0]
 801d992:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801d996:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801d99a:	4623      	mov	r3, r4
 801d99c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d99e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d9a2:	f7ff fde7 	bl	801d574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801d9a6:	e75a      	b.n	801d85e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d9a8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d9aa:	ea4f 462b 	mov.w	r6, fp, asr #16
 801d9ae:	1428      	asrs	r0, r5, #16
 801d9b0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d9b4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d9b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d9bc:	fb02 6000 	mla	r0, r2, r0, r6
 801d9c0:	9e08      	ldr	r6, [sp, #32]
 801d9c2:	f816 8000 	ldrb.w	r8, [r6, r0]
 801d9c6:	1837      	adds	r7, r6, r0
 801d9c8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d9cc:	eb04 0c08 	add.w	ip, r4, r8
 801d9d0:	2b00      	cmp	r3, #0
 801d9d2:	d060      	beq.n	801da96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801d9d4:	787e      	ldrb	r6, [r7, #1]
 801d9d6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d9da:	4426      	add	r6, r4
 801d9dc:	2900      	cmp	r1, #0
 801d9de:	d062      	beq.n	801daa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801d9e0:	18b8      	adds	r0, r7, r2
 801d9e2:	5cba      	ldrb	r2, [r7, r2]
 801d9e4:	7840      	ldrb	r0, [r0, #1]
 801d9e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d9ea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d9ee:	4422      	add	r2, r4
 801d9f0:	4420      	add	r0, r4
 801d9f2:	b29b      	uxth	r3, r3
 801d9f4:	78b7      	ldrb	r7, [r6, #2]
 801d9f6:	b289      	uxth	r1, r1
 801d9f8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d9fc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801da00:	fb03 f901 	mul.w	r9, r3, r1
 801da04:	011b      	lsls	r3, r3, #4
 801da06:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801da0a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801da0e:	eba3 0309 	sub.w	r3, r3, r9
 801da12:	b289      	uxth	r1, r1
 801da14:	b29b      	uxth	r3, r3
 801da16:	ebae 0e01 	sub.w	lr, lr, r1
 801da1a:	435f      	muls	r7, r3
 801da1c:	fa1f fe8e 	uxth.w	lr, lr
 801da20:	fb0e 770a 	mla	r7, lr, sl, r7
 801da24:	f892 a002 	ldrb.w	sl, [r2, #2]
 801da28:	fb01 770a 	mla	r7, r1, sl, r7
 801da2c:	f890 a002 	ldrb.w	sl, [r0, #2]
 801da30:	fb09 7a0a 	mla	sl, r9, sl, r7
 801da34:	f814 7008 	ldrb.w	r7, [r4, r8]
 801da38:	f896 8000 	ldrb.w	r8, [r6]
 801da3c:	7876      	ldrb	r6, [r6, #1]
 801da3e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801da42:	fb03 f808 	mul.w	r8, r3, r8
 801da46:	4373      	muls	r3, r6
 801da48:	7856      	ldrb	r6, [r2, #1]
 801da4a:	fb0e 8807 	mla	r8, lr, r7, r8
 801da4e:	7817      	ldrb	r7, [r2, #0]
 801da50:	fb0e 330c 	mla	r3, lr, ip, r3
 801da54:	fb01 8807 	mla	r8, r1, r7, r8
 801da58:	7807      	ldrb	r7, [r0, #0]
 801da5a:	fb01 3306 	mla	r3, r1, r6, r3
 801da5e:	fb09 8707 	mla	r7, r9, r7, r8
 801da62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801da66:	ea47 070a 	orr.w	r7, r7, sl
 801da6a:	f890 a001 	ldrb.w	sl, [r0, #1]
 801da6e:	fb09 3a0a 	mla	sl, r9, sl, r3
 801da72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801da74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da7c:	ea47 070a 	orr.w	r7, r7, sl
 801da80:	f823 7b02 	strh.w	r7, [r3], #2
 801da84:	930b      	str	r3, [sp, #44]	; 0x2c
 801da86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801da88:	449b      	add	fp, r3
 801da8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da8c:	441d      	add	r5, r3
 801da8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801da90:	3b01      	subs	r3, #1
 801da92:	9309      	str	r3, [sp, #36]	; 0x24
 801da94:	e714      	b.n	801d8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801da96:	b149      	cbz	r1, 801daac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801da98:	5cba      	ldrb	r2, [r7, r2]
 801da9a:	4660      	mov	r0, ip
 801da9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801daa0:	4422      	add	r2, r4
 801daa2:	4666      	mov	r6, ip
 801daa4:	e7a5      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801daa6:	4660      	mov	r0, ip
 801daa8:	4662      	mov	r2, ip
 801daaa:	e7a2      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801daac:	4660      	mov	r0, ip
 801daae:	4662      	mov	r2, ip
 801dab0:	e7f7      	b.n	801daa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801dab2:	b00f      	add	sp, #60	; 0x3c
 801dab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dab8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801dab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dabc:	b085      	sub	sp, #20
 801dabe:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801dac2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801dac6:	9102      	str	r1, [sp, #8]
 801dac8:	2c00      	cmp	r4, #0
 801daca:	fb04 710c 	mla	r1, r4, ip, r7
 801dace:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801dad2:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801dad6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dada:	eb02 0e01 	add.w	lr, r2, r1
 801dade:	f2c0 8122 	blt.w	801dd26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dae2:	45a0      	cmp	r8, r4
 801dae4:	f340 811f 	ble.w	801dd26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dae8:	2f00      	cmp	r7, #0
 801daea:	f2c0 811a 	blt.w	801dd22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801daee:	45bc      	cmp	ip, r7
 801daf0:	f340 8117 	ble.w	801dd22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801daf4:	5c52      	ldrb	r2, [r2, r1]
 801daf6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801dafa:	1c7a      	adds	r2, r7, #1
 801dafc:	f100 8116 	bmi.w	801dd2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801db00:	4594      	cmp	ip, r2
 801db02:	f340 8113 	ble.w	801dd2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801db06:	2e00      	cmp	r6, #0
 801db08:	f000 8112 	beq.w	801dd30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801db0c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801db10:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801db14:	3401      	adds	r4, #1
 801db16:	f100 810f 	bmi.w	801dd38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801db1a:	45a0      	cmp	r8, r4
 801db1c:	f340 810c 	ble.w	801dd38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801db20:	2800      	cmp	r0, #0
 801db22:	f000 810c 	beq.w	801dd3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801db26:	2f00      	cmp	r7, #0
 801db28:	f2c0 8104 	blt.w	801dd34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801db2c:	45bc      	cmp	ip, r7
 801db2e:	f340 8101 	ble.w	801dd34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801db32:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801db36:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801db3a:	3701      	adds	r7, #1
 801db3c:	f100 8102 	bmi.w	801dd44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801db40:	45bc      	cmp	ip, r7
 801db42:	f340 80ff 	ble.w	801dd44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801db46:	2e00      	cmp	r6, #0
 801db48:	f000 80fe 	beq.w	801dd48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801db4c:	44f4      	add	ip, lr
 801db4e:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801db52:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801db56:	b2b6      	uxth	r6, r6
 801db58:	b280      	uxth	r0, r0
 801db5a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801db5e:	fb00 fe06 	mul.w	lr, r0, r6
 801db62:	0136      	lsls	r6, r6, #4
 801db64:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801db68:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801db6c:	eba6 070e 	sub.w	r7, r6, lr
 801db70:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801db74:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801db78:	b280      	uxth	r0, r0
 801db7a:	b2bf      	uxth	r7, r7
 801db7c:	1a1b      	subs	r3, r3, r0
 801db7e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801db82:	fb0a f607 	mul.w	r6, sl, r7
 801db86:	b29b      	uxth	r3, r3
 801db88:	fb0b 6603 	mla	r6, fp, r3, r6
 801db8c:	fb00 6609 	mla	r6, r0, r9, r6
 801db90:	fb0e 6608 	mla	r6, lr, r8, r6
 801db94:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801db98:	9600      	str	r6, [sp, #0]
 801db9a:	2e00      	cmp	r6, #0
 801db9c:	f000 80be 	beq.w	801dd1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801dba0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dba4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dba8:	9e02      	ldr	r6, [sp, #8]
 801dbaa:	fb0b fc0c 	mul.w	ip, fp, ip
 801dbae:	fb0b f505 	mul.w	r5, fp, r5
 801dbb2:	8836      	ldrh	r6, [r6, #0]
 801dbb4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dbb8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dbbc:	9501      	str	r5, [sp, #4]
 801dbbe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dbc2:	44dc      	add	ip, fp
 801dbc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbc8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dbcc:	9503      	str	r5, [sp, #12]
 801dbce:	9d01      	ldr	r5, [sp, #4]
 801dbd0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dbd4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dbd8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dbdc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dbe0:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbe4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dbe8:	fb0a fa01 	mul.w	sl, sl, r1
 801dbec:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dbf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dbf4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801dbf8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dbfc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dc00:	4465      	add	r5, ip
 801dc02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dc06:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dc0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc0e:	fb09 fc0c 	mul.w	ip, r9, ip
 801dc12:	0a2d      	lsrs	r5, r5, #8
 801dc14:	fb09 f904 	mul.w	r9, r9, r4
 801dc18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dc1c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dc20:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dc24:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801dc28:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dc2c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dc30:	437d      	muls	r5, r7
 801dc32:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dc36:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801dc3a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc3e:	4461      	add	r1, ip
 801dc40:	fb08 f404 	mul.w	r4, r8, r4
 801dc44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dc48:	fb08 f802 	mul.w	r8, r8, r2
 801dc4c:	0a09      	lsrs	r1, r1, #8
 801dc4e:	0a22      	lsrs	r2, r4, #8
 801dc50:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801dc54:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dc58:	fb07 f70a 	mul.w	r7, r7, sl
 801dc5c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dc60:	4414      	add	r4, r2
 801dc62:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dc66:	0a24      	lsrs	r4, r4, #8
 801dc68:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dc6c:	9a03      	ldr	r2, [sp, #12]
 801dc6e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dc72:	fb02 5503 	mla	r5, r2, r3, r5
 801dc76:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dc7a:	9a00      	ldr	r2, [sp, #0]
 801dc7c:	fb04 540e 	mla	r4, r4, lr, r5
 801dc80:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dc84:	1235      	asrs	r5, r6, #8
 801dc86:	fb01 4100 	mla	r1, r1, r0, r4
 801dc8a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dc8e:	0a09      	lsrs	r1, r1, #8
 801dc90:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dc94:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801dc98:	fb03 7101 	mla	r1, r3, r1, r7
 801dc9c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dca0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dca4:	fb00 e101 	mla	r1, r0, r1, lr
 801dca8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801dcac:	b287      	uxth	r7, r0
 801dcae:	0a09      	lsrs	r1, r1, #8
 801dcb0:	437a      	muls	r2, r7
 801dcb2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dcb6:	1c53      	adds	r3, r2, #1
 801dcb8:	4321      	orrs	r1, r4
 801dcba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dcbe:	0c0a      	lsrs	r2, r1, #16
 801dcc0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dcc4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dcc8:	b2c8      	uxtb	r0, r1
 801dcca:	fb12 f207 	smulbb	r2, r2, r7
 801dcce:	fb14 f407 	smulbb	r4, r4, r7
 801dcd2:	b2db      	uxtb	r3, r3
 801dcd4:	fb10 f007 	smulbb	r0, r0, r7
 801dcd8:	fb05 2503 	mla	r5, r5, r3, r2
 801dcdc:	10f2      	asrs	r2, r6, #3
 801dcde:	00f6      	lsls	r6, r6, #3
 801dce0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dce4:	b2ad      	uxth	r5, r5
 801dce6:	b2f6      	uxtb	r6, r6
 801dce8:	fb02 4203 	mla	r2, r2, r3, r4
 801dcec:	fb06 0303 	mla	r3, r6, r3, r0
 801dcf0:	b294      	uxth	r4, r2
 801dcf2:	b299      	uxth	r1, r3
 801dcf4:	1c6b      	adds	r3, r5, #1
 801dcf6:	1c62      	adds	r2, r4, #1
 801dcf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dcfc:	1c4b      	adds	r3, r1, #1
 801dcfe:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dd02:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dd06:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dd0a:	0952      	lsrs	r2, r2, #5
 801dd0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd14:	432b      	orrs	r3, r5
 801dd16:	4313      	orrs	r3, r2
 801dd18:	9a02      	ldr	r2, [sp, #8]
 801dd1a:	8013      	strh	r3, [r2, #0]
 801dd1c:	b005      	add	sp, #20
 801dd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd22:	2500      	movs	r5, #0
 801dd24:	e6e9      	b.n	801dafa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801dd26:	2100      	movs	r1, #0
 801dd28:	460d      	mov	r5, r1
 801dd2a:	e6f3      	b.n	801db14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd2c:	2100      	movs	r1, #0
 801dd2e:	e6f1      	b.n	801db14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd30:	4631      	mov	r1, r6
 801dd32:	e6ef      	b.n	801db14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dd34:	2400      	movs	r4, #0
 801dd36:	e700      	b.n	801db3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801dd38:	2200      	movs	r2, #0
 801dd3a:	4614      	mov	r4, r2
 801dd3c:	e70b      	b.n	801db56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd3e:	4602      	mov	r2, r0
 801dd40:	4604      	mov	r4, r0
 801dd42:	e708      	b.n	801db56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd44:	2200      	movs	r2, #0
 801dd46:	e706      	b.n	801db56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dd48:	4632      	mov	r2, r6
 801dd4a:	e704      	b.n	801db56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801dd4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd50:	b09f      	sub	sp, #124	; 0x7c
 801dd52:	921b      	str	r2, [sp, #108]	; 0x6c
 801dd54:	9309      	str	r3, [sp, #36]	; 0x24
 801dd56:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801dd58:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801dd5c:	901d      	str	r0, [sp, #116]	; 0x74
 801dd5e:	931c      	str	r3, [sp, #112]	; 0x70
 801dd60:	6850      	ldr	r0, [r2, #4]
 801dd62:	9119      	str	r1, [sp, #100]	; 0x64
 801dd64:	6812      	ldr	r2, [r2, #0]
 801dd66:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801dd68:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801dd6c:	fb00 1303 	mla	r3, r0, r3, r1
 801dd70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dd74:	930c      	str	r3, [sp, #48]	; 0x30
 801dd76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801dd78:	681b      	ldr	r3, [r3, #0]
 801dd7a:	9312      	str	r3, [sp, #72]	; 0x48
 801dd7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801dd7e:	685e      	ldr	r6, [r3, #4]
 801dd80:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801dd84:	3604      	adds	r6, #4
 801dd86:	930d      	str	r3, [sp, #52]	; 0x34
 801dd88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dd8a:	2b00      	cmp	r3, #0
 801dd8c:	dc03      	bgt.n	801dd96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801dd8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dd90:	2b00      	cmp	r3, #0
 801dd92:	f340 8387 	ble.w	801e4a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801dd96:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801dd98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dd9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dda0:	1e48      	subs	r0, r1, #1
 801dda2:	1e57      	subs	r7, r2, #1
 801dda4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dda6:	2b00      	cmp	r3, #0
 801dda8:	f340 8194 	ble.w	801e0d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801ddac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ddae:	142b      	asrs	r3, r5, #16
 801ddb0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ddb4:	d406      	bmi.n	801ddc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ddb6:	4584      	cmp	ip, r0
 801ddb8:	da04      	bge.n	801ddc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ddba:	2b00      	cmp	r3, #0
 801ddbc:	db02      	blt.n	801ddc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ddbe:	42bb      	cmp	r3, r7
 801ddc0:	f2c0 8189 	blt.w	801e0d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ddc4:	f11c 0c01 	adds.w	ip, ip, #1
 801ddc8:	f100 8177 	bmi.w	801e0ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ddcc:	4561      	cmp	r1, ip
 801ddce:	f2c0 8174 	blt.w	801e0ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ddd2:	3301      	adds	r3, #1
 801ddd4:	f100 8171 	bmi.w	801e0ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ddd8:	429a      	cmp	r2, r3
 801ddda:	f2c0 816e 	blt.w	801e0ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ddde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dde0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801dde2:	931a      	str	r3, [sp, #104]	; 0x68
 801dde4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801dde6:	2b00      	cmp	r3, #0
 801dde8:	f340 8193 	ble.w	801e112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801ddec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ddee:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ddf2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ddf6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ddfa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ddfc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801de00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801de02:	141b      	asrs	r3, r3, #16
 801de04:	f100 81d6 	bmi.w	801e1b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801de08:	f100 38ff 	add.w	r8, r0, #4294967295
 801de0c:	4543      	cmp	r3, r8
 801de0e:	f280 81d1 	bge.w	801e1b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801de12:	f1bc 0f00 	cmp.w	ip, #0
 801de16:	f2c0 81cd 	blt.w	801e1b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801de1a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801de1e:	45c4      	cmp	ip, r8
 801de20:	f280 81c8 	bge.w	801e1b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801de24:	b200      	sxth	r0, r0
 801de26:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801de28:	fb0c 3300 	mla	r3, ip, r0, r3
 801de2c:	eb04 0803 	add.w	r8, r4, r3
 801de30:	5ce3      	ldrb	r3, [r4, r3]
 801de32:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801de36:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801de3a:	2a00      	cmp	r2, #0
 801de3c:	f000 81af 	beq.w	801e19e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de40:	f898 c001 	ldrb.w	ip, [r8, #1]
 801de44:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801de48:	940e      	str	r4, [sp, #56]	; 0x38
 801de4a:	0e24      	lsrs	r4, r4, #24
 801de4c:	9415      	str	r4, [sp, #84]	; 0x54
 801de4e:	b179      	cbz	r1, 801de70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801de50:	eb08 0c00 	add.w	ip, r8, r0
 801de54:	f818 0000 	ldrb.w	r0, [r8, r0]
 801de58:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801de5c:	900a      	str	r0, [sp, #40]	; 0x28
 801de5e:	0e00      	lsrs	r0, r0, #24
 801de60:	9013      	str	r0, [sp, #76]	; 0x4c
 801de62:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801de66:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801de6a:	900f      	str	r0, [sp, #60]	; 0x3c
 801de6c:	0e00      	lsrs	r0, r0, #24
 801de6e:	9016      	str	r0, [sp, #88]	; 0x58
 801de70:	b292      	uxth	r2, r2
 801de72:	9815      	ldr	r0, [sp, #84]	; 0x54
 801de74:	b289      	uxth	r1, r1
 801de76:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801de78:	fb02 f901 	mul.w	r9, r2, r1
 801de7c:	0112      	lsls	r2, r2, #4
 801de7e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801de82:	eba2 0809 	sub.w	r8, r2, r9
 801de86:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801de8a:	b289      	uxth	r1, r1
 801de8c:	fa1f f888 	uxth.w	r8, r8
 801de90:	1a52      	subs	r2, r2, r1
 801de92:	fb08 f000 	mul.w	r0, r8, r0
 801de96:	b292      	uxth	r2, r2
 801de98:	fb02 000e 	mla	r0, r2, lr, r0
 801de9c:	fb01 0004 	mla	r0, r1, r4, r0
 801dea0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801dea2:	fb09 0004 	mla	r0, r9, r4, r0
 801dea6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801deaa:	2800      	cmp	r0, #0
 801deac:	f000 80fa 	beq.w	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801deb0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801deb4:	d01b      	beq.n	801deee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801deb6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801deba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801debe:	fb0e fa0a 	mul.w	sl, lr, sl
 801dec2:	fb0e fe03 	mul.w	lr, lr, r3
 801dec6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801deca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dece:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ded2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ded6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801deda:	4453      	add	r3, sl
 801dedc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dee0:	0a1b      	lsrs	r3, r3, #8
 801dee2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dee6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801deea:	ea43 030c 	orr.w	r3, r3, ip
 801deee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801def0:	2cff      	cmp	r4, #255	; 0xff
 801def2:	d021      	beq.n	801df38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801def4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801def6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801defa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801defc:	fb04 fb0b 	mul.w	fp, r4, fp
 801df00:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801df02:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801df06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801df08:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df10:	fb04 fa0a 	mul.w	sl, r4, sl
 801df14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df18:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df1c:	44de      	add	lr, fp
 801df1e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df32:	ea4e 040a 	orr.w	r4, lr, sl
 801df36:	940e      	str	r4, [sp, #56]	; 0x38
 801df38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df3a:	2cff      	cmp	r4, #255	; 0xff
 801df3c:	d021      	beq.n	801df82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801df3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801df40:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801df44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df46:	fb04 fb0b 	mul.w	fp, r4, fp
 801df4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801df4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801df50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801df5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df62:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df66:	44de      	add	lr, fp
 801df68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df7c:	ea4e 040a 	orr.w	r4, lr, sl
 801df80:	940a      	str	r4, [sp, #40]	; 0x28
 801df82:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801df84:	2cff      	cmp	r4, #255	; 0xff
 801df86:	d021      	beq.n	801dfcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801df88:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801df8a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801df8e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801df90:	fb04 fb0b 	mul.w	fp, r4, fp
 801df94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801df96:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801df9a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801df9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dfa0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dfa4:	fb04 fa0a 	mul.w	sl, r4, sl
 801dfa8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dfb0:	44de      	add	lr, fp
 801dfb2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dfb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dfc6:	ea4e 040a 	orr.w	r4, lr, sl
 801dfca:	940f      	str	r4, [sp, #60]	; 0x3c
 801dfcc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dfce:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801dfd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dfd6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dfda:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801dfdc:	fb08 fc0c 	mul.w	ip, r8, ip
 801dfe0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dfe4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801dfe8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801dfea:	fb01 cc0e 	mla	ip, r1, lr, ip
 801dfee:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801dff2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dff4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801dff8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801dffc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dffe:	fb08 f80e 	mul.w	r8, r8, lr
 801e002:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e006:	fb02 8303 	mla	r3, r2, r3, r8
 801e00a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e00c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e010:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e014:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e016:	fb01 330a 	mla	r3, r1, sl, r3
 801e01a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801e01e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e020:	fb09 3901 	mla	r9, r9, r1, r3
 801e024:	883b      	ldrh	r3, [r7, #0]
 801e026:	4342      	muls	r2, r0
 801e028:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e02c:	1c50      	adds	r0, r2, #1
 801e02e:	1219      	asrs	r1, r3, #8
 801e030:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e034:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e038:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e03c:	ea4c 0c09 	orr.w	ip, ip, r9
 801e040:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e044:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e048:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e04c:	b2c0      	uxtb	r0, r0
 801e04e:	fb12 f204 	smulbb	r2, r2, r4
 801e052:	fa5f fc8c 	uxtb.w	ip, ip
 801e056:	fb1e fe04 	smulbb	lr, lr, r4
 801e05a:	fb01 2100 	mla	r1, r1, r0, r2
 801e05e:	10da      	asrs	r2, r3, #3
 801e060:	fb1c fc04 	smulbb	ip, ip, r4
 801e064:	00db      	lsls	r3, r3, #3
 801e066:	b289      	uxth	r1, r1
 801e068:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e06c:	b2db      	uxtb	r3, r3
 801e06e:	fb02 e200 	mla	r2, r2, r0, lr
 801e072:	fb03 c300 	mla	r3, r3, r0, ip
 801e076:	b292      	uxth	r2, r2
 801e078:	fa1f fc83 	uxth.w	ip, r3
 801e07c:	1c4b      	adds	r3, r1, #1
 801e07e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e082:	f10c 0301 	add.w	r3, ip, #1
 801e086:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e08a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e08e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e092:	430b      	orrs	r3, r1
 801e094:	1c51      	adds	r1, r2, #1
 801e096:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e09a:	0952      	lsrs	r2, r2, #5
 801e09c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0a0:	4313      	orrs	r3, r2
 801e0a2:	803b      	strh	r3, [r7, #0]
 801e0a4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e0a6:	3702      	adds	r7, #2
 801e0a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e0aa:	441a      	add	r2, r3
 801e0ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e0ae:	441d      	add	r5, r3
 801e0b0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801e0b2:	9229      	str	r2, [sp, #164]	; 0xa4
 801e0b4:	3b01      	subs	r3, #1
 801e0b6:	931a      	str	r3, [sp, #104]	; 0x68
 801e0b8:	e694      	b.n	801dde4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e0ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e0bc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801e0be:	441c      	add	r4, r3
 801e0c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e0c2:	441d      	add	r5, r3
 801e0c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0c6:	9429      	str	r4, [sp, #164]	; 0xa4
 801e0c8:	3b01      	subs	r3, #1
 801e0ca:	9309      	str	r3, [sp, #36]	; 0x24
 801e0cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e0ce:	3302      	adds	r3, #2
 801e0d0:	930c      	str	r3, [sp, #48]	; 0x30
 801e0d2:	e667      	b.n	801dda4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e0d4:	d024      	beq.n	801e120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801e0d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0d8:	982b      	ldr	r0, [sp, #172]	; 0xac
 801e0da:	3b01      	subs	r3, #1
 801e0dc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801e0de:	fb00 4003 	mla	r0, r0, r3, r4
 801e0e2:	1400      	asrs	r0, r0, #16
 801e0e4:	f53f ae7b 	bmi.w	801ddde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e0e8:	3901      	subs	r1, #1
 801e0ea:	4288      	cmp	r0, r1
 801e0ec:	f6bf ae77 	bge.w	801ddde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e0f0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801e0f2:	fb01 5303 	mla	r3, r1, r3, r5
 801e0f6:	141b      	asrs	r3, r3, #16
 801e0f8:	f53f ae71 	bmi.w	801ddde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e0fc:	3a01      	subs	r2, #1
 801e0fe:	4293      	cmp	r3, r2
 801e100:	f6bf ae6d 	bge.w	801ddde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e104:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e108:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801e10c:	f1bb 0f00 	cmp.w	fp, #0
 801e110:	dc70      	bgt.n	801e1f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801e112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e114:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e118:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e11a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e11e:	930c      	str	r3, [sp, #48]	; 0x30
 801e120:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e122:	2b00      	cmp	r3, #0
 801e124:	f340 81be 	ble.w	801e4a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801e128:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e12c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e12e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e132:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e136:	eef0 6a62 	vmov.f32	s13, s5
 801e13a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e13e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e146:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801e14a:	eef0 6a43 	vmov.f32	s13, s6
 801e14e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e152:	ee16 5a90 	vmov	r5, s13
 801e156:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e15a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e15e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e162:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e166:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e16a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e16e:	ee12 2a90 	vmov	r2, s5
 801e172:	eef0 2a47 	vmov.f32	s5, s14
 801e176:	fb92 f3f3 	sdiv	r3, r2, r3
 801e17a:	ee13 2a10 	vmov	r2, s6
 801e17e:	932b      	str	r3, [sp, #172]	; 0xac
 801e180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e182:	eeb0 3a67 	vmov.f32	s6, s15
 801e186:	fb92 f3f3 	sdiv	r3, r2, r3
 801e18a:	932c      	str	r3, [sp, #176]	; 0xb0
 801e18c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e18e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801e190:	3b01      	subs	r3, #1
 801e192:	9319      	str	r3, [sp, #100]	; 0x64
 801e194:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e196:	bf08      	it	eq
 801e198:	4613      	moveq	r3, r2
 801e19a:	9309      	str	r3, [sp, #36]	; 0x24
 801e19c:	e5f4      	b.n	801dd88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e19e:	2900      	cmp	r1, #0
 801e1a0:	f43f ae66 	beq.w	801de70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801e1a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e1a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e1ac:	900a      	str	r0, [sp, #40]	; 0x28
 801e1ae:	0e00      	lsrs	r0, r0, #24
 801e1b0:	9013      	str	r0, [sp, #76]	; 0x4c
 801e1b2:	e65d      	b.n	801de70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801e1b4:	f113 0801 	adds.w	r8, r3, #1
 801e1b8:	f53f af74 	bmi.w	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e1bc:	4540      	cmp	r0, r8
 801e1be:	f6ff af71 	blt.w	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e1c2:	f11c 0801 	adds.w	r8, ip, #1
 801e1c6:	f53f af6d 	bmi.w	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e1ca:	45c6      	cmp	lr, r8
 801e1cc:	f6ff af6a 	blt.w	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e1d0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801e1d2:	b200      	sxth	r0, r0
 801e1d4:	9302      	str	r3, [sp, #8]
 801e1d6:	fa0f f38e 	sxth.w	r3, lr
 801e1da:	9000      	str	r0, [sp, #0]
 801e1dc:	9301      	str	r3, [sp, #4]
 801e1de:	4633      	mov	r3, r6
 801e1e0:	981d      	ldr	r0, [sp, #116]	; 0x74
 801e1e2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e1e6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801e1ea:	4639      	mov	r1, r7
 801e1ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e1ee:	f7ff fc63 	bl	801dab8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801e1f2:	e757      	b.n	801e0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e1f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e1f6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e1fa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801e1fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e200:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e202:	1427      	asrs	r7, r4, #16
 801e204:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e206:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e20a:	142b      	asrs	r3, r5, #16
 801e20c:	fb01 7303 	mla	r3, r1, r3, r7
 801e210:	18e7      	adds	r7, r4, r3
 801e212:	5ce3      	ldrb	r3, [r4, r3]
 801e214:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e218:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e21c:	2a00      	cmp	r2, #0
 801e21e:	f000 8137 	beq.w	801e490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801e222:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e226:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e22a:	9410      	str	r4, [sp, #64]	; 0x40
 801e22c:	0e24      	lsrs	r4, r4, #24
 801e22e:	9417      	str	r4, [sp, #92]	; 0x5c
 801e230:	b170      	cbz	r0, 801e250 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801e232:	eb07 0e01 	add.w	lr, r7, r1
 801e236:	5c79      	ldrb	r1, [r7, r1]
 801e238:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e23c:	910b      	str	r1, [sp, #44]	; 0x2c
 801e23e:	0e09      	lsrs	r1, r1, #24
 801e240:	9114      	str	r1, [sp, #80]	; 0x50
 801e242:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e246:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e24a:	9111      	str	r1, [sp, #68]	; 0x44
 801e24c:	0e09      	lsrs	r1, r1, #24
 801e24e:	9118      	str	r1, [sp, #96]	; 0x60
 801e250:	b292      	uxth	r2, r2
 801e252:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801e254:	b280      	uxth	r0, r0
 801e256:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e258:	fb02 f800 	mul.w	r8, r2, r0
 801e25c:	0112      	lsls	r2, r2, #4
 801e25e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e262:	eba2 0e08 	sub.w	lr, r2, r8
 801e266:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e26a:	b280      	uxth	r0, r0
 801e26c:	fa1f fe8e 	uxth.w	lr, lr
 801e270:	1a12      	subs	r2, r2, r0
 801e272:	fb0e f101 	mul.w	r1, lr, r1
 801e276:	b292      	uxth	r2, r2
 801e278:	fb02 110c 	mla	r1, r2, ip, r1
 801e27c:	fb00 1104 	mla	r1, r0, r4, r1
 801e280:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801e282:	fb08 1104 	mla	r1, r8, r4, r1
 801e286:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e28a:	2900      	cmp	r1, #0
 801e28c:	f000 80f5 	beq.w	801e47a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801e290:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e294:	d019      	beq.n	801e2ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801e296:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e29a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e29e:	fb0c fa0a 	mul.w	sl, ip, sl
 801e2a2:	fb0c fc03 	mul.w	ip, ip, r3
 801e2a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e2aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e2ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e2b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2b6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e2ba:	4453      	add	r3, sl
 801e2bc:	0a3f      	lsrs	r7, r7, #8
 801e2be:	0a1b      	lsrs	r3, r3, #8
 801e2c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e2c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2c8:	433b      	orrs	r3, r7
 801e2ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e2cc:	2cff      	cmp	r4, #255	; 0xff
 801e2ce:	d020      	beq.n	801e312 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801e2d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e2d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e2d6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e2d8:	4367      	muls	r7, r4
 801e2da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e2dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e2e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e2e4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e2e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e2ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801e2f2:	44bc      	add	ip, r7
 801e2f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e2f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e300:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e308:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e30c:	ea4c 040a 	orr.w	r4, ip, sl
 801e310:	9410      	str	r4, [sp, #64]	; 0x40
 801e312:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e314:	2cff      	cmp	r4, #255	; 0xff
 801e316:	d020      	beq.n	801e35a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801e318:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e31a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e31e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e320:	4367      	muls	r7, r4
 801e322:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e324:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e328:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e32c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e32e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e332:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e336:	fb04 fa0a 	mul.w	sl, r4, sl
 801e33a:	44bc      	add	ip, r7
 801e33c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e344:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e348:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e34c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e354:	ea4c 040a 	orr.w	r4, ip, sl
 801e358:	940b      	str	r4, [sp, #44]	; 0x2c
 801e35a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801e35c:	2cff      	cmp	r4, #255	; 0xff
 801e35e:	d020      	beq.n	801e3a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801e360:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e362:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e366:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801e368:	4367      	muls	r7, r4
 801e36a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e36c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e370:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e374:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801e376:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e37a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e37e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e382:	44bc      	add	ip, r7
 801e384:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e38c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e390:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e394:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e398:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e39c:	ea4c 040a 	orr.w	r4, ip, sl
 801e3a0:	9411      	str	r4, [sp, #68]	; 0x44
 801e3a2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e3a4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e3a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e3ac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e3b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e3b2:	fb0e f707 	mul.w	r7, lr, r7
 801e3b6:	fb02 770c 	mla	r7, r2, ip, r7
 801e3ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e3be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e3c0:	fb00 770c 	mla	r7, r0, ip, r7
 801e3c4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e3c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e3ca:	fb08 770c 	mla	r7, r8, ip, r7
 801e3ce:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801e3d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e3d4:	fb0e fe0c 	mul.w	lr, lr, ip
 801e3d8:	0a3f      	lsrs	r7, r7, #8
 801e3da:	fb02 e303 	mla	r3, r2, r3, lr
 801e3de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e3e0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e3e4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e3e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e3ea:	fb00 330a 	mla	r3, r0, sl, r3
 801e3ee:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e3f2:	f8b9 0000 	ldrh.w	r0, [r9]
 801e3f6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e3fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e3fc:	1202      	asrs	r2, r0, #8
 801e3fe:	434b      	muls	r3, r1
 801e400:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e404:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e408:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e40c:	1c59      	adds	r1, r3, #1
 801e40e:	ea47 070c 	orr.w	r7, r7, ip
 801e412:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e416:	0c3b      	lsrs	r3, r7, #16
 801e418:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e41c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e420:	b2ff      	uxtb	r7, r7
 801e422:	fb13 f304 	smulbb	r3, r3, r4
 801e426:	b2c9      	uxtb	r1, r1
 801e428:	fb1c fc04 	smulbb	ip, ip, r4
 801e42c:	fb02 3201 	mla	r2, r2, r1, r3
 801e430:	10c3      	asrs	r3, r0, #3
 801e432:	fb17 f704 	smulbb	r7, r7, r4
 801e436:	00c0      	lsls	r0, r0, #3
 801e438:	b292      	uxth	r2, r2
 801e43a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e43e:	b2c0      	uxtb	r0, r0
 801e440:	fb03 c301 	mla	r3, r3, r1, ip
 801e444:	f102 0c01 	add.w	ip, r2, #1
 801e448:	fb00 7001 	mla	r0, r0, r1, r7
 801e44c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801e450:	b280      	uxth	r0, r0
 801e452:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801e456:	b29b      	uxth	r3, r3
 801e458:	1c42      	adds	r2, r0, #1
 801e45a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e45e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e462:	ea42 020c 	orr.w	r2, r2, ip
 801e466:	f103 0c01 	add.w	ip, r3, #1
 801e46a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e46e:	095b      	lsrs	r3, r3, #5
 801e470:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e474:	431a      	orrs	r2, r3
 801e476:	f8a9 2000 	strh.w	r2, [r9]
 801e47a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e47c:	f109 0902 	add.w	r9, r9, #2
 801e480:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e482:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e486:	441a      	add	r2, r3
 801e488:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e48a:	9229      	str	r2, [sp, #164]	; 0xa4
 801e48c:	441d      	add	r5, r3
 801e48e:	e63d      	b.n	801e10c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801e490:	2800      	cmp	r0, #0
 801e492:	f43f aedd 	beq.w	801e250 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801e496:	5c79      	ldrb	r1, [r7, r1]
 801e498:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e49c:	910b      	str	r1, [sp, #44]	; 0x2c
 801e49e:	0e09      	lsrs	r1, r1, #24
 801e4a0:	9114      	str	r1, [sp, #80]	; 0x50
 801e4a2:	e6d5      	b.n	801e250 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801e4a4:	b01f      	add	sp, #124	; 0x7c
 801e4a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e4aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801e4aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4ae:	b089      	sub	sp, #36	; 0x24
 801e4b0:	9101      	str	r1, [sp, #4]
 801e4b2:	9801      	ldr	r0, [sp, #4]
 801e4b4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801e4b8:	8800      	ldrh	r0, [r0, #0]
 801e4ba:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801e4be:	1206      	asrs	r6, r0, #8
 801e4c0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801e4c4:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801e4c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e4cc:	9602      	str	r6, [sp, #8]
 801e4ce:	10c6      	asrs	r6, r0, #3
 801e4d0:	00c0      	lsls	r0, r0, #3
 801e4d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e4d6:	b2c0      	uxtb	r0, r0
 801e4d8:	9603      	str	r6, [sp, #12]
 801e4da:	9004      	str	r0, [sp, #16]
 801e4dc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801e4e0:	fb07 100c 	mla	r0, r7, ip, r1
 801e4e4:	2f00      	cmp	r7, #0
 801e4e6:	eb02 0e00 	add.w	lr, r2, r0
 801e4ea:	f2c0 810a 	blt.w	801e702 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e4ee:	45b8      	cmp	r8, r7
 801e4f0:	f340 8107 	ble.w	801e702 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e4f4:	2900      	cmp	r1, #0
 801e4f6:	f2c0 8102 	blt.w	801e6fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e4fa:	458c      	cmp	ip, r1
 801e4fc:	f340 80ff 	ble.w	801e6fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e500:	5c12      	ldrb	r2, [r2, r0]
 801e502:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801e506:	1c4a      	adds	r2, r1, #1
 801e508:	f100 80fe 	bmi.w	801e708 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e50c:	4594      	cmp	ip, r2
 801e50e:	f340 80fb 	ble.w	801e708 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e512:	2d00      	cmp	r5, #0
 801e514:	f000 80fa 	beq.w	801e70c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801e518:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e51c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801e520:	3701      	adds	r7, #1
 801e522:	f100 80f7 	bmi.w	801e714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e526:	45b8      	cmp	r8, r7
 801e528:	f340 80f4 	ble.w	801e714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e52c:	2c00      	cmp	r4, #0
 801e52e:	f000 80f4 	beq.w	801e71a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801e532:	2900      	cmp	r1, #0
 801e534:	eb0e 020c 	add.w	r2, lr, ip
 801e538:	f2c0 80ea 	blt.w	801e710 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e53c:	458c      	cmp	ip, r1
 801e53e:	f340 80e7 	ble.w	801e710 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e542:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801e546:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801e54a:	3101      	adds	r1, #1
 801e54c:	f100 80e8 	bmi.w	801e720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e550:	458c      	cmp	ip, r1
 801e552:	f340 80e5 	ble.w	801e720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e556:	2d00      	cmp	r5, #0
 801e558:	f000 80e4 	beq.w	801e724 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801e55c:	7852      	ldrb	r2, [r2, #1]
 801e55e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801e562:	0e0b      	lsrs	r3, r1, #24
 801e564:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801e568:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801e56c:	9300      	str	r3, [sp, #0]
 801e56e:	b2a4      	uxth	r4, r4
 801e570:	b2ab      	uxth	r3, r5
 801e572:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801e576:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801e57a:	fb03 f904 	mul.w	r9, r3, r4
 801e57e:	011b      	lsls	r3, r3, #4
 801e580:	fb0a f505 	mul.w	r5, sl, r5
 801e584:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801e588:	eba3 0e09 	sub.w	lr, r3, r9
 801e58c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801e590:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801e594:	0a28      	lsrs	r0, r5, #8
 801e596:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801e59a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e59e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e5a2:	fb0a f303 	mul.w	r3, sl, r3
 801e5a6:	fb08 f707 	mul.w	r7, r8, r7
 801e5aa:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801e5ae:	4405      	add	r5, r0
 801e5b0:	fb08 fc0c 	mul.w	ip, r8, ip
 801e5b4:	b2a4      	uxth	r4, r4
 801e5b6:	0a2d      	lsrs	r5, r5, #8
 801e5b8:	fa1f fe8e 	uxth.w	lr, lr
 801e5bc:	1b12      	subs	r2, r2, r4
 801e5be:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801e5c2:	b292      	uxth	r2, r2
 801e5c4:	9005      	str	r0, [sp, #20]
 801e5c6:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801e5ca:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e5ce:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801e5d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e5d6:	0a1b      	lsrs	r3, r3, #8
 801e5d8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e5dc:	9306      	str	r3, [sp, #24]
 801e5de:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801e5e2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801e5e6:	4460      	add	r0, ip
 801e5e8:	fb0b f303 	mul.w	r3, fp, r3
 801e5ec:	fb0b f606 	mul.w	r6, fp, r6
 801e5f0:	0a00      	lsrs	r0, r0, #8
 801e5f2:	0a1d      	lsrs	r5, r3, #8
 801e5f4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801e5f8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e5fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e600:	441d      	add	r5, r3
 801e602:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801e606:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e60a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801e60e:	0a2d      	lsrs	r5, r5, #8
 801e610:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801e614:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801e618:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e61c:	0a36      	lsrs	r6, r6, #8
 801e61e:	0a1b      	lsrs	r3, r3, #8
 801e620:	fb05 f50e 	mul.w	r5, r5, lr
 801e624:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801e628:	9307      	str	r3, [sp, #28]
 801e62a:	0e0b      	lsrs	r3, r1, #24
 801e62c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e630:	fb0e f606 	mul.w	r6, lr, r6
 801e634:	435f      	muls	r7, r3
 801e636:	4359      	muls	r1, r3
 801e638:	9b05      	ldr	r3, [sp, #20]
 801e63a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e63e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e642:	fb03 5502 	mla	r5, r3, r2, r5
 801e646:	9b06      	ldr	r3, [sp, #24]
 801e648:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e64c:	fb0e fe0b 	mul.w	lr, lr, fp
 801e650:	44bc      	add	ip, r7
 801e652:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801e656:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e65a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e65e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e662:	0a09      	lsrs	r1, r1, #8
 801e664:	fb0c 5509 	mla	r5, ip, r9, r5
 801e668:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e66c:	fb00 5504 	mla	r5, r0, r4, r5
 801e670:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801e674:	9b07      	ldr	r3, [sp, #28]
 801e676:	fb02 6000 	mla	r0, r2, r0, r6
 801e67a:	0a2d      	lsrs	r5, r5, #8
 801e67c:	fb02 e20a 	mla	r2, r2, sl, lr
 801e680:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e684:	fb09 0001 	mla	r0, r9, r1, r0
 801e688:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e68c:	fb04 0003 	mla	r0, r4, r3, r0
 801e690:	9b00      	ldr	r3, [sp, #0]
 801e692:	fb04 2408 	mla	r4, r4, r8, r2
 801e696:	9a04      	ldr	r2, [sp, #16]
 801e698:	0a00      	lsrs	r0, r0, #8
 801e69a:	fb09 4903 	mla	r9, r9, r3, r4
 801e69e:	9b02      	ldr	r3, [sp, #8]
 801e6a0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e6a4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801e6a8:	4305      	orrs	r5, r0
 801e6aa:	fa5f f989 	uxtb.w	r9, r9
 801e6ae:	fb03 f109 	mul.w	r1, r3, r9
 801e6b2:	9b03      	ldr	r3, [sp, #12]
 801e6b4:	fb03 f309 	mul.w	r3, r3, r9
 801e6b8:	fb02 f909 	mul.w	r9, r2, r9
 801e6bc:	1c4a      	adds	r2, r1, #1
 801e6be:	1c58      	adds	r0, r3, #1
 801e6c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e6c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e6c8:	0c2a      	lsrs	r2, r5, #16
 801e6ca:	0a2b      	lsrs	r3, r5, #8
 801e6cc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801e6d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e6d4:	0212      	lsls	r2, r2, #8
 801e6d6:	00db      	lsls	r3, r3, #3
 801e6d8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e6dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e6e0:	4313      	orrs	r3, r2
 801e6e2:	f109 0201 	add.w	r2, r9, #1
 801e6e6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801e6ea:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801e6ee:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e6f2:	431d      	orrs	r5, r3
 801e6f4:	9b01      	ldr	r3, [sp, #4]
 801e6f6:	801d      	strh	r5, [r3, #0]
 801e6f8:	b009      	add	sp, #36	; 0x24
 801e6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6fe:	2000      	movs	r0, #0
 801e700:	e701      	b.n	801e506 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801e702:	2600      	movs	r6, #0
 801e704:	4630      	mov	r0, r6
 801e706:	e70b      	b.n	801e520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e708:	2600      	movs	r6, #0
 801e70a:	e709      	b.n	801e520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e70c:	462e      	mov	r6, r5
 801e70e:	e707      	b.n	801e520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e710:	2700      	movs	r7, #0
 801e712:	e71a      	b.n	801e54a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801e714:	2100      	movs	r1, #0
 801e716:	460f      	mov	r7, r1
 801e718:	e723      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e71a:	4621      	mov	r1, r4
 801e71c:	4627      	mov	r7, r4
 801e71e:	e720      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e720:	2100      	movs	r1, #0
 801e722:	e71e      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e724:	4629      	mov	r1, r5
 801e726:	e71c      	b.n	801e562 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801e728 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e72c:	b09b      	sub	sp, #108	; 0x6c
 801e72e:	9218      	str	r2, [sp, #96]	; 0x60
 801e730:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e732:	9019      	str	r0, [sp, #100]	; 0x64
 801e734:	9116      	str	r1, [sp, #88]	; 0x58
 801e736:	6850      	ldr	r0, [r2, #4]
 801e738:	9307      	str	r3, [sp, #28]
 801e73a:	6812      	ldr	r2, [r2, #0]
 801e73c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801e73e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e742:	fb00 1303 	mla	r3, r0, r3, r1
 801e746:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e74a:	930a      	str	r3, [sp, #40]	; 0x28
 801e74c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e74e:	681b      	ldr	r3, [r3, #0]
 801e750:	930f      	str	r3, [sp, #60]	; 0x3c
 801e752:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e754:	685e      	ldr	r6, [r3, #4]
 801e756:	3604      	adds	r6, #4
 801e758:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e75a:	2b00      	cmp	r3, #0
 801e75c:	dc03      	bgt.n	801e766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e75e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e760:	2b00      	cmp	r3, #0
 801e762:	f340 8373 	ble.w	801ee4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801e766:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e768:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e76c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e770:	1e48      	subs	r0, r1, #1
 801e772:	1e57      	subs	r7, r2, #1
 801e774:	9b07      	ldr	r3, [sp, #28]
 801e776:	2b00      	cmp	r3, #0
 801e778:	f340 818f 	ble.w	801ea9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801e77c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801e77e:	142b      	asrs	r3, r5, #16
 801e780:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e784:	d406      	bmi.n	801e794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e786:	4584      	cmp	ip, r0
 801e788:	da04      	bge.n	801e794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e78a:	2b00      	cmp	r3, #0
 801e78c:	db02      	blt.n	801e794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e78e:	42bb      	cmp	r3, r7
 801e790:	f2c0 8184 	blt.w	801ea9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801e794:	f11c 0c01 	adds.w	ip, ip, #1
 801e798:	f100 8172 	bmi.w	801ea80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e79c:	4561      	cmp	r1, ip
 801e79e:	f2c0 816f 	blt.w	801ea80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e7a2:	3301      	adds	r3, #1
 801e7a4:	f100 816c 	bmi.w	801ea80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e7a8:	429a      	cmp	r2, r3
 801e7aa:	f2c0 8169 	blt.w	801ea80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e7ae:	9b07      	ldr	r3, [sp, #28]
 801e7b0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e7b2:	9317      	str	r3, [sp, #92]	; 0x5c
 801e7b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e7b6:	2b00      	cmp	r3, #0
 801e7b8:	f340 818e 	ble.w	801ead8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801e7bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e7be:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e7c2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e7c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e7ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e7cc:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801e7d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e7d2:	141b      	asrs	r3, r3, #16
 801e7d4:	f100 81d1 	bmi.w	801eb7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7d8:	f101 38ff 	add.w	r8, r1, #4294967295
 801e7dc:	4543      	cmp	r3, r8
 801e7de:	f280 81cc 	bge.w	801eb7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7e2:	f1bc 0f00 	cmp.w	ip, #0
 801e7e6:	f2c0 81c8 	blt.w	801eb7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7ea:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e7ee:	45c4      	cmp	ip, r8
 801e7f0:	f280 81c3 	bge.w	801eb7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7f4:	b209      	sxth	r1, r1
 801e7f6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e7f8:	fb0c 3301 	mla	r3, ip, r1, r3
 801e7fc:	eb04 0803 	add.w	r8, r4, r3
 801e800:	5ce3      	ldrb	r3, [r4, r3]
 801e802:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e806:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e80a:	2a00      	cmp	r2, #0
 801e80c:	f000 81aa 	beq.w	801eb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801e810:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e814:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e818:	940b      	str	r4, [sp, #44]	; 0x2c
 801e81a:	0e24      	lsrs	r4, r4, #24
 801e81c:	9412      	str	r4, [sp, #72]	; 0x48
 801e81e:	b178      	cbz	r0, 801e840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801e820:	eb08 0c01 	add.w	ip, r8, r1
 801e824:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e828:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e82c:	9108      	str	r1, [sp, #32]
 801e82e:	0e09      	lsrs	r1, r1, #24
 801e830:	9110      	str	r1, [sp, #64]	; 0x40
 801e832:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801e836:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e83a:	910c      	str	r1, [sp, #48]	; 0x30
 801e83c:	0e09      	lsrs	r1, r1, #24
 801e83e:	9113      	str	r1, [sp, #76]	; 0x4c
 801e840:	b292      	uxth	r2, r2
 801e842:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e844:	b280      	uxth	r0, r0
 801e846:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e848:	fb02 f900 	mul.w	r9, r2, r0
 801e84c:	0112      	lsls	r2, r2, #4
 801e84e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e852:	eba2 0809 	sub.w	r8, r2, r9
 801e856:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e85a:	b280      	uxth	r0, r0
 801e85c:	fa1f f888 	uxth.w	r8, r8
 801e860:	1a12      	subs	r2, r2, r0
 801e862:	fb08 f101 	mul.w	r1, r8, r1
 801e866:	b292      	uxth	r2, r2
 801e868:	fb02 110e 	mla	r1, r2, lr, r1
 801e86c:	fb00 1104 	mla	r1, r0, r4, r1
 801e870:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e872:	fb09 1104 	mla	r1, r9, r4, r1
 801e876:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e87a:	2900      	cmp	r1, #0
 801e87c:	f000 80f5 	beq.w	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e880:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e884:	d01b      	beq.n	801e8be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e886:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e88a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e88e:	fb0e fa0a 	mul.w	sl, lr, sl
 801e892:	fb0e fe03 	mul.w	lr, lr, r3
 801e896:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e89a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e89e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e8a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e8a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e8aa:	4453      	add	r3, sl
 801e8ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8b0:	0a1b      	lsrs	r3, r3, #8
 801e8b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e8b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e8ba:	ea43 030c 	orr.w	r3, r3, ip
 801e8be:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e8c0:	2cff      	cmp	r4, #255	; 0xff
 801e8c2:	d021      	beq.n	801e908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801e8c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e8c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e8ca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e8cc:	fb04 fb0b 	mul.w	fp, r4, fp
 801e8d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e8d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e8d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e8d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e8e0:	fb04 fa0a 	mul.w	sl, r4, sl
 801e8e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e8ec:	44de      	add	lr, fp
 801e8ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e902:	ea4e 040a 	orr.w	r4, lr, sl
 801e906:	940b      	str	r4, [sp, #44]	; 0x2c
 801e908:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e90a:	2cff      	cmp	r4, #255	; 0xff
 801e90c:	d021      	beq.n	801e952 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e90e:	9c08      	ldr	r4, [sp, #32]
 801e910:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e914:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e916:	fb04 fb0b 	mul.w	fp, r4, fp
 801e91a:	9c08      	ldr	r4, [sp, #32]
 801e91c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e920:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e922:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e926:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e92a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e92e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e932:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e936:	44de      	add	lr, fp
 801e938:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e93c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e940:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e944:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e948:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e94c:	ea4e 040a 	orr.w	r4, lr, sl
 801e950:	9408      	str	r4, [sp, #32]
 801e952:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e954:	2cff      	cmp	r4, #255	; 0xff
 801e956:	d021      	beq.n	801e99c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e958:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e95a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e95e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e960:	fb04 fb0b 	mul.w	fp, r4, fp
 801e964:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e966:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e96a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e96c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e970:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e974:	fb04 fa0a 	mul.w	sl, r4, sl
 801e978:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e97c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e980:	44de      	add	lr, fp
 801e982:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e986:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e98a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e98e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e992:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e996:	ea4e 040a 	orr.w	r4, lr, sl
 801e99a:	940c      	str	r4, [sp, #48]	; 0x30
 801e99c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e99e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801e9a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e9a6:	43c9      	mvns	r1, r1
 801e9a8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e9ac:	9c08      	ldr	r4, [sp, #32]
 801e9ae:	fb08 fc0c 	mul.w	ip, r8, ip
 801e9b2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e9b6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e9ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e9bc:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e9c0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e9c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e9c6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e9ca:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801e9ce:	fb08 f80e 	mul.w	r8, r8, lr
 801e9d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9d6:	fa5f fe81 	uxtb.w	lr, r1
 801e9da:	fb02 8303 	mla	r3, r2, r3, r8
 801e9de:	9a08      	ldr	r2, [sp, #32]
 801e9e0:	f8b7 8000 	ldrh.w	r8, [r7]
 801e9e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e9ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e9ee:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801e9f2:	fb00 330a 	mla	r3, r0, sl, r3
 801e9f6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801e9fa:	ea4f 2228 	mov.w	r2, r8, asr #8
 801e9fe:	fb09 3900 	mla	r9, r9, r0, r3
 801ea02:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ea06:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ea0a:	b2c9      	uxtb	r1, r1
 801ea0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ea10:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ea14:	fb02 f20e 	mul.w	r2, r2, lr
 801ea18:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ea1c:	fb00 f00e 	mul.w	r0, r0, lr
 801ea20:	1c53      	adds	r3, r2, #1
 801ea22:	fb01 f10e 	mul.w	r1, r1, lr
 801ea26:	ea4c 0c09 	orr.w	ip, ip, r9
 801ea2a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ea2e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ea32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ea36:	4a60      	ldr	r2, [pc, #384]	; (801ebb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ea38:	b2db      	uxtb	r3, r3
 801ea3a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ea3e:	1c43      	adds	r3, r0, #1
 801ea40:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ea44:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ea48:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ea4c:	00db      	lsls	r3, r3, #3
 801ea4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea52:	4313      	orrs	r3, r2
 801ea54:	1c4a      	adds	r2, r1, #1
 801ea56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ea5a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ea5e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ea62:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea66:	f8a7 c000 	strh.w	ip, [r7]
 801ea6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ea6c:	3702      	adds	r7, #2
 801ea6e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ea70:	441a      	add	r2, r3
 801ea72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea74:	441d      	add	r5, r3
 801ea76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ea78:	9225      	str	r2, [sp, #148]	; 0x94
 801ea7a:	3b01      	subs	r3, #1
 801ea7c:	9317      	str	r3, [sp, #92]	; 0x5c
 801ea7e:	e699      	b.n	801e7b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ea80:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ea82:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ea84:	441c      	add	r4, r3
 801ea86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea88:	441d      	add	r5, r3
 801ea8a:	9b07      	ldr	r3, [sp, #28]
 801ea8c:	9425      	str	r4, [sp, #148]	; 0x94
 801ea8e:	3b01      	subs	r3, #1
 801ea90:	9307      	str	r3, [sp, #28]
 801ea92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea94:	3302      	adds	r3, #2
 801ea96:	930a      	str	r3, [sp, #40]	; 0x28
 801ea98:	e66c      	b.n	801e774 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ea9a:	d024      	beq.n	801eae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801ea9c:	9b07      	ldr	r3, [sp, #28]
 801ea9e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801eaa0:	3b01      	subs	r3, #1
 801eaa2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801eaa4:	fb00 4003 	mla	r0, r0, r3, r4
 801eaa8:	1400      	asrs	r0, r0, #16
 801eaaa:	f53f ae80 	bmi.w	801e7ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801eaae:	3901      	subs	r1, #1
 801eab0:	4288      	cmp	r0, r1
 801eab2:	f6bf ae7c 	bge.w	801e7ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801eab6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801eab8:	fb01 5303 	mla	r3, r1, r3, r5
 801eabc:	141b      	asrs	r3, r3, #16
 801eabe:	f53f ae76 	bmi.w	801e7ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801eac2:	3a01      	subs	r2, #1
 801eac4:	4293      	cmp	r3, r2
 801eac6:	f6bf ae72 	bge.w	801e7ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801eaca:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eace:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ead2:	f1bb 0f00 	cmp.w	fp, #0
 801ead6:	dc71      	bgt.n	801ebbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ead8:	9b07      	ldr	r3, [sp, #28]
 801eada:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eade:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eae0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801eae4:	930a      	str	r3, [sp, #40]	; 0x28
 801eae6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eae8:	2b00      	cmp	r3, #0
 801eaea:	f340 81af 	ble.w	801ee4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801eaee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eaf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eaf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eafc:	eef0 6a62 	vmov.f32	s13, s5
 801eb00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb04:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb0c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801eb10:	eef0 6a43 	vmov.f32	s13, s6
 801eb14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb18:	ee16 5a90 	vmov	r5, s13
 801eb1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb24:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb34:	ee12 2a90 	vmov	r2, s5
 801eb38:	eef0 2a47 	vmov.f32	s5, s14
 801eb3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb40:	ee13 2a10 	vmov	r2, s6
 801eb44:	9327      	str	r3, [sp, #156]	; 0x9c
 801eb46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb48:	eeb0 3a67 	vmov.f32	s6, s15
 801eb4c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb50:	9328      	str	r3, [sp, #160]	; 0xa0
 801eb52:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eb54:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801eb56:	3b01      	subs	r3, #1
 801eb58:	9316      	str	r3, [sp, #88]	; 0x58
 801eb5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb5c:	bf08      	it	eq
 801eb5e:	4613      	moveq	r3, r2
 801eb60:	9307      	str	r3, [sp, #28]
 801eb62:	e5f9      	b.n	801e758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801eb64:	2800      	cmp	r0, #0
 801eb66:	f43f ae6b 	beq.w	801e840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801eb6a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801eb6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801eb72:	9108      	str	r1, [sp, #32]
 801eb74:	0e09      	lsrs	r1, r1, #24
 801eb76:	9110      	str	r1, [sp, #64]	; 0x40
 801eb78:	e662      	b.n	801e840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801eb7a:	f113 0801 	adds.w	r8, r3, #1
 801eb7e:	f53f af74 	bmi.w	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb82:	4541      	cmp	r1, r8
 801eb84:	f6ff af71 	blt.w	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb88:	f11c 0801 	adds.w	r8, ip, #1
 801eb8c:	f53f af6d 	bmi.w	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb90:	45c6      	cmp	lr, r8
 801eb92:	f6ff af6a 	blt.w	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb96:	b209      	sxth	r1, r1
 801eb98:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801eb9c:	fa0f f38e 	sxth.w	r3, lr
 801eba0:	9100      	str	r1, [sp, #0]
 801eba2:	4639      	mov	r1, r7
 801eba4:	9301      	str	r3, [sp, #4]
 801eba6:	4633      	mov	r3, r6
 801eba8:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ebac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ebae:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ebb0:	f7ff fc7b 	bl	801e4aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ebb4:	e759      	b.n	801ea6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ebb6:	bf00      	nop
 801ebb8:	fffff800 	.word	0xfffff800
 801ebbc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ebbe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ebc2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ebc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ebc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ebca:	1427      	asrs	r7, r4, #16
 801ebcc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ebce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ebd2:	142b      	asrs	r3, r5, #16
 801ebd4:	fb01 7303 	mla	r3, r1, r3, r7
 801ebd8:	18e7      	adds	r7, r4, r3
 801ebda:	5ce3      	ldrb	r3, [r4, r3]
 801ebdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ebe0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ebe4:	2a00      	cmp	r2, #0
 801ebe6:	f000 8127 	beq.w	801ee38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ebea:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ebee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ebf2:	940d      	str	r4, [sp, #52]	; 0x34
 801ebf4:	0e24      	lsrs	r4, r4, #24
 801ebf6:	9414      	str	r4, [sp, #80]	; 0x50
 801ebf8:	b170      	cbz	r0, 801ec18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ebfa:	eb07 0e01 	add.w	lr, r7, r1
 801ebfe:	5c79      	ldrb	r1, [r7, r1]
 801ec00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ec04:	9109      	str	r1, [sp, #36]	; 0x24
 801ec06:	0e09      	lsrs	r1, r1, #24
 801ec08:	9111      	str	r1, [sp, #68]	; 0x44
 801ec0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ec0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ec12:	910e      	str	r1, [sp, #56]	; 0x38
 801ec14:	0e09      	lsrs	r1, r1, #24
 801ec16:	9115      	str	r1, [sp, #84]	; 0x54
 801ec18:	b292      	uxth	r2, r2
 801ec1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ec1c:	b280      	uxth	r0, r0
 801ec1e:	fb02 f800 	mul.w	r8, r2, r0
 801ec22:	0112      	lsls	r2, r2, #4
 801ec24:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ec28:	eba2 0e08 	sub.w	lr, r2, r8
 801ec2c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ec30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec32:	b280      	uxth	r0, r0
 801ec34:	fa1f fe8e 	uxth.w	lr, lr
 801ec38:	1a09      	subs	r1, r1, r0
 801ec3a:	fb0e f202 	mul.w	r2, lr, r2
 801ec3e:	b289      	uxth	r1, r1
 801ec40:	fb01 220c 	mla	r2, r1, ip, r2
 801ec44:	fb00 2204 	mla	r2, r0, r4, r2
 801ec48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ec4a:	fb08 2204 	mla	r2, r8, r4, r2
 801ec4e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ec52:	2a00      	cmp	r2, #0
 801ec54:	f000 80e5 	beq.w	801ee22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ec58:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ec5c:	d019      	beq.n	801ec92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ec5e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ec62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ec66:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec6a:	fb0c fc03 	mul.w	ip, ip, r3
 801ec6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ec76:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ec7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec7e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ec82:	4453      	add	r3, sl
 801ec84:	0a3f      	lsrs	r7, r7, #8
 801ec86:	0a1b      	lsrs	r3, r3, #8
 801ec88:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ec8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec90:	433b      	orrs	r3, r7
 801ec92:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ec94:	2cff      	cmp	r4, #255	; 0xff
 801ec96:	d020      	beq.n	801ecda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ec98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ec9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ec9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eca0:	4367      	muls	r7, r4
 801eca2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801eca4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eca8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ecac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ecae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ecb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecb6:	fb04 fa0a 	mul.w	sl, r4, sl
 801ecba:	44bc      	add	ip, r7
 801ecbc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ecc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ecc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eccc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecd4:	ea4c 040a 	orr.w	r4, ip, sl
 801ecd8:	940d      	str	r4, [sp, #52]	; 0x34
 801ecda:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ecdc:	2cff      	cmp	r4, #255	; 0xff
 801ecde:	d020      	beq.n	801ed22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801ece0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ece2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ece6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ece8:	4367      	muls	r7, r4
 801ecea:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ecec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecf0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ecf4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ecf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ecfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecfe:	fb04 fa0a 	mul.w	sl, r4, sl
 801ed02:	44bc      	add	ip, r7
 801ed04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ed08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed1c:	ea4c 040a 	orr.w	r4, ip, sl
 801ed20:	9409      	str	r4, [sp, #36]	; 0x24
 801ed22:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ed24:	2cff      	cmp	r4, #255	; 0xff
 801ed26:	d020      	beq.n	801ed6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ed28:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ed2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ed30:	4367      	muls	r7, r4
 801ed32:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ed3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ed3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ed42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed46:	fb04 fa0a 	mul.w	sl, r4, sl
 801ed4a:	44bc      	add	ip, r7
 801ed4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ed50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed64:	ea4c 040a 	orr.w	r4, ip, sl
 801ed68:	940e      	str	r4, [sp, #56]	; 0x38
 801ed6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed6c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ed70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ed74:	43d2      	mvns	r2, r2
 801ed76:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ed7a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ed7c:	b2d2      	uxtb	r2, r2
 801ed7e:	fb0e f707 	mul.w	r7, lr, r7
 801ed82:	fb01 770c 	mla	r7, r1, ip, r7
 801ed86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ed8a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed8c:	fb00 770c 	mla	r7, r0, ip, r7
 801ed90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ed94:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed96:	fb08 770c 	mla	r7, r8, ip, r7
 801ed9a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ed9e:	fb0e fe0c 	mul.w	lr, lr, ip
 801eda2:	0a3f      	lsrs	r7, r7, #8
 801eda4:	fb01 e303 	mla	r3, r1, r3, lr
 801eda8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801edaa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801edae:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801edb2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801edb4:	fb00 330a 	mla	r3, r0, sl, r3
 801edb8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801edbc:	fb08 3c0c 	mla	ip, r8, ip, r3
 801edc0:	f8b9 3000 	ldrh.w	r3, [r9]
 801edc4:	1218      	asrs	r0, r3, #8
 801edc6:	10d9      	asrs	r1, r3, #3
 801edc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edcc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801edd0:	00db      	lsls	r3, r3, #3
 801edd2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801edd6:	4350      	muls	r0, r2
 801edd8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eddc:	b2db      	uxtb	r3, r3
 801edde:	4351      	muls	r1, r2
 801ede0:	ea47 070c 	orr.w	r7, r7, ip
 801ede4:	4353      	muls	r3, r2
 801ede6:	1c42      	adds	r2, r0, #1
 801ede8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801edec:	0c3a      	lsrs	r2, r7, #16
 801edee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801edf2:	4a18      	ldr	r2, [pc, #96]	; (801ee54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801edf4:	b2c0      	uxtb	r0, r0
 801edf6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801edfa:	1c4a      	adds	r2, r1, #1
 801edfc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ee00:	0a3a      	lsrs	r2, r7, #8
 801ee02:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ee06:	00c9      	lsls	r1, r1, #3
 801ee08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ee0c:	4301      	orrs	r1, r0
 801ee0e:	1c58      	adds	r0, r3, #1
 801ee10:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ee14:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ee18:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ee1c:	4308      	orrs	r0, r1
 801ee1e:	f8a9 0000 	strh.w	r0, [r9]
 801ee22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ee24:	f109 0902 	add.w	r9, r9, #2
 801ee28:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ee2a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee2e:	441a      	add	r2, r3
 801ee30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee32:	9225      	str	r2, [sp, #148]	; 0x94
 801ee34:	441d      	add	r5, r3
 801ee36:	e64c      	b.n	801ead2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ee38:	2800      	cmp	r0, #0
 801ee3a:	f43f aeed 	beq.w	801ec18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ee3e:	5c79      	ldrb	r1, [r7, r1]
 801ee40:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ee44:	9109      	str	r1, [sp, #36]	; 0x24
 801ee46:	0e09      	lsrs	r1, r1, #24
 801ee48:	9111      	str	r1, [sp, #68]	; 0x44
 801ee4a:	e6e5      	b.n	801ec18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ee4c:	b01b      	add	sp, #108	; 0x6c
 801ee4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee52:	bf00      	nop
 801ee54:	fffff800 	.word	0xfffff800

0801ee58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ee58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee5c:	b085      	sub	sp, #20
 801ee5e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ee62:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ee66:	2800      	cmp	r0, #0
 801ee68:	9103      	str	r1, [sp, #12]
 801ee6a:	fb00 7406 	mla	r4, r0, r6, r7
 801ee6e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ee72:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ee76:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ee7a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ee7e:	eb03 0904 	add.w	r9, r3, r4
 801ee82:	9501      	str	r5, [sp, #4]
 801ee84:	f2c0 8150 	blt.w	801f128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ee88:	4583      	cmp	fp, r0
 801ee8a:	f340 814d 	ble.w	801f128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ee8e:	2f00      	cmp	r7, #0
 801ee90:	f2c0 8146 	blt.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ee94:	42be      	cmp	r6, r7
 801ee96:	f340 8143 	ble.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ee9a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ee9e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801eea2:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801eea6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801eeaa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801eeae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eeb2:	4355      	muls	r5, r2
 801eeb4:	fb0c f203 	mul.w	r2, ip, r3
 801eeb8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801eebc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801eec0:	441d      	add	r5, r3
 801eec2:	f102 0320 	add.w	r3, r2, #32
 801eec6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eeca:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801eece:	0a1b      	lsrs	r3, r3, #8
 801eed0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eed4:	431c      	orrs	r4, r3
 801eed6:	1c7b      	adds	r3, r7, #1
 801eed8:	f100 812b 	bmi.w	801f132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801eedc:	429e      	cmp	r6, r3
 801eede:	f340 8128 	ble.w	801f132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801eee2:	2900      	cmp	r1, #0
 801eee4:	f000 8128 	beq.w	801f138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801eee8:	9a01      	ldr	r2, [sp, #4]
 801eeea:	f899 3001 	ldrb.w	r3, [r9, #1]
 801eeee:	8855      	ldrh	r5, [r2, #2]
 801eef0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801eef4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801eef8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eefc:	fb08 f802 	mul.w	r8, r8, r2
 801ef00:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ef04:	435d      	muls	r5, r3
 801ef06:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ef0a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ef0e:	44d0      	add	r8, sl
 801ef10:	f105 0a20 	add.w	sl, r5, #32
 801ef14:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ef18:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ef1c:	0a2d      	lsrs	r5, r5, #8
 801ef1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef22:	432a      	orrs	r2, r5
 801ef24:	3001      	adds	r0, #1
 801ef26:	f100 810d 	bmi.w	801f144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ef2a:	4583      	cmp	fp, r0
 801ef2c:	f340 810a 	ble.w	801f144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ef30:	f1be 0f00 	cmp.w	lr, #0
 801ef34:	f000 810b 	beq.w	801f14e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801ef38:	2f00      	cmp	r7, #0
 801ef3a:	f2c0 8100 	blt.w	801f13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ef3e:	42be      	cmp	r6, r7
 801ef40:	f340 80fd 	ble.w	801f13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ef44:	9801      	ldr	r0, [sp, #4]
 801ef46:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ef4a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ef4e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ef52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ef56:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ef5a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ef5e:	fb0a fa00 	mul.w	sl, sl, r0
 801ef62:	fb05 f808 	mul.w	r8, r5, r8
 801ef66:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ef6a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ef6e:	4482      	add	sl, r0
 801ef70:	f108 0020 	add.w	r0, r8, #32
 801ef74:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ef78:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ef7c:	0a00      	lsrs	r0, r0, #8
 801ef7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef82:	ea4b 0b00 	orr.w	fp, fp, r0
 801ef86:	3701      	adds	r7, #1
 801ef88:	f100 80e6 	bmi.w	801f158 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ef8c:	42be      	cmp	r6, r7
 801ef8e:	f340 80e3 	ble.w	801f158 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ef92:	2900      	cmp	r1, #0
 801ef94:	f000 80e3 	beq.w	801f15e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ef98:	3601      	adds	r6, #1
 801ef9a:	9801      	ldr	r0, [sp, #4]
 801ef9c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801efa0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801efa4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801efa8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801efac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801efb0:	fb09 f906 	mul.w	r9, r9, r6
 801efb4:	fb07 f800 	mul.w	r8, r7, r0
 801efb8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801efbc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801efc0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801efc4:	44d1      	add	r9, sl
 801efc6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801efca:	f108 0020 	add.w	r0, r8, #32
 801efce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801efd2:	0a00      	lsrs	r0, r0, #8
 801efd4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801efd8:	4330      	orrs	r0, r6
 801efda:	b28e      	uxth	r6, r1
 801efdc:	fa1f f98e 	uxth.w	r9, lr
 801efe0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801efe4:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801efe8:	fb06 f809 	mul.w	r8, r6, r9
 801efec:	0136      	lsls	r6, r6, #4
 801efee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eff2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801eff6:	9601      	str	r6, [sp, #4]
 801eff8:	ea4a 0404 	orr.w	r4, sl, r4
 801effc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f000:	fa1f f689 	uxth.w	r6, r9
 801f004:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f008:	fb11 f90e 	smulbb	r9, r1, lr
 801f00c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f010:	9602      	str	r6, [sp, #8]
 801f012:	4626      	mov	r6, r4
 801f014:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f018:	f1ce 0410 	rsb	r4, lr, #16
 801f01c:	ea4a 0202 	orr.w	r2, sl, r2
 801f020:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f024:	1a64      	subs	r4, r4, r1
 801f026:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f02a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f02e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f032:	434a      	muls	r2, r1
 801f034:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f038:	ea4a 0000 	orr.w	r0, sl, r0
 801f03c:	9903      	ldr	r1, [sp, #12]
 801f03e:	fb04 2406 	mla	r4, r4, r6, r2
 801f042:	9e02      	ldr	r6, [sp, #8]
 801f044:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f048:	fb09 4200 	mla	r2, r9, r0, r4
 801f04c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f050:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801f054:	8808      	ldrh	r0, [r1, #0]
 801f056:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f05a:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801f05e:	ea44 0b0b 	orr.w	fp, r4, fp
 801f062:	9c01      	ldr	r4, [sp, #4]
 801f064:	b289      	uxth	r1, r1
 801f066:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801f06a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f06e:	1ba4      	subs	r4, r4, r6
 801f070:	9e01      	ldr	r6, [sp, #4]
 801f072:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f076:	eba6 0608 	sub.w	r6, r6, r8
 801f07a:	b2a4      	uxth	r4, r4
 801f07c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f080:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f084:	b2b6      	uxth	r6, r6
 801f086:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f08a:	4373      	muls	r3, r6
 801f08c:	ea42 0e0e 	orr.w	lr, r2, lr
 801f090:	fb0c 3304 	mla	r3, ip, r4, r3
 801f094:	9c02      	ldr	r4, [sp, #8]
 801f096:	fa1f f28e 	uxth.w	r2, lr
 801f09a:	fb04 3505 	mla	r5, r4, r5, r3
 801f09e:	10d4      	asrs	r4, r2, #3
 801f0a0:	fb08 5707 	mla	r7, r8, r7, r5
 801f0a4:	1215      	asrs	r5, r2, #8
 801f0a6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f0aa:	00d2      	lsls	r2, r2, #3
 801f0ac:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f0b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f0b4:	b2d2      	uxtb	r2, r2
 801f0b6:	434f      	muls	r7, r1
 801f0b8:	1c7b      	adds	r3, r7, #1
 801f0ba:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f0be:	1203      	asrs	r3, r0, #8
 801f0c0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801f0c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f0c8:	b2ff      	uxtb	r7, r7
 801f0ca:	fb13 f307 	smulbb	r3, r3, r7
 801f0ce:	fb05 3501 	mla	r5, r5, r1, r3
 801f0d2:	10c3      	asrs	r3, r0, #3
 801f0d4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f0d8:	b2ad      	uxth	r5, r5
 801f0da:	fb13 f307 	smulbb	r3, r3, r7
 801f0de:	fb04 3401 	mla	r4, r4, r1, r3
 801f0e2:	00c3      	lsls	r3, r0, #3
 801f0e4:	b2db      	uxtb	r3, r3
 801f0e6:	b2a4      	uxth	r4, r4
 801f0e8:	fb13 f307 	smulbb	r3, r3, r7
 801f0ec:	fb02 3101 	mla	r1, r2, r1, r3
 801f0f0:	1c6b      	adds	r3, r5, #1
 801f0f2:	1c62      	adds	r2, r4, #1
 801f0f4:	b289      	uxth	r1, r1
 801f0f6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f0fa:	1c4b      	adds	r3, r1, #1
 801f0fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f100:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f104:	9a03      	ldr	r2, [sp, #12]
 801f106:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f10a:	0964      	lsrs	r4, r4, #5
 801f10c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f110:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f114:	432b      	orrs	r3, r5
 801f116:	4323      	orrs	r3, r4
 801f118:	8013      	strh	r3, [r2, #0]
 801f11a:	b005      	add	sp, #20
 801f11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f120:	f04f 0c00 	mov.w	ip, #0
 801f124:	4664      	mov	r4, ip
 801f126:	e6d6      	b.n	801eed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801f128:	2300      	movs	r3, #0
 801f12a:	469c      	mov	ip, r3
 801f12c:	461a      	mov	r2, r3
 801f12e:	461c      	mov	r4, r3
 801f130:	e6f8      	b.n	801ef24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f132:	2300      	movs	r3, #0
 801f134:	461a      	mov	r2, r3
 801f136:	e6f5      	b.n	801ef24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f138:	460b      	mov	r3, r1
 801f13a:	460a      	mov	r2, r1
 801f13c:	e6f2      	b.n	801ef24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f13e:	2500      	movs	r5, #0
 801f140:	46ab      	mov	fp, r5
 801f142:	e720      	b.n	801ef86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801f144:	2700      	movs	r7, #0
 801f146:	463d      	mov	r5, r7
 801f148:	4638      	mov	r0, r7
 801f14a:	46bb      	mov	fp, r7
 801f14c:	e745      	b.n	801efda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f14e:	4677      	mov	r7, lr
 801f150:	4675      	mov	r5, lr
 801f152:	4670      	mov	r0, lr
 801f154:	46f3      	mov	fp, lr
 801f156:	e740      	b.n	801efda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f158:	2700      	movs	r7, #0
 801f15a:	4638      	mov	r0, r7
 801f15c:	e73d      	b.n	801efda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f15e:	460f      	mov	r7, r1
 801f160:	4608      	mov	r0, r1
 801f162:	e73a      	b.n	801efda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801f164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f168:	b097      	sub	sp, #92	; 0x5c
 801f16a:	9214      	str	r2, [sp, #80]	; 0x50
 801f16c:	9308      	str	r3, [sp, #32]
 801f16e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f170:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f174:	9015      	str	r0, [sp, #84]	; 0x54
 801f176:	9312      	str	r3, [sp, #72]	; 0x48
 801f178:	6850      	ldr	r0, [r2, #4]
 801f17a:	9111      	str	r1, [sp, #68]	; 0x44
 801f17c:	6812      	ldr	r2, [r2, #0]
 801f17e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f182:	fb00 1303 	mla	r3, r0, r3, r1
 801f186:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f18a:	9309      	str	r3, [sp, #36]	; 0x24
 801f18c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f18e:	681b      	ldr	r3, [r3, #0]
 801f190:	930b      	str	r3, [sp, #44]	; 0x2c
 801f192:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f194:	685b      	ldr	r3, [r3, #4]
 801f196:	930c      	str	r3, [sp, #48]	; 0x30
 801f198:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801f19c:	930a      	str	r3, [sp, #40]	; 0x28
 801f19e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f1a0:	2b00      	cmp	r3, #0
 801f1a2:	dc03      	bgt.n	801f1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f1a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f1a6:	2b00      	cmp	r3, #0
 801f1a8:	f340 83cd 	ble.w	801f946 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801f1ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f1ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1b6:	1e48      	subs	r0, r1, #1
 801f1b8:	1e55      	subs	r5, r2, #1
 801f1ba:	9b08      	ldr	r3, [sp, #32]
 801f1bc:	2b00      	cmp	r3, #0
 801f1be:	f340 81a5 	ble.w	801f50c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801f1c2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f1c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f1c6:	1436      	asrs	r6, r6, #16
 801f1c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f1cc:	d406      	bmi.n	801f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1ce:	4286      	cmp	r6, r0
 801f1d0:	da04      	bge.n	801f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1d2:	2b00      	cmp	r3, #0
 801f1d4:	db02      	blt.n	801f1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1d6:	42ab      	cmp	r3, r5
 801f1d8:	f2c0 8199 	blt.w	801f50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801f1dc:	3601      	adds	r6, #1
 801f1de:	f100 8186 	bmi.w	801f4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f1e2:	42b1      	cmp	r1, r6
 801f1e4:	f2c0 8183 	blt.w	801f4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f1e8:	3301      	adds	r3, #1
 801f1ea:	f100 8180 	bmi.w	801f4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f1ee:	429a      	cmp	r2, r3
 801f1f0:	f2c0 817d 	blt.w	801f4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f1f4:	9b08      	ldr	r3, [sp, #32]
 801f1f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801f1fa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801f1fc:	9313      	str	r3, [sp, #76]	; 0x4c
 801f1fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f200:	2b00      	cmp	r3, #0
 801f202:	f340 81a6 	ble.w	801f552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801f206:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f208:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801f20a:	1418      	asrs	r0, r3, #16
 801f20c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f20e:	142d      	asrs	r5, r5, #16
 801f210:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f214:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f216:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f21a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f21c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f220:	f100 81fa 	bmi.w	801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f224:	f102 3eff 	add.w	lr, r2, #4294967295
 801f228:	4575      	cmp	r5, lr
 801f22a:	f280 81f5 	bge.w	801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f22e:	2800      	cmp	r0, #0
 801f230:	f2c0 81f2 	blt.w	801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f234:	f103 3eff 	add.w	lr, r3, #4294967295
 801f238:	4570      	cmp	r0, lr
 801f23a:	f280 81ed 	bge.w	801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f23e:	b212      	sxth	r2, r2
 801f240:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f242:	fa1f fe81 	uxth.w	lr, r1
 801f246:	fb00 5002 	mla	r0, r0, r2, r5
 801f24a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f24e:	eb03 0a00 	add.w	sl, r3, r0
 801f252:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f256:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801f25a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f25e:	b29b      	uxth	r3, r3
 801f260:	f1bc 0f00 	cmp.w	ip, #0
 801f264:	f000 81bb 	beq.w	801f5de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801f268:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f26c:	eb0a 0b02 	add.w	fp, sl, r2
 801f270:	fa1f fa8c 	uxth.w	sl, ip
 801f274:	940d      	str	r4, [sp, #52]	; 0x34
 801f276:	fb0a fe0e 	mul.w	lr, sl, lr
 801f27a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f27e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f282:	eba5 050e 	sub.w	r5, r5, lr
 801f286:	940e      	str	r4, [sp, #56]	; 0x38
 801f288:	fa1f fa8a 	uxth.w	sl, sl
 801f28c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f28e:	b2ad      	uxth	r5, r5
 801f290:	eba3 030a 	sub.w	r3, r3, sl
 801f294:	fb08 f505 	mul.w	r5, r8, r5
 801f298:	b29b      	uxth	r3, r3
 801f29a:	fb09 5303 	mla	r3, r9, r3, r5
 801f29e:	fb0a 3304 	mla	r3, sl, r4, r3
 801f2a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f2a4:	fb0e 3304 	mla	r3, lr, r4, r3
 801f2a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f2ac:	2b00      	cmp	r3, #0
 801f2ae:	f000 8111 	beq.w	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f2b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f2b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f2b8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f2bc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f2c0:	f000 8192 	beq.w	801f5e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801f2c4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f2c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f2cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f2d0:	fb0a fe0e 	mul.w	lr, sl, lr
 801f2d4:	fb09 f000 	mul.w	r0, r9, r0
 801f2d8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f2dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f2e0:	f100 0b20 	add.w	fp, r0, #32
 801f2e4:	44ce      	add	lr, r9
 801f2e6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f2ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f2ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f2f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f2f6:	ea4e 0909 	orr.w	r9, lr, r9
 801f2fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f2fe:	8868      	ldrh	r0, [r5, #2]
 801f300:	d019      	beq.n	801f336 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f302:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f306:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f30a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f30e:	fb0a fe0e 	mul.w	lr, sl, lr
 801f312:	fb08 f800 	mul.w	r8, r8, r0
 801f316:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f31a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f31e:	f108 0b20 	add.w	fp, r8, #32
 801f322:	4486      	add	lr, r0
 801f324:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f328:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f32c:	0a00      	lsrs	r0, r0, #8
 801f32e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f332:	ea4e 0000 	orr.w	r0, lr, r0
 801f336:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f33a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f33e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f342:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f346:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f34a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f34e:	ea4e 0909 	orr.w	r9, lr, r9
 801f352:	ea4a 0000 	orr.w	r0, sl, r0
 801f356:	f1bc 0f00 	cmp.w	ip, #0
 801f35a:	f000 8147 	beq.w	801f5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801f35e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801f362:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f364:	3a01      	subs	r2, #1
 801f366:	2cff      	cmp	r4, #255	; 0xff
 801f368:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801f36c:	f102 0202 	add.w	r2, r2, #2
 801f370:	eb05 0e02 	add.w	lr, r5, r2
 801f374:	5aaa      	ldrh	r2, [r5, r2]
 801f376:	d018      	beq.n	801f3aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801f378:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801f37c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f380:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f384:	fb04 fa02 	mul.w	sl, r4, r2
 801f388:	fb08 f805 	mul.w	r8, r8, r5
 801f38c:	f10a 0520 	add.w	r5, sl, #32
 801f390:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f394:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f398:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f39c:	4442      	add	r2, r8
 801f39e:	0a2d      	lsrs	r5, r5, #8
 801f3a0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f3a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f3a8:	432a      	orrs	r2, r5
 801f3aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f3ac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f3b0:	2cff      	cmp	r4, #255	; 0xff
 801f3b2:	d01a      	beq.n	801f3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801f3b4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801f3b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f3bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f3c0:	fb04 fa05 	mul.w	sl, r4, r5
 801f3c4:	fb08 f80e 	mul.w	r8, r8, lr
 801f3c8:	f10a 0e20 	add.w	lr, sl, #32
 801f3cc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f3d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f3d4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f3d8:	4445      	add	r5, r8
 801f3da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f3de:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f3e2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801f3e6:	ea45 050e 	orr.w	r5, r5, lr
 801f3ea:	fb1c fe01 	smulbb	lr, ip, r1
 801f3ee:	f1cc 0810 	rsb	r8, ip, #16
 801f3f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f3f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f3fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f3fe:	eba8 0801 	sub.w	r8, r8, r1
 801f402:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f406:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f40a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f40e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f412:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f416:	ea4a 0202 	orr.w	r2, sl, r2
 801f41a:	4341      	muls	r1, r0
 801f41c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f420:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f424:	fb09 1108 	mla	r1, r9, r8, r1
 801f428:	ea4b 0505 	orr.w	r5, fp, r5
 801f42c:	fb0c 1102 	mla	r1, ip, r2, r1
 801f430:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f434:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f438:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f43c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f440:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f444:	ea42 0e0e 	orr.w	lr, r2, lr
 801f448:	fa1f f28e 	uxth.w	r2, lr
 801f44c:	2bff      	cmp	r3, #255	; 0xff
 801f44e:	d103      	bne.n	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f450:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f452:	29ff      	cmp	r1, #255	; 0xff
 801f454:	f000 80de 	beq.w	801f614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f458:	990a      	ldr	r1, [sp, #40]	; 0x28
 801f45a:	1215      	asrs	r5, r2, #8
 801f45c:	8838      	ldrh	r0, [r7, #0]
 801f45e:	434b      	muls	r3, r1
 801f460:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f464:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f466:	f103 0c01 	add.w	ip, r3, #1
 801f46a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801f46e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f472:	fa5f fc83 	uxtb.w	ip, r3
 801f476:	1203      	asrs	r3, r0, #8
 801f478:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f47c:	fb13 f30c 	smulbb	r3, r3, ip
 801f480:	fb05 3501 	mla	r5, r5, r1, r3
 801f484:	10c3      	asrs	r3, r0, #3
 801f486:	10d1      	asrs	r1, r2, #3
 801f488:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f48c:	00d2      	lsls	r2, r2, #3
 801f48e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f492:	b2ad      	uxth	r5, r5
 801f494:	fb13 f30c 	smulbb	r3, r3, ip
 801f498:	b2d2      	uxtb	r2, r2
 801f49a:	fb01 3104 	mla	r1, r1, r4, r3
 801f49e:	00c3      	lsls	r3, r0, #3
 801f4a0:	b2db      	uxtb	r3, r3
 801f4a2:	b289      	uxth	r1, r1
 801f4a4:	fb13 f30c 	smulbb	r3, r3, ip
 801f4a8:	fb02 3304 	mla	r3, r2, r4, r3
 801f4ac:	b29a      	uxth	r2, r3
 801f4ae:	1c6b      	adds	r3, r5, #1
 801f4b0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f4b4:	1c53      	adds	r3, r2, #1
 801f4b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f4ba:	1c4a      	adds	r2, r1, #1
 801f4bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f4c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f4c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f4c8:	0949      	lsrs	r1, r1, #5
 801f4ca:	432b      	orrs	r3, r5
 801f4cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f4d0:	430b      	orrs	r3, r1
 801f4d2:	803b      	strh	r3, [r7, #0]
 801f4d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f4d6:	3702      	adds	r7, #2
 801f4d8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f4da:	4413      	add	r3, r2
 801f4dc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f4de:	9321      	str	r3, [sp, #132]	; 0x84
 801f4e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f4e2:	441a      	add	r2, r3
 801f4e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f4e6:	3b01      	subs	r3, #1
 801f4e8:	9222      	str	r2, [sp, #136]	; 0x88
 801f4ea:	9313      	str	r3, [sp, #76]	; 0x4c
 801f4ec:	e687      	b.n	801f1fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f4ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f4f0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801f4f2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801f4f4:	4433      	add	r3, r6
 801f4f6:	9321      	str	r3, [sp, #132]	; 0x84
 801f4f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f4fa:	441c      	add	r4, r3
 801f4fc:	9b08      	ldr	r3, [sp, #32]
 801f4fe:	3b01      	subs	r3, #1
 801f500:	9422      	str	r4, [sp, #136]	; 0x88
 801f502:	9308      	str	r3, [sp, #32]
 801f504:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f506:	3302      	adds	r3, #2
 801f508:	9309      	str	r3, [sp, #36]	; 0x24
 801f50a:	e656      	b.n	801f1ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801f50c:	d028      	beq.n	801f560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801f50e:	9b08      	ldr	r3, [sp, #32]
 801f510:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f512:	3b01      	subs	r3, #1
 801f514:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801f516:	fb00 5003 	mla	r0, r0, r3, r5
 801f51a:	1400      	asrs	r0, r0, #16
 801f51c:	f53f ae6a 	bmi.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f520:	3901      	subs	r1, #1
 801f522:	4288      	cmp	r0, r1
 801f524:	f6bf ae66 	bge.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f528:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f52a:	9822      	ldr	r0, [sp, #136]	; 0x88
 801f52c:	fb01 0303 	mla	r3, r1, r3, r0
 801f530:	141b      	asrs	r3, r3, #16
 801f532:	f53f ae5f 	bmi.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f536:	3a01      	subs	r2, #1
 801f538:	4293      	cmp	r3, r2
 801f53a:	f6bf ae5b 	bge.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f53e:	9b08      	ldr	r3, [sp, #32]
 801f540:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801f544:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801f548:	9313      	str	r3, [sp, #76]	; 0x4c
 801f54a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f54c:	2b00      	cmp	r3, #0
 801f54e:	f300 8082 	bgt.w	801f656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801f552:	9b08      	ldr	r3, [sp, #32]
 801f554:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f558:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f55a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f55e:	9309      	str	r3, [sp, #36]	; 0x24
 801f560:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f562:	2b00      	cmp	r3, #0
 801f564:	f340 81ef 	ble.w	801f946 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801f568:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f56c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f56e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f572:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f576:	eef0 6a62 	vmov.f32	s13, s5
 801f57a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f57e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f582:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f586:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801f58a:	eef0 6a43 	vmov.f32	s13, s6
 801f58e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f592:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801f596:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f59a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f59e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5ae:	ee12 2a90 	vmov	r2, s5
 801f5b2:	eef0 2a47 	vmov.f32	s5, s14
 801f5b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ba:	ee13 2a10 	vmov	r2, s6
 801f5be:	9323      	str	r3, [sp, #140]	; 0x8c
 801f5c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5c2:	eeb0 3a67 	vmov.f32	s6, s15
 801f5c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ca:	9324      	str	r3, [sp, #144]	; 0x90
 801f5cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f5ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f5d0:	3b01      	subs	r3, #1
 801f5d2:	9311      	str	r3, [sp, #68]	; 0x44
 801f5d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5d6:	bf08      	it	eq
 801f5d8:	4613      	moveq	r3, r2
 801f5da:	9308      	str	r3, [sp, #32]
 801f5dc:	e5df      	b.n	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f5de:	fb08 f505 	mul.w	r5, r8, r5
 801f5e2:	fb09 5303 	mla	r3, r9, r3, r5
 801f5e6:	e65f      	b.n	801f2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801f5e8:	4681      	mov	r9, r0
 801f5ea:	e686      	b.n	801f2fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f5ec:	f1c1 0210 	rsb	r2, r1, #16
 801f5f0:	4341      	muls	r1, r0
 801f5f2:	fb09 1902 	mla	r9, r9, r2, r1
 801f5f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f5fa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f5fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f602:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f606:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f60a:	ea42 0909 	orr.w	r9, r2, r9
 801f60e:	fa1f f289 	uxth.w	r2, r9
 801f612:	e71b      	b.n	801f44c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f614:	803a      	strh	r2, [r7, #0]
 801f616:	e75d      	b.n	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f618:	f115 0e01 	adds.w	lr, r5, #1
 801f61c:	f53f af5a 	bmi.w	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f620:	4572      	cmp	r2, lr
 801f622:	f6ff af57 	blt.w	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f626:	f110 0e01 	adds.w	lr, r0, #1
 801f62a:	f53f af53 	bmi.w	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f62e:	4573      	cmp	r3, lr
 801f630:	f6ff af50 	blt.w	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f634:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f636:	b21b      	sxth	r3, r3
 801f638:	b212      	sxth	r2, r2
 801f63a:	9502      	str	r5, [sp, #8]
 801f63c:	9301      	str	r3, [sp, #4]
 801f63e:	9200      	str	r2, [sp, #0]
 801f640:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801f644:	e9cd c405 	strd	ip, r4, [sp, #20]
 801f648:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801f64c:	4639      	mov	r1, r7
 801f64e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f650:	f7ff fc02 	bl	801ee58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801f654:	e73e      	b.n	801f4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f656:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f658:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f65c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f65e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f662:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f664:	fa1f fc82 	uxth.w	ip, r2
 801f668:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f66c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f66e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f672:	141f      	asrs	r7, r3, #16
 801f674:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f676:	141b      	asrs	r3, r3, #16
 801f678:	fb01 3707 	mla	r7, r1, r7, r3
 801f67c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f67e:	eb03 0a07 	add.w	sl, r3, r7
 801f682:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f686:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f68a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f68e:	b29b      	uxth	r3, r3
 801f690:	2d00      	cmp	r5, #0
 801f692:	f000 813d 	beq.w	801f910 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801f696:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f69a:	eb0a 0b01 	add.w	fp, sl, r1
 801f69e:	fa1f fa85 	uxth.w	sl, r5
 801f6a2:	940f      	str	r4, [sp, #60]	; 0x3c
 801f6a4:	fb0a fc0c 	mul.w	ip, sl, ip
 801f6a8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f6ac:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f6b0:	eba0 000c 	sub.w	r0, r0, ip
 801f6b4:	9410      	str	r4, [sp, #64]	; 0x40
 801f6b6:	fa1f fa8a 	uxth.w	sl, sl
 801f6ba:	b280      	uxth	r0, r0
 801f6bc:	eba3 030a 	sub.w	r3, r3, sl
 801f6c0:	fb08 f000 	mul.w	r0, r8, r0
 801f6c4:	b29b      	uxth	r3, r3
 801f6c6:	fb09 0303 	mla	r3, r9, r3, r0
 801f6ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f6cc:	fb0a 3300 	mla	r3, sl, r0, r3
 801f6d0:	fb0c 3304 	mla	r3, ip, r4, r3
 801f6d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f6d8:	2b00      	cmp	r3, #0
 801f6da:	f000 810b 	beq.w	801f8f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801f6de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f6e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f6e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f6e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f6ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f6ee:	f000 8114 	beq.w	801f91a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801f6f2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f6f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f6fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f6fe:	fb0a fc0c 	mul.w	ip, sl, ip
 801f702:	fb09 f707 	mul.w	r7, r9, r7
 801f706:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f70a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f70e:	f107 0b20 	add.w	fp, r7, #32
 801f712:	44cc      	add	ip, r9
 801f714:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f718:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f71c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f720:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f724:	ea4c 0909 	orr.w	r9, ip, r9
 801f728:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f72c:	8847      	ldrh	r7, [r0, #2]
 801f72e:	d019      	beq.n	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801f730:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f734:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f738:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f73c:	fb0a fc0c 	mul.w	ip, sl, ip
 801f740:	fb08 f807 	mul.w	r8, r8, r7
 801f744:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f748:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f74c:	f108 0b20 	add.w	fp, r8, #32
 801f750:	44bc      	add	ip, r7
 801f752:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f756:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f75a:	0a3f      	lsrs	r7, r7, #8
 801f75c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f760:	ea4c 0707 	orr.w	r7, ip, r7
 801f764:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f768:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f76c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f770:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f774:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f778:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f77c:	ea4c 0909 	orr.w	r9, ip, r9
 801f780:	ea4a 0707 	orr.w	r7, sl, r7
 801f784:	2d00      	cmp	r5, #0
 801f786:	f000 80ca 	beq.w	801f91e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801f78a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f78e:	3901      	subs	r1, #1
 801f790:	0049      	lsls	r1, r1, #1
 801f792:	3102      	adds	r1, #2
 801f794:	eb00 0c01 	add.w	ip, r0, r1
 801f798:	5a41      	ldrh	r1, [r0, r1]
 801f79a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f79c:	28ff      	cmp	r0, #255	; 0xff
 801f79e:	d019      	beq.n	801f7d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801f7a0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801f7a4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f7a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f7aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f7ae:	fb04 fa01 	mul.w	sl, r4, r1
 801f7b2:	fb08 f800 	mul.w	r8, r8, r0
 801f7b6:	f10a 0020 	add.w	r0, sl, #32
 801f7ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f7be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f7c2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f7c6:	4441      	add	r1, r8
 801f7c8:	0a00      	lsrs	r0, r0, #8
 801f7ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f7ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f7d2:	4301      	orrs	r1, r0
 801f7d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f7d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f7da:	2cff      	cmp	r4, #255	; 0xff
 801f7dc:	d01a      	beq.n	801f814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801f7de:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801f7e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f7e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f7ea:	fb04 fa00 	mul.w	sl, r4, r0
 801f7ee:	fb08 f80c 	mul.w	r8, r8, ip
 801f7f2:	f10a 0c20 	add.w	ip, sl, #32
 801f7f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f7fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f7fe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f802:	4440      	add	r0, r8
 801f804:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f808:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f80c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f810:	ea40 000c 	orr.w	r0, r0, ip
 801f814:	fb15 fc02 	smulbb	ip, r5, r2
 801f818:	f1c5 0810 	rsb	r8, r5, #16
 801f81c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f820:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f824:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f828:	eba8 0802 	sub.w	r8, r8, r2
 801f82c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f830:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f834:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f838:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f83c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f840:	ea4a 0101 	orr.w	r1, sl, r1
 801f844:	437a      	muls	r2, r7
 801f846:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f84a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f84e:	fb09 2208 	mla	r2, r9, r8, r2
 801f852:	ea4b 0000 	orr.w	r0, fp, r0
 801f856:	fb05 2201 	mla	r2, r5, r1, r2
 801f85a:	fb0c 2200 	mla	r2, ip, r0, r2
 801f85e:	0d57      	lsrs	r7, r2, #21
 801f860:	0952      	lsrs	r2, r2, #5
 801f862:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f866:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f86a:	433a      	orrs	r2, r7
 801f86c:	2bff      	cmp	r3, #255	; 0xff
 801f86e:	b292      	uxth	r2, r2
 801f870:	d102      	bne.n	801f878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f872:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f874:	29ff      	cmp	r1, #255	; 0xff
 801f876:	d063      	beq.n	801f940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801f878:	980a      	ldr	r0, [sp, #40]	; 0x28
 801f87a:	1215      	asrs	r5, r2, #8
 801f87c:	f8be 1000 	ldrh.w	r1, [lr]
 801f880:	4343      	muls	r3, r0
 801f882:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f884:	10cf      	asrs	r7, r1, #3
 801f886:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f88a:	1c58      	adds	r0, r3, #1
 801f88c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f890:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801f894:	1208      	asrs	r0, r1, #8
 801f896:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f89a:	00c9      	lsls	r1, r1, #3
 801f89c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f8a0:	b2db      	uxtb	r3, r3
 801f8a2:	b2c9      	uxtb	r1, r1
 801f8a4:	fb10 f003 	smulbb	r0, r0, r3
 801f8a8:	fb11 f103 	smulbb	r1, r1, r3
 801f8ac:	fb05 0504 	mla	r5, r5, r4, r0
 801f8b0:	10d0      	asrs	r0, r2, #3
 801f8b2:	fb17 f703 	smulbb	r7, r7, r3
 801f8b6:	00d2      	lsls	r2, r2, #3
 801f8b8:	b2ad      	uxth	r5, r5
 801f8ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f8be:	b2d2      	uxtb	r2, r2
 801f8c0:	fb00 7004 	mla	r0, r0, r4, r7
 801f8c4:	1c6b      	adds	r3, r5, #1
 801f8c6:	fb02 1204 	mla	r2, r2, r4, r1
 801f8ca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f8ce:	b292      	uxth	r2, r2
 801f8d0:	b280      	uxth	r0, r0
 801f8d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f8d6:	1c57      	adds	r7, r2, #1
 801f8d8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f8dc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f8e0:	433d      	orrs	r5, r7
 801f8e2:	1c47      	adds	r7, r0, #1
 801f8e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f8e8:	097f      	lsrs	r7, r7, #5
 801f8ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f8ee:	433d      	orrs	r5, r7
 801f8f0:	f8ae 5000 	strh.w	r5, [lr]
 801f8f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f8f6:	f10e 0e02 	add.w	lr, lr, #2
 801f8fa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f8fc:	4413      	add	r3, r2
 801f8fe:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f900:	9321      	str	r3, [sp, #132]	; 0x84
 801f902:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f904:	441a      	add	r2, r3
 801f906:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f908:	3b01      	subs	r3, #1
 801f90a:	9222      	str	r2, [sp, #136]	; 0x88
 801f90c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f90e:	e61c      	b.n	801f54a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f910:	fb08 f000 	mul.w	r0, r8, r0
 801f914:	fb09 0303 	mla	r3, r9, r3, r0
 801f918:	e6dc      	b.n	801f6d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801f91a:	46b9      	mov	r9, r7
 801f91c:	e704      	b.n	801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801f91e:	f1c2 0110 	rsb	r1, r2, #16
 801f922:	437a      	muls	r2, r7
 801f924:	fb09 2901 	mla	r9, r9, r1, r2
 801f928:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f92c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f930:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f934:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f938:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f93c:	4302      	orrs	r2, r0
 801f93e:	e795      	b.n	801f86c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801f940:	f8ae 2000 	strh.w	r2, [lr]
 801f944:	e7d6      	b.n	801f8f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801f946:	b017      	add	sp, #92	; 0x5c
 801f948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f94c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f950:	b085      	sub	sp, #20
 801f952:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801f956:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801f95a:	2800      	cmp	r0, #0
 801f95c:	9103      	str	r1, [sp, #12]
 801f95e:	fb00 7406 	mla	r4, r0, r6, r7
 801f962:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801f966:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801f96a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801f96e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801f972:	eb02 0904 	add.w	r9, r2, r4
 801f976:	9501      	str	r5, [sp, #4]
 801f978:	f2c0 8141 	blt.w	801fbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f97c:	4583      	cmp	fp, r0
 801f97e:	f340 813e 	ble.w	801fbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f982:	2f00      	cmp	r7, #0
 801f984:	f2c0 8137 	blt.w	801fbf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f988:	42be      	cmp	r6, r7
 801f98a:	f340 8134 	ble.w	801fbf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f98e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801f992:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801f996:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801f99a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f99e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801f9a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9a6:	4355      	muls	r5, r2
 801f9a8:	fb0c f203 	mul.w	r2, ip, r3
 801f9ac:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f9b0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801f9b4:	441d      	add	r5, r3
 801f9b6:	f102 0320 	add.w	r3, r2, #32
 801f9ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9be:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f9c2:	0a1b      	lsrs	r3, r3, #8
 801f9c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9c8:	431c      	orrs	r4, r3
 801f9ca:	1c7b      	adds	r3, r7, #1
 801f9cc:	f100 811c 	bmi.w	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f9d0:	429e      	cmp	r6, r3
 801f9d2:	f340 8119 	ble.w	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f9d6:	2900      	cmp	r1, #0
 801f9d8:	f000 8119 	beq.w	801fc0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801f9dc:	9a01      	ldr	r2, [sp, #4]
 801f9de:	f899 3001 	ldrb.w	r3, [r9, #1]
 801f9e2:	8855      	ldrh	r5, [r2, #2]
 801f9e4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801f9e8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801f9ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f9f0:	fb08 f802 	mul.w	r8, r8, r2
 801f9f4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801f9f8:	435d      	muls	r5, r3
 801f9fa:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801f9fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fa02:	44d0      	add	r8, sl
 801fa04:	f105 0a20 	add.w	sl, r5, #32
 801fa08:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801fa0c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801fa10:	0a2d      	lsrs	r5, r5, #8
 801fa12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fa16:	432a      	orrs	r2, r5
 801fa18:	3001      	adds	r0, #1
 801fa1a:	f100 80fe 	bmi.w	801fc1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fa1e:	4583      	cmp	fp, r0
 801fa20:	f340 80fb 	ble.w	801fc1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fa24:	f1be 0f00 	cmp.w	lr, #0
 801fa28:	f000 80fc 	beq.w	801fc24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801fa2c:	2f00      	cmp	r7, #0
 801fa2e:	f2c0 80f1 	blt.w	801fc14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fa32:	42be      	cmp	r6, r7
 801fa34:	f340 80ee 	ble.w	801fc14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fa38:	9801      	ldr	r0, [sp, #4]
 801fa3a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801fa3e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801fa42:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801fa46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fa4a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801fa4e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801fa52:	fb0a fa00 	mul.w	sl, sl, r0
 801fa56:	fb05 f808 	mul.w	r8, r5, r8
 801fa5a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801fa5e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801fa62:	4482      	add	sl, r0
 801fa64:	f108 0020 	add.w	r0, r8, #32
 801fa68:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fa6c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801fa70:	0a00      	lsrs	r0, r0, #8
 801fa72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fa76:	ea4b 0b00 	orr.w	fp, fp, r0
 801fa7a:	3701      	adds	r7, #1
 801fa7c:	f100 80d7 	bmi.w	801fc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801fa80:	42be      	cmp	r6, r7
 801fa82:	f340 80d4 	ble.w	801fc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801fa86:	2900      	cmp	r1, #0
 801fa88:	f000 80d4 	beq.w	801fc34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801fa8c:	3601      	adds	r6, #1
 801fa8e:	9801      	ldr	r0, [sp, #4]
 801fa90:	f819 7006 	ldrb.w	r7, [r9, r6]
 801fa94:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801fa98:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801fa9c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801faa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801faa4:	fb09 f906 	mul.w	r9, r9, r6
 801faa8:	fb07 f800 	mul.w	r8, r7, r0
 801faac:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801fab0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801fab4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801fab8:	44d1      	add	r9, sl
 801faba:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801fabe:	f108 0020 	add.w	r0, r8, #32
 801fac2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fac6:	0a00      	lsrs	r0, r0, #8
 801fac8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801facc:	4330      	orrs	r0, r6
 801face:	b28e      	uxth	r6, r1
 801fad0:	fa1f f98e 	uxth.w	r9, lr
 801fad4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801fad8:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fadc:	fb06 f809 	mul.w	r8, r6, r9
 801fae0:	0136      	lsls	r6, r6, #4
 801fae2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fae6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801faea:	9601      	str	r6, [sp, #4]
 801faec:	ea4a 0404 	orr.w	r4, sl, r4
 801faf0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801faf4:	fa1f f689 	uxth.w	r6, r9
 801faf8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fafc:	fb11 f90e 	smulbb	r9, r1, lr
 801fb00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fb04:	9602      	str	r6, [sp, #8]
 801fb06:	4626      	mov	r6, r4
 801fb08:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801fb0c:	f1ce 0410 	rsb	r4, lr, #16
 801fb10:	ea4a 0202 	orr.w	r2, sl, r2
 801fb14:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fb18:	1a64      	subs	r4, r4, r1
 801fb1a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801fb1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fb22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fb26:	434a      	muls	r2, r1
 801fb28:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fb2c:	ea4a 0000 	orr.w	r0, sl, r0
 801fb30:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801fb34:	fb04 2406 	mla	r4, r4, r6, r2
 801fb38:	9903      	ldr	r1, [sp, #12]
 801fb3a:	fb09 4200 	mla	r2, r9, r0, r4
 801fb3e:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801fb42:	9801      	ldr	r0, [sp, #4]
 801fb44:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801fb48:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fb4c:	8809      	ldrh	r1, [r1, #0]
 801fb4e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801fb52:	ea44 0b0b 	orr.w	fp, r4, fp
 801fb56:	9c02      	ldr	r4, [sp, #8]
 801fb58:	1b00      	subs	r0, r0, r4
 801fb5a:	9c01      	ldr	r4, [sp, #4]
 801fb5c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801fb60:	eba4 0608 	sub.w	r6, r4, r8
 801fb64:	b280      	uxth	r0, r0
 801fb66:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801fb6a:	b2b6      	uxth	r6, r6
 801fb6c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fb70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb74:	4373      	muls	r3, r6
 801fb76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fb7a:	fb0c 3300 	mla	r3, ip, r0, r3
 801fb7e:	9802      	ldr	r0, [sp, #8]
 801fb80:	ea42 0e0e 	orr.w	lr, r2, lr
 801fb84:	fb00 3505 	mla	r5, r0, r5, r3
 801fb88:	120b      	asrs	r3, r1, #8
 801fb8a:	10c8      	asrs	r0, r1, #3
 801fb8c:	fb08 5707 	mla	r7, r8, r7, r5
 801fb90:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fb94:	00c9      	lsls	r1, r1, #3
 801fb96:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb9a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801fb9e:	fa1f f28e 	uxth.w	r2, lr
 801fba2:	b2c9      	uxtb	r1, r1
 801fba4:	b2ff      	uxtb	r7, r7
 801fba6:	437b      	muls	r3, r7
 801fba8:	4378      	muls	r0, r7
 801fbaa:	434f      	muls	r7, r1
 801fbac:	1c59      	adds	r1, r3, #1
 801fbae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fbb2:	1213      	asrs	r3, r2, #8
 801fbb4:	f023 0307 	bic.w	r3, r3, #7
 801fbb8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fbbc:	1c41      	adds	r1, r0, #1
 801fbbe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fbc2:	10d1      	asrs	r1, r2, #3
 801fbc4:	021b      	lsls	r3, r3, #8
 801fbc6:	f021 0103 	bic.w	r1, r1, #3
 801fbca:	00d2      	lsls	r2, r2, #3
 801fbcc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801fbd0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fbd4:	00c9      	lsls	r1, r1, #3
 801fbd6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbda:	430b      	orrs	r3, r1
 801fbdc:	1c79      	adds	r1, r7, #1
 801fbde:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801fbe2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fbe6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbea:	431a      	orrs	r2, r3
 801fbec:	9b03      	ldr	r3, [sp, #12]
 801fbee:	801a      	strh	r2, [r3, #0]
 801fbf0:	b005      	add	sp, #20
 801fbf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbf6:	f04f 0c00 	mov.w	ip, #0
 801fbfa:	4664      	mov	r4, ip
 801fbfc:	e6e5      	b.n	801f9ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801fbfe:	2300      	movs	r3, #0
 801fc00:	469c      	mov	ip, r3
 801fc02:	461a      	mov	r2, r3
 801fc04:	461c      	mov	r4, r3
 801fc06:	e707      	b.n	801fa18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc08:	2300      	movs	r3, #0
 801fc0a:	461a      	mov	r2, r3
 801fc0c:	e704      	b.n	801fa18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc0e:	460b      	mov	r3, r1
 801fc10:	460a      	mov	r2, r1
 801fc12:	e701      	b.n	801fa18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fc14:	2500      	movs	r5, #0
 801fc16:	46ab      	mov	fp, r5
 801fc18:	e72f      	b.n	801fa7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801fc1a:	2700      	movs	r7, #0
 801fc1c:	463d      	mov	r5, r7
 801fc1e:	4638      	mov	r0, r7
 801fc20:	46bb      	mov	fp, r7
 801fc22:	e754      	b.n	801face <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc24:	4677      	mov	r7, lr
 801fc26:	4675      	mov	r5, lr
 801fc28:	4670      	mov	r0, lr
 801fc2a:	46f3      	mov	fp, lr
 801fc2c:	e74f      	b.n	801face <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc2e:	2700      	movs	r7, #0
 801fc30:	4638      	mov	r0, r7
 801fc32:	e74c      	b.n	801face <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fc34:	460f      	mov	r7, r1
 801fc36:	4608      	mov	r0, r1
 801fc38:	e749      	b.n	801face <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801fc3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc40:	b093      	sub	sp, #76	; 0x4c
 801fc42:	9210      	str	r2, [sp, #64]	; 0x40
 801fc44:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fc46:	9011      	str	r0, [sp, #68]	; 0x44
 801fc48:	910e      	str	r1, [sp, #56]	; 0x38
 801fc4a:	6850      	ldr	r0, [r2, #4]
 801fc4c:	9306      	str	r3, [sp, #24]
 801fc4e:	6812      	ldr	r2, [r2, #0]
 801fc50:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fc54:	fb00 1303 	mla	r3, r0, r3, r1
 801fc58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc5c:	9307      	str	r3, [sp, #28]
 801fc5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc60:	681b      	ldr	r3, [r3, #0]
 801fc62:	9308      	str	r3, [sp, #32]
 801fc64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc66:	685b      	ldr	r3, [r3, #4]
 801fc68:	9309      	str	r3, [sp, #36]	; 0x24
 801fc6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fc6c:	2b00      	cmp	r3, #0
 801fc6e:	dc03      	bgt.n	801fc78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fc70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fc72:	2b00      	cmp	r3, #0
 801fc74:	f340 83b6 	ble.w	80203e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801fc78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fc82:	1e48      	subs	r0, r1, #1
 801fc84:	1e55      	subs	r5, r2, #1
 801fc86:	9b06      	ldr	r3, [sp, #24]
 801fc88:	2b00      	cmp	r3, #0
 801fc8a:	f340 8165 	ble.w	801ff58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801fc8e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801fc90:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fc92:	1436      	asrs	r6, r6, #16
 801fc94:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fc98:	d406      	bmi.n	801fca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fc9a:	4286      	cmp	r6, r0
 801fc9c:	da04      	bge.n	801fca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fc9e:	2b00      	cmp	r3, #0
 801fca0:	db02      	blt.n	801fca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fca2:	42ab      	cmp	r3, r5
 801fca4:	f2c0 8159 	blt.w	801ff5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801fca8:	3601      	adds	r6, #1
 801fcaa:	f100 8146 	bmi.w	801ff3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801fcae:	42b1      	cmp	r1, r6
 801fcb0:	f2c0 8143 	blt.w	801ff3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801fcb4:	3301      	adds	r3, #1
 801fcb6:	f100 8140 	bmi.w	801ff3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801fcba:	429a      	cmp	r2, r3
 801fcbc:	f2c0 813d 	blt.w	801ff3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801fcc0:	9b06      	ldr	r3, [sp, #24]
 801fcc2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801fcc6:	9f07      	ldr	r7, [sp, #28]
 801fcc8:	930f      	str	r3, [sp, #60]	; 0x3c
 801fcca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fccc:	2b00      	cmp	r3, #0
 801fcce:	f340 8166 	ble.w	801ff9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801fcd2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fcd4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801fcd6:	1418      	asrs	r0, r3, #16
 801fcd8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801fcda:	142d      	asrs	r5, r5, #16
 801fcdc:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801fce0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fce2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801fce6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fce8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801fcec:	f100 81f0 	bmi.w	80200d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fcf0:	f102 3eff 	add.w	lr, r2, #4294967295
 801fcf4:	4575      	cmp	r5, lr
 801fcf6:	f280 81eb 	bge.w	80200d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fcfa:	2800      	cmp	r0, #0
 801fcfc:	f2c0 81e8 	blt.w	80200d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fd00:	f103 3eff 	add.w	lr, r3, #4294967295
 801fd04:	4570      	cmp	r0, lr
 801fd06:	f280 81e3 	bge.w	80200d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fd0a:	b212      	sxth	r2, r2
 801fd0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd0e:	fa1f fe81 	uxth.w	lr, r1
 801fd12:	fb00 5002 	mla	r0, r0, r2, r5
 801fd16:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801fd1a:	eb03 0a00 	add.w	sl, r3, r0
 801fd1e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801fd22:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801fd26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fd2a:	b29b      	uxth	r3, r3
 801fd2c:	f1bc 0f00 	cmp.w	ip, #0
 801fd30:	f000 817b 	beq.w	802002a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801fd34:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801fd38:	eb0a 0b02 	add.w	fp, sl, r2
 801fd3c:	fa1f fa8c 	uxth.w	sl, ip
 801fd40:	940a      	str	r4, [sp, #40]	; 0x28
 801fd42:	fb0a fe0e 	mul.w	lr, sl, lr
 801fd46:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fd4a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801fd4e:	eba5 050e 	sub.w	r5, r5, lr
 801fd52:	940b      	str	r4, [sp, #44]	; 0x2c
 801fd54:	fa1f fa8a 	uxth.w	sl, sl
 801fd58:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd5a:	b2ad      	uxth	r5, r5
 801fd5c:	eba3 030a 	sub.w	r3, r3, sl
 801fd60:	fb08 f505 	mul.w	r5, r8, r5
 801fd64:	b29b      	uxth	r3, r3
 801fd66:	fb09 5303 	mla	r3, r9, r3, r5
 801fd6a:	fb0a 3304 	mla	r3, sl, r4, r3
 801fd6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fd70:	fb0e 3304 	mla	r3, lr, r4, r3
 801fd74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd78:	2b00      	cmp	r3, #0
 801fd7a:	f000 80d1 	beq.w	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fd7e:	9c08      	ldr	r4, [sp, #32]
 801fd80:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fd84:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801fd88:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801fd8c:	f000 8152 	beq.w	8020034 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fd90:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801fd94:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fd98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd9c:	fb0a fe0e 	mul.w	lr, sl, lr
 801fda0:	fb09 f000 	mul.w	r0, r9, r0
 801fda4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801fda8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801fdac:	f100 0b20 	add.w	fp, r0, #32
 801fdb0:	44ce      	add	lr, r9
 801fdb2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801fdb6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801fdba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fdbe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fdc2:	ea4e 0909 	orr.w	r9, lr, r9
 801fdc6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801fdca:	8868      	ldrh	r0, [r5, #2]
 801fdcc:	d019      	beq.n	801fe02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fdce:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801fdd2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fdd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fdda:	fb0a fe0e 	mul.w	lr, sl, lr
 801fdde:	fb08 f800 	mul.w	r8, r8, r0
 801fde2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801fde6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801fdea:	f108 0b20 	add.w	fp, r8, #32
 801fdee:	4486      	add	lr, r0
 801fdf0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801fdf4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801fdf8:	0a00      	lsrs	r0, r0, #8
 801fdfa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fdfe:	ea4e 0000 	orr.w	r0, lr, r0
 801fe02:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801fe06:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801fe0a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fe0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fe12:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fe16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fe1a:	ea4e 0909 	orr.w	r9, lr, r9
 801fe1e:	ea4a 0000 	orr.w	r0, sl, r0
 801fe22:	f1bc 0f00 	cmp.w	ip, #0
 801fe26:	f000 8107 	beq.w	8020038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801fe2a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801fe2e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fe30:	3a01      	subs	r2, #1
 801fe32:	2cff      	cmp	r4, #255	; 0xff
 801fe34:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801fe38:	f102 0202 	add.w	r2, r2, #2
 801fe3c:	eb05 0e02 	add.w	lr, r5, r2
 801fe40:	5aaa      	ldrh	r2, [r5, r2]
 801fe42:	d018      	beq.n	801fe76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801fe44:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801fe48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe4c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fe50:	fb04 fa02 	mul.w	sl, r4, r2
 801fe54:	fb08 f805 	mul.w	r8, r8, r5
 801fe58:	f10a 0520 	add.w	r5, sl, #32
 801fe5c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801fe60:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fe64:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801fe68:	4442      	add	r2, r8
 801fe6a:	0a2d      	lsrs	r5, r5, #8
 801fe6c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801fe70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fe74:	432a      	orrs	r2, r5
 801fe76:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fe78:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801fe7c:	2cff      	cmp	r4, #255	; 0xff
 801fe7e:	d01a      	beq.n	801feb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801fe80:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801fe84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fe88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fe8c:	fb04 fa05 	mul.w	sl, r4, r5
 801fe90:	fb08 f80e 	mul.w	r8, r8, lr
 801fe94:	f10a 0e20 	add.w	lr, sl, #32
 801fe98:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801fe9c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fea0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801fea4:	4445      	add	r5, r8
 801fea6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801feaa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801feae:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801feb2:	ea45 050e 	orr.w	r5, r5, lr
 801feb6:	fb1c fe01 	smulbb	lr, ip, r1
 801feba:	f1cc 0810 	rsb	r8, ip, #16
 801febe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801fec2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fec6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801feca:	eba8 0801 	sub.w	r8, r8, r1
 801fece:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801fed2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fed6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801feda:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fede:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801fee2:	ea4a 0202 	orr.w	r2, sl, r2
 801fee6:	4341      	muls	r1, r0
 801fee8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801feec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fef0:	fb09 1108 	mla	r1, r9, r8, r1
 801fef4:	ea4b 0505 	orr.w	r5, fp, r5
 801fef8:	fb0c 1102 	mla	r1, ip, r2, r1
 801fefc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ff00:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ff04:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ff08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ff10:	ea42 0e0e 	orr.w	lr, r2, lr
 801ff14:	fa1f f28e 	uxth.w	r2, lr
 801ff18:	2bff      	cmp	r3, #255	; 0xff
 801ff1a:	f040 80a1 	bne.w	8020060 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801ff1e:	803a      	strh	r2, [r7, #0]
 801ff20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ff22:	3702      	adds	r7, #2
 801ff24:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ff26:	4413      	add	r3, r2
 801ff28:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801ff2a:	931d      	str	r3, [sp, #116]	; 0x74
 801ff2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff2e:	441a      	add	r2, r3
 801ff30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff32:	3b01      	subs	r3, #1
 801ff34:	921e      	str	r2, [sp, #120]	; 0x78
 801ff36:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff38:	e6c7      	b.n	801fcca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ff3a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ff3c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ff3e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ff40:	4433      	add	r3, r6
 801ff42:	931d      	str	r3, [sp, #116]	; 0x74
 801ff44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff46:	441c      	add	r4, r3
 801ff48:	9b06      	ldr	r3, [sp, #24]
 801ff4a:	3b01      	subs	r3, #1
 801ff4c:	941e      	str	r4, [sp, #120]	; 0x78
 801ff4e:	9306      	str	r3, [sp, #24]
 801ff50:	9b07      	ldr	r3, [sp, #28]
 801ff52:	3302      	adds	r3, #2
 801ff54:	9307      	str	r3, [sp, #28]
 801ff56:	e696      	b.n	801fc86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ff58:	d028      	beq.n	801ffac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff5a:	9b06      	ldr	r3, [sp, #24]
 801ff5c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ff5e:	3b01      	subs	r3, #1
 801ff60:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ff62:	fb00 5003 	mla	r0, r0, r3, r5
 801ff66:	1400      	asrs	r0, r0, #16
 801ff68:	f53f aeaa 	bmi.w	801fcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff6c:	3901      	subs	r1, #1
 801ff6e:	4288      	cmp	r0, r1
 801ff70:	f6bf aea6 	bge.w	801fcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff74:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ff76:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ff78:	fb01 0303 	mla	r3, r1, r3, r0
 801ff7c:	141b      	asrs	r3, r3, #16
 801ff7e:	f53f ae9f 	bmi.w	801fcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff82:	3a01      	subs	r2, #1
 801ff84:	4293      	cmp	r3, r2
 801ff86:	f6bf ae9b 	bge.w	801fcc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ff8a:	9b06      	ldr	r3, [sp, #24]
 801ff8c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ff90:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ff94:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff98:	2b00      	cmp	r3, #0
 801ff9a:	f300 80b6 	bgt.w	802010a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801ff9e:	9b06      	ldr	r3, [sp, #24]
 801ffa0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ffa4:	9b07      	ldr	r3, [sp, #28]
 801ffa6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ffaa:	9307      	str	r3, [sp, #28]
 801ffac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ffae:	2b00      	cmp	r3, #0
 801ffb0:	f340 8218 	ble.w	80203e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ffb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ffb8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ffbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ffc2:	eef0 6a62 	vmov.f32	s13, s5
 801ffc6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ffca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ffce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffd2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ffd6:	eef0 6a43 	vmov.f32	s13, s6
 801ffda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffde:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801ffe2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fff2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fff6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fffa:	ee12 2a90 	vmov	r2, s5
 801fffe:	eef0 2a47 	vmov.f32	s5, s14
 8020002:	fb92 f3f3 	sdiv	r3, r2, r3
 8020006:	ee13 2a10 	vmov	r2, s6
 802000a:	931f      	str	r3, [sp, #124]	; 0x7c
 802000c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802000e:	eeb0 3a67 	vmov.f32	s6, s15
 8020012:	fb92 f3f3 	sdiv	r3, r2, r3
 8020016:	9320      	str	r3, [sp, #128]	; 0x80
 8020018:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802001a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802001c:	3b01      	subs	r3, #1
 802001e:	930e      	str	r3, [sp, #56]	; 0x38
 8020020:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020022:	bf08      	it	eq
 8020024:	4613      	moveq	r3, r2
 8020026:	9306      	str	r3, [sp, #24]
 8020028:	e61f      	b.n	801fc6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802002a:	fb08 f505 	mul.w	r5, r8, r5
 802002e:	fb09 5303 	mla	r3, r9, r3, r5
 8020032:	e69f      	b.n	801fd74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8020034:	4681      	mov	r9, r0
 8020036:	e6c6      	b.n	801fdc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8020038:	f1c1 0210 	rsb	r2, r1, #16
 802003c:	4341      	muls	r1, r0
 802003e:	fb09 1902 	mla	r9, r9, r2, r1
 8020042:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020046:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802004a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802004e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020052:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020056:	ea42 0909 	orr.w	r9, r2, r9
 802005a:	fa1f f289 	uxth.w	r2, r9
 802005e:	e75b      	b.n	801ff18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8020060:	f8b7 c000 	ldrh.w	ip, [r7]
 8020064:	43db      	mvns	r3, r3
 8020066:	ea4f 202c 	mov.w	r0, ip, asr #8
 802006a:	fa5f fe83 	uxtb.w	lr, r3
 802006e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020072:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020076:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802007a:	fb00 f00e 	mul.w	r0, r0, lr
 802007e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020082:	b2db      	uxtb	r3, r3
 8020084:	1c41      	adds	r1, r0, #1
 8020086:	fb05 f50e 	mul.w	r5, r5, lr
 802008a:	fb03 f30e 	mul.w	r3, r3, lr
 802008e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020092:	1211      	asrs	r1, r2, #8
 8020094:	f021 0107 	bic.w	r1, r1, #7
 8020098:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802009c:	48d3      	ldr	r0, [pc, #844]	; (80203ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 802009e:	b2c9      	uxtb	r1, r1
 80200a0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80200a4:	1c69      	adds	r1, r5, #1
 80200a6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80200aa:	10d1      	asrs	r1, r2, #3
 80200ac:	00d2      	lsls	r2, r2, #3
 80200ae:	f021 0103 	bic.w	r1, r1, #3
 80200b2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80200b6:	00c9      	lsls	r1, r1, #3
 80200b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80200bc:	4301      	orrs	r1, r0
 80200be:	1c58      	adds	r0, r3, #1
 80200c0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80200c4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80200c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200cc:	430a      	orrs	r2, r1
 80200ce:	e726      	b.n	801ff1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80200d0:	f115 0e01 	adds.w	lr, r5, #1
 80200d4:	f53f af24 	bmi.w	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80200d8:	4572      	cmp	r2, lr
 80200da:	f6ff af21 	blt.w	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80200de:	f110 0e01 	adds.w	lr, r0, #1
 80200e2:	f53f af1d 	bmi.w	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80200e6:	4573      	cmp	r3, lr
 80200e8:	f6ff af1a 	blt.w	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80200ec:	b21b      	sxth	r3, r3
 80200ee:	b212      	sxth	r2, r2
 80200f0:	9301      	str	r3, [sp, #4]
 80200f2:	9200      	str	r2, [sp, #0]
 80200f4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80200f8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80200fc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8020100:	4639      	mov	r1, r7
 8020102:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020104:	f7ff fc22 	bl	801f94c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020108:	e70a      	b.n	801ff20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802010a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802010c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020110:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020112:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020116:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020118:	fa1f fc82 	uxth.w	ip, r2
 802011c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020120:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020122:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020126:	141f      	asrs	r7, r3, #16
 8020128:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802012a:	141b      	asrs	r3, r3, #16
 802012c:	fb01 3707 	mla	r7, r1, r7, r3
 8020130:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020132:	eb03 0a07 	add.w	sl, r3, r7
 8020136:	f813 9007 	ldrb.w	r9, [r3, r7]
 802013a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802013e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020142:	b29b      	uxth	r3, r3
 8020144:	2d00      	cmp	r5, #0
 8020146:	f000 80fe 	beq.w	8020346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 802014a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802014e:	eb0a 0b01 	add.w	fp, sl, r1
 8020152:	fa1f fa85 	uxth.w	sl, r5
 8020156:	940c      	str	r4, [sp, #48]	; 0x30
 8020158:	fb0a fc0c 	mul.w	ip, sl, ip
 802015c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020160:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020164:	eba0 000c 	sub.w	r0, r0, ip
 8020168:	940d      	str	r4, [sp, #52]	; 0x34
 802016a:	fa1f fa8a 	uxth.w	sl, sl
 802016e:	b280      	uxth	r0, r0
 8020170:	eba3 030a 	sub.w	r3, r3, sl
 8020174:	fb08 f000 	mul.w	r0, r8, r0
 8020178:	b29b      	uxth	r3, r3
 802017a:	fb09 0303 	mla	r3, r9, r3, r0
 802017e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8020180:	fb0a 3300 	mla	r3, sl, r0, r3
 8020184:	fb0c 3304 	mla	r3, ip, r4, r3
 8020188:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802018c:	2b00      	cmp	r3, #0
 802018e:	f000 80cc 	beq.w	802032a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8020192:	9808      	ldr	r0, [sp, #32]
 8020194:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020198:	9c08      	ldr	r4, [sp, #32]
 802019a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802019e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80201a2:	f000 80d5 	beq.w	8020350 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80201a6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80201aa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80201ae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80201b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80201b6:	fb09 f707 	mul.w	r7, r9, r7
 80201ba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80201be:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80201c2:	f107 0b20 	add.w	fp, r7, #32
 80201c6:	44cc      	add	ip, r9
 80201c8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80201cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80201d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80201d4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80201d8:	ea4c 0909 	orr.w	r9, ip, r9
 80201dc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80201e0:	8847      	ldrh	r7, [r0, #2]
 80201e2:	d019      	beq.n	8020218 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 80201e4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80201e8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80201ec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80201f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80201f4:	fb08 f807 	mul.w	r8, r8, r7
 80201f8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80201fc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020200:	f108 0b20 	add.w	fp, r8, #32
 8020204:	44bc      	add	ip, r7
 8020206:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802020a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802020e:	0a3f      	lsrs	r7, r7, #8
 8020210:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020214:	ea4c 0707 	orr.w	r7, ip, r7
 8020218:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802021c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020220:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8020224:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020228:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802022c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020230:	ea4c 0909 	orr.w	r9, ip, r9
 8020234:	ea4a 0707 	orr.w	r7, sl, r7
 8020238:	2d00      	cmp	r5, #0
 802023a:	f000 808b 	beq.w	8020354 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802023e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8020242:	3901      	subs	r1, #1
 8020244:	0049      	lsls	r1, r1, #1
 8020246:	3102      	adds	r1, #2
 8020248:	eb00 0c01 	add.w	ip, r0, r1
 802024c:	5a41      	ldrh	r1, [r0, r1]
 802024e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8020250:	28ff      	cmp	r0, #255	; 0xff
 8020252:	d019      	beq.n	8020288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8020254:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8020258:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802025a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802025e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020262:	fb04 fa01 	mul.w	sl, r4, r1
 8020266:	fb08 f800 	mul.w	r8, r8, r0
 802026a:	f10a 0020 	add.w	r0, sl, #32
 802026e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8020272:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020276:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802027a:	4441      	add	r1, r8
 802027c:	0a00      	lsrs	r0, r0, #8
 802027e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8020282:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020286:	4301      	orrs	r1, r0
 8020288:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802028a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802028e:	2cff      	cmp	r4, #255	; 0xff
 8020290:	d01a      	beq.n	80202c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 8020292:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8020296:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802029a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802029e:	fb04 fa00 	mul.w	sl, r4, r0
 80202a2:	fb08 f80c 	mul.w	r8, r8, ip
 80202a6:	f10a 0c20 	add.w	ip, sl, #32
 80202aa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80202ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80202b2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80202b6:	4440      	add	r0, r8
 80202b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202bc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80202c0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80202c4:	ea40 000c 	orr.w	r0, r0, ip
 80202c8:	fb15 fc02 	smulbb	ip, r5, r2
 80202cc:	f1c5 0810 	rsb	r8, r5, #16
 80202d0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80202d4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80202d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80202dc:	eba8 0802 	sub.w	r8, r8, r2
 80202e0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80202e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80202e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80202ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80202f0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80202f4:	ea4a 0101 	orr.w	r1, sl, r1
 80202f8:	437a      	muls	r2, r7
 80202fa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80202fe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020302:	fb09 2208 	mla	r2, r9, r8, r2
 8020306:	ea4b 0000 	orr.w	r0, fp, r0
 802030a:	fb05 2201 	mla	r2, r5, r1, r2
 802030e:	fb0c 2200 	mla	r2, ip, r0, r2
 8020312:	0d57      	lsrs	r7, r2, #21
 8020314:	0952      	lsrs	r2, r2, #5
 8020316:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802031a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802031e:	433a      	orrs	r2, r7
 8020320:	2bff      	cmp	r3, #255	; 0xff
 8020322:	b292      	uxth	r2, r2
 8020324:	d127      	bne.n	8020376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 8020326:	f8ae 2000 	strh.w	r2, [lr]
 802032a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802032c:	f10e 0e02 	add.w	lr, lr, #2
 8020330:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8020332:	4413      	add	r3, r2
 8020334:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8020336:	931d      	str	r3, [sp, #116]	; 0x74
 8020338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802033a:	441a      	add	r2, r3
 802033c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802033e:	3b01      	subs	r3, #1
 8020340:	921e      	str	r2, [sp, #120]	; 0x78
 8020342:	930f      	str	r3, [sp, #60]	; 0x3c
 8020344:	e627      	b.n	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020346:	fb08 f000 	mul.w	r0, r8, r0
 802034a:	fb09 0303 	mla	r3, r9, r3, r0
 802034e:	e71b      	b.n	8020188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 8020350:	46b9      	mov	r9, r7
 8020352:	e743      	b.n	80201dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 8020354:	f1c2 0110 	rsb	r1, r2, #16
 8020358:	437a      	muls	r2, r7
 802035a:	fb09 2901 	mla	r9, r9, r1, r2
 802035e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020362:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020366:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802036a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802036e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020372:	4302      	orrs	r2, r0
 8020374:	e7d4      	b.n	8020320 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 8020376:	f8be 7000 	ldrh.w	r7, [lr]
 802037a:	43db      	mvns	r3, r3
 802037c:	4c1b      	ldr	r4, [pc, #108]	; (80203ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 802037e:	1238      	asrs	r0, r7, #8
 8020380:	fa5f fc83 	uxtb.w	ip, r3
 8020384:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020388:	10fd      	asrs	r5, r7, #3
 802038a:	00fb      	lsls	r3, r7, #3
 802038c:	fb00 f00c 	mul.w	r0, r0, ip
 8020390:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020394:	b2db      	uxtb	r3, r3
 8020396:	fb05 f10c 	mul.w	r1, r5, ip
 802039a:	1c45      	adds	r5, r0, #1
 802039c:	fb03 f30c 	mul.w	r3, r3, ip
 80203a0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80203a4:	1215      	asrs	r5, r2, #8
 80203a6:	f025 0507 	bic.w	r5, r5, #7
 80203aa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80203ae:	1c4d      	adds	r5, r1, #1
 80203b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80203b4:	10d1      	asrs	r1, r2, #3
 80203b6:	b2c0      	uxtb	r0, r0
 80203b8:	f021 0103 	bic.w	r1, r1, #3
 80203bc:	00d2      	lsls	r2, r2, #3
 80203be:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80203c2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80203c6:	00c9      	lsls	r1, r1, #3
 80203c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80203cc:	4308      	orrs	r0, r1
 80203ce:	1c59      	adds	r1, r3, #1
 80203d0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80203d4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80203d8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80203dc:	4318      	orrs	r0, r3
 80203de:	f8ae 0000 	strh.w	r0, [lr]
 80203e2:	e7a2      	b.n	802032a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 80203e4:	b013      	add	sp, #76	; 0x4c
 80203e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203ea:	bf00      	nop
 80203ec:	fffff800 	.word	0xfffff800

080203f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80203f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80203f4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80203f8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80203fc:	fb05 4c03 	mla	ip, r5, r3, r4
 8020400:	2d00      	cmp	r5, #0
 8020402:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8020406:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802040a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802040e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020412:	8808      	ldrh	r0, [r1, #0]
 8020414:	f2c0 80a7 	blt.w	8020566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8020418:	45aa      	cmp	sl, r5
 802041a:	f340 80a4 	ble.w	8020566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802041e:	2c00      	cmp	r4, #0
 8020420:	f2c0 809f 	blt.w	8020562 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8020424:	42a3      	cmp	r3, r4
 8020426:	f340 809c 	ble.w	8020562 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802042a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802042e:	1c62      	adds	r2, r4, #1
 8020430:	f100 809c 	bmi.w	802056c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020434:	4293      	cmp	r3, r2
 8020436:	f340 8099 	ble.w	802056c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802043a:	f1b9 0f00 	cmp.w	r9, #0
 802043e:	f000 8095 	beq.w	802056c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8020442:	f8be c002 	ldrh.w	ip, [lr, #2]
 8020446:	3501      	adds	r5, #1
 8020448:	f100 8094 	bmi.w	8020574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802044c:	45aa      	cmp	sl, r5
 802044e:	f340 8091 	ble.w	8020574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020452:	2f00      	cmp	r7, #0
 8020454:	f000 808e 	beq.w	8020574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8020458:	2c00      	cmp	r4, #0
 802045a:	f2c0 8089 	blt.w	8020570 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802045e:	42a3      	cmp	r3, r4
 8020460:	f340 8086 	ble.w	8020570 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8020464:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8020468:	3401      	adds	r4, #1
 802046a:	f100 8086 	bmi.w	802057a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802046e:	42a3      	cmp	r3, r4
 8020470:	f340 8083 	ble.w	802057a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020474:	f1b9 0f00 	cmp.w	r9, #0
 8020478:	d07f      	beq.n	802057a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802047a:	3301      	adds	r3, #1
 802047c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8020480:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020484:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8020488:	fb19 fe07 	smulbb	lr, r9, r7
 802048c:	f1c7 0210 	rsb	r2, r7, #16
 8020490:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020494:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020498:	eba2 0209 	sub.w	r2, r2, r9
 802049c:	ea44 0808 	orr.w	r8, r4, r8
 80204a0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80204a4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80204a8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80204ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80204b0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80204b4:	ea44 0c0c 	orr.w	ip, r4, ip
 80204b8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80204bc:	fb04 f40c 	mul.w	r4, r4, ip
 80204c0:	fb02 4808 	mla	r8, r2, r8, r4
 80204c4:	041a      	lsls	r2, r3, #16
 80204c6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80204ca:	b2b4      	uxth	r4, r6
 80204cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80204d0:	43f6      	mvns	r6, r6
 80204d2:	4313      	orrs	r3, r2
 80204d4:	042a      	lsls	r2, r5, #16
 80204d6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80204da:	b2f6      	uxtb	r6, r6
 80204dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80204e0:	fb0e 8303 	mla	r3, lr, r3, r8
 80204e4:	432a      	orrs	r2, r5
 80204e6:	fb07 3202 	mla	r2, r7, r2, r3
 80204ea:	10c7      	asrs	r7, r0, #3
 80204ec:	0d53      	lsrs	r3, r2, #21
 80204ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80204f2:	0952      	lsrs	r2, r2, #5
 80204f4:	fb17 f706 	smulbb	r7, r7, r6
 80204f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80204fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020500:	431a      	orrs	r2, r3
 8020502:	b293      	uxth	r3, r2
 8020504:	1202      	asrs	r2, r0, #8
 8020506:	121d      	asrs	r5, r3, #8
 8020508:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802050c:	00c0      	lsls	r0, r0, #3
 802050e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020512:	fb12 f206 	smulbb	r2, r2, r6
 8020516:	b2c0      	uxtb	r0, r0
 8020518:	fb05 2504 	mla	r5, r5, r4, r2
 802051c:	10da      	asrs	r2, r3, #3
 802051e:	fb10 f006 	smulbb	r0, r0, r6
 8020522:	00db      	lsls	r3, r3, #3
 8020524:	b2ad      	uxth	r5, r5
 8020526:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802052a:	b2db      	uxtb	r3, r3
 802052c:	fb02 7204 	mla	r2, r2, r4, r7
 8020530:	fb03 0004 	mla	r0, r3, r4, r0
 8020534:	1c6b      	adds	r3, r5, #1
 8020536:	b292      	uxth	r2, r2
 8020538:	b280      	uxth	r0, r0
 802053a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802053e:	1c43      	adds	r3, r0, #1
 8020540:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020544:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020548:	1c50      	adds	r0, r2, #1
 802054a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802054e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020552:	0952      	lsrs	r2, r2, #5
 8020554:	432b      	orrs	r3, r5
 8020556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802055a:	4313      	orrs	r3, r2
 802055c:	800b      	strh	r3, [r1, #0]
 802055e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020562:	4680      	mov	r8, r0
 8020564:	e763      	b.n	802042e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8020566:	4684      	mov	ip, r0
 8020568:	4680      	mov	r8, r0
 802056a:	e76c      	b.n	8020446 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802056c:	4684      	mov	ip, r0
 802056e:	e76a      	b.n	8020446 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8020570:	4605      	mov	r5, r0
 8020572:	e779      	b.n	8020468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8020574:	4603      	mov	r3, r0
 8020576:	4605      	mov	r5, r0
 8020578:	e782      	b.n	8020480 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802057a:	4603      	mov	r3, r0
 802057c:	e780      	b.n	8020480 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802057e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802057e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020582:	b093      	sub	sp, #76	; 0x4c
 8020584:	461d      	mov	r5, r3
 8020586:	9210      	str	r2, [sp, #64]	; 0x40
 8020588:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802058a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802058e:	910a      	str	r1, [sp, #40]	; 0x28
 8020590:	920b      	str	r2, [sp, #44]	; 0x2c
 8020592:	6859      	ldr	r1, [r3, #4]
 8020594:	681b      	ldr	r3, [r3, #0]
 8020596:	9011      	str	r0, [sp, #68]	; 0x44
 8020598:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802059c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80205a0:	fb01 2707 	mla	r7, r1, r7, r2
 80205a4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80205a8:	9307      	str	r3, [sp, #28]
 80205aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80205ac:	681b      	ldr	r3, [r3, #0]
 80205ae:	9309      	str	r3, [sp, #36]	; 0x24
 80205b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80205b2:	43db      	mvns	r3, r3
 80205b4:	b2db      	uxtb	r3, r3
 80205b6:	9308      	str	r3, [sp, #32]
 80205b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80205ba:	2b00      	cmp	r3, #0
 80205bc:	dc03      	bgt.n	80205c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80205be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80205c0:	2b00      	cmp	r3, #0
 80205c2:	f340 8205 	ble.w	80209d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80205c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80205c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205d0:	1e48      	subs	r0, r1, #1
 80205d2:	f102 3cff 	add.w	ip, r2, #4294967295
 80205d6:	2d00      	cmp	r5, #0
 80205d8:	f340 80da 	ble.w	8020790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80205dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80205e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80205e4:	d406      	bmi.n	80205f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80205e6:	4586      	cmp	lr, r0
 80205e8:	da04      	bge.n	80205f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80205ea:	2b00      	cmp	r3, #0
 80205ec:	db02      	blt.n	80205f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80205ee:	4563      	cmp	r3, ip
 80205f0:	f2c0 80cf 	blt.w	8020792 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80205f4:	f11e 0e01 	adds.w	lr, lr, #1
 80205f8:	f100 80c1 	bmi.w	802077e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80205fc:	4571      	cmp	r1, lr
 80205fe:	f2c0 80be 	blt.w	802077e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020602:	3301      	adds	r3, #1
 8020604:	f100 80bb 	bmi.w	802077e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020608:	429a      	cmp	r2, r3
 802060a:	f2c0 80b8 	blt.w	802077e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802060e:	46a9      	mov	r9, r5
 8020610:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8020614:	f1b9 0f00 	cmp.w	r9, #0
 8020618:	f340 80d8 	ble.w	80207cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802061c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802061e:	1421      	asrs	r1, r4, #16
 8020620:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020624:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020628:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802062c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020630:	f100 8112 	bmi.w	8020858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8020634:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020638:	4551      	cmp	r1, sl
 802063a:	f280 810d 	bge.w	8020858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802063e:	2800      	cmp	r0, #0
 8020640:	f2c0 810a 	blt.w	8020858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8020644:	f103 3aff 	add.w	sl, r3, #4294967295
 8020648:	4550      	cmp	r0, sl
 802064a:	f280 8105 	bge.w	8020858 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802064e:	fa0f f38e 	sxth.w	r3, lr
 8020652:	fb00 1103 	mla	r1, r0, r3, r1
 8020656:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020658:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802065c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8020660:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8020664:	f1bc 0f00 	cmp.w	ip, #0
 8020668:	d007      	beq.n	802067a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802066a:	005b      	lsls	r3, r3, #1
 802066c:	eb0a 0003 	add.w	r0, sl, r3
 8020670:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8020674:	930c      	str	r3, [sp, #48]	; 0x30
 8020676:	8843      	ldrh	r3, [r0, #2]
 8020678:	930d      	str	r3, [sp, #52]	; 0x34
 802067a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802067e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020682:	fb12 f30c 	smulbb	r3, r2, ip
 8020686:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802068a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802068e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020692:	10db      	asrs	r3, r3, #3
 8020694:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020698:	ea40 000e 	orr.w	r0, r0, lr
 802069c:	f1cc 0e10 	rsb	lr, ip, #16
 80206a0:	ea4a 0101 	orr.w	r1, sl, r1
 80206a4:	9f08      	ldr	r7, [sp, #32]
 80206a6:	ebae 0e02 	sub.w	lr, lr, r2
 80206aa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80206ae:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80206b2:	4351      	muls	r1, r2
 80206b4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80206b6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80206ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 80206bc:	0410      	lsls	r0, r2, #16
 80206be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80206c2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80206c6:	4310      	orrs	r0, r2
 80206c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80206ca:	0412      	lsls	r2, r2, #16
 80206cc:	fb03 e000 	mla	r0, r3, r0, lr
 80206d0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80206d4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80206d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80206dc:	ea42 020e 	orr.w	r2, r2, lr
 80206e0:	fb03 0302 	mla	r3, r3, r2, r0
 80206e4:	f8b8 0000 	ldrh.w	r0, [r8]
 80206e8:	0d5a      	lsrs	r2, r3, #21
 80206ea:	095b      	lsrs	r3, r3, #5
 80206ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80206f0:	1201      	asrs	r1, r0, #8
 80206f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80206f6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80206fa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80206fe:	00c0      	lsls	r0, r0, #3
 8020700:	4313      	orrs	r3, r2
 8020702:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8020706:	fb11 f107 	smulbb	r1, r1, r7
 802070a:	b2c0      	uxtb	r0, r0
 802070c:	b29b      	uxth	r3, r3
 802070e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020712:	fb10 f007 	smulbb	r0, r0, r7
 8020716:	fb1e fe07 	smulbb	lr, lr, r7
 802071a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802071e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020722:	fb0c 1c02 	mla	ip, ip, r2, r1
 8020726:	10d9      	asrs	r1, r3, #3
 8020728:	00db      	lsls	r3, r3, #3
 802072a:	fa1f fc8c 	uxth.w	ip, ip
 802072e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020732:	b2db      	uxtb	r3, r3
 8020734:	fb01 e102 	mla	r1, r1, r2, lr
 8020738:	fb03 0302 	mla	r3, r3, r2, r0
 802073c:	b289      	uxth	r1, r1
 802073e:	b29a      	uxth	r2, r3
 8020740:	f10c 0301 	add.w	r3, ip, #1
 8020744:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020748:	1c53      	adds	r3, r2, #1
 802074a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802074e:	1c4a      	adds	r2, r1, #1
 8020750:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020754:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020758:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802075c:	0949      	lsrs	r1, r1, #5
 802075e:	ea43 030c 	orr.w	r3, r3, ip
 8020762:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020766:	430b      	orrs	r3, r1
 8020768:	f8a8 3000 	strh.w	r3, [r8]
 802076c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802076e:	f108 0802 	add.w	r8, r8, #2
 8020772:	f109 39ff 	add.w	r9, r9, #4294967295
 8020776:	441c      	add	r4, r3
 8020778:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802077a:	441e      	add	r6, r3
 802077c:	e74a      	b.n	8020614 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802077e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020780:	3d01      	subs	r5, #1
 8020782:	441c      	add	r4, r3
 8020784:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020786:	441e      	add	r6, r3
 8020788:	9b07      	ldr	r3, [sp, #28]
 802078a:	3302      	adds	r3, #2
 802078c:	9307      	str	r3, [sp, #28]
 802078e:	e722      	b.n	80205d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020790:	d022      	beq.n	80207d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020792:	1e6b      	subs	r3, r5, #1
 8020794:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020796:	fb00 4003 	mla	r0, r0, r3, r4
 802079a:	1400      	asrs	r0, r0, #16
 802079c:	f53f af37 	bmi.w	802060e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207a0:	3901      	subs	r1, #1
 80207a2:	4288      	cmp	r0, r1
 80207a4:	f6bf af33 	bge.w	802060e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207a8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80207aa:	fb01 6303 	mla	r3, r1, r3, r6
 80207ae:	141b      	asrs	r3, r3, #16
 80207b0:	f53f af2d 	bmi.w	802060e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207b4:	3a01      	subs	r2, #1
 80207b6:	4293      	cmp	r3, r2
 80207b8:	f6bf af29 	bge.w	802060e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80207bc:	46a8      	mov	r8, r5
 80207be:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80207c2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80207c6:	f1b8 0f00 	cmp.w	r8, #0
 80207ca:	dc60      	bgt.n	802088e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 80207cc:	9b07      	ldr	r3, [sp, #28]
 80207ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80207d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80207d6:	9307      	str	r3, [sp, #28]
 80207d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207da:	2b00      	cmp	r3, #0
 80207dc:	f340 80f8 	ble.w	80209d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80207e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80207e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80207e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80207ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80207ee:	eef0 6a62 	vmov.f32	s13, s5
 80207f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80207f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80207fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207fe:	ee16 4a90 	vmov	r4, s13
 8020802:	eef0 6a43 	vmov.f32	s13, s6
 8020806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802080a:	ee16 6a90 	vmov	r6, s13
 802080e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020812:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020816:	ee77 2a62 	vsub.f32	s5, s14, s5
 802081a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802081e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020822:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020826:	ee12 2a90 	vmov	r2, s5
 802082a:	eef0 2a47 	vmov.f32	s5, s14
 802082e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020832:	ee13 2a10 	vmov	r2, s6
 8020836:	931f      	str	r3, [sp, #124]	; 0x7c
 8020838:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802083a:	eeb0 3a67 	vmov.f32	s6, s15
 802083e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020842:	9320      	str	r3, [sp, #128]	; 0x80
 8020844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020846:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020848:	3b01      	subs	r3, #1
 802084a:	930a      	str	r3, [sp, #40]	; 0x28
 802084c:	bf08      	it	eq
 802084e:	4615      	moveq	r5, r2
 8020850:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020852:	bf18      	it	ne
 8020854:	461d      	movne	r5, r3
 8020856:	e6af      	b.n	80205b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020858:	f111 0a01 	adds.w	sl, r1, #1
 802085c:	d486      	bmi.n	802076c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802085e:	45d6      	cmp	lr, sl
 8020860:	db84      	blt.n	802076c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020862:	f110 0a01 	adds.w	sl, r0, #1
 8020866:	d481      	bmi.n	802076c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020868:	4553      	cmp	r3, sl
 802086a:	f6ff af7f 	blt.w	802076c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802086e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8020870:	b21b      	sxth	r3, r3
 8020872:	9101      	str	r1, [sp, #4]
 8020874:	4641      	mov	r1, r8
 8020876:	9300      	str	r3, [sp, #0]
 8020878:	fa0f f38e 	sxth.w	r3, lr
 802087c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020880:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020884:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020886:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020888:	f7ff fdb2 	bl	80203f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 802088c:	e76e      	b.n	802076c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802088e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020890:	1430      	asrs	r0, r6, #16
 8020892:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8020894:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020898:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802089c:	1423      	asrs	r3, r4, #16
 802089e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80208a2:	fb01 3000 	mla	r0, r1, r0, r3
 80208a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208a8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80208ac:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80208b0:	8858      	ldrh	r0, [r3, #2]
 80208b2:	f1be 0f00 	cmp.w	lr, #0
 80208b6:	d00b      	beq.n	80208d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80208b8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80208bc:	3901      	subs	r1, #1
 80208be:	0049      	lsls	r1, r1, #1
 80208c0:	3102      	adds	r1, #2
 80208c2:	eb03 0b01 	add.w	fp, r3, r1
 80208c6:	5a5b      	ldrh	r3, [r3, r1]
 80208c8:	930e      	str	r3, [sp, #56]	; 0x38
 80208ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80208ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80208d0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80208d4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80208d8:	fb12 f30e 	smulbb	r3, r2, lr
 80208dc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80208e0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80208e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80208e8:	10db      	asrs	r3, r3, #3
 80208ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80208ee:	ea41 010c 	orr.w	r1, r1, ip
 80208f2:	f1ce 0c10 	rsb	ip, lr, #16
 80208f6:	ea4b 0000 	orr.w	r0, fp, r0
 80208fa:	9f08      	ldr	r7, [sp, #32]
 80208fc:	ebac 0c02 	sub.w	ip, ip, r2
 8020900:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020904:	f108 38ff 	add.w	r8, r8, #4294967295
 8020908:	4350      	muls	r0, r2
 802090a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802090e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020910:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020914:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020916:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802091a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802091e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020920:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020924:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020928:	0412      	lsls	r2, r2, #16
 802092a:	ea4b 0101 	orr.w	r1, fp, r1
 802092e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020932:	fb03 c101 	mla	r1, r3, r1, ip
 8020936:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802093a:	4302      	orrs	r2, r0
 802093c:	fb03 1202 	mla	r2, r3, r2, r1
 8020940:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020944:	0952      	lsrs	r2, r2, #5
 8020946:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802094a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802094e:	f8b9 2000 	ldrh.w	r2, [r9]
 8020952:	ea4b 0303 	orr.w	r3, fp, r3
 8020956:	1211      	asrs	r1, r2, #8
 8020958:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802095c:	b29b      	uxth	r3, r3
 802095e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020962:	00d2      	lsls	r2, r2, #3
 8020964:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8020968:	fb11 f107 	smulbb	r1, r1, r7
 802096c:	1218      	asrs	r0, r3, #8
 802096e:	fb1c fc07 	smulbb	ip, ip, r7
 8020972:	b2d2      	uxtb	r2, r2
 8020974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020978:	fb12 f207 	smulbb	r2, r2, r7
 802097c:	fb00 100a 	mla	r0, r0, sl, r1
 8020980:	10d9      	asrs	r1, r3, #3
 8020982:	00db      	lsls	r3, r3, #3
 8020984:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020988:	b280      	uxth	r0, r0
 802098a:	b2db      	uxtb	r3, r3
 802098c:	fb01 c10a 	mla	r1, r1, sl, ip
 8020990:	fb03 230a 	mla	r3, r3, sl, r2
 8020994:	1c42      	adds	r2, r0, #1
 8020996:	b289      	uxth	r1, r1
 8020998:	b29b      	uxth	r3, r3
 802099a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802099e:	f101 0c01 	add.w	ip, r1, #1
 80209a2:	1c5a      	adds	r2, r3, #1
 80209a4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80209a8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80209ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80209b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80209b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80209b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80209ba:	441c      	add	r4, r3
 80209bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80209c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209c2:	4310      	orrs	r0, r2
 80209c4:	441e      	add	r6, r3
 80209c6:	ea40 000c 	orr.w	r0, r0, ip
 80209ca:	f829 0b02 	strh.w	r0, [r9], #2
 80209ce:	e6fa      	b.n	80207c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80209d0:	b013      	add	sp, #76	; 0x4c
 80209d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80209d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209da:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80209de:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80209e2:	fb0e 4703 	mla	r7, lr, r3, r4
 80209e6:	f1be 0f00 	cmp.w	lr, #0
 80209ea:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80209ee:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80209f2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80209f6:	8808      	ldrh	r0, [r1, #0]
 80209f8:	db60      	blt.n	8020abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80209fa:	45f1      	cmp	r9, lr
 80209fc:	dd5e      	ble.n	8020abc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80209fe:	2c00      	cmp	r4, #0
 8020a00:	db5a      	blt.n	8020ab8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020a02:	42a3      	cmp	r3, r4
 8020a04:	dd58      	ble.n	8020ab8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020a06:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8020a0a:	1c62      	adds	r2, r4, #1
 8020a0c:	d459      	bmi.n	8020ac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a0e:	4293      	cmp	r3, r2
 8020a10:	dd57      	ble.n	8020ac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a12:	2d00      	cmp	r5, #0
 8020a14:	d055      	beq.n	8020ac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020a16:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8020a1a:	f11e 0e01 	adds.w	lr, lr, #1
 8020a1e:	d454      	bmi.n	8020aca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a20:	45f1      	cmp	r9, lr
 8020a22:	dd52      	ble.n	8020aca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a24:	2e00      	cmp	r6, #0
 8020a26:	d050      	beq.n	8020aca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020a28:	2c00      	cmp	r4, #0
 8020a2a:	db4c      	blt.n	8020ac6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020a2c:	42a3      	cmp	r3, r4
 8020a2e:	dd4a      	ble.n	8020ac6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020a30:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8020a34:	3401      	adds	r4, #1
 8020a36:	d405      	bmi.n	8020a44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a38:	42a3      	cmp	r3, r4
 8020a3a:	dd03      	ble.n	8020a44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a3c:	b115      	cbz	r5, 8020a44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020a3e:	3301      	adds	r3, #1
 8020a40:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8020a44:	fb15 f406 	smulbb	r4, r5, r6
 8020a48:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020a4c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020a50:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020a54:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a58:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020a5c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020a60:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020a64:	ea43 0c0c 	orr.w	ip, r3, ip
 8020a68:	f1c6 0310 	rsb	r3, r6, #16
 8020a6c:	ea4e 0707 	orr.w	r7, lr, r7
 8020a70:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020a74:	1b5b      	subs	r3, r3, r5
 8020a76:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020a7a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020a7e:	437d      	muls	r5, r7
 8020a80:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020a84:	0403      	lsls	r3, r0, #16
 8020a86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020a8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a8e:	4318      	orrs	r0, r3
 8020a90:	0413      	lsls	r3, r2, #16
 8020a92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020a96:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a9a:	fb04 c000 	mla	r0, r4, r0, ip
 8020a9e:	4313      	orrs	r3, r2
 8020aa0:	fb06 0003 	mla	r0, r6, r3, r0
 8020aa4:	0d43      	lsrs	r3, r0, #21
 8020aa6:	0940      	lsrs	r0, r0, #5
 8020aa8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020aac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020ab0:	4318      	orrs	r0, r3
 8020ab2:	8008      	strh	r0, [r1, #0]
 8020ab4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020ab8:	4684      	mov	ip, r0
 8020aba:	e7a6      	b.n	8020a0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8020abc:	4607      	mov	r7, r0
 8020abe:	4684      	mov	ip, r0
 8020ac0:	e7ab      	b.n	8020a1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020ac2:	4607      	mov	r7, r0
 8020ac4:	e7a9      	b.n	8020a1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020ac6:	4602      	mov	r2, r0
 8020ac8:	e7b4      	b.n	8020a34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8020aca:	4602      	mov	r2, r0
 8020acc:	e7ba      	b.n	8020a44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08020ace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020ace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ad2:	b08f      	sub	sp, #60	; 0x3c
 8020ad4:	461d      	mov	r5, r3
 8020ad6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020ad8:	9107      	str	r1, [sp, #28]
 8020ada:	920c      	str	r2, [sp, #48]	; 0x30
 8020adc:	6859      	ldr	r1, [r3, #4]
 8020ade:	681b      	ldr	r3, [r3, #0]
 8020ae0:	900d      	str	r0, [sp, #52]	; 0x34
 8020ae2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8020ae6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8020aea:	fb01 2707 	mla	r7, r1, r7, r2
 8020aee:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020af2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020af4:	f8d3 8000 	ldr.w	r8, [r3]
 8020af8:	9b07      	ldr	r3, [sp, #28]
 8020afa:	2b00      	cmp	r3, #0
 8020afc:	dc03      	bgt.n	8020b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020afe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b00:	2b00      	cmp	r3, #0
 8020b02:	f340 8182 	ble.w	8020e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8020b06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b0c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b10:	1e48      	subs	r0, r1, #1
 8020b12:	f102 3cff 	add.w	ip, r2, #4294967295
 8020b16:	2d00      	cmp	r5, #0
 8020b18:	f340 809b 	ble.w	8020c52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8020b1c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020b20:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020b24:	d406      	bmi.n	8020b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b26:	4586      	cmp	lr, r0
 8020b28:	da04      	bge.n	8020b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b2a:	2b00      	cmp	r3, #0
 8020b2c:	db02      	blt.n	8020b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020b2e:	4563      	cmp	r3, ip
 8020b30:	f2c0 8090 	blt.w	8020c54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020b34:	f11e 0e01 	adds.w	lr, lr, #1
 8020b38:	f100 8084 	bmi.w	8020c44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b3c:	4571      	cmp	r1, lr
 8020b3e:	f2c0 8081 	blt.w	8020c44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b42:	3301      	adds	r3, #1
 8020b44:	d47e      	bmi.n	8020c44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b46:	429a      	cmp	r2, r3
 8020b48:	db7c      	blt.n	8020c44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020b4a:	46aa      	mov	sl, r5
 8020b4c:	46b9      	mov	r9, r7
 8020b4e:	f1ba 0f00 	cmp.w	sl, #0
 8020b52:	f340 8099 	ble.w	8020c88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8020b56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b58:	1421      	asrs	r1, r4, #16
 8020b5a:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020b5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020b62:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020b66:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020b6a:	f100 80d1 	bmi.w	8020d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020b6e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020b72:	4559      	cmp	r1, fp
 8020b74:	f280 80cc 	bge.w	8020d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020b78:	2800      	cmp	r0, #0
 8020b7a:	f2c0 80c9 	blt.w	8020d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020b7e:	f103 3bff 	add.w	fp, r3, #4294967295
 8020b82:	4558      	cmp	r0, fp
 8020b84:	f280 80c4 	bge.w	8020d10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020b88:	fa0f fe8e 	sxth.w	lr, lr
 8020b8c:	fb00 110e 	mla	r1, r0, lr, r1
 8020b90:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020b94:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8020b98:	8841      	ldrh	r1, [r0, #2]
 8020b9a:	f1bc 0f00 	cmp.w	ip, #0
 8020b9e:	d00b      	beq.n	8020bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8020ba0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8020ba4:	3b01      	subs	r3, #1
 8020ba6:	005b      	lsls	r3, r3, #1
 8020ba8:	3302      	adds	r3, #2
 8020baa:	eb00 0e03 	add.w	lr, r0, r3
 8020bae:	5ac3      	ldrh	r3, [r0, r3]
 8020bb0:	9308      	str	r3, [sp, #32]
 8020bb2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8020bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8020bb8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8020bbc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020bc0:	fb12 f30c 	smulbb	r3, r2, ip
 8020bc4:	f1cc 0e10 	rsb	lr, ip, #16
 8020bc8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020bcc:	10db      	asrs	r3, r3, #3
 8020bce:	ebae 0e02 	sub.w	lr, lr, r2
 8020bd2:	ea40 000b 	orr.w	r0, r0, fp
 8020bd6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020bda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020bde:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020be2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020be6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020bea:	ea4b 0101 	orr.w	r1, fp, r1
 8020bee:	4351      	muls	r1, r2
 8020bf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020bf2:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020bf6:	0410      	lsls	r0, r2, #16
 8020bf8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020bfc:	9908      	ldr	r1, [sp, #32]
 8020bfe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020c02:	4310      	orrs	r0, r2
 8020c04:	9a08      	ldr	r2, [sp, #32]
 8020c06:	0412      	lsls	r2, r2, #16
 8020c08:	fb03 e000 	mla	r0, r3, r0, lr
 8020c0c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8020c10:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020c14:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020c18:	ea42 020e 	orr.w	r2, r2, lr
 8020c1c:	fb03 0302 	mla	r3, r3, r2, r0
 8020c20:	0d5a      	lsrs	r2, r3, #21
 8020c22:	095b      	lsrs	r3, r3, #5
 8020c24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c28:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020c2c:	4313      	orrs	r3, r2
 8020c2e:	f8a9 3000 	strh.w	r3, [r9]
 8020c32:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020c34:	f109 0902 	add.w	r9, r9, #2
 8020c38:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020c3c:	441c      	add	r4, r3
 8020c3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c40:	441e      	add	r6, r3
 8020c42:	e784      	b.n	8020b4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020c44:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020c46:	3d01      	subs	r5, #1
 8020c48:	3702      	adds	r7, #2
 8020c4a:	441c      	add	r4, r3
 8020c4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c4e:	441e      	add	r6, r3
 8020c50:	e761      	b.n	8020b16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020c52:	d01d      	beq.n	8020c90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020c54:	1e6b      	subs	r3, r5, #1
 8020c56:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020c58:	fb00 4003 	mla	r0, r0, r3, r4
 8020c5c:	1400      	asrs	r0, r0, #16
 8020c5e:	f53f af74 	bmi.w	8020b4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c62:	3901      	subs	r1, #1
 8020c64:	4288      	cmp	r0, r1
 8020c66:	f6bf af70 	bge.w	8020b4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c6a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020c6c:	fb01 6303 	mla	r3, r1, r3, r6
 8020c70:	141b      	asrs	r3, r3, #16
 8020c72:	f53f af6a 	bmi.w	8020b4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c76:	3a01      	subs	r2, #1
 8020c78:	4293      	cmp	r3, r2
 8020c7a:	f6bf af66 	bge.w	8020b4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c7e:	46a9      	mov	r9, r5
 8020c80:	46ba      	mov	sl, r7
 8020c82:	f1b9 0f00 	cmp.w	r9, #0
 8020c86:	dc5b      	bgt.n	8020d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020c88:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020c8c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8020c90:	9b07      	ldr	r3, [sp, #28]
 8020c92:	2b00      	cmp	r3, #0
 8020c94:	f340 80b9 	ble.w	8020e0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8020c98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020ca2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ca6:	eef0 6a62 	vmov.f32	s13, s5
 8020caa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cb6:	ee16 4a90 	vmov	r4, s13
 8020cba:	eef0 6a43 	vmov.f32	s13, s6
 8020cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cc2:	ee16 6a90 	vmov	r6, s13
 8020cc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020cca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cce:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020cda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cde:	ee12 2a90 	vmov	r2, s5
 8020ce2:	eef0 2a47 	vmov.f32	s5, s14
 8020ce6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cea:	ee13 2a10 	vmov	r2, s6
 8020cee:	931b      	str	r3, [sp, #108]	; 0x6c
 8020cf0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020cf2:	eeb0 3a67 	vmov.f32	s6, s15
 8020cf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cfa:	931c      	str	r3, [sp, #112]	; 0x70
 8020cfc:	9b07      	ldr	r3, [sp, #28]
 8020cfe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d00:	3b01      	subs	r3, #1
 8020d02:	9307      	str	r3, [sp, #28]
 8020d04:	bf08      	it	eq
 8020d06:	4615      	moveq	r5, r2
 8020d08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d0a:	bf18      	it	ne
 8020d0c:	461d      	movne	r5, r3
 8020d0e:	e6f3      	b.n	8020af8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020d10:	f111 0b01 	adds.w	fp, r1, #1
 8020d14:	d48d      	bmi.n	8020c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d16:	45de      	cmp	lr, fp
 8020d18:	db8b      	blt.n	8020c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d1a:	f110 0b01 	adds.w	fp, r0, #1
 8020d1e:	d488      	bmi.n	8020c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d20:	455b      	cmp	r3, fp
 8020d22:	db86      	blt.n	8020c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d24:	b21b      	sxth	r3, r3
 8020d26:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8020d2a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8020d2e:	9300      	str	r3, [sp, #0]
 8020d30:	4642      	mov	r2, r8
 8020d32:	fa0f f38e 	sxth.w	r3, lr
 8020d36:	4649      	mov	r1, r9
 8020d38:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020d3a:	f7ff fe4c 	bl	80209d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8020d3e:	e778      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020d40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d42:	1420      	asrs	r0, r4, #16
 8020d44:	1431      	asrs	r1, r6, #16
 8020d46:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020d4a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020d52:	fb03 0101 	mla	r1, r3, r1, r0
 8020d56:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020d5a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8020d5e:	8841      	ldrh	r1, [r0, #2]
 8020d60:	f1be 0f00 	cmp.w	lr, #0
 8020d64:	d00b      	beq.n	8020d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8020d66:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8020d6a:	3b01      	subs	r3, #1
 8020d6c:	005b      	lsls	r3, r3, #1
 8020d6e:	3302      	adds	r3, #2
 8020d70:	eb00 0b03 	add.w	fp, r0, r3
 8020d74:	5ac3      	ldrh	r3, [r0, r3]
 8020d76:	930a      	str	r3, [sp, #40]	; 0x28
 8020d78:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020d7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d7e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8020d82:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020d86:	fb12 f30e 	smulbb	r3, r2, lr
 8020d8a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020d8e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020d92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020d96:	10db      	asrs	r3, r3, #3
 8020d98:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020d9c:	ea40 000c 	orr.w	r0, r0, ip
 8020da0:	f1ce 0c10 	rsb	ip, lr, #16
 8020da4:	ea4b 0101 	orr.w	r1, fp, r1
 8020da8:	f109 39ff 	add.w	r9, r9, #4294967295
 8020dac:	ebac 0c02 	sub.w	ip, ip, r2
 8020db0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020db4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020db8:	4351      	muls	r1, r2
 8020dba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020dbc:	fb0c 1c00 	mla	ip, ip, r0, r1
 8020dc0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020dc2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020dc6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8020dca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020dcc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020dd0:	0412      	lsls	r2, r2, #16
 8020dd2:	ea4b 0000 	orr.w	r0, fp, r0
 8020dd6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8020dda:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020dde:	fb03 c000 	mla	r0, r3, r0, ip
 8020de2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020de6:	ea42 0b0b 	orr.w	fp, r2, fp
 8020dea:	fb03 000b 	mla	r0, r3, fp, r0
 8020dee:	0d43      	lsrs	r3, r0, #21
 8020df0:	0940      	lsrs	r0, r0, #5
 8020df2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020df6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020dfa:	4318      	orrs	r0, r3
 8020dfc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020dfe:	441c      	add	r4, r3
 8020e00:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020e02:	f82a 0b02 	strh.w	r0, [sl], #2
 8020e06:	441e      	add	r6, r3
 8020e08:	e73b      	b.n	8020c82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8020e0a:	b00f      	add	sp, #60	; 0x3c
 8020e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8020e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e14:	b085      	sub	sp, #20
 8020e16:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8020e1a:	9102      	str	r1, [sp, #8]
 8020e1c:	2c00      	cmp	r4, #0
 8020e1e:	fb04 7103 	mla	r1, r4, r3, r7
 8020e22:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8020e26:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020e2a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020e2e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8020e32:	f2c0 811b 	blt.w	802106c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020e36:	45a6      	cmp	lr, r4
 8020e38:	f340 8118 	ble.w	802106c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020e3c:	2f00      	cmp	r7, #0
 8020e3e:	f2c0 8113 	blt.w	8021068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020e42:	42bb      	cmp	r3, r7
 8020e44:	f340 8110 	ble.w	8021068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020e48:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020e4c:	1c7a      	adds	r2, r7, #1
 8020e4e:	f100 8110 	bmi.w	8021072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020e52:	4293      	cmp	r3, r2
 8020e54:	f340 810d 	ble.w	8021072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020e58:	2e00      	cmp	r6, #0
 8020e5a:	f000 810c 	beq.w	8021076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8020e5e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8020e62:	3401      	adds	r4, #1
 8020e64:	f100 810b 	bmi.w	802107e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020e68:	45a6      	cmp	lr, r4
 8020e6a:	f340 8108 	ble.w	802107e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8020e6e:	2800      	cmp	r0, #0
 8020e70:	f000 8108 	beq.w	8021084 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8020e74:	2f00      	cmp	r7, #0
 8020e76:	f2c0 8100 	blt.w	802107a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020e7a:	42bb      	cmp	r3, r7
 8020e7c:	f340 80fd 	ble.w	802107a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020e80:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020e84:	3701      	adds	r7, #1
 8020e86:	f100 8100 	bmi.w	802108a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020e8a:	42bb      	cmp	r3, r7
 8020e8c:	f340 80fd 	ble.w	802108a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020e90:	2e00      	cmp	r6, #0
 8020e92:	f000 80fc 	beq.w	802108e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8020e96:	3301      	adds	r3, #1
 8020e98:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8020e9c:	b2b6      	uxth	r6, r6
 8020e9e:	b280      	uxth	r0, r0
 8020ea0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020ea4:	fb00 fe06 	mul.w	lr, r0, r6
 8020ea8:	0136      	lsls	r6, r6, #4
 8020eaa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020eae:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020eb2:	eba6 070e 	sub.w	r7, r6, lr
 8020eb6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020eba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020ebe:	b280      	uxth	r0, r0
 8020ec0:	b2bf      	uxth	r7, r7
 8020ec2:	1a1b      	subs	r3, r3, r0
 8020ec4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020ec8:	fb0a f607 	mul.w	r6, sl, r7
 8020ecc:	b29b      	uxth	r3, r3
 8020ece:	fb0b 6603 	mla	r6, fp, r3, r6
 8020ed2:	fb00 6609 	mla	r6, r0, r9, r6
 8020ed6:	fb0e 6608 	mla	r6, lr, r8, r6
 8020eda:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ede:	9600      	str	r6, [sp, #0]
 8020ee0:	2e00      	cmp	r6, #0
 8020ee2:	f000 80be 	beq.w	8021062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8020ee6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020eea:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020eee:	9e02      	ldr	r6, [sp, #8]
 8020ef0:	fb0b fc0c 	mul.w	ip, fp, ip
 8020ef4:	fb0b f505 	mul.w	r5, fp, r5
 8020ef8:	8836      	ldrh	r6, [r6, #0]
 8020efa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020efe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f02:	9501      	str	r5, [sp, #4]
 8020f04:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020f08:	44dc      	add	ip, fp
 8020f0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f0e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020f12:	9503      	str	r5, [sp, #12]
 8020f14:	9d01      	ldr	r5, [sp, #4]
 8020f16:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020f1a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020f1e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020f22:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020f26:	fb0a fc0c 	mul.w	ip, sl, ip
 8020f2a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020f2e:	fb0a fa01 	mul.w	sl, sl, r1
 8020f32:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020f36:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f3a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020f3e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f42:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020f46:	4465      	add	r5, ip
 8020f48:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f4c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020f50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f54:	fb09 fc0c 	mul.w	ip, r9, ip
 8020f58:	0a2d      	lsrs	r5, r5, #8
 8020f5a:	fb09 f904 	mul.w	r9, r9, r4
 8020f5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f62:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020f66:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f6a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020f6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f72:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020f76:	437d      	muls	r5, r7
 8020f78:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020f7c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020f80:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020f84:	4461      	add	r1, ip
 8020f86:	fb08 f404 	mul.w	r4, r8, r4
 8020f8a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f8e:	fb08 f802 	mul.w	r8, r8, r2
 8020f92:	0a09      	lsrs	r1, r1, #8
 8020f94:	0a22      	lsrs	r2, r4, #8
 8020f96:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020f9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020f9e:	fb07 f70a 	mul.w	r7, r7, sl
 8020fa2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020fa6:	4414      	add	r4, r2
 8020fa8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020fac:	0a24      	lsrs	r4, r4, #8
 8020fae:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020fb2:	9a03      	ldr	r2, [sp, #12]
 8020fb4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020fb8:	fb02 5503 	mla	r5, r2, r3, r5
 8020fbc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020fc0:	9a00      	ldr	r2, [sp, #0]
 8020fc2:	fb04 540e 	mla	r4, r4, lr, r5
 8020fc6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020fca:	1235      	asrs	r5, r6, #8
 8020fcc:	fb01 4100 	mla	r1, r1, r0, r4
 8020fd0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020fd4:	0a09      	lsrs	r1, r1, #8
 8020fd6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020fda:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020fde:	fb03 7101 	mla	r1, r3, r1, r7
 8020fe2:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020fe6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020fea:	fb00 e101 	mla	r1, r0, r1, lr
 8020fee:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020ff2:	b287      	uxth	r7, r0
 8020ff4:	0a09      	lsrs	r1, r1, #8
 8020ff6:	437a      	muls	r2, r7
 8020ff8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020ffc:	1c53      	adds	r3, r2, #1
 8020ffe:	4321      	orrs	r1, r4
 8021000:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021004:	0c0a      	lsrs	r2, r1, #16
 8021006:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802100a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802100e:	b2c8      	uxtb	r0, r1
 8021010:	fb12 f207 	smulbb	r2, r2, r7
 8021014:	fb14 f407 	smulbb	r4, r4, r7
 8021018:	b2db      	uxtb	r3, r3
 802101a:	fb10 f007 	smulbb	r0, r0, r7
 802101e:	fb05 2503 	mla	r5, r5, r3, r2
 8021022:	10f2      	asrs	r2, r6, #3
 8021024:	00f6      	lsls	r6, r6, #3
 8021026:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802102a:	b2ad      	uxth	r5, r5
 802102c:	b2f6      	uxtb	r6, r6
 802102e:	fb02 4203 	mla	r2, r2, r3, r4
 8021032:	fb06 0303 	mla	r3, r6, r3, r0
 8021036:	b294      	uxth	r4, r2
 8021038:	b299      	uxth	r1, r3
 802103a:	1c6b      	adds	r3, r5, #1
 802103c:	1c62      	adds	r2, r4, #1
 802103e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021042:	1c4b      	adds	r3, r1, #1
 8021044:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021048:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802104c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021050:	0952      	lsrs	r2, r2, #5
 8021052:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021056:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802105a:	432b      	orrs	r3, r5
 802105c:	4313      	orrs	r3, r2
 802105e:	9a02      	ldr	r2, [sp, #8]
 8021060:	8013      	strh	r3, [r2, #0]
 8021062:	b005      	add	sp, #20
 8021064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021068:	2500      	movs	r5, #0
 802106a:	e6ef      	b.n	8020e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802106c:	2100      	movs	r1, #0
 802106e:	460d      	mov	r5, r1
 8021070:	e6f7      	b.n	8020e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021072:	2100      	movs	r1, #0
 8021074:	e6f5      	b.n	8020e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021076:	4631      	mov	r1, r6
 8021078:	e6f3      	b.n	8020e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802107a:	2400      	movs	r4, #0
 802107c:	e702      	b.n	8020e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 802107e:	2200      	movs	r2, #0
 8021080:	4614      	mov	r4, r2
 8021082:	e70b      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021084:	4602      	mov	r2, r0
 8021086:	4604      	mov	r4, r0
 8021088:	e708      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802108a:	2200      	movs	r2, #0
 802108c:	e706      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802108e:	4632      	mov	r2, r6
 8021090:	e704      	b.n	8020e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08021092 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021092:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021096:	b09d      	sub	sp, #116	; 0x74
 8021098:	9219      	str	r2, [sp, #100]	; 0x64
 802109a:	9307      	str	r3, [sp, #28]
 802109c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802109e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80210a2:	901b      	str	r0, [sp, #108]	; 0x6c
 80210a4:	931a      	str	r3, [sp, #104]	; 0x68
 80210a6:	6850      	ldr	r0, [r2, #4]
 80210a8:	9117      	str	r1, [sp, #92]	; 0x5c
 80210aa:	6812      	ldr	r2, [r2, #0]
 80210ac:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80210b0:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80210b4:	fb00 1303 	mla	r3, r0, r3, r1
 80210b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80210bc:	930a      	str	r3, [sp, #40]	; 0x28
 80210be:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80210c0:	681b      	ldr	r3, [r3, #0]
 80210c2:	9310      	str	r3, [sp, #64]	; 0x40
 80210c4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80210c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80210ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80210cc:	2b00      	cmp	r3, #0
 80210ce:	dc03      	bgt.n	80210d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80210d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80210d2:	2b00      	cmp	r3, #0
 80210d4:	f340 8375 	ble.w	80217c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80210d8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80210da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80210de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80210e2:	1e48      	subs	r0, r1, #1
 80210e4:	1e57      	subs	r7, r2, #1
 80210e6:	9b07      	ldr	r3, [sp, #28]
 80210e8:	2b00      	cmp	r3, #0
 80210ea:	f340 818e 	ble.w	802140a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80210ee:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80210f2:	ea4f 4326 	mov.w	r3, r6, asr #16
 80210f6:	d406      	bmi.n	8021106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80210f8:	4584      	cmp	ip, r0
 80210fa:	da04      	bge.n	8021106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80210fc:	2b00      	cmp	r3, #0
 80210fe:	db02      	blt.n	8021106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021100:	42bb      	cmp	r3, r7
 8021102:	f2c0 8183 	blt.w	802140c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8021106:	f11c 0c01 	adds.w	ip, ip, #1
 802110a:	f100 8173 	bmi.w	80213f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802110e:	4561      	cmp	r1, ip
 8021110:	f2c0 8170 	blt.w	80213f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021114:	3301      	adds	r3, #1
 8021116:	f100 816d 	bmi.w	80213f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802111a:	429a      	cmp	r2, r3
 802111c:	f2c0 816a 	blt.w	80213f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021120:	9b07      	ldr	r3, [sp, #28]
 8021122:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021124:	9318      	str	r3, [sp, #96]	; 0x60
 8021126:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021128:	2b00      	cmp	r3, #0
 802112a:	f340 818c 	ble.w	8021446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802112e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8021130:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021134:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021136:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802113a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802113e:	1422      	asrs	r2, r4, #16
 8021140:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021144:	689b      	ldr	r3, [r3, #8]
 8021146:	f100 81cd 	bmi.w	80214e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802114a:	f103 38ff 	add.w	r8, r3, #4294967295
 802114e:	4542      	cmp	r2, r8
 8021150:	f280 81c8 	bge.w	80214e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021154:	f1bc 0f00 	cmp.w	ip, #0
 8021158:	f2c0 81c4 	blt.w	80214e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802115c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021160:	45c4      	cmp	ip, r8
 8021162:	f280 81bf 	bge.w	80214e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021166:	b21b      	sxth	r3, r3
 8021168:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802116a:	fb0c 2203 	mla	r2, ip, r3, r2
 802116e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021172:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021176:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802117a:	2800      	cmp	r0, #0
 802117c:	f000 81a9 	beq.w	80214d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8021180:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021184:	950c      	str	r5, [sp, #48]	; 0x30
 8021186:	0e2d      	lsrs	r5, r5, #24
 8021188:	9513      	str	r5, [sp, #76]	; 0x4c
 802118a:	b181      	cbz	r1, 80211ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802118c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8021190:	3b01      	subs	r3, #1
 8021192:	009b      	lsls	r3, r3, #2
 8021194:	3304      	adds	r3, #4
 8021196:	eb08 0c03 	add.w	ip, r8, r3
 802119a:	f858 3003 	ldr.w	r3, [r8, r3]
 802119e:	9308      	str	r3, [sp, #32]
 80211a0:	0e1b      	lsrs	r3, r3, #24
 80211a2:	9311      	str	r3, [sp, #68]	; 0x44
 80211a4:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80211a8:	930d      	str	r3, [sp, #52]	; 0x34
 80211aa:	0e1b      	lsrs	r3, r3, #24
 80211ac:	9314      	str	r3, [sp, #80]	; 0x50
 80211ae:	b280      	uxth	r0, r0
 80211b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80211b2:	b289      	uxth	r1, r1
 80211b4:	fb00 f901 	mul.w	r9, r0, r1
 80211b8:	0100      	lsls	r0, r0, #4
 80211ba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80211be:	eba0 0809 	sub.w	r8, r0, r9
 80211c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80211c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80211c8:	b289      	uxth	r1, r1
 80211ca:	fa1f f888 	uxth.w	r8, r8
 80211ce:	1a5b      	subs	r3, r3, r1
 80211d0:	fb08 f000 	mul.w	r0, r8, r0
 80211d4:	b29b      	uxth	r3, r3
 80211d6:	fb03 000e 	mla	r0, r3, lr, r0
 80211da:	fb01 0005 	mla	r0, r1, r5, r0
 80211de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80211e0:	fb09 0005 	mla	r0, r9, r5, r0
 80211e4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80211e8:	2800      	cmp	r0, #0
 80211ea:	f000 80fa 	beq.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80211ee:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80211f2:	d01b      	beq.n	802122c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80211f4:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80211f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80211fc:	fb0e fa0a 	mul.w	sl, lr, sl
 8021200:	fb0e fe02 	mul.w	lr, lr, r2
 8021204:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021208:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802120c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021210:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021214:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021218:	4452      	add	r2, sl
 802121a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802121e:	0a12      	lsrs	r2, r2, #8
 8021220:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021224:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021228:	ea42 020c 	orr.w	r2, r2, ip
 802122c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802122e:	2dff      	cmp	r5, #255	; 0xff
 8021230:	d021      	beq.n	8021276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8021232:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021234:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021238:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802123a:	fb05 fb0b 	mul.w	fp, r5, fp
 802123e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021240:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021244:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021246:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802124a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802124e:	fb05 fa0a 	mul.w	sl, r5, sl
 8021252:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021256:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802125a:	44de      	add	lr, fp
 802125c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021260:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021264:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021268:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802126c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021270:	ea4e 050a 	orr.w	r5, lr, sl
 8021274:	950c      	str	r5, [sp, #48]	; 0x30
 8021276:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021278:	2dff      	cmp	r5, #255	; 0xff
 802127a:	d021      	beq.n	80212c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802127c:	9d08      	ldr	r5, [sp, #32]
 802127e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021282:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021284:	fb05 fb0b 	mul.w	fp, r5, fp
 8021288:	9d08      	ldr	r5, [sp, #32]
 802128a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802128e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021290:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021294:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021298:	fb05 fa0a 	mul.w	sl, r5, sl
 802129c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80212a4:	44de      	add	lr, fp
 80212a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212ba:	ea4e 050a 	orr.w	r5, lr, sl
 80212be:	9508      	str	r5, [sp, #32]
 80212c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80212c2:	2dff      	cmp	r5, #255	; 0xff
 80212c4:	d021      	beq.n	802130a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80212c6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80212c8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80212cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80212ce:	fb05 fb0b 	mul.w	fp, r5, fp
 80212d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80212d4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80212d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80212da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212de:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80212e2:	fb05 fa0a 	mul.w	sl, r5, sl
 80212e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80212ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80212ee:	44de      	add	lr, fp
 80212f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021300:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021304:	ea4e 050a 	orr.w	r5, lr, sl
 8021308:	950d      	str	r5, [sp, #52]	; 0x34
 802130a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802130c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8021310:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021314:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021318:	9d08      	ldr	r5, [sp, #32]
 802131a:	fb08 fc0c 	mul.w	ip, r8, ip
 802131e:	fb03 cc0e 	mla	ip, r3, lr, ip
 8021322:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021326:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021328:	fb01 cc0e 	mla	ip, r1, lr, ip
 802132c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021330:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021332:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021336:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802133a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802133c:	fb08 f80e 	mul.w	r8, r8, lr
 8021340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021344:	fb03 8202 	mla	r2, r3, r2, r8
 8021348:	9b08      	ldr	r3, [sp, #32]
 802134a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802134e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8021352:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021354:	fb01 220a 	mla	r2, r1, sl, r2
 8021358:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802135c:	883b      	ldrh	r3, [r7, #0]
 802135e:	fb09 2901 	mla	r9, r9, r1, r2
 8021362:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021364:	1219      	asrs	r1, r3, #8
 8021366:	4342      	muls	r2, r0
 8021368:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802136c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021370:	1c50      	adds	r0, r2, #1
 8021372:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021376:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802137a:	ea4c 0c09 	orr.w	ip, ip, r9
 802137e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021382:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021386:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802138a:	fa5f fc8c 	uxtb.w	ip, ip
 802138e:	fb12 f205 	smulbb	r2, r2, r5
 8021392:	b2c0      	uxtb	r0, r0
 8021394:	fb1c fc05 	smulbb	ip, ip, r5
 8021398:	fb01 2100 	mla	r1, r1, r0, r2
 802139c:	10da      	asrs	r2, r3, #3
 802139e:	fb1e fe05 	smulbb	lr, lr, r5
 80213a2:	00db      	lsls	r3, r3, #3
 80213a4:	b289      	uxth	r1, r1
 80213a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80213aa:	b2db      	uxtb	r3, r3
 80213ac:	fb02 e200 	mla	r2, r2, r0, lr
 80213b0:	fb03 c300 	mla	r3, r3, r0, ip
 80213b4:	b292      	uxth	r2, r2
 80213b6:	fa1f fc83 	uxth.w	ip, r3
 80213ba:	1c4b      	adds	r3, r1, #1
 80213bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80213c0:	f10c 0301 	add.w	r3, ip, #1
 80213c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80213c8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80213cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213d0:	430b      	orrs	r3, r1
 80213d2:	1c51      	adds	r1, r2, #1
 80213d4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80213d8:	0952      	lsrs	r2, r2, #5
 80213da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213de:	4313      	orrs	r3, r2
 80213e0:	803b      	strh	r3, [r7, #0]
 80213e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80213e4:	3702      	adds	r7, #2
 80213e6:	441c      	add	r4, r3
 80213e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80213ea:	441e      	add	r6, r3
 80213ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80213ee:	3b01      	subs	r3, #1
 80213f0:	9318      	str	r3, [sp, #96]	; 0x60
 80213f2:	e698      	b.n	8021126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80213f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80213f6:	441c      	add	r4, r3
 80213f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80213fa:	441e      	add	r6, r3
 80213fc:	9b07      	ldr	r3, [sp, #28]
 80213fe:	3b01      	subs	r3, #1
 8021400:	9307      	str	r3, [sp, #28]
 8021402:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021404:	3302      	adds	r3, #2
 8021406:	930a      	str	r3, [sp, #40]	; 0x28
 8021408:	e66d      	b.n	80210e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802140a:	d023      	beq.n	8021454 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802140c:	9b07      	ldr	r3, [sp, #28]
 802140e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8021410:	3b01      	subs	r3, #1
 8021412:	fb00 4003 	mla	r0, r0, r3, r4
 8021416:	1400      	asrs	r0, r0, #16
 8021418:	f53f ae82 	bmi.w	8021120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802141c:	3901      	subs	r1, #1
 802141e:	4288      	cmp	r0, r1
 8021420:	f6bf ae7e 	bge.w	8021120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021424:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021426:	fb01 6303 	mla	r3, r1, r3, r6
 802142a:	141b      	asrs	r3, r3, #16
 802142c:	f53f ae78 	bmi.w	8021120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021430:	3a01      	subs	r2, #1
 8021432:	4293      	cmp	r3, r2
 8021434:	f6bf ae74 	bge.w	8021120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021438:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802143c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021440:	f1bb 0f00 	cmp.w	fp, #0
 8021444:	dc6c      	bgt.n	8021520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021446:	9b07      	ldr	r3, [sp, #28]
 8021448:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802144c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802144e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021452:	930a      	str	r3, [sp, #40]	; 0x28
 8021454:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021456:	2b00      	cmp	r3, #0
 8021458:	f340 81b3 	ble.w	80217c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802145c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021460:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021462:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021466:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802146a:	eef0 6a62 	vmov.f32	s13, s5
 802146e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021472:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021476:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802147a:	ee16 4a90 	vmov	r4, s13
 802147e:	eef0 6a43 	vmov.f32	s13, s6
 8021482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021486:	ee16 6a90 	vmov	r6, s13
 802148a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802148e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021492:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021496:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802149a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802149e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214a2:	ee12 2a90 	vmov	r2, s5
 80214a6:	eef0 2a47 	vmov.f32	s5, s14
 80214aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80214ae:	ee13 2a10 	vmov	r2, s6
 80214b2:	9329      	str	r3, [sp, #164]	; 0xa4
 80214b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80214b6:	eeb0 3a67 	vmov.f32	s6, s15
 80214ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80214be:	932a      	str	r3, [sp, #168]	; 0xa8
 80214c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80214c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80214c4:	3b01      	subs	r3, #1
 80214c6:	9317      	str	r3, [sp, #92]	; 0x5c
 80214c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80214ca:	bf08      	it	eq
 80214cc:	4613      	moveq	r3, r2
 80214ce:	9307      	str	r3, [sp, #28]
 80214d0:	e5fb      	b.n	80210ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80214d2:	2900      	cmp	r1, #0
 80214d4:	f43f ae6b 	beq.w	80211ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80214d8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80214dc:	9308      	str	r3, [sp, #32]
 80214de:	0e1b      	lsrs	r3, r3, #24
 80214e0:	9311      	str	r3, [sp, #68]	; 0x44
 80214e2:	e664      	b.n	80211ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80214e4:	f112 0801 	adds.w	r8, r2, #1
 80214e8:	f53f af7b 	bmi.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80214ec:	4543      	cmp	r3, r8
 80214ee:	f6ff af78 	blt.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80214f2:	f11c 0801 	adds.w	r8, ip, #1
 80214f6:	f53f af74 	bmi.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80214fa:	45c6      	cmp	lr, r8
 80214fc:	f6ff af71 	blt.w	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021500:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8021502:	b21b      	sxth	r3, r3
 8021504:	9201      	str	r2, [sp, #4]
 8021506:	fa0f f28e 	sxth.w	r2, lr
 802150a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802150e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8021512:	9200      	str	r2, [sp, #0]
 8021514:	4639      	mov	r1, r7
 8021516:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021518:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802151a:	f7ff fc79 	bl	8020e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802151e:	e760      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021520:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021522:	1427      	asrs	r7, r4, #16
 8021524:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021526:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802152a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802152e:	1433      	asrs	r3, r6, #16
 8021530:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021534:	fb01 7303 	mla	r3, r1, r3, r7
 8021538:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802153c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021540:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021544:	2a00      	cmp	r2, #0
 8021546:	f000 8133 	beq.w	80217b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802154a:	687d      	ldr	r5, [r7, #4]
 802154c:	950e      	str	r5, [sp, #56]	; 0x38
 802154e:	0e2d      	lsrs	r5, r5, #24
 8021550:	9515      	str	r5, [sp, #84]	; 0x54
 8021552:	b178      	cbz	r0, 8021574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021554:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8021558:	3901      	subs	r1, #1
 802155a:	0089      	lsls	r1, r1, #2
 802155c:	3104      	adds	r1, #4
 802155e:	eb07 0e01 	add.w	lr, r7, r1
 8021562:	5879      	ldr	r1, [r7, r1]
 8021564:	9109      	str	r1, [sp, #36]	; 0x24
 8021566:	0e09      	lsrs	r1, r1, #24
 8021568:	9112      	str	r1, [sp, #72]	; 0x48
 802156a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802156e:	910f      	str	r1, [sp, #60]	; 0x3c
 8021570:	0e09      	lsrs	r1, r1, #24
 8021572:	9116      	str	r1, [sp, #88]	; 0x58
 8021574:	b292      	uxth	r2, r2
 8021576:	9915      	ldr	r1, [sp, #84]	; 0x54
 8021578:	b280      	uxth	r0, r0
 802157a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802157c:	fb02 f800 	mul.w	r8, r2, r0
 8021580:	0112      	lsls	r2, r2, #4
 8021582:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021586:	eba2 0e08 	sub.w	lr, r2, r8
 802158a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802158e:	b280      	uxth	r0, r0
 8021590:	fa1f fe8e 	uxth.w	lr, lr
 8021594:	1a12      	subs	r2, r2, r0
 8021596:	fb0e f101 	mul.w	r1, lr, r1
 802159a:	b292      	uxth	r2, r2
 802159c:	fb02 110c 	mla	r1, r2, ip, r1
 80215a0:	fb00 1105 	mla	r1, r0, r5, r1
 80215a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80215a6:	fb08 1105 	mla	r1, r8, r5, r1
 80215aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80215ae:	2900      	cmp	r1, #0
 80215b0:	f000 80f5 	beq.w	802179e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80215b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80215b8:	d019      	beq.n	80215ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80215ba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80215be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215c2:	fb0c fa0a 	mul.w	sl, ip, sl
 80215c6:	fb0c fc03 	mul.w	ip, ip, r3
 80215ca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80215ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80215d2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80215d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80215da:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80215de:	4453      	add	r3, sl
 80215e0:	0a3f      	lsrs	r7, r7, #8
 80215e2:	0a1b      	lsrs	r3, r3, #8
 80215e4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80215e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80215ec:	433b      	orrs	r3, r7
 80215ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80215f0:	2dff      	cmp	r5, #255	; 0xff
 80215f2:	d020      	beq.n	8021636 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80215f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80215f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80215fa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80215fc:	436f      	muls	r7, r5
 80215fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021600:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021604:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021608:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802160a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802160e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021612:	fb05 fa0a 	mul.w	sl, r5, sl
 8021616:	44bc      	add	ip, r7
 8021618:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802161c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021620:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021624:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021628:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802162c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021630:	ea4c 050a 	orr.w	r5, ip, sl
 8021634:	950e      	str	r5, [sp, #56]	; 0x38
 8021636:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021638:	2dff      	cmp	r5, #255	; 0xff
 802163a:	d020      	beq.n	802167e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802163c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802163e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021642:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021644:	436f      	muls	r7, r5
 8021646:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021648:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802164c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021650:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021652:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021656:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802165a:	fb05 fa0a 	mul.w	sl, r5, sl
 802165e:	44bc      	add	ip, r7
 8021660:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021664:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021668:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802166c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021670:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021674:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021678:	ea4c 050a 	orr.w	r5, ip, sl
 802167c:	9509      	str	r5, [sp, #36]	; 0x24
 802167e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8021680:	2dff      	cmp	r5, #255	; 0xff
 8021682:	d020      	beq.n	80216c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8021684:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021686:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802168a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802168c:	436f      	muls	r7, r5
 802168e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021690:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021694:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021698:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802169a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802169e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216a2:	fb05 fa0a 	mul.w	sl, r5, sl
 80216a6:	44bc      	add	ip, r7
 80216a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80216ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80216b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80216b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216c0:	ea4c 050a 	orr.w	r5, ip, sl
 80216c4:	950f      	str	r5, [sp, #60]	; 0x3c
 80216c6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80216c8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80216cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80216d0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80216d4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80216d6:	fb0e f707 	mul.w	r7, lr, r7
 80216da:	fb02 770c 	mla	r7, r2, ip, r7
 80216de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80216e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80216e4:	fb00 770c 	mla	r7, r0, ip, r7
 80216e8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80216ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80216ee:	fb08 770c 	mla	r7, r8, ip, r7
 80216f2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80216f6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80216f8:	fb0e fe0c 	mul.w	lr, lr, ip
 80216fc:	0a3f      	lsrs	r7, r7, #8
 80216fe:	fb02 e303 	mla	r3, r2, r3, lr
 8021702:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021704:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021708:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802170c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802170e:	fb00 330a 	mla	r3, r0, sl, r3
 8021712:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021716:	f8b9 0000 	ldrh.w	r0, [r9]
 802171a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802171e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021720:	1202      	asrs	r2, r0, #8
 8021722:	4359      	muls	r1, r3
 8021724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021728:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802172c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021730:	1c4b      	adds	r3, r1, #1
 8021732:	ea47 070c 	orr.w	r7, r7, ip
 8021736:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802173a:	0c3b      	lsrs	r3, r7, #16
 802173c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021740:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021744:	b2ff      	uxtb	r7, r7
 8021746:	fb13 f305 	smulbb	r3, r3, r5
 802174a:	b2c9      	uxtb	r1, r1
 802174c:	fb17 f705 	smulbb	r7, r7, r5
 8021750:	fb02 3201 	mla	r2, r2, r1, r3
 8021754:	10c3      	asrs	r3, r0, #3
 8021756:	fb1c fc05 	smulbb	ip, ip, r5
 802175a:	00c0      	lsls	r0, r0, #3
 802175c:	b292      	uxth	r2, r2
 802175e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021762:	b2c0      	uxtb	r0, r0
 8021764:	fb03 c301 	mla	r3, r3, r1, ip
 8021768:	fb00 7001 	mla	r0, r0, r1, r7
 802176c:	1c51      	adds	r1, r2, #1
 802176e:	b29b      	uxth	r3, r3
 8021770:	b280      	uxth	r0, r0
 8021772:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021776:	f100 0c01 	add.w	ip, r0, #1
 802177a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802177e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021782:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021786:	ea4c 0202 	orr.w	r2, ip, r2
 802178a:	f103 0c01 	add.w	ip, r3, #1
 802178e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021792:	095b      	lsrs	r3, r3, #5
 8021794:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021798:	431a      	orrs	r2, r3
 802179a:	f8a9 2000 	strh.w	r2, [r9]
 802179e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80217a0:	f109 0902 	add.w	r9, r9, #2
 80217a4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80217a8:	441c      	add	r4, r3
 80217aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80217ac:	441e      	add	r6, r3
 80217ae:	e647      	b.n	8021440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80217b0:	2800      	cmp	r0, #0
 80217b2:	f43f aedf 	beq.w	8021574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80217b6:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80217ba:	9109      	str	r1, [sp, #36]	; 0x24
 80217bc:	0e09      	lsrs	r1, r1, #24
 80217be:	9112      	str	r1, [sp, #72]	; 0x48
 80217c0:	e6d8      	b.n	8021574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80217c2:	b01d      	add	sp, #116	; 0x74
 80217c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080217c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80217c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217cc:	b085      	sub	sp, #20
 80217ce:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80217d2:	9102      	str	r1, [sp, #8]
 80217d4:	2c00      	cmp	r4, #0
 80217d6:	fb04 7103 	mla	r1, r4, r3, r7
 80217da:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80217de:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80217e2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80217e6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80217ea:	f2c0 810c 	blt.w	8021a06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80217ee:	45a6      	cmp	lr, r4
 80217f0:	f340 8109 	ble.w	8021a06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80217f4:	2f00      	cmp	r7, #0
 80217f6:	f2c0 8104 	blt.w	8021a02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80217fa:	42bb      	cmp	r3, r7
 80217fc:	f340 8101 	ble.w	8021a02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021800:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021804:	1c7a      	adds	r2, r7, #1
 8021806:	f100 8101 	bmi.w	8021a0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802180a:	4293      	cmp	r3, r2
 802180c:	f340 80fe 	ble.w	8021a0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021810:	2e00      	cmp	r6, #0
 8021812:	f000 80fd 	beq.w	8021a10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8021816:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802181a:	3401      	adds	r4, #1
 802181c:	f100 80fc 	bmi.w	8021a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021820:	45a6      	cmp	lr, r4
 8021822:	f340 80f9 	ble.w	8021a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021826:	2800      	cmp	r0, #0
 8021828:	f000 80f9 	beq.w	8021a1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802182c:	2f00      	cmp	r7, #0
 802182e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8021832:	f2c0 80ef 	blt.w	8021a14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021836:	42bb      	cmp	r3, r7
 8021838:	f340 80ec 	ble.w	8021a14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802183c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021840:	3701      	adds	r7, #1
 8021842:	f100 80ef 	bmi.w	8021a24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021846:	42bb      	cmp	r3, r7
 8021848:	f340 80ec 	ble.w	8021a24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802184c:	2e00      	cmp	r6, #0
 802184e:	f000 80eb 	beq.w	8021a28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8021852:	6852      	ldr	r2, [r2, #4]
 8021854:	b2b6      	uxth	r6, r6
 8021856:	b280      	uxth	r0, r0
 8021858:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802185c:	fb00 fe06 	mul.w	lr, r0, r6
 8021860:	0136      	lsls	r6, r6, #4
 8021862:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021866:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802186a:	eba6 070e 	sub.w	r7, r6, lr
 802186e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021872:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021876:	b280      	uxth	r0, r0
 8021878:	b2bf      	uxth	r7, r7
 802187a:	1a1b      	subs	r3, r3, r0
 802187c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021880:	fb07 f60a 	mul.w	r6, r7, sl
 8021884:	b29b      	uxth	r3, r3
 8021886:	fb0b 6603 	mla	r6, fp, r3, r6
 802188a:	fb00 6609 	mla	r6, r0, r9, r6
 802188e:	fb0e 6608 	mla	r6, lr, r8, r6
 8021892:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021896:	9600      	str	r6, [sp, #0]
 8021898:	2e00      	cmp	r6, #0
 802189a:	f000 80af 	beq.w	80219fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802189e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80218a2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80218a6:	9e02      	ldr	r6, [sp, #8]
 80218a8:	fb0b fc0c 	mul.w	ip, fp, ip
 80218ac:	fb0b f505 	mul.w	r5, fp, r5
 80218b0:	8836      	ldrh	r6, [r6, #0]
 80218b2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80218b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80218ba:	9501      	str	r5, [sp, #4]
 80218bc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80218c0:	44dc      	add	ip, fp
 80218c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218c6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80218ca:	9503      	str	r5, [sp, #12]
 80218cc:	9d01      	ldr	r5, [sp, #4]
 80218ce:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80218d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80218d6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80218da:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80218de:	fb0a fc0c 	mul.w	ip, sl, ip
 80218e2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80218e6:	fb0a fa01 	mul.w	sl, sl, r1
 80218ea:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80218ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80218f2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80218f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80218fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80218fe:	4465      	add	r5, ip
 8021900:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021904:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021908:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802190c:	fb09 fc0c 	mul.w	ip, r9, ip
 8021910:	0a2d      	lsrs	r5, r5, #8
 8021912:	fb09 f904 	mul.w	r9, r9, r4
 8021916:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802191a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802191e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021922:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021926:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802192a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802192e:	437d      	muls	r5, r7
 8021930:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021934:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021938:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802193c:	4461      	add	r1, ip
 802193e:	fb08 f404 	mul.w	r4, r8, r4
 8021942:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021946:	fb08 f802 	mul.w	r8, r8, r2
 802194a:	0a09      	lsrs	r1, r1, #8
 802194c:	0a22      	lsrs	r2, r4, #8
 802194e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021952:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021956:	fb07 f70a 	mul.w	r7, r7, sl
 802195a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802195e:	4414      	add	r4, r2
 8021960:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021964:	0a24      	lsrs	r4, r4, #8
 8021966:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802196a:	9a03      	ldr	r2, [sp, #12]
 802196c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021970:	fb02 5503 	mla	r5, r2, r3, r5
 8021974:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021978:	fb04 540e 	mla	r4, r4, lr, r5
 802197c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021980:	fb01 4100 	mla	r1, r1, r0, r4
 8021984:	0a09      	lsrs	r1, r1, #8
 8021986:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802198a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802198e:	fb03 7101 	mla	r1, r3, r1, r7
 8021992:	9b00      	ldr	r3, [sp, #0]
 8021994:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021998:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802199c:	43da      	mvns	r2, r3
 802199e:	1233      	asrs	r3, r6, #8
 80219a0:	fb00 e101 	mla	r1, r0, r1, lr
 80219a4:	10f0      	asrs	r0, r6, #3
 80219a6:	b2d2      	uxtb	r2, r2
 80219a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80219ac:	0a09      	lsrs	r1, r1, #8
 80219ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80219b2:	00f6      	lsls	r6, r6, #3
 80219b4:	4353      	muls	r3, r2
 80219b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80219ba:	4350      	muls	r0, r2
 80219bc:	b2f6      	uxtb	r6, r6
 80219be:	4321      	orrs	r1, r4
 80219c0:	4356      	muls	r6, r2
 80219c2:	1c5a      	adds	r2, r3, #1
 80219c4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80219c8:	0c0b      	lsrs	r3, r1, #16
 80219ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80219ce:	1c42      	adds	r2, r0, #1
 80219d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80219d4:	0a0a      	lsrs	r2, r1, #8
 80219d6:	021b      	lsls	r3, r3, #8
 80219d8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80219dc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80219e0:	00d2      	lsls	r2, r2, #3
 80219e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80219e6:	4313      	orrs	r3, r2
 80219e8:	1c72      	adds	r2, r6, #1
 80219ea:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80219ee:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80219f2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80219f6:	4319      	orrs	r1, r3
 80219f8:	9b02      	ldr	r3, [sp, #8]
 80219fa:	8019      	strh	r1, [r3, #0]
 80219fc:	b005      	add	sp, #20
 80219fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a02:	2500      	movs	r5, #0
 8021a04:	e6fe      	b.n	8021804 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021a06:	2100      	movs	r1, #0
 8021a08:	460d      	mov	r5, r1
 8021a0a:	e706      	b.n	802181a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a0c:	2100      	movs	r1, #0
 8021a0e:	e704      	b.n	802181a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a10:	4631      	mov	r1, r6
 8021a12:	e702      	b.n	802181a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021a14:	2400      	movs	r4, #0
 8021a16:	e713      	b.n	8021840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021a18:	2200      	movs	r2, #0
 8021a1a:	4614      	mov	r4, r2
 8021a1c:	e71a      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a1e:	4602      	mov	r2, r0
 8021a20:	4604      	mov	r4, r0
 8021a22:	e717      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a24:	2200      	movs	r2, #0
 8021a26:	e715      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021a28:	4632      	mov	r2, r6
 8021a2a:	e713      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

08021a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a30:	b09b      	sub	sp, #108	; 0x6c
 8021a32:	9218      	str	r2, [sp, #96]	; 0x60
 8021a34:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021a36:	9019      	str	r0, [sp, #100]	; 0x64
 8021a38:	9116      	str	r1, [sp, #88]	; 0x58
 8021a3a:	6850      	ldr	r0, [r2, #4]
 8021a3c:	9307      	str	r3, [sp, #28]
 8021a3e:	6812      	ldr	r2, [r2, #0]
 8021a40:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021a44:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8021a48:	fb00 1303 	mla	r3, r0, r3, r1
 8021a4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a50:	930a      	str	r3, [sp, #40]	; 0x28
 8021a52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a54:	681b      	ldr	r3, [r3, #0]
 8021a56:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021a5a:	2b00      	cmp	r3, #0
 8021a5c:	dc03      	bgt.n	8021a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021a5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021a60:	2b00      	cmp	r3, #0
 8021a62:	f340 8387 	ble.w	8022174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8021a66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a70:	1e48      	subs	r0, r1, #1
 8021a72:	1e57      	subs	r7, r2, #1
 8021a74:	9b07      	ldr	r3, [sp, #28]
 8021a76:	2b00      	cmp	r3, #0
 8021a78:	f340 8166 	ble.w	8021d48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021a7c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021a80:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021a84:	d406      	bmi.n	8021a94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021a86:	4584      	cmp	ip, r0
 8021a88:	da04      	bge.n	8021a94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021a8a:	2b00      	cmp	r3, #0
 8021a8c:	db02      	blt.n	8021a94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021a8e:	42bb      	cmp	r3, r7
 8021a90:	f2c0 815b 	blt.w	8021d4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021a94:	f11c 0c01 	adds.w	ip, ip, #1
 8021a98:	f100 814b 	bmi.w	8021d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021a9c:	4561      	cmp	r1, ip
 8021a9e:	f2c0 8148 	blt.w	8021d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021aa2:	3301      	adds	r3, #1
 8021aa4:	f100 8145 	bmi.w	8021d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021aa8:	429a      	cmp	r2, r3
 8021aaa:	f2c0 8142 	blt.w	8021d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021aae:	9b07      	ldr	r3, [sp, #28]
 8021ab0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021ab2:	9317      	str	r3, [sp, #92]	; 0x5c
 8021ab4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021ab6:	2b00      	cmp	r3, #0
 8021ab8:	f340 8165 	ble.w	8021d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021abc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8021abe:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021ac2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021ac4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021ac8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021acc:	1422      	asrs	r2, r4, #16
 8021ace:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021ad2:	689b      	ldr	r3, [r3, #8]
 8021ad4:	f100 81d5 	bmi.w	8021e82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021ad8:	f103 38ff 	add.w	r8, r3, #4294967295
 8021adc:	4542      	cmp	r2, r8
 8021ade:	f280 81d0 	bge.w	8021e82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021ae2:	f1bc 0f00 	cmp.w	ip, #0
 8021ae6:	f2c0 81cc 	blt.w	8021e82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021aea:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021aee:	45c4      	cmp	ip, r8
 8021af0:	f280 81c7 	bge.w	8021e82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021af4:	b21b      	sxth	r3, r3
 8021af6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021af8:	fb0c 2203 	mla	r2, ip, r3, r2
 8021afc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021b00:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021b04:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021b08:	2900      	cmp	r1, #0
 8021b0a:	f000 8182 	beq.w	8021e12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021b0e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021b12:	950b      	str	r5, [sp, #44]	; 0x2c
 8021b14:	0e2d      	lsrs	r5, r5, #24
 8021b16:	9512      	str	r5, [sp, #72]	; 0x48
 8021b18:	b180      	cbz	r0, 8021b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021b1a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8021b1e:	3b01      	subs	r3, #1
 8021b20:	009b      	lsls	r3, r3, #2
 8021b22:	3304      	adds	r3, #4
 8021b24:	eb08 0c03 	add.w	ip, r8, r3
 8021b28:	f858 3003 	ldr.w	r3, [r8, r3]
 8021b2c:	9308      	str	r3, [sp, #32]
 8021b2e:	0e1b      	lsrs	r3, r3, #24
 8021b30:	9310      	str	r3, [sp, #64]	; 0x40
 8021b32:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021b36:	930c      	str	r3, [sp, #48]	; 0x30
 8021b38:	0e1b      	lsrs	r3, r3, #24
 8021b3a:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b3c:	b289      	uxth	r1, r1
 8021b3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021b40:	b280      	uxth	r0, r0
 8021b42:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021b44:	fb01 f900 	mul.w	r9, r1, r0
 8021b48:	0109      	lsls	r1, r1, #4
 8021b4a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021b4e:	eba1 0809 	sub.w	r8, r1, r9
 8021b52:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8021b56:	b280      	uxth	r0, r0
 8021b58:	fa1f f888 	uxth.w	r8, r8
 8021b5c:	1a09      	subs	r1, r1, r0
 8021b5e:	fb08 f303 	mul.w	r3, r8, r3
 8021b62:	b289      	uxth	r1, r1
 8021b64:	fb01 330e 	mla	r3, r1, lr, r3
 8021b68:	fb00 3305 	mla	r3, r0, r5, r3
 8021b6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021b6e:	fb09 3305 	mla	r3, r9, r5, r3
 8021b72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b76:	2b00      	cmp	r3, #0
 8021b78:	f000 80d2 	beq.w	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021b7c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021b80:	d01b      	beq.n	8021bba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8021b82:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8021b86:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021b8a:	fb0e fa0a 	mul.w	sl, lr, sl
 8021b8e:	fb0e fe02 	mul.w	lr, lr, r2
 8021b92:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021b96:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021b9a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021b9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021ba2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021ba6:	4452      	add	r2, sl
 8021ba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021bac:	0a12      	lsrs	r2, r2, #8
 8021bae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021bb2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021bb6:	ea42 020c 	orr.w	r2, r2, ip
 8021bba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021bbc:	2dff      	cmp	r5, #255	; 0xff
 8021bbe:	d021      	beq.n	8021c04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8021bc0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021bc2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021bc6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021bc8:	fb05 fb0b 	mul.w	fp, r5, fp
 8021bcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021bce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021bd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021bd4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021bd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021bdc:	fb05 fa0a 	mul.w	sl, r5, sl
 8021be0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021be4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021be8:	44de      	add	lr, fp
 8021bea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021bee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021bf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bf6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021bfe:	ea4e 050a 	orr.w	r5, lr, sl
 8021c02:	950b      	str	r5, [sp, #44]	; 0x2c
 8021c04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021c06:	2dff      	cmp	r5, #255	; 0xff
 8021c08:	d021      	beq.n	8021c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8021c0a:	9d08      	ldr	r5, [sp, #32]
 8021c0c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021c10:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021c12:	fb05 fb0b 	mul.w	fp, r5, fp
 8021c16:	9d08      	ldr	r5, [sp, #32]
 8021c18:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8021c1c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021c1e:	fb05 fa0e 	mul.w	sl, r5, lr
 8021c22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c26:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c2e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c32:	44de      	add	lr, fp
 8021c34:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c38:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c48:	ea4e 050a 	orr.w	r5, lr, sl
 8021c4c:	9508      	str	r5, [sp, #32]
 8021c4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021c50:	2dff      	cmp	r5, #255	; 0xff
 8021c52:	d021      	beq.n	8021c98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8021c54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021c56:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021c5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021c5c:	fb05 fb0b 	mul.w	fp, r5, fp
 8021c60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021c62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021c66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021c68:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c70:	fb05 fa0a 	mul.w	sl, r5, sl
 8021c74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c7c:	44de      	add	lr, fp
 8021c7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c92:	ea4e 050a 	orr.w	r5, lr, sl
 8021c96:	950c      	str	r5, [sp, #48]	; 0x30
 8021c98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021c9a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8021c9e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021ca2:	2bff      	cmp	r3, #255	; 0xff
 8021ca4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021ca8:	9d08      	ldr	r5, [sp, #32]
 8021caa:	fb08 fc0c 	mul.w	ip, r8, ip
 8021cae:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021cb2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021cb6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021cb8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021cbc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021cc0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021cc2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021cc6:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8021cca:	fb08 f80e 	mul.w	r8, r8, lr
 8021cce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021cd2:	fb01 8202 	mla	r2, r1, r2, r8
 8021cd6:	9908      	ldr	r1, [sp, #32]
 8021cd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021cdc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021ce0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021ce2:	fb00 220a 	mla	r2, r0, sl, r2
 8021ce6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8021cea:	fb09 2900 	mla	r9, r9, r0, r2
 8021cee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021cf2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021cf6:	ea4c 0c09 	orr.w	ip, ip, r9
 8021cfa:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8021cfe:	f040 8091 	bne.w	8021e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021d02:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021d06:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8021d0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d0e:	f022 0207 	bic.w	r2, r2, #7
 8021d12:	431a      	orrs	r2, r3
 8021d14:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021d18:	ea4c 0c02 	orr.w	ip, ip, r2
 8021d1c:	f8a7 c000 	strh.w	ip, [r7]
 8021d20:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021d22:	3702      	adds	r7, #2
 8021d24:	441c      	add	r4, r3
 8021d26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d28:	441e      	add	r6, r3
 8021d2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021d2c:	3b01      	subs	r3, #1
 8021d2e:	9317      	str	r3, [sp, #92]	; 0x5c
 8021d30:	e6c0      	b.n	8021ab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d32:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021d34:	441c      	add	r4, r3
 8021d36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d38:	441e      	add	r6, r3
 8021d3a:	9b07      	ldr	r3, [sp, #28]
 8021d3c:	3b01      	subs	r3, #1
 8021d3e:	9307      	str	r3, [sp, #28]
 8021d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d42:	3302      	adds	r3, #2
 8021d44:	930a      	str	r3, [sp, #40]	; 0x28
 8021d46:	e695      	b.n	8021a74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021d48:	d024      	beq.n	8021d94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021d4a:	9b07      	ldr	r3, [sp, #28]
 8021d4c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021d4e:	3b01      	subs	r3, #1
 8021d50:	fb00 4003 	mla	r0, r0, r3, r4
 8021d54:	1400      	asrs	r0, r0, #16
 8021d56:	f53f aeaa 	bmi.w	8021aae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d5a:	3901      	subs	r1, #1
 8021d5c:	4288      	cmp	r0, r1
 8021d5e:	f6bf aea6 	bge.w	8021aae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d62:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021d64:	fb01 6303 	mla	r3, r1, r3, r6
 8021d68:	141b      	asrs	r3, r3, #16
 8021d6a:	f53f aea0 	bmi.w	8021aae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d6e:	3a01      	subs	r2, #1
 8021d70:	4293      	cmp	r3, r2
 8021d72:	f6bf ae9c 	bge.w	8021aae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021d76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021d7a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8021d7e:	f1bb 0f00 	cmp.w	fp, #0
 8021d82:	f300 809a 	bgt.w	8021eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021d86:	9b07      	ldr	r3, [sp, #28]
 8021d88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d8e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021d92:	930a      	str	r3, [sp, #40]	; 0x28
 8021d94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021d96:	2b00      	cmp	r3, #0
 8021d98:	f340 81ec 	ble.w	8022174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8021d9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021da0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021da2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021da6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021daa:	eef0 6a62 	vmov.f32	s13, s5
 8021dae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021db2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021db6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dba:	ee16 4a90 	vmov	r4, s13
 8021dbe:	eef0 6a43 	vmov.f32	s13, s6
 8021dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dc6:	ee16 6a90 	vmov	r6, s13
 8021dca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021dce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021dd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021dd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021dda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021dde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021de2:	ee12 2a90 	vmov	r2, s5
 8021de6:	eef0 2a47 	vmov.f32	s5, s14
 8021dea:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dee:	ee13 2a10 	vmov	r2, s6
 8021df2:	9327      	str	r3, [sp, #156]	; 0x9c
 8021df4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021df6:	eeb0 3a67 	vmov.f32	s6, s15
 8021dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dfe:	9328      	str	r3, [sp, #160]	; 0xa0
 8021e00:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021e02:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021e04:	3b01      	subs	r3, #1
 8021e06:	9316      	str	r3, [sp, #88]	; 0x58
 8021e08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e0a:	bf08      	it	eq
 8021e0c:	4613      	moveq	r3, r2
 8021e0e:	9307      	str	r3, [sp, #28]
 8021e10:	e622      	b.n	8021a58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8021e12:	2800      	cmp	r0, #0
 8021e14:	f43f ae92 	beq.w	8021b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021e18:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021e1c:	9308      	str	r3, [sp, #32]
 8021e1e:	0e1b      	lsrs	r3, r3, #24
 8021e20:	9310      	str	r3, [sp, #64]	; 0x40
 8021e22:	e68b      	b.n	8021b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021e24:	8839      	ldrh	r1, [r7, #0]
 8021e26:	43db      	mvns	r3, r3
 8021e28:	4dd4      	ldr	r5, [pc, #848]	; (802217c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8021e2a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8021e2e:	fa5f f883 	uxtb.w	r8, r3
 8021e32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8021e36:	10c8      	asrs	r0, r1, #3
 8021e38:	00cb      	lsls	r3, r1, #3
 8021e3a:	fb0e fe08 	mul.w	lr, lr, r8
 8021e3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e42:	b2db      	uxtb	r3, r3
 8021e44:	f10e 0101 	add.w	r1, lr, #1
 8021e48:	fb00 f008 	mul.w	r0, r0, r8
 8021e4c:	fb03 f308 	mul.w	r3, r3, r8
 8021e50:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8021e54:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8021e58:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8021e5c:	f100 0e01 	add.w	lr, r0, #1
 8021e60:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8021e64:	b2c9      	uxtb	r1, r1
 8021e66:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021e6a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8021e6e:	00d2      	lsls	r2, r2, #3
 8021e70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e74:	430a      	orrs	r2, r1
 8021e76:	1c59      	adds	r1, r3, #1
 8021e78:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021e7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021e80:	e748      	b.n	8021d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021e82:	f112 0801 	adds.w	r8, r2, #1
 8021e86:	f53f af4b 	bmi.w	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021e8a:	4543      	cmp	r3, r8
 8021e8c:	f6ff af48 	blt.w	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021e90:	f11c 0801 	adds.w	r8, ip, #1
 8021e94:	f53f af44 	bmi.w	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021e98:	45c6      	cmp	lr, r8
 8021e9a:	f6ff af41 	blt.w	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021e9e:	b21b      	sxth	r3, r3
 8021ea0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8021ea4:	fa0f f28e 	sxth.w	r2, lr
 8021ea8:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8021eac:	9200      	str	r2, [sp, #0]
 8021eae:	4639      	mov	r1, r7
 8021eb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021eb2:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021eb4:	f7ff fc88 	bl	80217c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8021eb8:	e732      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021eba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021ebc:	1421      	asrs	r1, r4, #16
 8021ebe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021ec0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021ec4:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021ec8:	1433      	asrs	r3, r6, #16
 8021eca:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021ece:	fb07 1303 	mla	r3, r7, r3, r1
 8021ed2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021ed4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021ed8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021edc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021ee0:	2a00      	cmp	r2, #0
 8021ee2:	f000 8108 	beq.w	80220f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8021ee6:	684d      	ldr	r5, [r1, #4]
 8021ee8:	950d      	str	r5, [sp, #52]	; 0x34
 8021eea:	0e2d      	lsrs	r5, r5, #24
 8021eec:	9514      	str	r5, [sp, #80]	; 0x50
 8021eee:	b178      	cbz	r0, 8021f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021ef0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8021ef4:	3f01      	subs	r7, #1
 8021ef6:	00bf      	lsls	r7, r7, #2
 8021ef8:	3704      	adds	r7, #4
 8021efa:	eb01 0e07 	add.w	lr, r1, r7
 8021efe:	59c9      	ldr	r1, [r1, r7]
 8021f00:	9109      	str	r1, [sp, #36]	; 0x24
 8021f02:	0e09      	lsrs	r1, r1, #24
 8021f04:	9111      	str	r1, [sp, #68]	; 0x44
 8021f06:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021f0a:	910e      	str	r1, [sp, #56]	; 0x38
 8021f0c:	0e09      	lsrs	r1, r1, #24
 8021f0e:	9115      	str	r1, [sp, #84]	; 0x54
 8021f10:	b292      	uxth	r2, r2
 8021f12:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021f14:	b280      	uxth	r0, r0
 8021f16:	fb02 f900 	mul.w	r9, r2, r0
 8021f1a:	0112      	lsls	r2, r2, #4
 8021f1c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021f20:	eba2 0e09 	sub.w	lr, r2, r9
 8021f24:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021f28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021f2a:	b280      	uxth	r0, r0
 8021f2c:	fa1f fe8e 	uxth.w	lr, lr
 8021f30:	1a09      	subs	r1, r1, r0
 8021f32:	fb0e f202 	mul.w	r2, lr, r2
 8021f36:	b289      	uxth	r1, r1
 8021f38:	fb01 220c 	mla	r2, r1, ip, r2
 8021f3c:	fb00 2205 	mla	r2, r0, r5, r2
 8021f40:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021f42:	fb09 2205 	mla	r2, r9, r5, r2
 8021f46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021f4a:	2a00      	cmp	r2, #0
 8021f4c:	f000 80ca 	beq.w	80220e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8021f50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021f54:	d019      	beq.n	8021f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8021f56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021f5a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021f5e:	fb0c fa0a 	mul.w	sl, ip, sl
 8021f62:	fb0c fc03 	mul.w	ip, ip, r3
 8021f66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021f6a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021f6e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021f72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f76:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021f7a:	4453      	add	r3, sl
 8021f7c:	0a3f      	lsrs	r7, r7, #8
 8021f7e:	0a1b      	lsrs	r3, r3, #8
 8021f80:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021f84:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f88:	433b      	orrs	r3, r7
 8021f8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021f8c:	2dff      	cmp	r5, #255	; 0xff
 8021f8e:	d020      	beq.n	8021fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8021f90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021f92:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021f96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021f98:	436f      	muls	r7, r5
 8021f9a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021f9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021fa0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021fa4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021fa6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021faa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fae:	fb05 fa0a 	mul.w	sl, r5, sl
 8021fb2:	44bc      	add	ip, r7
 8021fb4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021fb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021fc0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fcc:	ea4c 050a 	orr.w	r5, ip, sl
 8021fd0:	950d      	str	r5, [sp, #52]	; 0x34
 8021fd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021fd4:	2dff      	cmp	r5, #255	; 0xff
 8021fd6:	d020      	beq.n	802201a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8021fd8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021fda:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021fde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021fe0:	436f      	muls	r7, r5
 8021fe2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021fe4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021fe8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021fea:	fb05 fa0c 	mul.w	sl, r5, ip
 8021fee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ff2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021ff6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ffa:	44bc      	add	ip, r7
 8021ffc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022000:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802200c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022014:	ea4c 050a 	orr.w	r5, ip, sl
 8022018:	9509      	str	r5, [sp, #36]	; 0x24
 802201a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802201c:	2dff      	cmp	r5, #255	; 0xff
 802201e:	d020      	beq.n	8022062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8022020:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022022:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022026:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022028:	436f      	muls	r7, r5
 802202a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802202c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022030:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022034:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022036:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802203a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802203e:	fb05 fa0a 	mul.w	sl, r5, sl
 8022042:	44bc      	add	ip, r7
 8022044:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022048:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802204c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022050:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022054:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022058:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802205c:	ea4c 050a 	orr.w	r5, ip, sl
 8022060:	950e      	str	r5, [sp, #56]	; 0x38
 8022062:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022064:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022068:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802206c:	2aff      	cmp	r2, #255	; 0xff
 802206e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022072:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022074:	fb0e f707 	mul.w	r7, lr, r7
 8022078:	fb01 770c 	mla	r7, r1, ip, r7
 802207c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022080:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022082:	fb00 770c 	mla	r7, r0, ip, r7
 8022086:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802208a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802208c:	fb09 770c 	mla	r7, r9, ip, r7
 8022090:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022094:	fb0e fe0c 	mul.w	lr, lr, ip
 8022098:	ea4f 2717 	mov.w	r7, r7, lsr #8
 802209c:	fb01 e303 	mla	r3, r1, r3, lr
 80220a0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80220a2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80220a6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80220aa:	990e      	ldr	r1, [sp, #56]	; 0x38
 80220ac:	fb00 330a 	mla	r3, r0, sl, r3
 80220b0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80220b4:	fb09 3c0c 	mla	ip, r9, ip, r3
 80220b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220bc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80220c0:	ea47 070c 	orr.w	r7, r7, ip
 80220c4:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80220c8:	d11e      	bne.n	8022108 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 80220ca:	097a      	lsrs	r2, r7, #5
 80220cc:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80220d0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80220d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80220d8:	f023 0307 	bic.w	r3, r3, #7
 80220dc:	4313      	orrs	r3, r2
 80220de:	431f      	orrs	r7, r3
 80220e0:	f8a8 7000 	strh.w	r7, [r8]
 80220e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80220e6:	f108 0802 	add.w	r8, r8, #2
 80220ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80220ee:	441c      	add	r4, r3
 80220f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80220f2:	441e      	add	r6, r3
 80220f4:	e643      	b.n	8021d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80220f6:	2800      	cmp	r0, #0
 80220f8:	f43f af0a 	beq.w	8021f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80220fc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022100:	9109      	str	r1, [sp, #36]	; 0x24
 8022102:	0e09      	lsrs	r1, r1, #24
 8022104:	9111      	str	r1, [sp, #68]	; 0x44
 8022106:	e703      	b.n	8021f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022108:	f8b8 1000 	ldrh.w	r1, [r8]
 802210c:	43d2      	mvns	r2, r2
 802210e:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8022112:	fa5f fe82 	uxtb.w	lr, r2
 8022116:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802211a:	10c8      	asrs	r0, r1, #3
 802211c:	00ca      	lsls	r2, r1, #3
 802211e:	fb0c fc0e 	mul.w	ip, ip, lr
 8022122:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022126:	b2d2      	uxtb	r2, r2
 8022128:	f10c 0101 	add.w	r1, ip, #1
 802212c:	fb00 f00e 	mul.w	r0, r0, lr
 8022130:	fb02 f20e 	mul.w	r2, r2, lr
 8022134:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022138:	0c39      	lsrs	r1, r7, #16
 802213a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802213e:	490f      	ldr	r1, [pc, #60]	; (802217c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8022140:	fa5f fc8c 	uxtb.w	ip, ip
 8022144:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8022148:	1c41      	adds	r1, r0, #1
 802214a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802214e:	1c51      	adds	r1, r2, #1
 8022150:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022154:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022158:	00c0      	lsls	r0, r0, #3
 802215a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802215e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022162:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022166:	ea4c 0c00 	orr.w	ip, ip, r0
 802216a:	ea47 0c0c 	orr.w	ip, r7, ip
 802216e:	f8a8 c000 	strh.w	ip, [r8]
 8022172:	e7b7      	b.n	80220e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8022174:	b01b      	add	sp, #108	; 0x6c
 8022176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802217a:	bf00      	nop
 802217c:	fffff800 	.word	0xfffff800

08022180 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022184:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8022188:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802218c:	2d00      	cmp	r5, #0
 802218e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8022192:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022196:	fb05 0e03 	mla	lr, r5, r3, r0
 802219a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802219e:	f2c0 808c 	blt.w	80222ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80221a2:	45a9      	cmp	r9, r5
 80221a4:	f340 8089 	ble.w	80222ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80221a8:	2800      	cmp	r0, #0
 80221aa:	f2c0 8084 	blt.w	80222b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80221ae:	4580      	cmp	r8, r0
 80221b0:	f340 8081 	ble.w	80222b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80221b4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80221b8:	f01e 0f01 	tst.w	lr, #1
 80221bc:	5d16      	ldrb	r6, [r2, r4]
 80221be:	bf0c      	ite	eq
 80221c0:	f006 060f 	andeq.w	r6, r6, #15
 80221c4:	1136      	asrne	r6, r6, #4
 80221c6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80221ca:	b2f6      	uxtb	r6, r6
 80221cc:	1c44      	adds	r4, r0, #1
 80221ce:	d477      	bmi.n	80222c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80221d0:	45a0      	cmp	r8, r4
 80221d2:	dd75      	ble.n	80222c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80221d4:	2f00      	cmp	r7, #0
 80221d6:	d075      	beq.n	80222c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80221d8:	f10e 0a01 	add.w	sl, lr, #1
 80221dc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80221e0:	f01a 0f01 	tst.w	sl, #1
 80221e4:	5d14      	ldrb	r4, [r2, r4]
 80221e6:	bf0c      	ite	eq
 80221e8:	f004 040f 	andeq.w	r4, r4, #15
 80221ec:	1124      	asrne	r4, r4, #4
 80221ee:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80221f2:	b2e4      	uxtb	r4, r4
 80221f4:	3501      	adds	r5, #1
 80221f6:	d469      	bmi.n	80222cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80221f8:	45a9      	cmp	r9, r5
 80221fa:	dd67      	ble.n	80222cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80221fc:	f1bc 0f00 	cmp.w	ip, #0
 8022200:	d067      	beq.n	80222d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8022202:	2800      	cmp	r0, #0
 8022204:	db60      	blt.n	80222c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8022206:	4580      	cmp	r8, r0
 8022208:	dd5e      	ble.n	80222c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802220a:	eb03 090e 	add.w	r9, r3, lr
 802220e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022212:	f019 0f01 	tst.w	r9, #1
 8022216:	5d55      	ldrb	r5, [r2, r5]
 8022218:	bf0c      	ite	eq
 802221a:	f005 050f 	andeq.w	r5, r5, #15
 802221e:	112d      	asrne	r5, r5, #4
 8022220:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022224:	b2ed      	uxtb	r5, r5
 8022226:	3001      	adds	r0, #1
 8022228:	d456      	bmi.n	80222d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802222a:	4580      	cmp	r8, r0
 802222c:	dd54      	ble.n	80222d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802222e:	2f00      	cmp	r7, #0
 8022230:	d054      	beq.n	80222dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8022232:	3301      	adds	r3, #1
 8022234:	449e      	add	lr, r3
 8022236:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802223a:	f01e 0f01 	tst.w	lr, #1
 802223e:	5cd0      	ldrb	r0, [r2, r3]
 8022240:	bf0c      	ite	eq
 8022242:	f000 000f 	andeq.w	r0, r0, #15
 8022246:	1100      	asrne	r0, r0, #4
 8022248:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802224c:	b2c3      	uxtb	r3, r0
 802224e:	b2ba      	uxth	r2, r7
 8022250:	fa1f fc8c 	uxth.w	ip, ip
 8022254:	fb02 f00c 	mul.w	r0, r2, ip
 8022258:	0112      	lsls	r2, r2, #4
 802225a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802225e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8022262:	1a12      	subs	r2, r2, r0
 8022264:	fa1f fc8c 	uxth.w	ip, ip
 8022268:	b292      	uxth	r2, r2
 802226a:	eba7 070c 	sub.w	r7, r7, ip
 802226e:	4362      	muls	r2, r4
 8022270:	b2bf      	uxth	r7, r7
 8022272:	fb06 2207 	mla	r2, r6, r7, r2
 8022276:	fb0c 2505 	mla	r5, ip, r5, r2
 802227a:	fb00 5303 	mla	r3, r0, r3, r5
 802227e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022282:	b1b3      	cbz	r3, 80222b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022284:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8022288:	435a      	muls	r2, r3
 802228a:	1c53      	adds	r3, r2, #1
 802228c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022290:	4a2d      	ldr	r2, [pc, #180]	; (8022348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8022292:	121b      	asrs	r3, r3, #8
 8022294:	6812      	ldr	r2, [r2, #0]
 8022296:	2bff      	cmp	r3, #255	; 0xff
 8022298:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802229c:	d120      	bne.n	80222e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802229e:	0950      	lsrs	r0, r2, #5
 80222a0:	4b2a      	ldr	r3, [pc, #168]	; (802234c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80222a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80222a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222aa:	4033      	ands	r3, r6
 80222ac:	4318      	orrs	r0, r3
 80222ae:	4302      	orrs	r2, r0
 80222b0:	800a      	strh	r2, [r1, #0]
 80222b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80222b6:	2600      	movs	r6, #0
 80222b8:	e788      	b.n	80221cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80222ba:	2400      	movs	r4, #0
 80222bc:	4626      	mov	r6, r4
 80222be:	e799      	b.n	80221f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222c0:	2400      	movs	r4, #0
 80222c2:	e797      	b.n	80221f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222c4:	463c      	mov	r4, r7
 80222c6:	e795      	b.n	80221f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80222c8:	2500      	movs	r5, #0
 80222ca:	e7ac      	b.n	8022226 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80222cc:	2300      	movs	r3, #0
 80222ce:	461d      	mov	r5, r3
 80222d0:	e7bd      	b.n	802224e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222d2:	4663      	mov	r3, ip
 80222d4:	4665      	mov	r5, ip
 80222d6:	e7ba      	b.n	802224e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222d8:	2300      	movs	r3, #0
 80222da:	e7b8      	b.n	802224e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222dc:	463b      	mov	r3, r7
 80222de:	e7b6      	b.n	802224e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80222e0:	880d      	ldrh	r5, [r1, #0]
 80222e2:	b29f      	uxth	r7, r3
 80222e4:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80222e8:	43db      	mvns	r3, r3
 80222ea:	122c      	asrs	r4, r5, #8
 80222ec:	fb10 f007 	smulbb	r0, r0, r7
 80222f0:	b2db      	uxtb	r3, r3
 80222f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80222f6:	b2f6      	uxtb	r6, r6
 80222f8:	b2d2      	uxtb	r2, r2
 80222fa:	fb04 0403 	mla	r4, r4, r3, r0
 80222fe:	10e8      	asrs	r0, r5, #3
 8022300:	fb12 f207 	smulbb	r2, r2, r7
 8022304:	00ed      	lsls	r5, r5, #3
 8022306:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802230a:	b2a4      	uxth	r4, r4
 802230c:	fb16 f607 	smulbb	r6, r6, r7
 8022310:	b2ed      	uxtb	r5, r5
 8022312:	fb00 6603 	mla	r6, r0, r3, r6
 8022316:	fb05 2303 	mla	r3, r5, r3, r2
 802231a:	b2b0      	uxth	r0, r6
 802231c:	b29a      	uxth	r2, r3
 802231e:	1c63      	adds	r3, r4, #1
 8022320:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022324:	1c53      	adds	r3, r2, #1
 8022326:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802232a:	1c42      	adds	r2, r0, #1
 802232c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022330:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022334:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022338:	0940      	lsrs	r0, r0, #5
 802233a:	4323      	orrs	r3, r4
 802233c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022340:	4303      	orrs	r3, r0
 8022342:	800b      	strh	r3, [r1, #0]
 8022344:	e7b5      	b.n	80222b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022346:	bf00      	nop
 8022348:	240016b8 	.word	0x240016b8
 802234c:	00fff800 	.word	0x00fff800

08022350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022354:	b097      	sub	sp, #92	; 0x5c
 8022356:	9214      	str	r2, [sp, #80]	; 0x50
 8022358:	9309      	str	r3, [sp, #36]	; 0x24
 802235a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802235c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022360:	9015      	str	r0, [sp, #84]	; 0x54
 8022362:	910d      	str	r1, [sp, #52]	; 0x34
 8022364:	6850      	ldr	r0, [r2, #4]
 8022366:	930f      	str	r3, [sp, #60]	; 0x3c
 8022368:	6812      	ldr	r2, [r2, #0]
 802236a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802236e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8022372:	fb00 1303 	mla	r3, r0, r3, r1
 8022376:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802237a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802237c:	689b      	ldr	r3, [r3, #8]
 802237e:	3301      	adds	r3, #1
 8022380:	f023 0301 	bic.w	r3, r3, #1
 8022384:	930a      	str	r3, [sp, #40]	; 0x28
 8022386:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022388:	681f      	ldr	r7, [r3, #0]
 802238a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802238c:	2b00      	cmp	r3, #0
 802238e:	dc03      	bgt.n	8022398 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022390:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022392:	2b00      	cmp	r3, #0
 8022394:	f340 8289 	ble.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8022398:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802239a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802239e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223a2:	1e48      	subs	r0, r1, #1
 80223a4:	f102 3cff 	add.w	ip, r2, #4294967295
 80223a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223aa:	2b00      	cmp	r3, #0
 80223ac:	f340 80c5 	ble.w	802253a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80223b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80223b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80223b8:	d406      	bmi.n	80223c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223ba:	4586      	cmp	lr, r0
 80223bc:	da04      	bge.n	80223c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223be:	2b00      	cmp	r3, #0
 80223c0:	db02      	blt.n	80223c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80223c2:	4563      	cmp	r3, ip
 80223c4:	f2c0 80ba 	blt.w	802253c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80223c8:	f11e 0e01 	adds.w	lr, lr, #1
 80223cc:	f100 80ab 	bmi.w	8022526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80223d0:	4571      	cmp	r1, lr
 80223d2:	f2c0 80a8 	blt.w	8022526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80223d6:	3301      	adds	r3, #1
 80223d8:	f100 80a5 	bmi.w	8022526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80223dc:	429a      	cmp	r2, r3
 80223de:	f2c0 80a2 	blt.w	8022526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80223e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223e4:	46c8      	mov	r8, r9
 80223e6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80223ea:	930e      	str	r3, [sp, #56]	; 0x38
 80223ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80223ee:	2b00      	cmp	r3, #0
 80223f0:	f340 80c4 	ble.w	802257c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80223f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80223f6:	1430      	asrs	r0, r6, #16
 80223f8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80223fc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022400:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022404:	1423      	asrs	r3, r4, #16
 8022406:	f100 814f 	bmi.w	80226a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802240a:	f10c 3bff 	add.w	fp, ip, #4294967295
 802240e:	455b      	cmp	r3, fp
 8022410:	f280 814a 	bge.w	80226a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8022414:	2800      	cmp	r0, #0
 8022416:	f2c0 8147 	blt.w	80226a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802241a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802241e:	4558      	cmp	r0, fp
 8022420:	f280 8142 	bge.w	80226a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8022424:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8022426:	fb00 3305 	mla	r3, r0, r5, r3
 802242a:	0858      	lsrs	r0, r3, #1
 802242c:	07dd      	lsls	r5, r3, #31
 802242e:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022432:	bf54      	ite	pl
 8022434:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022438:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802243c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022440:	fa5f fc8c 	uxtb.w	ip, ip
 8022444:	2a00      	cmp	r2, #0
 8022446:	f000 80dd 	beq.w	8022604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 802244a:	1c58      	adds	r0, r3, #1
 802244c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022450:	07c0      	lsls	r0, r0, #31
 8022452:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022456:	bf54      	ite	pl
 8022458:	f00e 0e0f 	andpl.w	lr, lr, #15
 802245c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022460:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022464:	fa5f f08e 	uxtb.w	r0, lr
 8022468:	9010      	str	r0, [sp, #64]	; 0x40
 802246a:	b1d9      	cbz	r1, 80224a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802246c:	4453      	add	r3, sl
 802246e:	0858      	lsrs	r0, r3, #1
 8022470:	07dd      	lsls	r5, r3, #31
 8022472:	f103 0301 	add.w	r3, r3, #1
 8022476:	5c38      	ldrb	r0, [r7, r0]
 8022478:	bf54      	ite	pl
 802247a:	f000 000f 	andpl.w	r0, r0, #15
 802247e:	1100      	asrmi	r0, r0, #4
 8022480:	07dd      	lsls	r5, r3, #31
 8022482:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022486:	b2c0      	uxtb	r0, r0
 8022488:	900b      	str	r0, [sp, #44]	; 0x2c
 802248a:	ea4f 0053 	mov.w	r0, r3, lsr #1
 802248e:	f817 e000 	ldrb.w	lr, [r7, r0]
 8022492:	bf54      	ite	pl
 8022494:	f00e 030f 	andpl.w	r3, lr, #15
 8022498:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802249c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80224a0:	b2db      	uxtb	r3, r3
 80224a2:	9311      	str	r3, [sp, #68]	; 0x44
 80224a4:	b292      	uxth	r2, r2
 80224a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80224a8:	b289      	uxth	r1, r1
 80224aa:	fb02 f301 	mul.w	r3, r2, r1
 80224ae:	0112      	lsls	r2, r2, #4
 80224b0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80224b4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80224b8:	1ad2      	subs	r2, r2, r3
 80224ba:	b289      	uxth	r1, r1
 80224bc:	b292      	uxth	r2, r2
 80224be:	1a40      	subs	r0, r0, r1
 80224c0:	436a      	muls	r2, r5
 80224c2:	b280      	uxth	r0, r0
 80224c4:	fb0c 2c00 	mla	ip, ip, r0, r2
 80224c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80224ca:	fb01 c102 	mla	r1, r1, r2, ip
 80224ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80224d0:	fb03 1302 	mla	r3, r3, r2, r1
 80224d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80224d8:	b1db      	cbz	r3, 8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80224da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80224dc:	4353      	muls	r3, r2
 80224de:	1c5a      	adds	r2, r3, #1
 80224e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80224e4:	4ac6      	ldr	r2, [pc, #792]	; (8022800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80224e6:	121b      	asrs	r3, r3, #8
 80224e8:	6812      	ldr	r2, [r2, #0]
 80224ea:	2bff      	cmp	r3, #255	; 0xff
 80224ec:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80224f0:	f040 8099 	bne.w	8022626 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80224f4:	0953      	lsrs	r3, r2, #5
 80224f6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80224fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80224fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022502:	f02c 0c07 	bic.w	ip, ip, #7
 8022506:	ea43 0c0c 	orr.w	ip, r3, ip
 802250a:	ea4c 0202 	orr.w	r2, ip, r2
 802250e:	f8a8 2000 	strh.w	r2, [r8]
 8022512:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022514:	f108 0802 	add.w	r8, r8, #2
 8022518:	441c      	add	r4, r3
 802251a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802251c:	441e      	add	r6, r3
 802251e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022520:	3b01      	subs	r3, #1
 8022522:	930e      	str	r3, [sp, #56]	; 0x38
 8022524:	e762      	b.n	80223ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022526:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022528:	f109 0902 	add.w	r9, r9, #2
 802252c:	441c      	add	r4, r3
 802252e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022530:	441e      	add	r6, r3
 8022532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022534:	3b01      	subs	r3, #1
 8022536:	9309      	str	r3, [sp, #36]	; 0x24
 8022538:	e736      	b.n	80223a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802253a:	d024      	beq.n	8022586 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802253c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802253e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022540:	3b01      	subs	r3, #1
 8022542:	fb00 4003 	mla	r0, r0, r3, r4
 8022546:	1400      	asrs	r0, r0, #16
 8022548:	f53f af4b 	bmi.w	80223e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802254c:	3901      	subs	r1, #1
 802254e:	4288      	cmp	r0, r1
 8022550:	f6bf af47 	bge.w	80223e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022554:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022556:	fb01 6303 	mla	r3, r1, r3, r6
 802255a:	141b      	asrs	r3, r3, #16
 802255c:	f53f af41 	bmi.w	80223e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022560:	3a01      	subs	r2, #1
 8022562:	4293      	cmp	r3, r2
 8022564:	f6bf af3d 	bge.w	80223e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022568:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802256c:	46c8      	mov	r8, r9
 802256e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022572:	930e      	str	r3, [sp, #56]	; 0x38
 8022574:	f1bb 0f00 	cmp.w	fp, #0
 8022578:	f300 80b7 	bgt.w	80226ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 802257c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802257e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022582:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022586:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022588:	2b00      	cmp	r3, #0
 802258a:	f340 818e 	ble.w	80228aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802258e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022592:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022594:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022598:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802259c:	eef0 6a62 	vmov.f32	s13, s5
 80225a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225ac:	ee16 4a90 	vmov	r4, s13
 80225b0:	eef0 6a43 	vmov.f32	s13, s6
 80225b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225b8:	ee16 6a90 	vmov	r6, s13
 80225bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225d4:	ee12 2a90 	vmov	r2, s5
 80225d8:	eef0 2a47 	vmov.f32	s5, s14
 80225dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80225e0:	ee13 2a10 	vmov	r2, s6
 80225e4:	9323      	str	r3, [sp, #140]	; 0x8c
 80225e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225e8:	eeb0 3a67 	vmov.f32	s6, s15
 80225ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80225f0:	9324      	str	r3, [sp, #144]	; 0x90
 80225f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80225f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80225f6:	3b01      	subs	r3, #1
 80225f8:	930d      	str	r3, [sp, #52]	; 0x34
 80225fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225fc:	bf08      	it	eq
 80225fe:	4613      	moveq	r3, r2
 8022600:	9309      	str	r3, [sp, #36]	; 0x24
 8022602:	e6c2      	b.n	802238a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022604:	2900      	cmp	r1, #0
 8022606:	f43f af4d 	beq.w	80224a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802260a:	eb0a 0003 	add.w	r0, sl, r3
 802260e:	0843      	lsrs	r3, r0, #1
 8022610:	07c0      	lsls	r0, r0, #31
 8022612:	5cfb      	ldrb	r3, [r7, r3]
 8022614:	bf54      	ite	pl
 8022616:	f003 030f 	andpl.w	r3, r3, #15
 802261a:	111b      	asrmi	r3, r3, #4
 802261c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022620:	b2db      	uxtb	r3, r3
 8022622:	930b      	str	r3, [sp, #44]	; 0x2c
 8022624:	e73e      	b.n	80224a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8022626:	f8b8 e000 	ldrh.w	lr, [r8]
 802262a:	fa1f fb83 	uxth.w	fp, r3
 802262e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022632:	43db      	mvns	r3, r3
 8022634:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022638:	fb11 f10b 	smulbb	r1, r1, fp
 802263c:	b2db      	uxtb	r3, r3
 802263e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022642:	fa5f fc8c 	uxtb.w	ip, ip
 8022646:	b2d2      	uxtb	r2, r2
 8022648:	fb00 1003 	mla	r0, r0, r3, r1
 802264c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022650:	fb1c fc0b 	smulbb	ip, ip, fp
 8022654:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022658:	b280      	uxth	r0, r0
 802265a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802265e:	fb12 fb0b 	smulbb	fp, r2, fp
 8022662:	fa5f fe8e 	uxtb.w	lr, lr
 8022666:	fb01 cc03 	mla	ip, r1, r3, ip
 802266a:	fb0e bb03 	mla	fp, lr, r3, fp
 802266e:	1c43      	adds	r3, r0, #1
 8022670:	fa1f fc8c 	uxth.w	ip, ip
 8022674:	fa1f fb8b 	uxth.w	fp, fp
 8022678:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802267c:	f10c 0101 	add.w	r1, ip, #1
 8022680:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8022684:	f10b 0001 	add.w	r0, fp, #1
 8022688:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802268c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022690:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022694:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022698:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802269c:	4318      	orrs	r0, r3
 802269e:	ea40 000c 	orr.w	r0, r0, ip
 80226a2:	f8a8 0000 	strh.w	r0, [r8]
 80226a6:	e734      	b.n	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226a8:	f113 0b01 	adds.w	fp, r3, #1
 80226ac:	f53f af31 	bmi.w	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226b0:	45dc      	cmp	ip, fp
 80226b2:	f6ff af2e 	blt.w	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226b6:	f110 0b01 	adds.w	fp, r0, #1
 80226ba:	f53f af2a 	bmi.w	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226be:	45de      	cmp	lr, fp
 80226c0:	f6ff af27 	blt.w	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226c4:	9302      	str	r3, [sp, #8]
 80226c6:	fa0f f38e 	sxth.w	r3, lr
 80226ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80226cc:	9301      	str	r3, [sp, #4]
 80226ce:	fa0f f38c 	sxth.w	r3, ip
 80226d2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80226d6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80226da:	9300      	str	r3, [sp, #0]
 80226dc:	463a      	mov	r2, r7
 80226de:	4653      	mov	r3, sl
 80226e0:	4641      	mov	r1, r8
 80226e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80226e4:	f7ff fd4c 	bl	8022180 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80226e8:	e713      	b.n	8022512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80226ea:	1422      	asrs	r2, r4, #16
 80226ec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80226ee:	1433      	asrs	r3, r6, #16
 80226f0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80226f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80226f8:	fb05 2303 	mla	r3, r5, r3, r2
 80226fc:	085a      	lsrs	r2, r3, #1
 80226fe:	07dd      	lsls	r5, r3, #31
 8022700:	5cba      	ldrb	r2, [r7, r2]
 8022702:	bf54      	ite	pl
 8022704:	f002 020f 	andpl.w	r2, r2, #15
 8022708:	1112      	asrmi	r2, r2, #4
 802270a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802270e:	b2d2      	uxtb	r2, r2
 8022710:	2900      	cmp	r1, #0
 8022712:	d077      	beq.n	8022804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022714:	f103 0e01 	add.w	lr, r3, #1
 8022718:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802271c:	f01e 0f01 	tst.w	lr, #1
 8022720:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022724:	bf0c      	ite	eq
 8022726:	f00c 0c0f 	andeq.w	ip, ip, #15
 802272a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802272e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022732:	fa5f f58c 	uxtb.w	r5, ip
 8022736:	9512      	str	r5, [sp, #72]	; 0x48
 8022738:	b308      	cbz	r0, 802277e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802273a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802273c:	442b      	add	r3, r5
 802273e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022742:	07dd      	lsls	r5, r3, #31
 8022744:	f103 0301 	add.w	r3, r3, #1
 8022748:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802274c:	bf54      	ite	pl
 802274e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022752:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022756:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802275a:	fa5f f58c 	uxtb.w	r5, ip
 802275e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022762:	950c      	str	r5, [sp, #48]	; 0x30
 8022764:	07dd      	lsls	r5, r3, #31
 8022766:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802276a:	bf54      	ite	pl
 802276c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022770:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022774:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022778:	fa5f f38c 	uxtb.w	r3, ip
 802277c:	9313      	str	r3, [sp, #76]	; 0x4c
 802277e:	b289      	uxth	r1, r1
 8022780:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022782:	b280      	uxth	r0, r0
 8022784:	fb01 f300 	mul.w	r3, r1, r0
 8022788:	0109      	lsls	r1, r1, #4
 802278a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802278e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8022792:	1ac9      	subs	r1, r1, r3
 8022794:	b280      	uxth	r0, r0
 8022796:	b289      	uxth	r1, r1
 8022798:	ebac 0c00 	sub.w	ip, ip, r0
 802279c:	4369      	muls	r1, r5
 802279e:	fa1f fc8c 	uxth.w	ip, ip
 80227a2:	fb02 120c 	mla	r2, r2, ip, r1
 80227a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80227a8:	fb00 2001 	mla	r0, r0, r1, r2
 80227ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80227ae:	fb03 0302 	mla	r3, r3, r2, r0
 80227b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80227b6:	b1d3      	cbz	r3, 80227ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80227b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80227ba:	4353      	muls	r3, r2
 80227bc:	1c5a      	adds	r2, r3, #1
 80227be:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80227c2:	4a0f      	ldr	r2, [pc, #60]	; (8022800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80227c4:	121b      	asrs	r3, r3, #8
 80227c6:	6812      	ldr	r2, [r2, #0]
 80227c8:	2bff      	cmp	r3, #255	; 0xff
 80227ca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80227ce:	d12d      	bne.n	802282c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 80227d0:	0953      	lsrs	r3, r2, #5
 80227d2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80227d6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80227da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80227de:	f02c 0c07 	bic.w	ip, ip, #7
 80227e2:	ea43 0c0c 	orr.w	ip, r3, ip
 80227e6:	ea4c 0202 	orr.w	r2, ip, r2
 80227ea:	f8a8 2000 	strh.w	r2, [r8]
 80227ee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80227f0:	f108 0802 	add.w	r8, r8, #2
 80227f4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80227f8:	441c      	add	r4, r3
 80227fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227fc:	441e      	add	r6, r3
 80227fe:	e6b9      	b.n	8022574 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022800:	240016b8 	.word	0x240016b8
 8022804:	2800      	cmp	r0, #0
 8022806:	d0ba      	beq.n	802277e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8022808:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802280a:	442b      	add	r3, r5
 802280c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022810:	07db      	lsls	r3, r3, #31
 8022812:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022816:	bf54      	ite	pl
 8022818:	f00c 0c0f 	andpl.w	ip, ip, #15
 802281c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022820:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022824:	fa5f f38c 	uxtb.w	r3, ip
 8022828:	930c      	str	r3, [sp, #48]	; 0x30
 802282a:	e7a8      	b.n	802277e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802282c:	f8b8 e000 	ldrh.w	lr, [r8]
 8022830:	fa1f fa83 	uxth.w	sl, r3
 8022834:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022838:	43db      	mvns	r3, r3
 802283a:	ea4f 202e 	mov.w	r0, lr, asr #8
 802283e:	fb11 f10a 	smulbb	r1, r1, sl
 8022842:	b2db      	uxtb	r3, r3
 8022844:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022848:	b2d2      	uxtb	r2, r2
 802284a:	fa5f fc8c 	uxtb.w	ip, ip
 802284e:	fb00 1003 	mla	r0, r0, r3, r1
 8022852:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022856:	fb12 f20a 	smulbb	r2, r2, sl
 802285a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802285e:	b280      	uxth	r0, r0
 8022860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022864:	fb1c fc0a 	smulbb	ip, ip, sl
 8022868:	fa5f fe8e 	uxtb.w	lr, lr
 802286c:	fb0e 2203 	mla	r2, lr, r3, r2
 8022870:	fb01 cc03 	mla	ip, r1, r3, ip
 8022874:	1c43      	adds	r3, r0, #1
 8022876:	b292      	uxth	r2, r2
 8022878:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802287c:	1c51      	adds	r1, r2, #1
 802287e:	fa1f fc8c 	uxth.w	ip, ip
 8022882:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022886:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802288a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802288e:	4308      	orrs	r0, r1
 8022890:	f10c 0101 	add.w	r1, ip, #1
 8022894:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022898:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802289c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80228a0:	ea40 000c 	orr.w	r0, r0, ip
 80228a4:	f8a8 0000 	strh.w	r0, [r8]
 80228a8:	e7a1      	b.n	80227ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80228aa:	b017      	add	sp, #92	; 0x5c
 80228ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080228b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80228b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80228b4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80228b8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80228bc:	2d00      	cmp	r5, #0
 80228be:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80228c2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80228c6:	fb05 0e03 	mla	lr, r5, r3, r0
 80228ca:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80228ce:	f2c0 80b0 	blt.w	8022a32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80228d2:	45a9      	cmp	r9, r5
 80228d4:	f340 80ad 	ble.w	8022a32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80228d8:	2800      	cmp	r0, #0
 80228da:	f2c0 80a8 	blt.w	8022a2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80228de:	4580      	cmp	r8, r0
 80228e0:	f340 80a5 	ble.w	8022a2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80228e4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80228e8:	f01e 0f01 	tst.w	lr, #1
 80228ec:	5d16      	ldrb	r6, [r2, r4]
 80228ee:	bf0c      	ite	eq
 80228f0:	f006 060f 	andeq.w	r6, r6, #15
 80228f4:	1136      	asrne	r6, r6, #4
 80228f6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80228fa:	b2f6      	uxtb	r6, r6
 80228fc:	1c44      	adds	r4, r0, #1
 80228fe:	f100 809b 	bmi.w	8022a38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022902:	45a0      	cmp	r8, r4
 8022904:	f340 8098 	ble.w	8022a38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022908:	2f00      	cmp	r7, #0
 802290a:	f000 8097 	beq.w	8022a3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802290e:	f10e 0a01 	add.w	sl, lr, #1
 8022912:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022916:	f01a 0f01 	tst.w	sl, #1
 802291a:	5d14      	ldrb	r4, [r2, r4]
 802291c:	bf0c      	ite	eq
 802291e:	f004 040f 	andeq.w	r4, r4, #15
 8022922:	1124      	asrne	r4, r4, #4
 8022924:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022928:	b2e4      	uxtb	r4, r4
 802292a:	3501      	adds	r5, #1
 802292c:	f100 808a 	bmi.w	8022a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022930:	45a9      	cmp	r9, r5
 8022932:	f340 8087 	ble.w	8022a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022936:	f1bc 0f00 	cmp.w	ip, #0
 802293a:	f000 8086 	beq.w	8022a4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802293e:	2800      	cmp	r0, #0
 8022940:	db7e      	blt.n	8022a40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022942:	4580      	cmp	r8, r0
 8022944:	dd7c      	ble.n	8022a40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022946:	eb03 090e 	add.w	r9, r3, lr
 802294a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802294e:	f019 0f01 	tst.w	r9, #1
 8022952:	5d55      	ldrb	r5, [r2, r5]
 8022954:	bf0c      	ite	eq
 8022956:	f005 050f 	andeq.w	r5, r5, #15
 802295a:	112d      	asrne	r5, r5, #4
 802295c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022960:	b2ed      	uxtb	r5, r5
 8022962:	3001      	adds	r0, #1
 8022964:	d474      	bmi.n	8022a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022966:	4580      	cmp	r8, r0
 8022968:	dd72      	ble.n	8022a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802296a:	2f00      	cmp	r7, #0
 802296c:	d072      	beq.n	8022a54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802296e:	3301      	adds	r3, #1
 8022970:	449e      	add	lr, r3
 8022972:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022976:	f01e 0f01 	tst.w	lr, #1
 802297a:	5cd0      	ldrb	r0, [r2, r3]
 802297c:	bf0c      	ite	eq
 802297e:	f000 000f 	andeq.w	r0, r0, #15
 8022982:	1100      	asrne	r0, r0, #4
 8022984:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022988:	b2c3      	uxtb	r3, r0
 802298a:	b2ba      	uxth	r2, r7
 802298c:	fa1f fc8c 	uxth.w	ip, ip
 8022990:	fb02 f00c 	mul.w	r0, r2, ip
 8022994:	0112      	lsls	r2, r2, #4
 8022996:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802299a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802299e:	1a12      	subs	r2, r2, r0
 80229a0:	fa1f fc8c 	uxth.w	ip, ip
 80229a4:	b292      	uxth	r2, r2
 80229a6:	eba7 070c 	sub.w	r7, r7, ip
 80229aa:	4362      	muls	r2, r4
 80229ac:	b2bf      	uxth	r7, r7
 80229ae:	fb06 2207 	mla	r2, r6, r7, r2
 80229b2:	fb0c 2505 	mla	r5, ip, r5, r2
 80229b6:	fb00 5303 	mla	r3, r0, r3, r5
 80229ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80229be:	b3a3      	cbz	r3, 8022a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80229c0:	4a25      	ldr	r2, [pc, #148]	; (8022a58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80229c2:	880e      	ldrh	r6, [r1, #0]
 80229c4:	6815      	ldr	r5, [r2, #0]
 80229c6:	b29a      	uxth	r2, r3
 80229c8:	1234      	asrs	r4, r6, #8
 80229ca:	43db      	mvns	r3, r3
 80229cc:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80229d0:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80229d4:	b2db      	uxtb	r3, r3
 80229d6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80229da:	fb10 f002 	smulbb	r0, r0, r2
 80229de:	b2ed      	uxtb	r5, r5
 80229e0:	fb17 f702 	smulbb	r7, r7, r2
 80229e4:	fb04 0403 	mla	r4, r4, r3, r0
 80229e8:	10f0      	asrs	r0, r6, #3
 80229ea:	fb15 f202 	smulbb	r2, r5, r2
 80229ee:	00f6      	lsls	r6, r6, #3
 80229f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80229f4:	b2a4      	uxth	r4, r4
 80229f6:	b2f6      	uxtb	r6, r6
 80229f8:	fb00 7003 	mla	r0, r0, r3, r7
 80229fc:	fb06 2303 	mla	r3, r6, r3, r2
 8022a00:	b280      	uxth	r0, r0
 8022a02:	b29a      	uxth	r2, r3
 8022a04:	1c63      	adds	r3, r4, #1
 8022a06:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022a0a:	1c53      	adds	r3, r2, #1
 8022a0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a10:	1c42      	adds	r2, r0, #1
 8022a12:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022a16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022a1e:	0940      	lsrs	r0, r0, #5
 8022a20:	4323      	orrs	r3, r4
 8022a22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a26:	4303      	orrs	r3, r0
 8022a28:	800b      	strh	r3, [r1, #0]
 8022a2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022a2e:	2600      	movs	r6, #0
 8022a30:	e764      	b.n	80228fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8022a32:	2400      	movs	r4, #0
 8022a34:	4626      	mov	r6, r4
 8022a36:	e778      	b.n	802292a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a38:	2400      	movs	r4, #0
 8022a3a:	e776      	b.n	802292a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a3c:	463c      	mov	r4, r7
 8022a3e:	e774      	b.n	802292a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022a40:	2500      	movs	r5, #0
 8022a42:	e78e      	b.n	8022962 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8022a44:	2300      	movs	r3, #0
 8022a46:	461d      	mov	r5, r3
 8022a48:	e79f      	b.n	802298a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a4a:	4663      	mov	r3, ip
 8022a4c:	4665      	mov	r5, ip
 8022a4e:	e79c      	b.n	802298a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a50:	2300      	movs	r3, #0
 8022a52:	e79a      	b.n	802298a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a54:	463b      	mov	r3, r7
 8022a56:	e798      	b.n	802298a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022a58:	240016b8 	.word	0x240016b8

08022a5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a60:	b093      	sub	sp, #76	; 0x4c
 8022a62:	461d      	mov	r5, r3
 8022a64:	920c      	str	r2, [sp, #48]	; 0x30
 8022a66:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022a68:	9011      	str	r0, [sp, #68]	; 0x44
 8022a6a:	9107      	str	r1, [sp, #28]
 8022a6c:	6850      	ldr	r0, [r2, #4]
 8022a6e:	6812      	ldr	r2, [r2, #0]
 8022a70:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022a74:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022a78:	fb00 1303 	mla	r3, r0, r3, r1
 8022a7c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022a80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a82:	689b      	ldr	r3, [r3, #8]
 8022a84:	3301      	adds	r3, #1
 8022a86:	f023 0301 	bic.w	r3, r3, #1
 8022a8a:	9306      	str	r3, [sp, #24]
 8022a8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a8e:	681f      	ldr	r7, [r3, #0]
 8022a90:	9b07      	ldr	r3, [sp, #28]
 8022a92:	2b00      	cmp	r3, #0
 8022a94:	dc03      	bgt.n	8022a9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a98:	2b00      	cmp	r3, #0
 8022a9a:	f340 8267 	ble.w	8022f6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022a9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022aa0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022aa4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022aa8:	1e48      	subs	r0, r1, #1
 8022aaa:	f102 3cff 	add.w	ip, r2, #4294967295
 8022aae:	2d00      	cmp	r5, #0
 8022ab0:	f340 80b7 	ble.w	8022c22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022ab4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ab8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022abc:	d406      	bmi.n	8022acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022abe:	4586      	cmp	lr, r0
 8022ac0:	da04      	bge.n	8022acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022ac2:	2b00      	cmp	r3, #0
 8022ac4:	db02      	blt.n	8022acc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022ac6:	4563      	cmp	r3, ip
 8022ac8:	f2c0 80ac 	blt.w	8022c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022acc:	f11e 0e01 	adds.w	lr, lr, #1
 8022ad0:	f100 809f 	bmi.w	8022c12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022ad4:	4571      	cmp	r1, lr
 8022ad6:	f2c0 809c 	blt.w	8022c12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022ada:	3301      	adds	r3, #1
 8022adc:	f100 8099 	bmi.w	8022c12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022ae0:	429a      	cmp	r2, r3
 8022ae2:	f2c0 8096 	blt.w	8022c12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022ae6:	46c8      	mov	r8, r9
 8022ae8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8022aec:	9509      	str	r5, [sp, #36]	; 0x24
 8022aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022af0:	2b00      	cmp	r3, #0
 8022af2:	f340 80b5 	ble.w	8022c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022af6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8022afa:	1430      	asrs	r0, r6, #16
 8022afc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022b00:	9308      	str	r3, [sp, #32]
 8022b02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b04:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022b08:	1423      	asrs	r3, r4, #16
 8022b0a:	f100 813f 	bmi.w	8022d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b0e:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022b12:	455b      	cmp	r3, fp
 8022b14:	f280 813a 	bge.w	8022d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b18:	2800      	cmp	r0, #0
 8022b1a:	f2c0 8137 	blt.w	8022d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b1e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022b22:	4558      	cmp	r0, fp
 8022b24:	f280 8132 	bge.w	8022d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022b28:	9a06      	ldr	r2, [sp, #24]
 8022b2a:	fb00 3302 	mla	r3, r0, r2, r3
 8022b2e:	0858      	lsrs	r0, r3, #1
 8022b30:	07da      	lsls	r2, r3, #31
 8022b32:	9a08      	ldr	r2, [sp, #32]
 8022b34:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022b38:	bf54      	ite	pl
 8022b3a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022b3e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022b42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022b46:	fa5f fc8c 	uxtb.w	ip, ip
 8022b4a:	2a00      	cmp	r2, #0
 8022b4c:	f000 80cc 	beq.w	8022ce8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8022b50:	1c58      	adds	r0, r3, #1
 8022b52:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022b56:	07c0      	lsls	r0, r0, #31
 8022b58:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022b5c:	bf54      	ite	pl
 8022b5e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022b62:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022b66:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022b6a:	fa5f fe8e 	uxtb.w	lr, lr
 8022b6e:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8022b72:	b1b9      	cbz	r1, 8022ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8022b74:	4453      	add	r3, sl
 8022b76:	0858      	lsrs	r0, r3, #1
 8022b78:	07da      	lsls	r2, r3, #31
 8022b7a:	5c38      	ldrb	r0, [r7, r0]
 8022b7c:	bf54      	ite	pl
 8022b7e:	f000 000f 	andpl.w	r0, r0, #15
 8022b82:	1100      	asrmi	r0, r0, #4
 8022b84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022b88:	b2c0      	uxtb	r0, r0
 8022b8a:	900a      	str	r0, [sp, #40]	; 0x28
 8022b8c:	1c58      	adds	r0, r3, #1
 8022b8e:	0843      	lsrs	r3, r0, #1
 8022b90:	07c2      	lsls	r2, r0, #31
 8022b92:	5cfb      	ldrb	r3, [r7, r3]
 8022b94:	bf54      	ite	pl
 8022b96:	f003 030f 	andpl.w	r3, r3, #15
 8022b9a:	111b      	asrmi	r3, r3, #4
 8022b9c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022ba0:	b2db      	uxtb	r3, r3
 8022ba2:	930e      	str	r3, [sp, #56]	; 0x38
 8022ba4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8022ba8:	b289      	uxth	r1, r1
 8022baa:	fb02 f301 	mul.w	r3, r2, r1
 8022bae:	0112      	lsls	r2, r2, #4
 8022bb0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022bb4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8022bb8:	1ad2      	subs	r2, r2, r3
 8022bba:	b289      	uxth	r1, r1
 8022bbc:	b292      	uxth	r2, r2
 8022bbe:	1a40      	subs	r0, r0, r1
 8022bc0:	fa1f fe80 	uxth.w	lr, r0
 8022bc4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022bc6:	4342      	muls	r2, r0
 8022bc8:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8022bcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022bce:	fb01 c102 	mla	r1, r1, r2, ip
 8022bd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022bd4:	fb03 1302 	mla	r3, r3, r2, r1
 8022bd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022bdc:	2bff      	cmp	r3, #255	; 0xff
 8022bde:	f040 8094 	bne.w	8022d0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022be2:	4bbf      	ldr	r3, [pc, #764]	; (8022ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022be4:	681a      	ldr	r2, [r3, #0]
 8022be6:	4bbf      	ldr	r3, [pc, #764]	; (8022ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022be8:	0951      	lsrs	r1, r2, #5
 8022bea:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022bee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022bf2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022bf6:	430b      	orrs	r3, r1
 8022bf8:	4313      	orrs	r3, r2
 8022bfa:	f8a8 3000 	strh.w	r3, [r8]
 8022bfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c00:	f108 0802 	add.w	r8, r8, #2
 8022c04:	441c      	add	r4, r3
 8022c06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c08:	441e      	add	r6, r3
 8022c0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c0c:	3b01      	subs	r3, #1
 8022c0e:	9309      	str	r3, [sp, #36]	; 0x24
 8022c10:	e76d      	b.n	8022aee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022c12:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c14:	3d01      	subs	r5, #1
 8022c16:	f109 0902 	add.w	r9, r9, #2
 8022c1a:	441c      	add	r4, r3
 8022c1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c1e:	441e      	add	r6, r3
 8022c20:	e745      	b.n	8022aae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022c22:	d021      	beq.n	8022c68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8022c24:	1e6b      	subs	r3, r5, #1
 8022c26:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022c28:	fb00 4003 	mla	r0, r0, r3, r4
 8022c2c:	1400      	asrs	r0, r0, #16
 8022c2e:	f53f af5a 	bmi.w	8022ae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c32:	3901      	subs	r1, #1
 8022c34:	4288      	cmp	r0, r1
 8022c36:	f6bf af56 	bge.w	8022ae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c3a:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022c3c:	fb01 6303 	mla	r3, r1, r3, r6
 8022c40:	141b      	asrs	r3, r3, #16
 8022c42:	f53f af50 	bmi.w	8022ae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c46:	3a01      	subs	r2, #1
 8022c48:	4293      	cmp	r3, r2
 8022c4a:	f6bf af4c 	bge.w	8022ae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022c4e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8022c52:	46a8      	mov	r8, r5
 8022c54:	46ce      	mov	lr, r9
 8022c56:	9308      	str	r3, [sp, #32]
 8022c58:	f1b8 0f00 	cmp.w	r8, #0
 8022c5c:	f300 80b6 	bgt.w	8022dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022c60:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022c64:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022c68:	9b07      	ldr	r3, [sp, #28]
 8022c6a:	2b00      	cmp	r3, #0
 8022c6c:	f340 817e 	ble.w	8022f6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022c70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022c74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022c76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c7e:	eef0 6a62 	vmov.f32	s13, s5
 8022c82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c8e:	ee16 4a90 	vmov	r4, s13
 8022c92:	eef0 6a43 	vmov.f32	s13, s6
 8022c96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c9a:	ee16 6a90 	vmov	r6, s13
 8022c9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ca6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022caa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022cae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022cb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022cb6:	ee12 2a90 	vmov	r2, s5
 8022cba:	eef0 2a47 	vmov.f32	s5, s14
 8022cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cc2:	ee13 2a10 	vmov	r2, s6
 8022cc6:	931f      	str	r3, [sp, #124]	; 0x7c
 8022cc8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022cca:	eeb0 3a67 	vmov.f32	s6, s15
 8022cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cd2:	9320      	str	r3, [sp, #128]	; 0x80
 8022cd4:	9b07      	ldr	r3, [sp, #28]
 8022cd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022cd8:	3b01      	subs	r3, #1
 8022cda:	9307      	str	r3, [sp, #28]
 8022cdc:	bf08      	it	eq
 8022cde:	4615      	moveq	r5, r2
 8022ce0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ce2:	bf18      	it	ne
 8022ce4:	461d      	movne	r5, r3
 8022ce6:	e6d3      	b.n	8022a90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022ce8:	2900      	cmp	r1, #0
 8022cea:	f43f af5b 	beq.w	8022ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8022cee:	eb0a 0003 	add.w	r0, sl, r3
 8022cf2:	0843      	lsrs	r3, r0, #1
 8022cf4:	07c0      	lsls	r0, r0, #31
 8022cf6:	5cfb      	ldrb	r3, [r7, r3]
 8022cf8:	bf54      	ite	pl
 8022cfa:	f003 030f 	andpl.w	r3, r3, #15
 8022cfe:	111b      	asrmi	r3, r3, #4
 8022d00:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022d04:	b2db      	uxtb	r3, r3
 8022d06:	930a      	str	r3, [sp, #40]	; 0x28
 8022d08:	e74c      	b.n	8022ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8022d0a:	2b00      	cmp	r3, #0
 8022d0c:	f43f af77 	beq.w	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022d10:	4a73      	ldr	r2, [pc, #460]	; (8022ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022d12:	fa1f fe83 	uxth.w	lr, r3
 8022d16:	f8b8 c000 	ldrh.w	ip, [r8]
 8022d1a:	43db      	mvns	r3, r3
 8022d1c:	6810      	ldr	r0, [r2, #0]
 8022d1e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022d22:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022d26:	b2db      	uxtb	r3, r3
 8022d28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022d2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022d30:	fb12 f20e 	smulbb	r2, r2, lr
 8022d34:	b2c0      	uxtb	r0, r0
 8022d36:	fb1b fb0e 	smulbb	fp, fp, lr
 8022d3a:	fb01 2103 	mla	r1, r1, r3, r2
 8022d3e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022d42:	fb10 fe0e 	smulbb	lr, r0, lr
 8022d46:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022d4a:	b289      	uxth	r1, r1
 8022d4c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022d50:	fa5f fc8c 	uxtb.w	ip, ip
 8022d54:	fb02 b203 	mla	r2, r2, r3, fp
 8022d58:	1c48      	adds	r0, r1, #1
 8022d5a:	fb0c e303 	mla	r3, ip, r3, lr
 8022d5e:	b292      	uxth	r2, r2
 8022d60:	b29b      	uxth	r3, r3
 8022d62:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8022d66:	f102 0b01 	add.w	fp, r2, #1
 8022d6a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8022d6e:	1c59      	adds	r1, r3, #1
 8022d70:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022d74:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022d78:	0952      	lsrs	r2, r2, #5
 8022d7a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022d7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022d82:	4301      	orrs	r1, r0
 8022d84:	4311      	orrs	r1, r2
 8022d86:	f8a8 1000 	strh.w	r1, [r8]
 8022d8a:	e738      	b.n	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022d8c:	f113 0b01 	adds.w	fp, r3, #1
 8022d90:	f53f af35 	bmi.w	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022d94:	45dc      	cmp	ip, fp
 8022d96:	f6ff af32 	blt.w	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022d9a:	f110 0b01 	adds.w	fp, r0, #1
 8022d9e:	f53f af2e 	bmi.w	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022da2:	45de      	cmp	lr, fp
 8022da4:	f6ff af2b 	blt.w	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022da8:	9302      	str	r3, [sp, #8]
 8022daa:	fa0f f38e 	sxth.w	r3, lr
 8022dae:	9a08      	ldr	r2, [sp, #32]
 8022db0:	9301      	str	r3, [sp, #4]
 8022db2:	fa0f f38c 	sxth.w	r3, ip
 8022db6:	9105      	str	r1, [sp, #20]
 8022db8:	4641      	mov	r1, r8
 8022dba:	9300      	str	r3, [sp, #0]
 8022dbc:	4653      	mov	r3, sl
 8022dbe:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022dc2:	463a      	mov	r2, r7
 8022dc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022dc6:	f7ff fd73 	bl	80228b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8022dca:	e718      	b.n	8022bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022dcc:	1422      	asrs	r2, r4, #16
 8022dce:	9906      	ldr	r1, [sp, #24]
 8022dd0:	1433      	asrs	r3, r6, #16
 8022dd2:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022dd6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022dda:	fb01 2303 	mla	r3, r1, r3, r2
 8022dde:	085a      	lsrs	r2, r3, #1
 8022de0:	07d9      	lsls	r1, r3, #31
 8022de2:	5cba      	ldrb	r2, [r7, r2]
 8022de4:	bf54      	ite	pl
 8022de6:	f002 020f 	andpl.w	r2, r2, #15
 8022dea:	1112      	asrmi	r2, r2, #4
 8022dec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022df0:	b2d2      	uxtb	r2, r2
 8022df2:	2800      	cmp	r0, #0
 8022df4:	d063      	beq.n	8022ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8022df6:	f103 0a01 	add.w	sl, r3, #1
 8022dfa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8022dfe:	f01a 0f01 	tst.w	sl, #1
 8022e02:	5c79      	ldrb	r1, [r7, r1]
 8022e04:	bf0c      	ite	eq
 8022e06:	f001 010f 	andeq.w	r1, r1, #15
 8022e0a:	1109      	asrne	r1, r1, #4
 8022e0c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e10:	b2c9      	uxtb	r1, r1
 8022e12:	910f      	str	r1, [sp, #60]	; 0x3c
 8022e14:	f1bc 0f00 	cmp.w	ip, #0
 8022e18:	d01a      	beq.n	8022e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022e1a:	9908      	ldr	r1, [sp, #32]
 8022e1c:	440b      	add	r3, r1
 8022e1e:	0859      	lsrs	r1, r3, #1
 8022e20:	f013 0f01 	tst.w	r3, #1
 8022e24:	f103 0301 	add.w	r3, r3, #1
 8022e28:	5c79      	ldrb	r1, [r7, r1]
 8022e2a:	bf0c      	ite	eq
 8022e2c:	f001 010f 	andeq.w	r1, r1, #15
 8022e30:	1109      	asrne	r1, r1, #4
 8022e32:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e36:	b2c9      	uxtb	r1, r1
 8022e38:	910b      	str	r1, [sp, #44]	; 0x2c
 8022e3a:	0859      	lsrs	r1, r3, #1
 8022e3c:	07db      	lsls	r3, r3, #31
 8022e3e:	5c79      	ldrb	r1, [r7, r1]
 8022e40:	bf54      	ite	pl
 8022e42:	f001 010f 	andpl.w	r1, r1, #15
 8022e46:	1109      	asrmi	r1, r1, #4
 8022e48:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022e4c:	b2c9      	uxtb	r1, r1
 8022e4e:	9110      	str	r1, [sp, #64]	; 0x40
 8022e50:	b280      	uxth	r0, r0
 8022e52:	fa1f fc8c 	uxth.w	ip, ip
 8022e56:	fb00 f30c 	mul.w	r3, r0, ip
 8022e5a:	0100      	lsls	r0, r0, #4
 8022e5c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8022e60:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8022e64:	1ac0      	subs	r0, r0, r3
 8022e66:	fa1f fc8c 	uxth.w	ip, ip
 8022e6a:	b280      	uxth	r0, r0
 8022e6c:	eba1 010c 	sub.w	r1, r1, ip
 8022e70:	fa1f fa81 	uxth.w	sl, r1
 8022e74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8022e76:	4348      	muls	r0, r1
 8022e78:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8022e7a:	fb02 020a 	mla	r2, r2, sl, r0
 8022e7e:	fb0c 2c01 	mla	ip, ip, r1, r2
 8022e82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022e84:	fb03 c302 	mla	r3, r3, r2, ip
 8022e88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022e8c:	2bff      	cmp	r3, #255	; 0xff
 8022e8e:	d12b      	bne.n	8022ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8022e90:	4b13      	ldr	r3, [pc, #76]	; (8022ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022e92:	681a      	ldr	r2, [r3, #0]
 8022e94:	4b13      	ldr	r3, [pc, #76]	; (8022ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022e96:	0951      	lsrs	r1, r2, #5
 8022e98:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022e9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022ea0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ea4:	430b      	orrs	r3, r1
 8022ea6:	4313      	orrs	r3, r2
 8022ea8:	f8ae 3000 	strh.w	r3, [lr]
 8022eac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022eae:	f10e 0e02 	add.w	lr, lr, #2
 8022eb2:	f108 38ff 	add.w	r8, r8, #4294967295
 8022eb6:	441c      	add	r4, r3
 8022eb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022eba:	441e      	add	r6, r3
 8022ebc:	e6cc      	b.n	8022c58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8022ebe:	f1bc 0f00 	cmp.w	ip, #0
 8022ec2:	d0c5      	beq.n	8022e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022ec4:	9908      	ldr	r1, [sp, #32]
 8022ec6:	440b      	add	r3, r1
 8022ec8:	0859      	lsrs	r1, r3, #1
 8022eca:	07db      	lsls	r3, r3, #31
 8022ecc:	5c79      	ldrb	r1, [r7, r1]
 8022ece:	bf54      	ite	pl
 8022ed0:	f001 010f 	andpl.w	r1, r1, #15
 8022ed4:	1109      	asrmi	r1, r1, #4
 8022ed6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022eda:	b2c9      	uxtb	r1, r1
 8022edc:	910b      	str	r1, [sp, #44]	; 0x2c
 8022ede:	e7b7      	b.n	8022e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022ee0:	240016b8 	.word	0x240016b8
 8022ee4:	fffff800 	.word	0xfffff800
 8022ee8:	2b00      	cmp	r3, #0
 8022eea:	d0df      	beq.n	8022eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8022eec:	4a21      	ldr	r2, [pc, #132]	; (8022f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8022eee:	fa1f fa83 	uxth.w	sl, r3
 8022ef2:	f8be c000 	ldrh.w	ip, [lr]
 8022ef6:	43db      	mvns	r3, r3
 8022ef8:	6810      	ldr	r0, [r2, #0]
 8022efa:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022efe:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022f02:	b2db      	uxtb	r3, r3
 8022f04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022f08:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022f0c:	fb12 f20a 	smulbb	r2, r2, sl
 8022f10:	b2c0      	uxtb	r0, r0
 8022f12:	fb1b fb0a 	smulbb	fp, fp, sl
 8022f16:	fb01 2103 	mla	r1, r1, r3, r2
 8022f1a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022f1e:	fb10 f00a 	smulbb	r0, r0, sl
 8022f22:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022f26:	b289      	uxth	r1, r1
 8022f28:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022f2c:	fa5f fc8c 	uxtb.w	ip, ip
 8022f30:	fb02 b203 	mla	r2, r2, r3, fp
 8022f34:	fb0c 0003 	mla	r0, ip, r3, r0
 8022f38:	1c4b      	adds	r3, r1, #1
 8022f3a:	b292      	uxth	r2, r2
 8022f3c:	b280      	uxth	r0, r0
 8022f3e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022f42:	f100 0b01 	add.w	fp, r0, #1
 8022f46:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022f4a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8022f4e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8022f52:	ea4b 0101 	orr.w	r1, fp, r1
 8022f56:	f102 0b01 	add.w	fp, r2, #1
 8022f5a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022f5e:	0952      	lsrs	r2, r2, #5
 8022f60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f64:	4311      	orrs	r1, r2
 8022f66:	f8ae 1000 	strh.w	r1, [lr]
 8022f6a:	e79f      	b.n	8022eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8022f6c:	b013      	add	sp, #76	; 0x4c
 8022f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f72:	bf00      	nop
 8022f74:	240016b8 	.word	0x240016b8

08022f78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8022f78:	b570      	push	{r4, r5, r6, lr}
 8022f7a:	1208      	asrs	r0, r1, #8
 8022f7c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8022f80:	b29e      	uxth	r6, r3
 8022f82:	1213      	asrs	r3, r2, #8
 8022f84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f88:	10cc      	asrs	r4, r1, #3
 8022f8a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022f8e:	00c9      	lsls	r1, r1, #3
 8022f90:	fb10 f006 	smulbb	r0, r0, r6
 8022f94:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022f98:	fb13 f305 	smulbb	r3, r3, r5
 8022f9c:	fb14 f406 	smulbb	r4, r4, r6
 8022fa0:	4418      	add	r0, r3
 8022fa2:	10d3      	asrs	r3, r2, #3
 8022fa4:	00d2      	lsls	r2, r2, #3
 8022fa6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022faa:	b280      	uxth	r0, r0
 8022fac:	b2d2      	uxtb	r2, r2
 8022fae:	fb13 f305 	smulbb	r3, r3, r5
 8022fb2:	fb12 f205 	smulbb	r2, r2, r5
 8022fb6:	441c      	add	r4, r3
 8022fb8:	b2cb      	uxtb	r3, r1
 8022fba:	fb13 f306 	smulbb	r3, r3, r6
 8022fbe:	b2a4      	uxth	r4, r4
 8022fc0:	4413      	add	r3, r2
 8022fc2:	1c42      	adds	r2, r0, #1
 8022fc4:	b29b      	uxth	r3, r3
 8022fc6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022fca:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8022fce:	1c58      	adds	r0, r3, #1
 8022fd0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022fd4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022fd8:	4310      	orrs	r0, r2
 8022fda:	1c62      	adds	r2, r4, #1
 8022fdc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022fe0:	0964      	lsrs	r4, r4, #5
 8022fe2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022fe6:	4320      	orrs	r0, r4
 8022fe8:	bd70      	pop	{r4, r5, r6, pc}
	...

08022fec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8022fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ff0:	b08f      	sub	sp, #60	; 0x3c
 8022ff2:	461c      	mov	r4, r3
 8022ff4:	460d      	mov	r5, r1
 8022ff6:	4616      	mov	r6, r2
 8022ff8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8022ffc:	9004      	str	r0, [sp, #16]
 8022ffe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023000:	2f00      	cmp	r7, #0
 8023002:	f000 80f6 	beq.w	80231f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8023006:	6820      	ldr	r0, [r4, #0]
 8023008:	aa0a      	add	r2, sp, #40	; 0x28
 802300a:	6861      	ldr	r1, [r4, #4]
 802300c:	f04f 0802 	mov.w	r8, #2
 8023010:	3604      	adds	r6, #4
 8023012:	c203      	stmia	r2!, {r0, r1}
 8023014:	6818      	ldr	r0, [r3, #0]
 8023016:	aa0c      	add	r2, sp, #48	; 0x30
 8023018:	6859      	ldr	r1, [r3, #4]
 802301a:	c203      	stmia	r2!, {r0, r1}
 802301c:	a80a      	add	r0, sp, #40	; 0x28
 802301e:	f7f0 f9e7 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023022:	4621      	mov	r1, r4
 8023024:	a80c      	add	r0, sp, #48	; 0x30
 8023026:	f7f0 fa0b 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802302a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802302e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8023032:	f002 0301 	and.w	r3, r2, #1
 8023036:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802303a:	9306      	str	r3, [sp, #24]
 802303c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8023040:	f003 0101 	and.w	r1, r3, #1
 8023044:	9105      	str	r1, [sp, #20]
 8023046:	9805      	ldr	r0, [sp, #20]
 8023048:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802304c:	4403      	add	r3, r0
 802304e:	fb01 2303 	mla	r3, r1, r3, r2
 8023052:	fb93 f3f8 	sdiv	r3, r3, r8
 8023056:	441d      	add	r5, r3
 8023058:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802305c:	441a      	add	r2, r3
 802305e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8023062:	4419      	add	r1, r3
 8023064:	4b64      	ldr	r3, [pc, #400]	; (80231f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8023066:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802306a:	6818      	ldr	r0, [r3, #0]
 802306c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8023070:	6803      	ldr	r3, [r0, #0]
 8023072:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8023074:	4798      	blx	r3
 8023076:	4a61      	ldr	r2, [pc, #388]	; (80231fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8023078:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802307c:	2fff      	cmp	r7, #255	; 0xff
 802307e:	8813      	ldrh	r3, [r2, #0]
 8023080:	4611      	mov	r1, r2
 8023082:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8023086:	fb03 fb0b 	mul.w	fp, r3, fp
 802308a:	fb03 a404 	mla	r4, r3, r4, sl
 802308e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023092:	d06b      	beq.n	802316c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8023094:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8023098:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802309c:	9303      	str	r3, [sp, #12]
 802309e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80230a2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80230a6:	9b07      	ldr	r3, [sp, #28]
 80230a8:	42a3      	cmp	r3, r4
 80230aa:	f240 809d 	bls.w	80231e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80230ae:	9b06      	ldr	r3, [sp, #24]
 80230b0:	2b00      	cmp	r3, #0
 80230b2:	d039      	beq.n	8023128 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 80230b4:	782b      	ldrb	r3, [r5, #0]
 80230b6:	f105 0801 	add.w	r8, r5, #1
 80230ba:	f109 3bff 	add.w	fp, r9, #4294967295
 80230be:	8822      	ldrh	r2, [r4, #0]
 80230c0:	f003 030f 	and.w	r3, r3, #15
 80230c4:	9804      	ldr	r0, [sp, #16]
 80230c6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80230ca:	9b03      	ldr	r3, [sp, #12]
 80230cc:	9300      	str	r3, [sp, #0]
 80230ce:	463b      	mov	r3, r7
 80230d0:	f7ff ff52 	bl	8022f78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80230d4:	f824 0b02 	strh.w	r0, [r4], #2
 80230d8:	f1bb 0f01 	cmp.w	fp, #1
 80230dc:	46a2      	mov	sl, r4
 80230de:	f104 0404 	add.w	r4, r4, #4
 80230e2:	dd24      	ble.n	802312e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 80230e4:	f898 3000 	ldrb.w	r3, [r8]
 80230e8:	f1ab 0b02 	sub.w	fp, fp, #2
 80230ec:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80230f0:	091b      	lsrs	r3, r3, #4
 80230f2:	9804      	ldr	r0, [sp, #16]
 80230f4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80230f8:	9b03      	ldr	r3, [sp, #12]
 80230fa:	9300      	str	r3, [sp, #0]
 80230fc:	463b      	mov	r3, r7
 80230fe:	f7ff ff3b 	bl	8022f78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023102:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023106:	f818 3b01 	ldrb.w	r3, [r8], #1
 802310a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802310e:	f003 030f 	and.w	r3, r3, #15
 8023112:	9804      	ldr	r0, [sp, #16]
 8023114:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023118:	9b03      	ldr	r3, [sp, #12]
 802311a:	9300      	str	r3, [sp, #0]
 802311c:	463b      	mov	r3, r7
 802311e:	f7ff ff2b 	bl	8022f78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023122:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023126:	e7d7      	b.n	80230d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8023128:	46a8      	mov	r8, r5
 802312a:	46cb      	mov	fp, r9
 802312c:	e7d4      	b.n	80230d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 802312e:	d10e      	bne.n	802314e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8023130:	f898 3000 	ldrb.w	r3, [r8]
 8023134:	f8ba 2000 	ldrh.w	r2, [sl]
 8023138:	091b      	lsrs	r3, r3, #4
 802313a:	9804      	ldr	r0, [sp, #16]
 802313c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023140:	9b03      	ldr	r3, [sp, #12]
 8023142:	9300      	str	r3, [sp, #0]
 8023144:	463b      	mov	r3, r7
 8023146:	f7ff ff17 	bl	8022f78 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802314a:	f82a 0b02 	strh.w	r0, [sl], #2
 802314e:	9b08      	ldr	r3, [sp, #32]
 8023150:	9a05      	ldr	r2, [sp, #20]
 8023152:	881c      	ldrh	r4, [r3, #0]
 8023154:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8023158:	eba4 0409 	sub.w	r4, r4, r9
 802315c:	4413      	add	r3, r2
 802315e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023160:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8023164:	fb93 f3f2 	sdiv	r3, r3, r2
 8023168:	441d      	add	r5, r3
 802316a:	e79c      	b.n	80230a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 802316c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8023170:	45a3      	cmp	fp, r4
 8023172:	d939      	bls.n	80231e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023174:	9b06      	ldr	r3, [sp, #24]
 8023176:	b1fb      	cbz	r3, 80231b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8023178:	782b      	ldrb	r3, [r5, #0]
 802317a:	1c6a      	adds	r2, r5, #1
 802317c:	f109 30ff 	add.w	r0, r9, #4294967295
 8023180:	3402      	adds	r4, #2
 8023182:	f003 030f 	and.w	r3, r3, #15
 8023186:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802318a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802318e:	2801      	cmp	r0, #1
 8023190:	4623      	mov	r3, r4
 8023192:	f104 0404 	add.w	r4, r4, #4
 8023196:	dd12      	ble.n	80231be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8023198:	7813      	ldrb	r3, [r2, #0]
 802319a:	3802      	subs	r0, #2
 802319c:	091b      	lsrs	r3, r3, #4
 802319e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80231a2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80231a6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80231aa:	f003 030f 	and.w	r3, r3, #15
 80231ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80231b2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80231b6:	e7ea      	b.n	802318e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80231b8:	462a      	mov	r2, r5
 80231ba:	4648      	mov	r0, r9
 80231bc:	e7e7      	b.n	802318e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80231be:	d106      	bne.n	80231ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80231c0:	7812      	ldrb	r2, [r2, #0]
 80231c2:	3302      	adds	r3, #2
 80231c4:	0912      	lsrs	r2, r2, #4
 80231c6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80231ca:	f823 2c02 	strh.w	r2, [r3, #-2]
 80231ce:	880c      	ldrh	r4, [r1, #0]
 80231d0:	9a05      	ldr	r2, [sp, #20]
 80231d2:	eba4 0409 	sub.w	r4, r4, r9
 80231d6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80231da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80231de:	4413      	add	r3, r2
 80231e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80231e4:	441d      	add	r5, r3
 80231e6:	e7c3      	b.n	8023170 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 80231e8:	4b03      	ldr	r3, [pc, #12]	; (80231f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80231ea:	6818      	ldr	r0, [r3, #0]
 80231ec:	6803      	ldr	r3, [r0, #0]
 80231ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80231f0:	4798      	blx	r3
 80231f2:	b00f      	add	sp, #60	; 0x3c
 80231f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231f8:	240016b0 	.word	0x240016b0
 80231fc:	240016aa 	.word	0x240016aa

08023200 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8023200:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023202:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023206:	0a0f      	lsrs	r7, r1, #8
 8023208:	2dff      	cmp	r5, #255	; 0xff
 802320a:	d10c      	bne.n	8023226 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802320c:	2bff      	cmp	r3, #255	; 0xff
 802320e:	d10a      	bne.n	8023226 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8023210:	0948      	lsrs	r0, r1, #5
 8023212:	4b25      	ldr	r3, [pc, #148]	; (80232a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8023214:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023218:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802321c:	403b      	ands	r3, r7
 802321e:	4318      	orrs	r0, r3
 8023220:	4308      	orrs	r0, r1
 8023222:	b280      	uxth	r0, r0
 8023224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023226:	fb15 f503 	smulbb	r5, r5, r3
 802322a:	1214      	asrs	r4, r2, #8
 802322c:	10d6      	asrs	r6, r2, #3
 802322e:	b2ab      	uxth	r3, r5
 8023230:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023234:	00d0      	lsls	r0, r2, #3
 8023236:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802323a:	1c5d      	adds	r5, r3, #1
 802323c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023240:	b2c0      	uxtb	r0, r0
 8023242:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8023246:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802324a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802324e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023252:	fa1f fc85 	uxth.w	ip, r5
 8023256:	43ed      	mvns	r5, r5
 8023258:	fb12 f20c 	smulbb	r2, r2, ip
 802325c:	b2eb      	uxtb	r3, r5
 802325e:	b2fd      	uxtb	r5, r7
 8023260:	fb04 2403 	mla	r4, r4, r3, r2
 8023264:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8023268:	fb15 f50c 	smulbb	r5, r5, ip
 802326c:	b2c8      	uxtb	r0, r1
 802326e:	b2a4      	uxth	r4, r4
 8023270:	fb10 f00c 	smulbb	r0, r0, ip
 8023274:	fb06 5503 	mla	r5, r6, r3, r5
 8023278:	fb02 0003 	mla	r0, r2, r3, r0
 802327c:	b2ad      	uxth	r5, r5
 802327e:	b283      	uxth	r3, r0
 8023280:	1c60      	adds	r0, r4, #1
 8023282:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8023286:	1c58      	adds	r0, r3, #1
 8023288:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802328c:	1c6b      	adds	r3, r5, #1
 802328e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023292:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023296:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802329a:	096d      	lsrs	r5, r5, #5
 802329c:	4320      	orrs	r0, r4
 802329e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80232a2:	4328      	orrs	r0, r5
 80232a4:	e7be      	b.n	8023224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 80232a6:	bf00      	nop
 80232a8:	00fff800 	.word	0x00fff800

080232ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80232ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232b0:	461c      	mov	r4, r3
 80232b2:	b08d      	sub	sp, #52	; 0x34
 80232b4:	460d      	mov	r5, r1
 80232b6:	4616      	mov	r6, r2
 80232b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80232ba:	4680      	mov	r8, r0
 80232bc:	6861      	ldr	r1, [r4, #4]
 80232be:	aa08      	add	r2, sp, #32
 80232c0:	6820      	ldr	r0, [r4, #0]
 80232c2:	f04f 0a02 	mov.w	sl, #2
 80232c6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80232ca:	3604      	adds	r6, #4
 80232cc:	c203      	stmia	r2!, {r0, r1}
 80232ce:	6818      	ldr	r0, [r3, #0]
 80232d0:	aa0a      	add	r2, sp, #40	; 0x28
 80232d2:	6859      	ldr	r1, [r3, #4]
 80232d4:	c203      	stmia	r2!, {r0, r1}
 80232d6:	a808      	add	r0, sp, #32
 80232d8:	f7f0 f88a 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80232dc:	4621      	mov	r1, r4
 80232de:	a80a      	add	r0, sp, #40	; 0x28
 80232e0:	f7f0 f8ae 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80232e4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80232e8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80232ec:	f002 0301 	and.w	r3, r2, #1
 80232f0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80232f4:	9303      	str	r3, [sp, #12]
 80232f6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80232fa:	f003 0101 	and.w	r1, r3, #1
 80232fe:	9102      	str	r1, [sp, #8]
 8023300:	9802      	ldr	r0, [sp, #8]
 8023302:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8023306:	4403      	add	r3, r0
 8023308:	fb01 2303 	mla	r3, r1, r3, r2
 802330c:	fb93 f3fa 	sdiv	r3, r3, sl
 8023310:	441d      	add	r5, r3
 8023312:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8023316:	441a      	add	r2, r3
 8023318:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802331c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8023320:	4419      	add	r1, r3
 8023322:	4a3e      	ldr	r2, [pc, #248]	; (802341c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8023324:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8023328:	6810      	ldr	r0, [r2, #0]
 802332a:	9205      	str	r2, [sp, #20]
 802332c:	6803      	ldr	r3, [r0, #0]
 802332e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8023330:	4798      	blx	r3
 8023332:	4b3b      	ldr	r3, [pc, #236]	; (8023420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8023334:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8023338:	8819      	ldrh	r1, [r3, #0]
 802333a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802333e:	434f      	muls	r7, r1
 8023340:	fb01 c404 	mla	r4, r1, r4, ip
 8023344:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023348:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802334c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8023350:	9204      	str	r2, [sp, #16]
 8023352:	9b04      	ldr	r3, [sp, #16]
 8023354:	429c      	cmp	r4, r3
 8023356:	d258      	bcs.n	802340a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8023358:	9b03      	ldr	r3, [sp, #12]
 802335a:	2b00      	cmp	r3, #0
 802335c:	d034      	beq.n	80233c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802335e:	782b      	ldrb	r3, [r5, #0]
 8023360:	1c6f      	adds	r7, r5, #1
 8023362:	f003 030f 	and.w	r3, r3, #15
 8023366:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802336a:	0e0b      	lsrs	r3, r1, #24
 802336c:	d006      	beq.n	802337c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802336e:	8822      	ldrh	r2, [r4, #0]
 8023370:	4640      	mov	r0, r8
 8023372:	9300      	str	r3, [sp, #0]
 8023374:	464b      	mov	r3, r9
 8023376:	f7ff ff43 	bl	8023200 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802337a:	8020      	strh	r0, [r4, #0]
 802337c:	3402      	adds	r4, #2
 802337e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8023382:	f1ba 0f01 	cmp.w	sl, #1
 8023386:	dd22      	ble.n	80233ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8023388:	783b      	ldrb	r3, [r7, #0]
 802338a:	091b      	lsrs	r3, r3, #4
 802338c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023390:	0e0b      	lsrs	r3, r1, #24
 8023392:	d006      	beq.n	80233a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8023394:	8822      	ldrh	r2, [r4, #0]
 8023396:	4640      	mov	r0, r8
 8023398:	9300      	str	r3, [sp, #0]
 802339a:	464b      	mov	r3, r9
 802339c:	f7ff ff30 	bl	8023200 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233a0:	8020      	strh	r0, [r4, #0]
 80233a2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80233a6:	f003 030f 	and.w	r3, r3, #15
 80233aa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80233ae:	0e0b      	lsrs	r3, r1, #24
 80233b0:	d006      	beq.n	80233c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80233b2:	8862      	ldrh	r2, [r4, #2]
 80233b4:	4640      	mov	r0, r8
 80233b6:	9300      	str	r3, [sp, #0]
 80233b8:	464b      	mov	r3, r9
 80233ba:	f7ff ff21 	bl	8023200 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233be:	8060      	strh	r0, [r4, #2]
 80233c0:	3404      	adds	r4, #4
 80233c2:	f1aa 0a02 	sub.w	sl, sl, #2
 80233c6:	e7dc      	b.n	8023382 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80233c8:	462f      	mov	r7, r5
 80233ca:	46da      	mov	sl, fp
 80233cc:	e7d9      	b.n	8023382 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80233ce:	d10d      	bne.n	80233ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80233d0:	783b      	ldrb	r3, [r7, #0]
 80233d2:	091b      	lsrs	r3, r3, #4
 80233d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80233d8:	0e0b      	lsrs	r3, r1, #24
 80233da:	d006      	beq.n	80233ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80233dc:	8822      	ldrh	r2, [r4, #0]
 80233de:	4640      	mov	r0, r8
 80233e0:	9300      	str	r3, [sp, #0]
 80233e2:	464b      	mov	r3, r9
 80233e4:	f7ff ff0c 	bl	8023200 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80233e8:	8020      	strh	r0, [r4, #0]
 80233ea:	3402      	adds	r4, #2
 80233ec:	9b06      	ldr	r3, [sp, #24]
 80233ee:	9a02      	ldr	r2, [sp, #8]
 80233f0:	881b      	ldrh	r3, [r3, #0]
 80233f2:	eba3 030b 	sub.w	r3, r3, fp
 80233f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80233fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80233fe:	4413      	add	r3, r2
 8023400:	9a07      	ldr	r2, [sp, #28]
 8023402:	fb93 f3f2 	sdiv	r3, r3, r2
 8023406:	441d      	add	r5, r3
 8023408:	e7a3      	b.n	8023352 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802340a:	9b05      	ldr	r3, [sp, #20]
 802340c:	6818      	ldr	r0, [r3, #0]
 802340e:	6803      	ldr	r3, [r0, #0]
 8023410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8023412:	4798      	blx	r3
 8023414:	b00d      	add	sp, #52	; 0x34
 8023416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802341a:	bf00      	nop
 802341c:	240016b0 	.word	0x240016b0
 8023420:	240016aa 	.word	0x240016aa

08023424 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8023424:	b570      	push	{r4, r5, r6, lr}
 8023426:	1214      	asrs	r4, r2, #8
 8023428:	788d      	ldrb	r5, [r1, #2]
 802342a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802342e:	10d0      	asrs	r0, r2, #3
 8023430:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023434:	00d2      	lsls	r2, r2, #3
 8023436:	fb15 f503 	smulbb	r5, r5, r3
 802343a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802343e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023442:	b2d2      	uxtb	r2, r2
 8023444:	fb04 5506 	mla	r5, r4, r6, r5
 8023448:	784c      	ldrb	r4, [r1, #1]
 802344a:	7809      	ldrb	r1, [r1, #0]
 802344c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8023450:	fb14 f403 	smulbb	r4, r4, r3
 8023454:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8023458:	fb11 f303 	smulbb	r3, r1, r3
 802345c:	b2ad      	uxth	r5, r5
 802345e:	fb00 4406 	mla	r4, r0, r6, r4
 8023462:	fb02 3306 	mla	r3, r2, r6, r3
 8023466:	1c68      	adds	r0, r5, #1
 8023468:	b2a4      	uxth	r4, r4
 802346a:	b29b      	uxth	r3, r3
 802346c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8023470:	1c62      	adds	r2, r4, #1
 8023472:	1c58      	adds	r0, r3, #1
 8023474:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023478:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802347c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023480:	0964      	lsrs	r4, r4, #5
 8023482:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023486:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802348a:	4328      	orrs	r0, r5
 802348c:	4320      	orrs	r0, r4
 802348e:	bd70      	pop	{r4, r5, r6, pc}

08023490 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8023490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023494:	b08f      	sub	sp, #60	; 0x3c
 8023496:	461c      	mov	r4, r3
 8023498:	4682      	mov	sl, r0
 802349a:	460e      	mov	r6, r1
 802349c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80234a0:	4615      	mov	r5, r2
 80234a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80234a4:	2f00      	cmp	r7, #0
 80234a6:	f000 8141 	beq.w	802372c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 80234aa:	6820      	ldr	r0, [r4, #0]
 80234ac:	aa0a      	add	r2, sp, #40	; 0x28
 80234ae:	6861      	ldr	r1, [r4, #4]
 80234b0:	f04f 0802 	mov.w	r8, #2
 80234b4:	3504      	adds	r5, #4
 80234b6:	c203      	stmia	r2!, {r0, r1}
 80234b8:	6818      	ldr	r0, [r3, #0]
 80234ba:	aa0c      	add	r2, sp, #48	; 0x30
 80234bc:	6859      	ldr	r1, [r3, #4]
 80234be:	c203      	stmia	r2!, {r0, r1}
 80234c0:	a80a      	add	r0, sp, #40	; 0x28
 80234c2:	f7ef ff95 	bl	80133f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80234c6:	4621      	mov	r1, r4
 80234c8:	a80c      	add	r0, sp, #48	; 0x30
 80234ca:	f7ef ffb9 	bl	8013440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80234ce:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80234d2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80234d6:	f002 0301 	and.w	r3, r2, #1
 80234da:	9306      	str	r3, [sp, #24]
 80234dc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80234e0:	f003 0101 	and.w	r1, r3, #1
 80234e4:	9105      	str	r1, [sp, #20]
 80234e6:	9805      	ldr	r0, [sp, #20]
 80234e8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80234ec:	4403      	add	r3, r0
 80234ee:	fb01 2303 	mla	r3, r1, r3, r2
 80234f2:	fb93 f3f8 	sdiv	r3, r3, r8
 80234f6:	441e      	add	r6, r3
 80234f8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80234fc:	441a      	add	r2, r3
 80234fe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8023502:	4419      	add	r1, r3
 8023504:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8023508:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802350c:	9303      	str	r3, [sp, #12]
 802350e:	4b89      	ldr	r3, [pc, #548]	; (8023734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023510:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8023514:	6818      	ldr	r0, [r3, #0]
 8023516:	6803      	ldr	r3, [r0, #0]
 8023518:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802351a:	4798      	blx	r3
 802351c:	4a86      	ldr	r2, [pc, #536]	; (8023738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802351e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8023522:	2fff      	cmp	r7, #255	; 0xff
 8023524:	8813      	ldrh	r3, [r2, #0]
 8023526:	4694      	mov	ip, r2
 8023528:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802352c:	fb03 9404 	mla	r4, r3, r4, r9
 8023530:	fb03 f30b 	mul.w	r3, r3, fp
 8023534:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023538:	d071      	beq.n	802361e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 802353a:	43f9      	mvns	r1, r7
 802353c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023540:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8023544:	b2c9      	uxtb	r1, r1
 8023546:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802354a:	9104      	str	r1, [sp, #16]
 802354c:	9b07      	ldr	r3, [sp, #28]
 802354e:	42a3      	cmp	r3, r4
 8023550:	f240 80e7 	bls.w	8023722 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8023554:	9b06      	ldr	r3, [sp, #24]
 8023556:	2b00      	cmp	r3, #0
 8023558:	d03d      	beq.n	80235d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 802355a:	7831      	ldrb	r1, [r6, #0]
 802355c:	4650      	mov	r0, sl
 802355e:	9b04      	ldr	r3, [sp, #16]
 8023560:	f106 0801 	add.w	r8, r6, #1
 8023564:	f001 010f 	and.w	r1, r1, #15
 8023568:	8822      	ldrh	r2, [r4, #0]
 802356a:	9300      	str	r3, [sp, #0]
 802356c:	463b      	mov	r3, r7
 802356e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023572:	4429      	add	r1, r5
 8023574:	f7ff ff56 	bl	8023424 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023578:	9b03      	ldr	r3, [sp, #12]
 802357a:	f824 0b02 	strh.w	r0, [r4], #2
 802357e:	f103 3bff 	add.w	fp, r3, #4294967295
 8023582:	f1bb 0f01 	cmp.w	fp, #1
 8023586:	46a1      	mov	r9, r4
 8023588:	f104 0404 	add.w	r4, r4, #4
 802358c:	dd27      	ble.n	80235de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802358e:	f898 1000 	ldrb.w	r1, [r8]
 8023592:	4650      	mov	r0, sl
 8023594:	9b04      	ldr	r3, [sp, #16]
 8023596:	f1ab 0b02 	sub.w	fp, fp, #2
 802359a:	0909      	lsrs	r1, r1, #4
 802359c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80235a0:	9300      	str	r3, [sp, #0]
 80235a2:	463b      	mov	r3, r7
 80235a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80235a8:	4429      	add	r1, r5
 80235aa:	f7ff ff3b 	bl	8023424 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80235ae:	f824 0c04 	strh.w	r0, [r4, #-4]
 80235b2:	f818 1b01 	ldrb.w	r1, [r8], #1
 80235b6:	4650      	mov	r0, sl
 80235b8:	9b04      	ldr	r3, [sp, #16]
 80235ba:	f001 010f 	and.w	r1, r1, #15
 80235be:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80235c2:	9300      	str	r3, [sp, #0]
 80235c4:	463b      	mov	r3, r7
 80235c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80235ca:	4429      	add	r1, r5
 80235cc:	f7ff ff2a 	bl	8023424 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80235d0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80235d4:	e7d5      	b.n	8023582 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80235d6:	46b0      	mov	r8, r6
 80235d8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80235dc:	e7d1      	b.n	8023582 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80235de:	d10f      	bne.n	8023600 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80235e0:	f898 1000 	ldrb.w	r1, [r8]
 80235e4:	4650      	mov	r0, sl
 80235e6:	9b04      	ldr	r3, [sp, #16]
 80235e8:	0909      	lsrs	r1, r1, #4
 80235ea:	f8b9 2000 	ldrh.w	r2, [r9]
 80235ee:	9300      	str	r3, [sp, #0]
 80235f0:	463b      	mov	r3, r7
 80235f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80235f6:	4429      	add	r1, r5
 80235f8:	f7ff ff14 	bl	8023424 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80235fc:	f829 0b02 	strh.w	r0, [r9], #2
 8023600:	9b08      	ldr	r3, [sp, #32]
 8023602:	9a05      	ldr	r2, [sp, #20]
 8023604:	881c      	ldrh	r4, [r3, #0]
 8023606:	9b03      	ldr	r3, [sp, #12]
 8023608:	1ae4      	subs	r4, r4, r3
 802360a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802360e:	4413      	add	r3, r2
 8023610:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023612:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023616:	fb93 f3f2 	sdiv	r3, r3, r2
 802361a:	441e      	add	r6, r3
 802361c:	e796      	b.n	802354c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802361e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023622:	4f46      	ldr	r7, [pc, #280]	; (802373c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8023624:	42a3      	cmp	r3, r4
 8023626:	d97c      	bls.n	8023722 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8023628:	9a06      	ldr	r2, [sp, #24]
 802362a:	2a00      	cmp	r2, #0
 802362c:	d054      	beq.n	80236d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802362e:	7830      	ldrb	r0, [r6, #0]
 8023630:	1c71      	adds	r1, r6, #1
 8023632:	f000 000f 	and.w	r0, r0, #15
 8023636:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802363a:	eb05 0e00 	add.w	lr, r5, r0
 802363e:	5c28      	ldrb	r0, [r5, r0]
 8023640:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8023644:	f89e e001 	ldrb.w	lr, [lr, #1]
 8023648:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802364c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023650:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023654:	ea42 020e 	orr.w	r2, r2, lr
 8023658:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802365c:	f824 2b02 	strh.w	r2, [r4], #2
 8023660:	9a03      	ldr	r2, [sp, #12]
 8023662:	f102 3eff 	add.w	lr, r2, #4294967295
 8023666:	f1be 0f01 	cmp.w	lr, #1
 802366a:	4620      	mov	r0, r4
 802366c:	f104 0404 	add.w	r4, r4, #4
 8023670:	dd36      	ble.n	80236e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8023672:	7808      	ldrb	r0, [r1, #0]
 8023674:	f1ae 0e02 	sub.w	lr, lr, #2
 8023678:	0900      	lsrs	r0, r0, #4
 802367a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802367e:	eb05 0a00 	add.w	sl, r5, r0
 8023682:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023686:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802368a:	00d2      	lsls	r2, r2, #3
 802368c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023690:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023694:	ea49 0202 	orr.w	r2, r9, r2
 8023698:	f815 9000 	ldrb.w	r9, [r5, r0]
 802369c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80236a0:	f824 2c04 	strh.w	r2, [r4, #-4]
 80236a4:	f811 0b01 	ldrb.w	r0, [r1], #1
 80236a8:	f000 000f 	and.w	r0, r0, #15
 80236ac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80236b0:	eb05 0a00 	add.w	sl, r5, r0
 80236b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80236b8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80236bc:	00d2      	lsls	r2, r2, #3
 80236be:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80236c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80236c6:	ea49 0202 	orr.w	r2, r9, r2
 80236ca:	f815 9000 	ldrb.w	r9, [r5, r0]
 80236ce:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80236d2:	f824 2c02 	strh.w	r2, [r4, #-2]
 80236d6:	e7c6      	b.n	8023666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80236d8:	4631      	mov	r1, r6
 80236da:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80236de:	e7c2      	b.n	8023666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80236e0:	d111      	bne.n	8023706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80236e2:	7809      	ldrb	r1, [r1, #0]
 80236e4:	0909      	lsrs	r1, r1, #4
 80236e6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80236ea:	186c      	adds	r4, r5, r1
 80236ec:	5c69      	ldrb	r1, [r5, r1]
 80236ee:	78a2      	ldrb	r2, [r4, #2]
 80236f0:	7864      	ldrb	r4, [r4, #1]
 80236f2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80236f6:	00e4      	lsls	r4, r4, #3
 80236f8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80236fc:	4322      	orrs	r2, r4
 80236fe:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023702:	f820 2b02 	strh.w	r2, [r0], #2
 8023706:	9a03      	ldr	r2, [sp, #12]
 8023708:	f8bc 4000 	ldrh.w	r4, [ip]
 802370c:	9905      	ldr	r1, [sp, #20]
 802370e:	1aa4      	subs	r4, r4, r2
 8023710:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8023714:	440a      	add	r2, r1
 8023716:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802371a:	fb92 f2f8 	sdiv	r2, r2, r8
 802371e:	4416      	add	r6, r2
 8023720:	e780      	b.n	8023624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 8023722:	4b04      	ldr	r3, [pc, #16]	; (8023734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8023724:	6818      	ldr	r0, [r3, #0]
 8023726:	6803      	ldr	r3, [r0, #0]
 8023728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802372a:	4798      	blx	r3
 802372c:	b00f      	add	sp, #60	; 0x3c
 802372e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023732:	bf00      	nop
 8023734:	240016b0 	.word	0x240016b0
 8023738:	240016aa 	.word	0x240016aa
 802373c:	fffff800 	.word	0xfffff800

08023740 <CRC_Lock>:
 8023740:	4a20      	ldr	r2, [pc, #128]	; (80237c4 <CRC_Lock+0x84>)
 8023742:	b530      	push	{r4, r5, lr}
 8023744:	6813      	ldr	r3, [r2, #0]
 8023746:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 802374a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802374e:	f023 0301 	bic.w	r3, r3, #1
 8023752:	6013      	str	r3, [r2, #0]
 8023754:	4b1c      	ldr	r3, [pc, #112]	; (80237c8 <CRC_Lock+0x88>)
 8023756:	681a      	ldr	r2, [r3, #0]
 8023758:	4022      	ands	r2, r4
 802375a:	42aa      	cmp	r2, r5
 802375c:	d005      	beq.n	802376a <CRC_Lock+0x2a>
 802375e:	681b      	ldr	r3, [r3, #0]
 8023760:	f24c 2270 	movw	r2, #49776	; 0xc270
 8023764:	4023      	ands	r3, r4
 8023766:	4293      	cmp	r3, r2
 8023768:	d124      	bne.n	80237b4 <CRC_Lock+0x74>
 802376a:	4b18      	ldr	r3, [pc, #96]	; (80237cc <CRC_Lock+0x8c>)
 802376c:	681b      	ldr	r3, [r3, #0]
 802376e:	bb0b      	cbnz	r3, 80237b4 <CRC_Lock+0x74>
 8023770:	4b17      	ldr	r3, [pc, #92]	; (80237d0 <CRC_Lock+0x90>)
 8023772:	681a      	ldr	r2, [r3, #0]
 8023774:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023778:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802377c:	d00d      	beq.n	802379a <CRC_Lock+0x5a>
 802377e:	681a      	ldr	r2, [r3, #0]
 8023780:	f240 4483 	movw	r4, #1155	; 0x483
 8023784:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023788:	42a2      	cmp	r2, r4
 802378a:	d006      	beq.n	802379a <CRC_Lock+0x5a>
 802378c:	681b      	ldr	r3, [r3, #0]
 802378e:	f240 4285 	movw	r2, #1157	; 0x485
 8023792:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023796:	4293      	cmp	r3, r2
 8023798:	d10c      	bne.n	80237b4 <CRC_Lock+0x74>
 802379a:	4b0e      	ldr	r3, [pc, #56]	; (80237d4 <CRC_Lock+0x94>)
 802379c:	2201      	movs	r2, #1
 802379e:	601a      	str	r2, [r3, #0]
 80237a0:	681a      	ldr	r2, [r3, #0]
 80237a2:	2a00      	cmp	r2, #0
 80237a4:	d1fc      	bne.n	80237a0 <CRC_Lock+0x60>
 80237a6:	4b0c      	ldr	r3, [pc, #48]	; (80237d8 <CRC_Lock+0x98>)
 80237a8:	6018      	str	r0, [r3, #0]
 80237aa:	6818      	ldr	r0, [r3, #0]
 80237ac:	1a43      	subs	r3, r0, r1
 80237ae:	4258      	negs	r0, r3
 80237b0:	4158      	adcs	r0, r3
 80237b2:	bd30      	pop	{r4, r5, pc}
 80237b4:	4b09      	ldr	r3, [pc, #36]	; (80237dc <CRC_Lock+0x9c>)
 80237b6:	2201      	movs	r2, #1
 80237b8:	601a      	str	r2, [r3, #0]
 80237ba:	681a      	ldr	r2, [r3, #0]
 80237bc:	2a00      	cmp	r2, #0
 80237be:	d1fc      	bne.n	80237ba <CRC_Lock+0x7a>
 80237c0:	4b07      	ldr	r3, [pc, #28]	; (80237e0 <CRC_Lock+0xa0>)
 80237c2:	e7f1      	b.n	80237a8 <CRC_Lock+0x68>
 80237c4:	e0002000 	.word	0xe0002000
 80237c8:	e000ed00 	.word	0xe000ed00
 80237cc:	e0042000 	.word	0xe0042000
 80237d0:	5c001000 	.word	0x5c001000
 80237d4:	58024c08 	.word	0x58024c08
 80237d8:	58024c00 	.word	0x58024c00
 80237dc:	40023008 	.word	0x40023008
 80237e0:	40023000 	.word	0x40023000

080237e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80237e4:	6101      	str	r1, [r0, #16]
 80237e6:	4770      	bx	lr

080237e8 <_ZN8touchgfx8Gestures4tickEv>:
 80237e8:	7b83      	ldrb	r3, [r0, #14]
 80237ea:	b14b      	cbz	r3, 8023800 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80237ec:	8903      	ldrh	r3, [r0, #8]
 80237ee:	3301      	adds	r3, #1
 80237f0:	b29b      	uxth	r3, r3
 80237f2:	2b07      	cmp	r3, #7
 80237f4:	8103      	strh	r3, [r0, #8]
 80237f6:	bf81      	itttt	hi
 80237f8:	2300      	movhi	r3, #0
 80237fa:	8143      	strhhi	r3, [r0, #10]
 80237fc:	8183      	strhhi	r3, [r0, #12]
 80237fe:	7383      	strbhi	r3, [r0, #14]
 8023800:	4770      	bx	lr
	...

08023804 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023804:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023808:	4698      	mov	r8, r3
 802380a:	8883      	ldrh	r3, [r0, #4]
 802380c:	4604      	mov	r4, r0
 802380e:	4617      	mov	r7, r2
 8023810:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023814:	eba8 0303 	sub.w	r3, r8, r3
 8023818:	4a19      	ldr	r2, [pc, #100]	; (8023880 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802381a:	460e      	mov	r6, r1
 802381c:	b21b      	sxth	r3, r3
 802381e:	88c1      	ldrh	r1, [r0, #6]
 8023820:	9200      	str	r2, [sp, #0]
 8023822:	2000      	movs	r0, #0
 8023824:	2b00      	cmp	r3, #0
 8023826:	8aa2      	ldrh	r2, [r4, #20]
 8023828:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802382c:	bfb8      	it	lt
 802382e:	425b      	neglt	r3, r3
 8023830:	f88d 0004 	strb.w	r0, [sp, #4]
 8023834:	f8ad 1008 	strh.w	r1, [sp, #8]
 8023838:	b21b      	sxth	r3, r3
 802383a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802383e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8023842:	4293      	cmp	r3, r2
 8023844:	dc07      	bgt.n	8023856 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8023846:	1a69      	subs	r1, r5, r1
 8023848:	b209      	sxth	r1, r1
 802384a:	2900      	cmp	r1, #0
 802384c:	bfb8      	it	lt
 802384e:	4249      	neglt	r1, r1
 8023850:	b209      	sxth	r1, r1
 8023852:	428a      	cmp	r2, r1
 8023854:	da10      	bge.n	8023878 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8023856:	6920      	ldr	r0, [r4, #16]
 8023858:	4669      	mov	r1, sp
 802385a:	eba8 0606 	sub.w	r6, r8, r6
 802385e:	1bef      	subs	r7, r5, r7
 8023860:	6803      	ldr	r3, [r0, #0]
 8023862:	685b      	ldr	r3, [r3, #4]
 8023864:	4798      	blx	r3
 8023866:	2300      	movs	r3, #0
 8023868:	2001      	movs	r0, #1
 802386a:	8166      	strh	r6, [r4, #10]
 802386c:	8123      	strh	r3, [r4, #8]
 802386e:	81a7      	strh	r7, [r4, #12]
 8023870:	f8a4 8004 	strh.w	r8, [r4, #4]
 8023874:	80e5      	strh	r5, [r4, #6]
 8023876:	73a0      	strb	r0, [r4, #14]
 8023878:	b004      	add	sp, #16
 802387a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802387e:	bf00      	nop
 8023880:	080261d8 	.word	0x080261d8

08023884 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8023884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023886:	461e      	mov	r6, r3
 8023888:	1e4b      	subs	r3, r1, #1
 802388a:	b085      	sub	sp, #20
 802388c:	4604      	mov	r4, r0
 802388e:	2b01      	cmp	r3, #1
 8023890:	460d      	mov	r5, r1
 8023892:	4617      	mov	r7, r2
 8023894:	d84b      	bhi.n	802392e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8023896:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802389a:	1cd3      	adds	r3, r2, #3
 802389c:	b29b      	uxth	r3, r3
 802389e:	2b06      	cmp	r3, #6
 80238a0:	d916      	bls.n	80238d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80238a2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8023944 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80238a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80238aa:	f8cd c004 	str.w	ip, [sp, #4]
 80238ae:	f04f 0c00 	mov.w	ip, #0
 80238b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80238b6:	6900      	ldr	r0, [r0, #16]
 80238b8:	f8ad 100c 	strh.w	r1, [sp, #12]
 80238bc:	a901      	add	r1, sp, #4
 80238be:	f88d c008 	strb.w	ip, [sp, #8]
 80238c2:	f8ad 200a 	strh.w	r2, [sp, #10]
 80238c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80238ca:	6803      	ldr	r3, [r0, #0]
 80238cc:	689b      	ldr	r3, [r3, #8]
 80238ce:	4798      	blx	r3
 80238d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80238d4:	1cd3      	adds	r3, r2, #3
 80238d6:	b29b      	uxth	r3, r3
 80238d8:	2b06      	cmp	r3, #6
 80238da:	d916      	bls.n	802390a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80238dc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8023944 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80238e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80238e4:	f8cd c004 	str.w	ip, [sp, #4]
 80238e8:	f04f 0c01 	mov.w	ip, #1
 80238ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80238f0:	6920      	ldr	r0, [r4, #16]
 80238f2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80238f6:	a901      	add	r1, sp, #4
 80238f8:	f88d c008 	strb.w	ip, [sp, #8]
 80238fc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023900:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023904:	6803      	ldr	r3, [r0, #0]
 8023906:	689b      	ldr	r3, [r3, #8]
 8023908:	4798      	blx	r3
 802390a:	4b0d      	ldr	r3, [pc, #52]	; (8023940 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802390c:	a901      	add	r1, sp, #4
 802390e:	6920      	ldr	r0, [r4, #16]
 8023910:	9301      	str	r3, [sp, #4]
 8023912:	2300      	movs	r3, #0
 8023914:	f88d 5008 	strb.w	r5, [sp, #8]
 8023918:	f8ad 700a 	strh.w	r7, [sp, #10]
 802391c:	f8ad 600c 	strh.w	r6, [sp, #12]
 8023920:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023924:	6803      	ldr	r3, [r0, #0]
 8023926:	681b      	ldr	r3, [r3, #0]
 8023928:	4798      	blx	r3
 802392a:	b005      	add	sp, #20
 802392c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802392e:	2900      	cmp	r1, #0
 8023930:	d1eb      	bne.n	802390a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023932:	80a2      	strh	r2, [r4, #4]
 8023934:	80c6      	strh	r6, [r0, #6]
 8023936:	60a1      	str	r1, [r4, #8]
 8023938:	81a1      	strh	r1, [r4, #12]
 802393a:	73a1      	strb	r1, [r4, #14]
 802393c:	e7e5      	b.n	802390a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802393e:	bf00      	nop
 8023940:	080261c4 	.word	0x080261c4
 8023944:	080261ec 	.word	0x080261ec

08023948 <__aeabi_atexit>:
 8023948:	460b      	mov	r3, r1
 802394a:	4601      	mov	r1, r0
 802394c:	4618      	mov	r0, r3
 802394e:	f000 b90f 	b.w	8023b70 <__cxa_atexit>

08023952 <_ZdlPvj>:
 8023952:	f000 b812 	b.w	802397a <_ZdlPv>

08023956 <__cxa_guard_acquire>:
 8023956:	6803      	ldr	r3, [r0, #0]
 8023958:	07db      	lsls	r3, r3, #31
 802395a:	d406      	bmi.n	802396a <__cxa_guard_acquire+0x14>
 802395c:	7843      	ldrb	r3, [r0, #1]
 802395e:	b103      	cbz	r3, 8023962 <__cxa_guard_acquire+0xc>
 8023960:	deff      	udf	#255	; 0xff
 8023962:	2301      	movs	r3, #1
 8023964:	7043      	strb	r3, [r0, #1]
 8023966:	4618      	mov	r0, r3
 8023968:	4770      	bx	lr
 802396a:	2000      	movs	r0, #0
 802396c:	4770      	bx	lr

0802396e <__cxa_guard_release>:
 802396e:	2301      	movs	r3, #1
 8023970:	6003      	str	r3, [r0, #0]
 8023972:	4770      	bx	lr

08023974 <__cxa_pure_virtual>:
 8023974:	b508      	push	{r3, lr}
 8023976:	f000 f80f 	bl	8023998 <_ZSt9terminatev>

0802397a <_ZdlPv>:
 802397a:	f000 b845 	b.w	8023a08 <free>

0802397e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802397e:	b508      	push	{r3, lr}
 8023980:	4780      	blx	r0
 8023982:	f000 f80e 	bl	80239a2 <abort>
	...

08023988 <_ZSt13get_terminatev>:
 8023988:	4b02      	ldr	r3, [pc, #8]	; (8023994 <_ZSt13get_terminatev+0xc>)
 802398a:	6818      	ldr	r0, [r3, #0]
 802398c:	f3bf 8f5b 	dmb	ish
 8023990:	4770      	bx	lr
 8023992:	bf00      	nop
 8023994:	24000094 	.word	0x24000094

08023998 <_ZSt9terminatev>:
 8023998:	b508      	push	{r3, lr}
 802399a:	f7ff fff5 	bl	8023988 <_ZSt13get_terminatev>
 802399e:	f7ff ffee 	bl	802397e <_ZN10__cxxabiv111__terminateEPFvvE>

080239a2 <abort>:
 80239a2:	b508      	push	{r3, lr}
 80239a4:	2006      	movs	r0, #6
 80239a6:	f000 fabb 	bl	8023f20 <raise>
 80239aa:	2001      	movs	r0, #1
 80239ac:	f7dd feac 	bl	8001708 <_exit>

080239b0 <__assert_func>:
 80239b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80239b2:	4614      	mov	r4, r2
 80239b4:	461a      	mov	r2, r3
 80239b6:	4b09      	ldr	r3, [pc, #36]	; (80239dc <__assert_func+0x2c>)
 80239b8:	681b      	ldr	r3, [r3, #0]
 80239ba:	4605      	mov	r5, r0
 80239bc:	68d8      	ldr	r0, [r3, #12]
 80239be:	b14c      	cbz	r4, 80239d4 <__assert_func+0x24>
 80239c0:	4b07      	ldr	r3, [pc, #28]	; (80239e0 <__assert_func+0x30>)
 80239c2:	9100      	str	r1, [sp, #0]
 80239c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80239c8:	4906      	ldr	r1, [pc, #24]	; (80239e4 <__assert_func+0x34>)
 80239ca:	462b      	mov	r3, r5
 80239cc:	f000 f970 	bl	8023cb0 <fiprintf>
 80239d0:	f7ff ffe7 	bl	80239a2 <abort>
 80239d4:	4b04      	ldr	r3, [pc, #16]	; (80239e8 <__assert_func+0x38>)
 80239d6:	461c      	mov	r4, r3
 80239d8:	e7f3      	b.n	80239c2 <__assert_func+0x12>
 80239da:	bf00      	nop
 80239dc:	240000f0 	.word	0x240000f0
 80239e0:	08026508 	.word	0x08026508
 80239e4:	08026515 	.word	0x08026515
 80239e8:	08026543 	.word	0x08026543

080239ec <atexit>:
 80239ec:	2300      	movs	r3, #0
 80239ee:	4601      	mov	r1, r0
 80239f0:	461a      	mov	r2, r3
 80239f2:	4618      	mov	r0, r3
 80239f4:	f000 bb40 	b.w	8024078 <__register_exitproc>

080239f8 <malloc>:
 80239f8:	4b02      	ldr	r3, [pc, #8]	; (8023a04 <malloc+0xc>)
 80239fa:	4601      	mov	r1, r0
 80239fc:	6818      	ldr	r0, [r3, #0]
 80239fe:	f000 b82b 	b.w	8023a58 <_malloc_r>
 8023a02:	bf00      	nop
 8023a04:	240000f0 	.word	0x240000f0

08023a08 <free>:
 8023a08:	4b02      	ldr	r3, [pc, #8]	; (8023a14 <free+0xc>)
 8023a0a:	4601      	mov	r1, r0
 8023a0c:	6818      	ldr	r0, [r3, #0]
 8023a0e:	f000 bb91 	b.w	8024134 <_free_r>
 8023a12:	bf00      	nop
 8023a14:	240000f0 	.word	0x240000f0

08023a18 <sbrk_aligned>:
 8023a18:	b570      	push	{r4, r5, r6, lr}
 8023a1a:	4e0e      	ldr	r6, [pc, #56]	; (8023a54 <sbrk_aligned+0x3c>)
 8023a1c:	460c      	mov	r4, r1
 8023a1e:	6831      	ldr	r1, [r6, #0]
 8023a20:	4605      	mov	r5, r0
 8023a22:	b911      	cbnz	r1, 8023a2a <sbrk_aligned+0x12>
 8023a24:	f000 facc 	bl	8023fc0 <_sbrk_r>
 8023a28:	6030      	str	r0, [r6, #0]
 8023a2a:	4621      	mov	r1, r4
 8023a2c:	4628      	mov	r0, r5
 8023a2e:	f000 fac7 	bl	8023fc0 <_sbrk_r>
 8023a32:	1c43      	adds	r3, r0, #1
 8023a34:	d00a      	beq.n	8023a4c <sbrk_aligned+0x34>
 8023a36:	1cc4      	adds	r4, r0, #3
 8023a38:	f024 0403 	bic.w	r4, r4, #3
 8023a3c:	42a0      	cmp	r0, r4
 8023a3e:	d007      	beq.n	8023a50 <sbrk_aligned+0x38>
 8023a40:	1a21      	subs	r1, r4, r0
 8023a42:	4628      	mov	r0, r5
 8023a44:	f000 fabc 	bl	8023fc0 <_sbrk_r>
 8023a48:	3001      	adds	r0, #1
 8023a4a:	d101      	bne.n	8023a50 <sbrk_aligned+0x38>
 8023a4c:	f04f 34ff 	mov.w	r4, #4294967295
 8023a50:	4620      	mov	r0, r4
 8023a52:	bd70      	pop	{r4, r5, r6, pc}
 8023a54:	24002000 	.word	0x24002000

08023a58 <_malloc_r>:
 8023a58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023a5c:	1ccd      	adds	r5, r1, #3
 8023a5e:	f025 0503 	bic.w	r5, r5, #3
 8023a62:	3508      	adds	r5, #8
 8023a64:	2d0c      	cmp	r5, #12
 8023a66:	bf38      	it	cc
 8023a68:	250c      	movcc	r5, #12
 8023a6a:	2d00      	cmp	r5, #0
 8023a6c:	4607      	mov	r7, r0
 8023a6e:	db01      	blt.n	8023a74 <_malloc_r+0x1c>
 8023a70:	42a9      	cmp	r1, r5
 8023a72:	d905      	bls.n	8023a80 <_malloc_r+0x28>
 8023a74:	230c      	movs	r3, #12
 8023a76:	603b      	str	r3, [r7, #0]
 8023a78:	2600      	movs	r6, #0
 8023a7a:	4630      	mov	r0, r6
 8023a7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023a80:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8023b54 <_malloc_r+0xfc>
 8023a84:	f000 f868 	bl	8023b58 <__malloc_lock>
 8023a88:	f8d8 3000 	ldr.w	r3, [r8]
 8023a8c:	461c      	mov	r4, r3
 8023a8e:	bb5c      	cbnz	r4, 8023ae8 <_malloc_r+0x90>
 8023a90:	4629      	mov	r1, r5
 8023a92:	4638      	mov	r0, r7
 8023a94:	f7ff ffc0 	bl	8023a18 <sbrk_aligned>
 8023a98:	1c43      	adds	r3, r0, #1
 8023a9a:	4604      	mov	r4, r0
 8023a9c:	d155      	bne.n	8023b4a <_malloc_r+0xf2>
 8023a9e:	f8d8 4000 	ldr.w	r4, [r8]
 8023aa2:	4626      	mov	r6, r4
 8023aa4:	2e00      	cmp	r6, #0
 8023aa6:	d145      	bne.n	8023b34 <_malloc_r+0xdc>
 8023aa8:	2c00      	cmp	r4, #0
 8023aaa:	d048      	beq.n	8023b3e <_malloc_r+0xe6>
 8023aac:	6823      	ldr	r3, [r4, #0]
 8023aae:	4631      	mov	r1, r6
 8023ab0:	4638      	mov	r0, r7
 8023ab2:	eb04 0903 	add.w	r9, r4, r3
 8023ab6:	f000 fa83 	bl	8023fc0 <_sbrk_r>
 8023aba:	4581      	cmp	r9, r0
 8023abc:	d13f      	bne.n	8023b3e <_malloc_r+0xe6>
 8023abe:	6821      	ldr	r1, [r4, #0]
 8023ac0:	1a6d      	subs	r5, r5, r1
 8023ac2:	4629      	mov	r1, r5
 8023ac4:	4638      	mov	r0, r7
 8023ac6:	f7ff ffa7 	bl	8023a18 <sbrk_aligned>
 8023aca:	3001      	adds	r0, #1
 8023acc:	d037      	beq.n	8023b3e <_malloc_r+0xe6>
 8023ace:	6823      	ldr	r3, [r4, #0]
 8023ad0:	442b      	add	r3, r5
 8023ad2:	6023      	str	r3, [r4, #0]
 8023ad4:	f8d8 3000 	ldr.w	r3, [r8]
 8023ad8:	2b00      	cmp	r3, #0
 8023ada:	d038      	beq.n	8023b4e <_malloc_r+0xf6>
 8023adc:	685a      	ldr	r2, [r3, #4]
 8023ade:	42a2      	cmp	r2, r4
 8023ae0:	d12b      	bne.n	8023b3a <_malloc_r+0xe2>
 8023ae2:	2200      	movs	r2, #0
 8023ae4:	605a      	str	r2, [r3, #4]
 8023ae6:	e00f      	b.n	8023b08 <_malloc_r+0xb0>
 8023ae8:	6822      	ldr	r2, [r4, #0]
 8023aea:	1b52      	subs	r2, r2, r5
 8023aec:	d41f      	bmi.n	8023b2e <_malloc_r+0xd6>
 8023aee:	2a0b      	cmp	r2, #11
 8023af0:	d917      	bls.n	8023b22 <_malloc_r+0xca>
 8023af2:	1961      	adds	r1, r4, r5
 8023af4:	42a3      	cmp	r3, r4
 8023af6:	6025      	str	r5, [r4, #0]
 8023af8:	bf18      	it	ne
 8023afa:	6059      	strne	r1, [r3, #4]
 8023afc:	6863      	ldr	r3, [r4, #4]
 8023afe:	bf08      	it	eq
 8023b00:	f8c8 1000 	streq.w	r1, [r8]
 8023b04:	5162      	str	r2, [r4, r5]
 8023b06:	604b      	str	r3, [r1, #4]
 8023b08:	4638      	mov	r0, r7
 8023b0a:	f104 060b 	add.w	r6, r4, #11
 8023b0e:	f000 f829 	bl	8023b64 <__malloc_unlock>
 8023b12:	f026 0607 	bic.w	r6, r6, #7
 8023b16:	1d23      	adds	r3, r4, #4
 8023b18:	1af2      	subs	r2, r6, r3
 8023b1a:	d0ae      	beq.n	8023a7a <_malloc_r+0x22>
 8023b1c:	1b9b      	subs	r3, r3, r6
 8023b1e:	50a3      	str	r3, [r4, r2]
 8023b20:	e7ab      	b.n	8023a7a <_malloc_r+0x22>
 8023b22:	42a3      	cmp	r3, r4
 8023b24:	6862      	ldr	r2, [r4, #4]
 8023b26:	d1dd      	bne.n	8023ae4 <_malloc_r+0x8c>
 8023b28:	f8c8 2000 	str.w	r2, [r8]
 8023b2c:	e7ec      	b.n	8023b08 <_malloc_r+0xb0>
 8023b2e:	4623      	mov	r3, r4
 8023b30:	6864      	ldr	r4, [r4, #4]
 8023b32:	e7ac      	b.n	8023a8e <_malloc_r+0x36>
 8023b34:	4634      	mov	r4, r6
 8023b36:	6876      	ldr	r6, [r6, #4]
 8023b38:	e7b4      	b.n	8023aa4 <_malloc_r+0x4c>
 8023b3a:	4613      	mov	r3, r2
 8023b3c:	e7cc      	b.n	8023ad8 <_malloc_r+0x80>
 8023b3e:	230c      	movs	r3, #12
 8023b40:	603b      	str	r3, [r7, #0]
 8023b42:	4638      	mov	r0, r7
 8023b44:	f000 f80e 	bl	8023b64 <__malloc_unlock>
 8023b48:	e797      	b.n	8023a7a <_malloc_r+0x22>
 8023b4a:	6025      	str	r5, [r4, #0]
 8023b4c:	e7dc      	b.n	8023b08 <_malloc_r+0xb0>
 8023b4e:	605b      	str	r3, [r3, #4]
 8023b50:	deff      	udf	#255	; 0xff
 8023b52:	bf00      	nop
 8023b54:	24001ffc 	.word	0x24001ffc

08023b58 <__malloc_lock>:
 8023b58:	4801      	ldr	r0, [pc, #4]	; (8023b60 <__malloc_lock+0x8>)
 8023b5a:	f000 ba7d 	b.w	8024058 <__retarget_lock_acquire_recursive>
 8023b5e:	bf00      	nop
 8023b60:	24002145 	.word	0x24002145

08023b64 <__malloc_unlock>:
 8023b64:	4801      	ldr	r0, [pc, #4]	; (8023b6c <__malloc_unlock+0x8>)
 8023b66:	f000 ba78 	b.w	802405a <__retarget_lock_release_recursive>
 8023b6a:	bf00      	nop
 8023b6c:	24002145 	.word	0x24002145

08023b70 <__cxa_atexit>:
 8023b70:	b510      	push	{r4, lr}
 8023b72:	4c05      	ldr	r4, [pc, #20]	; (8023b88 <__cxa_atexit+0x18>)
 8023b74:	4613      	mov	r3, r2
 8023b76:	b12c      	cbz	r4, 8023b84 <__cxa_atexit+0x14>
 8023b78:	460a      	mov	r2, r1
 8023b7a:	4601      	mov	r1, r0
 8023b7c:	2002      	movs	r0, #2
 8023b7e:	f000 fa7b 	bl	8024078 <__register_exitproc>
 8023b82:	bd10      	pop	{r4, pc}
 8023b84:	4620      	mov	r0, r4
 8023b86:	e7fc      	b.n	8023b82 <__cxa_atexit+0x12>
 8023b88:	08024079 	.word	0x08024079

08023b8c <std>:
 8023b8c:	2300      	movs	r3, #0
 8023b8e:	b510      	push	{r4, lr}
 8023b90:	4604      	mov	r4, r0
 8023b92:	e9c0 3300 	strd	r3, r3, [r0]
 8023b96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8023b9a:	6083      	str	r3, [r0, #8]
 8023b9c:	8181      	strh	r1, [r0, #12]
 8023b9e:	6643      	str	r3, [r0, #100]	; 0x64
 8023ba0:	81c2      	strh	r2, [r0, #14]
 8023ba2:	6183      	str	r3, [r0, #24]
 8023ba4:	4619      	mov	r1, r3
 8023ba6:	2208      	movs	r2, #8
 8023ba8:	305c      	adds	r0, #92	; 0x5c
 8023baa:	f000 f989 	bl	8023ec0 <memset>
 8023bae:	4b05      	ldr	r3, [pc, #20]	; (8023bc4 <std+0x38>)
 8023bb0:	6263      	str	r3, [r4, #36]	; 0x24
 8023bb2:	4b05      	ldr	r3, [pc, #20]	; (8023bc8 <std+0x3c>)
 8023bb4:	62a3      	str	r3, [r4, #40]	; 0x28
 8023bb6:	4b05      	ldr	r3, [pc, #20]	; (8023bcc <std+0x40>)
 8023bb8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8023bba:	4b05      	ldr	r3, [pc, #20]	; (8023bd0 <std+0x44>)
 8023bbc:	6224      	str	r4, [r4, #32]
 8023bbe:	6323      	str	r3, [r4, #48]	; 0x30
 8023bc0:	bd10      	pop	{r4, pc}
 8023bc2:	bf00      	nop
 8023bc4:	08023d11 	.word	0x08023d11
 8023bc8:	08023d33 	.word	0x08023d33
 8023bcc:	08023d6b 	.word	0x08023d6b
 8023bd0:	08023d8f 	.word	0x08023d8f

08023bd4 <stdio_exit_handler>:
 8023bd4:	4a02      	ldr	r2, [pc, #8]	; (8023be0 <stdio_exit_handler+0xc>)
 8023bd6:	4903      	ldr	r1, [pc, #12]	; (8023be4 <stdio_exit_handler+0x10>)
 8023bd8:	4803      	ldr	r0, [pc, #12]	; (8023be8 <stdio_exit_handler+0x14>)
 8023bda:	f000 b87b 	b.w	8023cd4 <_fwalk_sglue>
 8023bde:	bf00      	nop
 8023be0:	24000098 	.word	0x24000098
 8023be4:	08024881 	.word	0x08024881
 8023be8:	240000a4 	.word	0x240000a4

08023bec <cleanup_stdio>:
 8023bec:	6841      	ldr	r1, [r0, #4]
 8023bee:	4b0c      	ldr	r3, [pc, #48]	; (8023c20 <cleanup_stdio+0x34>)
 8023bf0:	4299      	cmp	r1, r3
 8023bf2:	b510      	push	{r4, lr}
 8023bf4:	4604      	mov	r4, r0
 8023bf6:	d001      	beq.n	8023bfc <cleanup_stdio+0x10>
 8023bf8:	f000 fe42 	bl	8024880 <_fflush_r>
 8023bfc:	68a1      	ldr	r1, [r4, #8]
 8023bfe:	4b09      	ldr	r3, [pc, #36]	; (8023c24 <cleanup_stdio+0x38>)
 8023c00:	4299      	cmp	r1, r3
 8023c02:	d002      	beq.n	8023c0a <cleanup_stdio+0x1e>
 8023c04:	4620      	mov	r0, r4
 8023c06:	f000 fe3b 	bl	8024880 <_fflush_r>
 8023c0a:	68e1      	ldr	r1, [r4, #12]
 8023c0c:	4b06      	ldr	r3, [pc, #24]	; (8023c28 <cleanup_stdio+0x3c>)
 8023c0e:	4299      	cmp	r1, r3
 8023c10:	d004      	beq.n	8023c1c <cleanup_stdio+0x30>
 8023c12:	4620      	mov	r0, r4
 8023c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023c18:	f000 be32 	b.w	8024880 <_fflush_r>
 8023c1c:	bd10      	pop	{r4, pc}
 8023c1e:	bf00      	nop
 8023c20:	24002004 	.word	0x24002004
 8023c24:	2400206c 	.word	0x2400206c
 8023c28:	240020d4 	.word	0x240020d4

08023c2c <global_stdio_init.part.0>:
 8023c2c:	b510      	push	{r4, lr}
 8023c2e:	4b0b      	ldr	r3, [pc, #44]	; (8023c5c <global_stdio_init.part.0+0x30>)
 8023c30:	4c0b      	ldr	r4, [pc, #44]	; (8023c60 <global_stdio_init.part.0+0x34>)
 8023c32:	4a0c      	ldr	r2, [pc, #48]	; (8023c64 <global_stdio_init.part.0+0x38>)
 8023c34:	601a      	str	r2, [r3, #0]
 8023c36:	4620      	mov	r0, r4
 8023c38:	2200      	movs	r2, #0
 8023c3a:	2104      	movs	r1, #4
 8023c3c:	f7ff ffa6 	bl	8023b8c <std>
 8023c40:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8023c44:	2201      	movs	r2, #1
 8023c46:	2109      	movs	r1, #9
 8023c48:	f7ff ffa0 	bl	8023b8c <std>
 8023c4c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8023c50:	2202      	movs	r2, #2
 8023c52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023c56:	2112      	movs	r1, #18
 8023c58:	f7ff bf98 	b.w	8023b8c <std>
 8023c5c:	2400213c 	.word	0x2400213c
 8023c60:	24002004 	.word	0x24002004
 8023c64:	08023bd5 	.word	0x08023bd5

08023c68 <__sfp_lock_acquire>:
 8023c68:	4801      	ldr	r0, [pc, #4]	; (8023c70 <__sfp_lock_acquire+0x8>)
 8023c6a:	f000 b9f5 	b.w	8024058 <__retarget_lock_acquire_recursive>
 8023c6e:	bf00      	nop
 8023c70:	24002146 	.word	0x24002146

08023c74 <__sfp_lock_release>:
 8023c74:	4801      	ldr	r0, [pc, #4]	; (8023c7c <__sfp_lock_release+0x8>)
 8023c76:	f000 b9f0 	b.w	802405a <__retarget_lock_release_recursive>
 8023c7a:	bf00      	nop
 8023c7c:	24002146 	.word	0x24002146

08023c80 <__sinit>:
 8023c80:	b510      	push	{r4, lr}
 8023c82:	4604      	mov	r4, r0
 8023c84:	f7ff fff0 	bl	8023c68 <__sfp_lock_acquire>
 8023c88:	6a23      	ldr	r3, [r4, #32]
 8023c8a:	b11b      	cbz	r3, 8023c94 <__sinit+0x14>
 8023c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023c90:	f7ff bff0 	b.w	8023c74 <__sfp_lock_release>
 8023c94:	4b04      	ldr	r3, [pc, #16]	; (8023ca8 <__sinit+0x28>)
 8023c96:	6223      	str	r3, [r4, #32]
 8023c98:	4b04      	ldr	r3, [pc, #16]	; (8023cac <__sinit+0x2c>)
 8023c9a:	681b      	ldr	r3, [r3, #0]
 8023c9c:	2b00      	cmp	r3, #0
 8023c9e:	d1f5      	bne.n	8023c8c <__sinit+0xc>
 8023ca0:	f7ff ffc4 	bl	8023c2c <global_stdio_init.part.0>
 8023ca4:	e7f2      	b.n	8023c8c <__sinit+0xc>
 8023ca6:	bf00      	nop
 8023ca8:	08023bed 	.word	0x08023bed
 8023cac:	2400213c 	.word	0x2400213c

08023cb0 <fiprintf>:
 8023cb0:	b40e      	push	{r1, r2, r3}
 8023cb2:	b503      	push	{r0, r1, lr}
 8023cb4:	4601      	mov	r1, r0
 8023cb6:	ab03      	add	r3, sp, #12
 8023cb8:	4805      	ldr	r0, [pc, #20]	; (8023cd0 <fiprintf+0x20>)
 8023cba:	f853 2b04 	ldr.w	r2, [r3], #4
 8023cbe:	6800      	ldr	r0, [r0, #0]
 8023cc0:	9301      	str	r3, [sp, #4]
 8023cc2:	f000 faad 	bl	8024220 <_vfiprintf_r>
 8023cc6:	b002      	add	sp, #8
 8023cc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8023ccc:	b003      	add	sp, #12
 8023cce:	4770      	bx	lr
 8023cd0:	240000f0 	.word	0x240000f0

08023cd4 <_fwalk_sglue>:
 8023cd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023cd8:	4607      	mov	r7, r0
 8023cda:	4688      	mov	r8, r1
 8023cdc:	4614      	mov	r4, r2
 8023cde:	2600      	movs	r6, #0
 8023ce0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023ce4:	f1b9 0901 	subs.w	r9, r9, #1
 8023ce8:	d505      	bpl.n	8023cf6 <_fwalk_sglue+0x22>
 8023cea:	6824      	ldr	r4, [r4, #0]
 8023cec:	2c00      	cmp	r4, #0
 8023cee:	d1f7      	bne.n	8023ce0 <_fwalk_sglue+0xc>
 8023cf0:	4630      	mov	r0, r6
 8023cf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023cf6:	89ab      	ldrh	r3, [r5, #12]
 8023cf8:	2b01      	cmp	r3, #1
 8023cfa:	d907      	bls.n	8023d0c <_fwalk_sglue+0x38>
 8023cfc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8023d00:	3301      	adds	r3, #1
 8023d02:	d003      	beq.n	8023d0c <_fwalk_sglue+0x38>
 8023d04:	4629      	mov	r1, r5
 8023d06:	4638      	mov	r0, r7
 8023d08:	47c0      	blx	r8
 8023d0a:	4306      	orrs	r6, r0
 8023d0c:	3568      	adds	r5, #104	; 0x68
 8023d0e:	e7e9      	b.n	8023ce4 <_fwalk_sglue+0x10>

08023d10 <__sread>:
 8023d10:	b510      	push	{r4, lr}
 8023d12:	460c      	mov	r4, r1
 8023d14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d18:	f000 f92c 	bl	8023f74 <_read_r>
 8023d1c:	2800      	cmp	r0, #0
 8023d1e:	bfab      	itete	ge
 8023d20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8023d22:	89a3      	ldrhlt	r3, [r4, #12]
 8023d24:	181b      	addge	r3, r3, r0
 8023d26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8023d2a:	bfac      	ite	ge
 8023d2c:	6563      	strge	r3, [r4, #84]	; 0x54
 8023d2e:	81a3      	strhlt	r3, [r4, #12]
 8023d30:	bd10      	pop	{r4, pc}

08023d32 <__swrite>:
 8023d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023d36:	461f      	mov	r7, r3
 8023d38:	898b      	ldrh	r3, [r1, #12]
 8023d3a:	05db      	lsls	r3, r3, #23
 8023d3c:	4605      	mov	r5, r0
 8023d3e:	460c      	mov	r4, r1
 8023d40:	4616      	mov	r6, r2
 8023d42:	d505      	bpl.n	8023d50 <__swrite+0x1e>
 8023d44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d48:	2302      	movs	r3, #2
 8023d4a:	2200      	movs	r2, #0
 8023d4c:	f000 f900 	bl	8023f50 <_lseek_r>
 8023d50:	89a3      	ldrh	r3, [r4, #12]
 8023d52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023d56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8023d5a:	81a3      	strh	r3, [r4, #12]
 8023d5c:	4632      	mov	r2, r6
 8023d5e:	463b      	mov	r3, r7
 8023d60:	4628      	mov	r0, r5
 8023d62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023d66:	f000 b93b 	b.w	8023fe0 <_write_r>

08023d6a <__sseek>:
 8023d6a:	b510      	push	{r4, lr}
 8023d6c:	460c      	mov	r4, r1
 8023d6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d72:	f000 f8ed 	bl	8023f50 <_lseek_r>
 8023d76:	1c43      	adds	r3, r0, #1
 8023d78:	89a3      	ldrh	r3, [r4, #12]
 8023d7a:	bf15      	itete	ne
 8023d7c:	6560      	strne	r0, [r4, #84]	; 0x54
 8023d7e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8023d82:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8023d86:	81a3      	strheq	r3, [r4, #12]
 8023d88:	bf18      	it	ne
 8023d8a:	81a3      	strhne	r3, [r4, #12]
 8023d8c:	bd10      	pop	{r4, pc}

08023d8e <__sclose>:
 8023d8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023d92:	f000 b8cd 	b.w	8023f30 <_close_r>

08023d96 <__swbuf_r>:
 8023d96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023d98:	460e      	mov	r6, r1
 8023d9a:	4614      	mov	r4, r2
 8023d9c:	4605      	mov	r5, r0
 8023d9e:	b118      	cbz	r0, 8023da8 <__swbuf_r+0x12>
 8023da0:	6a03      	ldr	r3, [r0, #32]
 8023da2:	b90b      	cbnz	r3, 8023da8 <__swbuf_r+0x12>
 8023da4:	f7ff ff6c 	bl	8023c80 <__sinit>
 8023da8:	69a3      	ldr	r3, [r4, #24]
 8023daa:	60a3      	str	r3, [r4, #8]
 8023dac:	89a3      	ldrh	r3, [r4, #12]
 8023dae:	071a      	lsls	r2, r3, #28
 8023db0:	d525      	bpl.n	8023dfe <__swbuf_r+0x68>
 8023db2:	6923      	ldr	r3, [r4, #16]
 8023db4:	b31b      	cbz	r3, 8023dfe <__swbuf_r+0x68>
 8023db6:	6823      	ldr	r3, [r4, #0]
 8023db8:	6922      	ldr	r2, [r4, #16]
 8023dba:	1a98      	subs	r0, r3, r2
 8023dbc:	6963      	ldr	r3, [r4, #20]
 8023dbe:	b2f6      	uxtb	r6, r6
 8023dc0:	4283      	cmp	r3, r0
 8023dc2:	4637      	mov	r7, r6
 8023dc4:	dc04      	bgt.n	8023dd0 <__swbuf_r+0x3a>
 8023dc6:	4621      	mov	r1, r4
 8023dc8:	4628      	mov	r0, r5
 8023dca:	f000 fd59 	bl	8024880 <_fflush_r>
 8023dce:	b9e0      	cbnz	r0, 8023e0a <__swbuf_r+0x74>
 8023dd0:	68a3      	ldr	r3, [r4, #8]
 8023dd2:	3b01      	subs	r3, #1
 8023dd4:	60a3      	str	r3, [r4, #8]
 8023dd6:	6823      	ldr	r3, [r4, #0]
 8023dd8:	1c5a      	adds	r2, r3, #1
 8023dda:	6022      	str	r2, [r4, #0]
 8023ddc:	701e      	strb	r6, [r3, #0]
 8023dde:	6962      	ldr	r2, [r4, #20]
 8023de0:	1c43      	adds	r3, r0, #1
 8023de2:	429a      	cmp	r2, r3
 8023de4:	d004      	beq.n	8023df0 <__swbuf_r+0x5a>
 8023de6:	89a3      	ldrh	r3, [r4, #12]
 8023de8:	07db      	lsls	r3, r3, #31
 8023dea:	d506      	bpl.n	8023dfa <__swbuf_r+0x64>
 8023dec:	2e0a      	cmp	r6, #10
 8023dee:	d104      	bne.n	8023dfa <__swbuf_r+0x64>
 8023df0:	4621      	mov	r1, r4
 8023df2:	4628      	mov	r0, r5
 8023df4:	f000 fd44 	bl	8024880 <_fflush_r>
 8023df8:	b938      	cbnz	r0, 8023e0a <__swbuf_r+0x74>
 8023dfa:	4638      	mov	r0, r7
 8023dfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023dfe:	4621      	mov	r1, r4
 8023e00:	4628      	mov	r0, r5
 8023e02:	f000 f805 	bl	8023e10 <__swsetup_r>
 8023e06:	2800      	cmp	r0, #0
 8023e08:	d0d5      	beq.n	8023db6 <__swbuf_r+0x20>
 8023e0a:	f04f 37ff 	mov.w	r7, #4294967295
 8023e0e:	e7f4      	b.n	8023dfa <__swbuf_r+0x64>

08023e10 <__swsetup_r>:
 8023e10:	b538      	push	{r3, r4, r5, lr}
 8023e12:	4b2a      	ldr	r3, [pc, #168]	; (8023ebc <__swsetup_r+0xac>)
 8023e14:	4605      	mov	r5, r0
 8023e16:	6818      	ldr	r0, [r3, #0]
 8023e18:	460c      	mov	r4, r1
 8023e1a:	b118      	cbz	r0, 8023e24 <__swsetup_r+0x14>
 8023e1c:	6a03      	ldr	r3, [r0, #32]
 8023e1e:	b90b      	cbnz	r3, 8023e24 <__swsetup_r+0x14>
 8023e20:	f7ff ff2e 	bl	8023c80 <__sinit>
 8023e24:	89a3      	ldrh	r3, [r4, #12]
 8023e26:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023e2a:	0718      	lsls	r0, r3, #28
 8023e2c:	d422      	bmi.n	8023e74 <__swsetup_r+0x64>
 8023e2e:	06d9      	lsls	r1, r3, #27
 8023e30:	d407      	bmi.n	8023e42 <__swsetup_r+0x32>
 8023e32:	2309      	movs	r3, #9
 8023e34:	602b      	str	r3, [r5, #0]
 8023e36:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8023e3a:	81a3      	strh	r3, [r4, #12]
 8023e3c:	f04f 30ff 	mov.w	r0, #4294967295
 8023e40:	e034      	b.n	8023eac <__swsetup_r+0x9c>
 8023e42:	0758      	lsls	r0, r3, #29
 8023e44:	d512      	bpl.n	8023e6c <__swsetup_r+0x5c>
 8023e46:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8023e48:	b141      	cbz	r1, 8023e5c <__swsetup_r+0x4c>
 8023e4a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8023e4e:	4299      	cmp	r1, r3
 8023e50:	d002      	beq.n	8023e58 <__swsetup_r+0x48>
 8023e52:	4628      	mov	r0, r5
 8023e54:	f000 f96e 	bl	8024134 <_free_r>
 8023e58:	2300      	movs	r3, #0
 8023e5a:	6363      	str	r3, [r4, #52]	; 0x34
 8023e5c:	89a3      	ldrh	r3, [r4, #12]
 8023e5e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8023e62:	81a3      	strh	r3, [r4, #12]
 8023e64:	2300      	movs	r3, #0
 8023e66:	6063      	str	r3, [r4, #4]
 8023e68:	6923      	ldr	r3, [r4, #16]
 8023e6a:	6023      	str	r3, [r4, #0]
 8023e6c:	89a3      	ldrh	r3, [r4, #12]
 8023e6e:	f043 0308 	orr.w	r3, r3, #8
 8023e72:	81a3      	strh	r3, [r4, #12]
 8023e74:	6923      	ldr	r3, [r4, #16]
 8023e76:	b94b      	cbnz	r3, 8023e8c <__swsetup_r+0x7c>
 8023e78:	89a3      	ldrh	r3, [r4, #12]
 8023e7a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8023e7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8023e82:	d003      	beq.n	8023e8c <__swsetup_r+0x7c>
 8023e84:	4621      	mov	r1, r4
 8023e86:	4628      	mov	r0, r5
 8023e88:	f000 fd48 	bl	802491c <__smakebuf_r>
 8023e8c:	89a0      	ldrh	r0, [r4, #12]
 8023e8e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023e92:	f010 0301 	ands.w	r3, r0, #1
 8023e96:	d00a      	beq.n	8023eae <__swsetup_r+0x9e>
 8023e98:	2300      	movs	r3, #0
 8023e9a:	60a3      	str	r3, [r4, #8]
 8023e9c:	6963      	ldr	r3, [r4, #20]
 8023e9e:	425b      	negs	r3, r3
 8023ea0:	61a3      	str	r3, [r4, #24]
 8023ea2:	6923      	ldr	r3, [r4, #16]
 8023ea4:	b943      	cbnz	r3, 8023eb8 <__swsetup_r+0xa8>
 8023ea6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8023eaa:	d1c4      	bne.n	8023e36 <__swsetup_r+0x26>
 8023eac:	bd38      	pop	{r3, r4, r5, pc}
 8023eae:	0781      	lsls	r1, r0, #30
 8023eb0:	bf58      	it	pl
 8023eb2:	6963      	ldrpl	r3, [r4, #20]
 8023eb4:	60a3      	str	r3, [r4, #8]
 8023eb6:	e7f4      	b.n	8023ea2 <__swsetup_r+0x92>
 8023eb8:	2000      	movs	r0, #0
 8023eba:	e7f7      	b.n	8023eac <__swsetup_r+0x9c>
 8023ebc:	240000f0 	.word	0x240000f0

08023ec0 <memset>:
 8023ec0:	4402      	add	r2, r0
 8023ec2:	4603      	mov	r3, r0
 8023ec4:	4293      	cmp	r3, r2
 8023ec6:	d100      	bne.n	8023eca <memset+0xa>
 8023ec8:	4770      	bx	lr
 8023eca:	f803 1b01 	strb.w	r1, [r3], #1
 8023ece:	e7f9      	b.n	8023ec4 <memset+0x4>

08023ed0 <_raise_r>:
 8023ed0:	291f      	cmp	r1, #31
 8023ed2:	b538      	push	{r3, r4, r5, lr}
 8023ed4:	4604      	mov	r4, r0
 8023ed6:	460d      	mov	r5, r1
 8023ed8:	d904      	bls.n	8023ee4 <_raise_r+0x14>
 8023eda:	2316      	movs	r3, #22
 8023edc:	6003      	str	r3, [r0, #0]
 8023ede:	f04f 30ff 	mov.w	r0, #4294967295
 8023ee2:	bd38      	pop	{r3, r4, r5, pc}
 8023ee4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8023ee6:	b112      	cbz	r2, 8023eee <_raise_r+0x1e>
 8023ee8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023eec:	b94b      	cbnz	r3, 8023f02 <_raise_r+0x32>
 8023eee:	4620      	mov	r0, r4
 8023ef0:	f000 f864 	bl	8023fbc <_getpid_r>
 8023ef4:	462a      	mov	r2, r5
 8023ef6:	4601      	mov	r1, r0
 8023ef8:	4620      	mov	r0, r4
 8023efa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023efe:	f000 b84b 	b.w	8023f98 <_kill_r>
 8023f02:	2b01      	cmp	r3, #1
 8023f04:	d00a      	beq.n	8023f1c <_raise_r+0x4c>
 8023f06:	1c59      	adds	r1, r3, #1
 8023f08:	d103      	bne.n	8023f12 <_raise_r+0x42>
 8023f0a:	2316      	movs	r3, #22
 8023f0c:	6003      	str	r3, [r0, #0]
 8023f0e:	2001      	movs	r0, #1
 8023f10:	e7e7      	b.n	8023ee2 <_raise_r+0x12>
 8023f12:	2400      	movs	r4, #0
 8023f14:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8023f18:	4628      	mov	r0, r5
 8023f1a:	4798      	blx	r3
 8023f1c:	2000      	movs	r0, #0
 8023f1e:	e7e0      	b.n	8023ee2 <_raise_r+0x12>

08023f20 <raise>:
 8023f20:	4b02      	ldr	r3, [pc, #8]	; (8023f2c <raise+0xc>)
 8023f22:	4601      	mov	r1, r0
 8023f24:	6818      	ldr	r0, [r3, #0]
 8023f26:	f7ff bfd3 	b.w	8023ed0 <_raise_r>
 8023f2a:	bf00      	nop
 8023f2c:	240000f0 	.word	0x240000f0

08023f30 <_close_r>:
 8023f30:	b538      	push	{r3, r4, r5, lr}
 8023f32:	4d06      	ldr	r5, [pc, #24]	; (8023f4c <_close_r+0x1c>)
 8023f34:	2300      	movs	r3, #0
 8023f36:	4604      	mov	r4, r0
 8023f38:	4608      	mov	r0, r1
 8023f3a:	602b      	str	r3, [r5, #0]
 8023f3c:	f7dd fc0b 	bl	8001756 <_close>
 8023f40:	1c43      	adds	r3, r0, #1
 8023f42:	d102      	bne.n	8023f4a <_close_r+0x1a>
 8023f44:	682b      	ldr	r3, [r5, #0]
 8023f46:	b103      	cbz	r3, 8023f4a <_close_r+0x1a>
 8023f48:	6023      	str	r3, [r4, #0]
 8023f4a:	bd38      	pop	{r3, r4, r5, pc}
 8023f4c:	24002140 	.word	0x24002140

08023f50 <_lseek_r>:
 8023f50:	b538      	push	{r3, r4, r5, lr}
 8023f52:	4d07      	ldr	r5, [pc, #28]	; (8023f70 <_lseek_r+0x20>)
 8023f54:	4604      	mov	r4, r0
 8023f56:	4608      	mov	r0, r1
 8023f58:	4611      	mov	r1, r2
 8023f5a:	2200      	movs	r2, #0
 8023f5c:	602a      	str	r2, [r5, #0]
 8023f5e:	461a      	mov	r2, r3
 8023f60:	f7dd fc20 	bl	80017a4 <_lseek>
 8023f64:	1c43      	adds	r3, r0, #1
 8023f66:	d102      	bne.n	8023f6e <_lseek_r+0x1e>
 8023f68:	682b      	ldr	r3, [r5, #0]
 8023f6a:	b103      	cbz	r3, 8023f6e <_lseek_r+0x1e>
 8023f6c:	6023      	str	r3, [r4, #0]
 8023f6e:	bd38      	pop	{r3, r4, r5, pc}
 8023f70:	24002140 	.word	0x24002140

08023f74 <_read_r>:
 8023f74:	b538      	push	{r3, r4, r5, lr}
 8023f76:	4d07      	ldr	r5, [pc, #28]	; (8023f94 <_read_r+0x20>)
 8023f78:	4604      	mov	r4, r0
 8023f7a:	4608      	mov	r0, r1
 8023f7c:	4611      	mov	r1, r2
 8023f7e:	2200      	movs	r2, #0
 8023f80:	602a      	str	r2, [r5, #0]
 8023f82:	461a      	mov	r2, r3
 8023f84:	f7dd fbca 	bl	800171c <_read>
 8023f88:	1c43      	adds	r3, r0, #1
 8023f8a:	d102      	bne.n	8023f92 <_read_r+0x1e>
 8023f8c:	682b      	ldr	r3, [r5, #0]
 8023f8e:	b103      	cbz	r3, 8023f92 <_read_r+0x1e>
 8023f90:	6023      	str	r3, [r4, #0]
 8023f92:	bd38      	pop	{r3, r4, r5, pc}
 8023f94:	24002140 	.word	0x24002140

08023f98 <_kill_r>:
 8023f98:	b538      	push	{r3, r4, r5, lr}
 8023f9a:	4d07      	ldr	r5, [pc, #28]	; (8023fb8 <_kill_r+0x20>)
 8023f9c:	2300      	movs	r3, #0
 8023f9e:	4604      	mov	r4, r0
 8023fa0:	4608      	mov	r0, r1
 8023fa2:	4611      	mov	r1, r2
 8023fa4:	602b      	str	r3, [r5, #0]
 8023fa6:	f7dd fb9f 	bl	80016e8 <_kill>
 8023faa:	1c43      	adds	r3, r0, #1
 8023fac:	d102      	bne.n	8023fb4 <_kill_r+0x1c>
 8023fae:	682b      	ldr	r3, [r5, #0]
 8023fb0:	b103      	cbz	r3, 8023fb4 <_kill_r+0x1c>
 8023fb2:	6023      	str	r3, [r4, #0]
 8023fb4:	bd38      	pop	{r3, r4, r5, pc}
 8023fb6:	bf00      	nop
 8023fb8:	24002140 	.word	0x24002140

08023fbc <_getpid_r>:
 8023fbc:	f7dd bb8c 	b.w	80016d8 <_getpid>

08023fc0 <_sbrk_r>:
 8023fc0:	b538      	push	{r3, r4, r5, lr}
 8023fc2:	4d06      	ldr	r5, [pc, #24]	; (8023fdc <_sbrk_r+0x1c>)
 8023fc4:	2300      	movs	r3, #0
 8023fc6:	4604      	mov	r4, r0
 8023fc8:	4608      	mov	r0, r1
 8023fca:	602b      	str	r3, [r5, #0]
 8023fcc:	f7dd fbf8 	bl	80017c0 <_sbrk>
 8023fd0:	1c43      	adds	r3, r0, #1
 8023fd2:	d102      	bne.n	8023fda <_sbrk_r+0x1a>
 8023fd4:	682b      	ldr	r3, [r5, #0]
 8023fd6:	b103      	cbz	r3, 8023fda <_sbrk_r+0x1a>
 8023fd8:	6023      	str	r3, [r4, #0]
 8023fda:	bd38      	pop	{r3, r4, r5, pc}
 8023fdc:	24002140 	.word	0x24002140

08023fe0 <_write_r>:
 8023fe0:	b538      	push	{r3, r4, r5, lr}
 8023fe2:	4d07      	ldr	r5, [pc, #28]	; (8024000 <_write_r+0x20>)
 8023fe4:	4604      	mov	r4, r0
 8023fe6:	4608      	mov	r0, r1
 8023fe8:	4611      	mov	r1, r2
 8023fea:	2200      	movs	r2, #0
 8023fec:	602a      	str	r2, [r5, #0]
 8023fee:	461a      	mov	r2, r3
 8023ff0:	f7eb ffac 	bl	800ff4c <_write>
 8023ff4:	1c43      	adds	r3, r0, #1
 8023ff6:	d102      	bne.n	8023ffe <_write_r+0x1e>
 8023ff8:	682b      	ldr	r3, [r5, #0]
 8023ffa:	b103      	cbz	r3, 8023ffe <_write_r+0x1e>
 8023ffc:	6023      	str	r3, [r4, #0]
 8023ffe:	bd38      	pop	{r3, r4, r5, pc}
 8024000:	24002140 	.word	0x24002140

08024004 <__errno>:
 8024004:	4b01      	ldr	r3, [pc, #4]	; (802400c <__errno+0x8>)
 8024006:	6818      	ldr	r0, [r3, #0]
 8024008:	4770      	bx	lr
 802400a:	bf00      	nop
 802400c:	240000f0 	.word	0x240000f0

08024010 <__libc_init_array>:
 8024010:	b570      	push	{r4, r5, r6, lr}
 8024012:	4d0d      	ldr	r5, [pc, #52]	; (8024048 <__libc_init_array+0x38>)
 8024014:	4c0d      	ldr	r4, [pc, #52]	; (802404c <__libc_init_array+0x3c>)
 8024016:	1b64      	subs	r4, r4, r5
 8024018:	10a4      	asrs	r4, r4, #2
 802401a:	2600      	movs	r6, #0
 802401c:	42a6      	cmp	r6, r4
 802401e:	d109      	bne.n	8024034 <__libc_init_array+0x24>
 8024020:	4d0b      	ldr	r5, [pc, #44]	; (8024050 <__libc_init_array+0x40>)
 8024022:	4c0c      	ldr	r4, [pc, #48]	; (8024054 <__libc_init_array+0x44>)
 8024024:	f000 fcd8 	bl	80249d8 <_init>
 8024028:	1b64      	subs	r4, r4, r5
 802402a:	10a4      	asrs	r4, r4, #2
 802402c:	2600      	movs	r6, #0
 802402e:	42a6      	cmp	r6, r4
 8024030:	d105      	bne.n	802403e <__libc_init_array+0x2e>
 8024032:	bd70      	pop	{r4, r5, r6, pc}
 8024034:	f855 3b04 	ldr.w	r3, [r5], #4
 8024038:	4798      	blx	r3
 802403a:	3601      	adds	r6, #1
 802403c:	e7ee      	b.n	802401c <__libc_init_array+0xc>
 802403e:	f855 3b04 	ldr.w	r3, [r5], #4
 8024042:	4798      	blx	r3
 8024044:	3601      	adds	r6, #1
 8024046:	e7f2      	b.n	802402e <__libc_init_array+0x1e>
 8024048:	0803c714 	.word	0x0803c714
 802404c:	0803c714 	.word	0x0803c714
 8024050:	0803c714 	.word	0x0803c714
 8024054:	0803c728 	.word	0x0803c728

08024058 <__retarget_lock_acquire_recursive>:
 8024058:	4770      	bx	lr

0802405a <__retarget_lock_release_recursive>:
 802405a:	4770      	bx	lr

0802405c <memcpy>:
 802405c:	440a      	add	r2, r1
 802405e:	4291      	cmp	r1, r2
 8024060:	f100 33ff 	add.w	r3, r0, #4294967295
 8024064:	d100      	bne.n	8024068 <memcpy+0xc>
 8024066:	4770      	bx	lr
 8024068:	b510      	push	{r4, lr}
 802406a:	f811 4b01 	ldrb.w	r4, [r1], #1
 802406e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024072:	4291      	cmp	r1, r2
 8024074:	d1f9      	bne.n	802406a <memcpy+0xe>
 8024076:	bd10      	pop	{r4, pc}

08024078 <__register_exitproc>:
 8024078:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802407c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8024130 <__register_exitproc+0xb8>
 8024080:	4606      	mov	r6, r0
 8024082:	f8d8 0000 	ldr.w	r0, [r8]
 8024086:	461f      	mov	r7, r3
 8024088:	460d      	mov	r5, r1
 802408a:	4691      	mov	r9, r2
 802408c:	f7ff ffe4 	bl	8024058 <__retarget_lock_acquire_recursive>
 8024090:	4b23      	ldr	r3, [pc, #140]	; (8024120 <__register_exitproc+0xa8>)
 8024092:	681c      	ldr	r4, [r3, #0]
 8024094:	b934      	cbnz	r4, 80240a4 <__register_exitproc+0x2c>
 8024096:	4c23      	ldr	r4, [pc, #140]	; (8024124 <__register_exitproc+0xac>)
 8024098:	601c      	str	r4, [r3, #0]
 802409a:	4b23      	ldr	r3, [pc, #140]	; (8024128 <__register_exitproc+0xb0>)
 802409c:	b113      	cbz	r3, 80240a4 <__register_exitproc+0x2c>
 802409e:	681b      	ldr	r3, [r3, #0]
 80240a0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80240a4:	6863      	ldr	r3, [r4, #4]
 80240a6:	2b1f      	cmp	r3, #31
 80240a8:	dd07      	ble.n	80240ba <__register_exitproc+0x42>
 80240aa:	f8d8 0000 	ldr.w	r0, [r8]
 80240ae:	f7ff ffd4 	bl	802405a <__retarget_lock_release_recursive>
 80240b2:	f04f 30ff 	mov.w	r0, #4294967295
 80240b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80240ba:	b32e      	cbz	r6, 8024108 <__register_exitproc+0x90>
 80240bc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80240c0:	b968      	cbnz	r0, 80240de <__register_exitproc+0x66>
 80240c2:	4b1a      	ldr	r3, [pc, #104]	; (802412c <__register_exitproc+0xb4>)
 80240c4:	2b00      	cmp	r3, #0
 80240c6:	d0f0      	beq.n	80240aa <__register_exitproc+0x32>
 80240c8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80240cc:	f7ff fc94 	bl	80239f8 <malloc>
 80240d0:	2800      	cmp	r0, #0
 80240d2:	d0ea      	beq.n	80240aa <__register_exitproc+0x32>
 80240d4:	2300      	movs	r3, #0
 80240d6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80240da:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80240de:	6863      	ldr	r3, [r4, #4]
 80240e0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80240e4:	2201      	movs	r2, #1
 80240e6:	409a      	lsls	r2, r3
 80240e8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80240ec:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80240f0:	4313      	orrs	r3, r2
 80240f2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80240f6:	2e02      	cmp	r6, #2
 80240f8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80240fc:	bf02      	ittt	eq
 80240fe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8024102:	4313      	orreq	r3, r2
 8024104:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8024108:	6863      	ldr	r3, [r4, #4]
 802410a:	f8d8 0000 	ldr.w	r0, [r8]
 802410e:	1c5a      	adds	r2, r3, #1
 8024110:	3302      	adds	r3, #2
 8024112:	6062      	str	r2, [r4, #4]
 8024114:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8024118:	f7ff ff9f 	bl	802405a <__retarget_lock_release_recursive>
 802411c:	2000      	movs	r0, #0
 802411e:	e7ca      	b.n	80240b6 <__register_exitproc+0x3e>
 8024120:	240021d4 	.word	0x240021d4
 8024124:	24002148 	.word	0x24002148
 8024128:	08026544 	.word	0x08026544
 802412c:	080239f9 	.word	0x080239f9
 8024130:	240000f4 	.word	0x240000f4

08024134 <_free_r>:
 8024134:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024136:	2900      	cmp	r1, #0
 8024138:	d044      	beq.n	80241c4 <_free_r+0x90>
 802413a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802413e:	9001      	str	r0, [sp, #4]
 8024140:	2b00      	cmp	r3, #0
 8024142:	f1a1 0404 	sub.w	r4, r1, #4
 8024146:	bfb8      	it	lt
 8024148:	18e4      	addlt	r4, r4, r3
 802414a:	f7ff fd05 	bl	8023b58 <__malloc_lock>
 802414e:	4a1e      	ldr	r2, [pc, #120]	; (80241c8 <_free_r+0x94>)
 8024150:	9801      	ldr	r0, [sp, #4]
 8024152:	6813      	ldr	r3, [r2, #0]
 8024154:	b933      	cbnz	r3, 8024164 <_free_r+0x30>
 8024156:	6063      	str	r3, [r4, #4]
 8024158:	6014      	str	r4, [r2, #0]
 802415a:	b003      	add	sp, #12
 802415c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024160:	f7ff bd00 	b.w	8023b64 <__malloc_unlock>
 8024164:	42a3      	cmp	r3, r4
 8024166:	d908      	bls.n	802417a <_free_r+0x46>
 8024168:	6825      	ldr	r5, [r4, #0]
 802416a:	1961      	adds	r1, r4, r5
 802416c:	428b      	cmp	r3, r1
 802416e:	bf01      	itttt	eq
 8024170:	6819      	ldreq	r1, [r3, #0]
 8024172:	685b      	ldreq	r3, [r3, #4]
 8024174:	1949      	addeq	r1, r1, r5
 8024176:	6021      	streq	r1, [r4, #0]
 8024178:	e7ed      	b.n	8024156 <_free_r+0x22>
 802417a:	461a      	mov	r2, r3
 802417c:	685b      	ldr	r3, [r3, #4]
 802417e:	b10b      	cbz	r3, 8024184 <_free_r+0x50>
 8024180:	42a3      	cmp	r3, r4
 8024182:	d9fa      	bls.n	802417a <_free_r+0x46>
 8024184:	6811      	ldr	r1, [r2, #0]
 8024186:	1855      	adds	r5, r2, r1
 8024188:	42a5      	cmp	r5, r4
 802418a:	d10b      	bne.n	80241a4 <_free_r+0x70>
 802418c:	6824      	ldr	r4, [r4, #0]
 802418e:	4421      	add	r1, r4
 8024190:	1854      	adds	r4, r2, r1
 8024192:	42a3      	cmp	r3, r4
 8024194:	6011      	str	r1, [r2, #0]
 8024196:	d1e0      	bne.n	802415a <_free_r+0x26>
 8024198:	681c      	ldr	r4, [r3, #0]
 802419a:	685b      	ldr	r3, [r3, #4]
 802419c:	6053      	str	r3, [r2, #4]
 802419e:	440c      	add	r4, r1
 80241a0:	6014      	str	r4, [r2, #0]
 80241a2:	e7da      	b.n	802415a <_free_r+0x26>
 80241a4:	d902      	bls.n	80241ac <_free_r+0x78>
 80241a6:	230c      	movs	r3, #12
 80241a8:	6003      	str	r3, [r0, #0]
 80241aa:	e7d6      	b.n	802415a <_free_r+0x26>
 80241ac:	6825      	ldr	r5, [r4, #0]
 80241ae:	1961      	adds	r1, r4, r5
 80241b0:	428b      	cmp	r3, r1
 80241b2:	bf04      	itt	eq
 80241b4:	6819      	ldreq	r1, [r3, #0]
 80241b6:	685b      	ldreq	r3, [r3, #4]
 80241b8:	6063      	str	r3, [r4, #4]
 80241ba:	bf04      	itt	eq
 80241bc:	1949      	addeq	r1, r1, r5
 80241be:	6021      	streq	r1, [r4, #0]
 80241c0:	6054      	str	r4, [r2, #4]
 80241c2:	e7ca      	b.n	802415a <_free_r+0x26>
 80241c4:	b003      	add	sp, #12
 80241c6:	bd30      	pop	{r4, r5, pc}
 80241c8:	24001ffc 	.word	0x24001ffc

080241cc <__sfputc_r>:
 80241cc:	6893      	ldr	r3, [r2, #8]
 80241ce:	3b01      	subs	r3, #1
 80241d0:	2b00      	cmp	r3, #0
 80241d2:	b410      	push	{r4}
 80241d4:	6093      	str	r3, [r2, #8]
 80241d6:	da08      	bge.n	80241ea <__sfputc_r+0x1e>
 80241d8:	6994      	ldr	r4, [r2, #24]
 80241da:	42a3      	cmp	r3, r4
 80241dc:	db01      	blt.n	80241e2 <__sfputc_r+0x16>
 80241de:	290a      	cmp	r1, #10
 80241e0:	d103      	bne.n	80241ea <__sfputc_r+0x1e>
 80241e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80241e6:	f7ff bdd6 	b.w	8023d96 <__swbuf_r>
 80241ea:	6813      	ldr	r3, [r2, #0]
 80241ec:	1c58      	adds	r0, r3, #1
 80241ee:	6010      	str	r0, [r2, #0]
 80241f0:	7019      	strb	r1, [r3, #0]
 80241f2:	4608      	mov	r0, r1
 80241f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80241f8:	4770      	bx	lr

080241fa <__sfputs_r>:
 80241fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80241fc:	4606      	mov	r6, r0
 80241fe:	460f      	mov	r7, r1
 8024200:	4614      	mov	r4, r2
 8024202:	18d5      	adds	r5, r2, r3
 8024204:	42ac      	cmp	r4, r5
 8024206:	d101      	bne.n	802420c <__sfputs_r+0x12>
 8024208:	2000      	movs	r0, #0
 802420a:	e007      	b.n	802421c <__sfputs_r+0x22>
 802420c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024210:	463a      	mov	r2, r7
 8024212:	4630      	mov	r0, r6
 8024214:	f7ff ffda 	bl	80241cc <__sfputc_r>
 8024218:	1c43      	adds	r3, r0, #1
 802421a:	d1f3      	bne.n	8024204 <__sfputs_r+0xa>
 802421c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08024220 <_vfiprintf_r>:
 8024220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024224:	460d      	mov	r5, r1
 8024226:	b09d      	sub	sp, #116	; 0x74
 8024228:	4614      	mov	r4, r2
 802422a:	4698      	mov	r8, r3
 802422c:	4606      	mov	r6, r0
 802422e:	b118      	cbz	r0, 8024238 <_vfiprintf_r+0x18>
 8024230:	6a03      	ldr	r3, [r0, #32]
 8024232:	b90b      	cbnz	r3, 8024238 <_vfiprintf_r+0x18>
 8024234:	f7ff fd24 	bl	8023c80 <__sinit>
 8024238:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802423a:	07d9      	lsls	r1, r3, #31
 802423c:	d405      	bmi.n	802424a <_vfiprintf_r+0x2a>
 802423e:	89ab      	ldrh	r3, [r5, #12]
 8024240:	059a      	lsls	r2, r3, #22
 8024242:	d402      	bmi.n	802424a <_vfiprintf_r+0x2a>
 8024244:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8024246:	f7ff ff07 	bl	8024058 <__retarget_lock_acquire_recursive>
 802424a:	89ab      	ldrh	r3, [r5, #12]
 802424c:	071b      	lsls	r3, r3, #28
 802424e:	d501      	bpl.n	8024254 <_vfiprintf_r+0x34>
 8024250:	692b      	ldr	r3, [r5, #16]
 8024252:	b99b      	cbnz	r3, 802427c <_vfiprintf_r+0x5c>
 8024254:	4629      	mov	r1, r5
 8024256:	4630      	mov	r0, r6
 8024258:	f7ff fdda 	bl	8023e10 <__swsetup_r>
 802425c:	b170      	cbz	r0, 802427c <_vfiprintf_r+0x5c>
 802425e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8024260:	07dc      	lsls	r4, r3, #31
 8024262:	d504      	bpl.n	802426e <_vfiprintf_r+0x4e>
 8024264:	f04f 30ff 	mov.w	r0, #4294967295
 8024268:	b01d      	add	sp, #116	; 0x74
 802426a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802426e:	89ab      	ldrh	r3, [r5, #12]
 8024270:	0598      	lsls	r0, r3, #22
 8024272:	d4f7      	bmi.n	8024264 <_vfiprintf_r+0x44>
 8024274:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8024276:	f7ff fef0 	bl	802405a <__retarget_lock_release_recursive>
 802427a:	e7f3      	b.n	8024264 <_vfiprintf_r+0x44>
 802427c:	2300      	movs	r3, #0
 802427e:	9309      	str	r3, [sp, #36]	; 0x24
 8024280:	2320      	movs	r3, #32
 8024282:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8024286:	f8cd 800c 	str.w	r8, [sp, #12]
 802428a:	2330      	movs	r3, #48	; 0x30
 802428c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8024440 <_vfiprintf_r+0x220>
 8024290:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8024294:	f04f 0901 	mov.w	r9, #1
 8024298:	4623      	mov	r3, r4
 802429a:	469a      	mov	sl, r3
 802429c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80242a0:	b10a      	cbz	r2, 80242a6 <_vfiprintf_r+0x86>
 80242a2:	2a25      	cmp	r2, #37	; 0x25
 80242a4:	d1f9      	bne.n	802429a <_vfiprintf_r+0x7a>
 80242a6:	ebba 0b04 	subs.w	fp, sl, r4
 80242aa:	d00b      	beq.n	80242c4 <_vfiprintf_r+0xa4>
 80242ac:	465b      	mov	r3, fp
 80242ae:	4622      	mov	r2, r4
 80242b0:	4629      	mov	r1, r5
 80242b2:	4630      	mov	r0, r6
 80242b4:	f7ff ffa1 	bl	80241fa <__sfputs_r>
 80242b8:	3001      	adds	r0, #1
 80242ba:	f000 80a9 	beq.w	8024410 <_vfiprintf_r+0x1f0>
 80242be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80242c0:	445a      	add	r2, fp
 80242c2:	9209      	str	r2, [sp, #36]	; 0x24
 80242c4:	f89a 3000 	ldrb.w	r3, [sl]
 80242c8:	2b00      	cmp	r3, #0
 80242ca:	f000 80a1 	beq.w	8024410 <_vfiprintf_r+0x1f0>
 80242ce:	2300      	movs	r3, #0
 80242d0:	f04f 32ff 	mov.w	r2, #4294967295
 80242d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80242d8:	f10a 0a01 	add.w	sl, sl, #1
 80242dc:	9304      	str	r3, [sp, #16]
 80242de:	9307      	str	r3, [sp, #28]
 80242e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80242e4:	931a      	str	r3, [sp, #104]	; 0x68
 80242e6:	4654      	mov	r4, sl
 80242e8:	2205      	movs	r2, #5
 80242ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80242ee:	4854      	ldr	r0, [pc, #336]	; (8024440 <_vfiprintf_r+0x220>)
 80242f0:	f7db fff6 	bl	80002e0 <memchr>
 80242f4:	9a04      	ldr	r2, [sp, #16]
 80242f6:	b9d8      	cbnz	r0, 8024330 <_vfiprintf_r+0x110>
 80242f8:	06d1      	lsls	r1, r2, #27
 80242fa:	bf44      	itt	mi
 80242fc:	2320      	movmi	r3, #32
 80242fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8024302:	0713      	lsls	r3, r2, #28
 8024304:	bf44      	itt	mi
 8024306:	232b      	movmi	r3, #43	; 0x2b
 8024308:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802430c:	f89a 3000 	ldrb.w	r3, [sl]
 8024310:	2b2a      	cmp	r3, #42	; 0x2a
 8024312:	d015      	beq.n	8024340 <_vfiprintf_r+0x120>
 8024314:	9a07      	ldr	r2, [sp, #28]
 8024316:	4654      	mov	r4, sl
 8024318:	2000      	movs	r0, #0
 802431a:	f04f 0c0a 	mov.w	ip, #10
 802431e:	4621      	mov	r1, r4
 8024320:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024324:	3b30      	subs	r3, #48	; 0x30
 8024326:	2b09      	cmp	r3, #9
 8024328:	d94d      	bls.n	80243c6 <_vfiprintf_r+0x1a6>
 802432a:	b1b0      	cbz	r0, 802435a <_vfiprintf_r+0x13a>
 802432c:	9207      	str	r2, [sp, #28]
 802432e:	e014      	b.n	802435a <_vfiprintf_r+0x13a>
 8024330:	eba0 0308 	sub.w	r3, r0, r8
 8024334:	fa09 f303 	lsl.w	r3, r9, r3
 8024338:	4313      	orrs	r3, r2
 802433a:	9304      	str	r3, [sp, #16]
 802433c:	46a2      	mov	sl, r4
 802433e:	e7d2      	b.n	80242e6 <_vfiprintf_r+0xc6>
 8024340:	9b03      	ldr	r3, [sp, #12]
 8024342:	1d19      	adds	r1, r3, #4
 8024344:	681b      	ldr	r3, [r3, #0]
 8024346:	9103      	str	r1, [sp, #12]
 8024348:	2b00      	cmp	r3, #0
 802434a:	bfbb      	ittet	lt
 802434c:	425b      	neglt	r3, r3
 802434e:	f042 0202 	orrlt.w	r2, r2, #2
 8024352:	9307      	strge	r3, [sp, #28]
 8024354:	9307      	strlt	r3, [sp, #28]
 8024356:	bfb8      	it	lt
 8024358:	9204      	strlt	r2, [sp, #16]
 802435a:	7823      	ldrb	r3, [r4, #0]
 802435c:	2b2e      	cmp	r3, #46	; 0x2e
 802435e:	d10c      	bne.n	802437a <_vfiprintf_r+0x15a>
 8024360:	7863      	ldrb	r3, [r4, #1]
 8024362:	2b2a      	cmp	r3, #42	; 0x2a
 8024364:	d134      	bne.n	80243d0 <_vfiprintf_r+0x1b0>
 8024366:	9b03      	ldr	r3, [sp, #12]
 8024368:	1d1a      	adds	r2, r3, #4
 802436a:	681b      	ldr	r3, [r3, #0]
 802436c:	9203      	str	r2, [sp, #12]
 802436e:	2b00      	cmp	r3, #0
 8024370:	bfb8      	it	lt
 8024372:	f04f 33ff 	movlt.w	r3, #4294967295
 8024376:	3402      	adds	r4, #2
 8024378:	9305      	str	r3, [sp, #20]
 802437a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8024450 <_vfiprintf_r+0x230>
 802437e:	7821      	ldrb	r1, [r4, #0]
 8024380:	2203      	movs	r2, #3
 8024382:	4650      	mov	r0, sl
 8024384:	f7db ffac 	bl	80002e0 <memchr>
 8024388:	b138      	cbz	r0, 802439a <_vfiprintf_r+0x17a>
 802438a:	9b04      	ldr	r3, [sp, #16]
 802438c:	eba0 000a 	sub.w	r0, r0, sl
 8024390:	2240      	movs	r2, #64	; 0x40
 8024392:	4082      	lsls	r2, r0
 8024394:	4313      	orrs	r3, r2
 8024396:	3401      	adds	r4, #1
 8024398:	9304      	str	r3, [sp, #16]
 802439a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802439e:	4829      	ldr	r0, [pc, #164]	; (8024444 <_vfiprintf_r+0x224>)
 80243a0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80243a4:	2206      	movs	r2, #6
 80243a6:	f7db ff9b 	bl	80002e0 <memchr>
 80243aa:	2800      	cmp	r0, #0
 80243ac:	d03f      	beq.n	802442e <_vfiprintf_r+0x20e>
 80243ae:	4b26      	ldr	r3, [pc, #152]	; (8024448 <_vfiprintf_r+0x228>)
 80243b0:	bb1b      	cbnz	r3, 80243fa <_vfiprintf_r+0x1da>
 80243b2:	9b03      	ldr	r3, [sp, #12]
 80243b4:	3307      	adds	r3, #7
 80243b6:	f023 0307 	bic.w	r3, r3, #7
 80243ba:	3308      	adds	r3, #8
 80243bc:	9303      	str	r3, [sp, #12]
 80243be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80243c0:	443b      	add	r3, r7
 80243c2:	9309      	str	r3, [sp, #36]	; 0x24
 80243c4:	e768      	b.n	8024298 <_vfiprintf_r+0x78>
 80243c6:	fb0c 3202 	mla	r2, ip, r2, r3
 80243ca:	460c      	mov	r4, r1
 80243cc:	2001      	movs	r0, #1
 80243ce:	e7a6      	b.n	802431e <_vfiprintf_r+0xfe>
 80243d0:	2300      	movs	r3, #0
 80243d2:	3401      	adds	r4, #1
 80243d4:	9305      	str	r3, [sp, #20]
 80243d6:	4619      	mov	r1, r3
 80243d8:	f04f 0c0a 	mov.w	ip, #10
 80243dc:	4620      	mov	r0, r4
 80243de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80243e2:	3a30      	subs	r2, #48	; 0x30
 80243e4:	2a09      	cmp	r2, #9
 80243e6:	d903      	bls.n	80243f0 <_vfiprintf_r+0x1d0>
 80243e8:	2b00      	cmp	r3, #0
 80243ea:	d0c6      	beq.n	802437a <_vfiprintf_r+0x15a>
 80243ec:	9105      	str	r1, [sp, #20]
 80243ee:	e7c4      	b.n	802437a <_vfiprintf_r+0x15a>
 80243f0:	fb0c 2101 	mla	r1, ip, r1, r2
 80243f4:	4604      	mov	r4, r0
 80243f6:	2301      	movs	r3, #1
 80243f8:	e7f0      	b.n	80243dc <_vfiprintf_r+0x1bc>
 80243fa:	ab03      	add	r3, sp, #12
 80243fc:	9300      	str	r3, [sp, #0]
 80243fe:	462a      	mov	r2, r5
 8024400:	4b12      	ldr	r3, [pc, #72]	; (802444c <_vfiprintf_r+0x22c>)
 8024402:	a904      	add	r1, sp, #16
 8024404:	4630      	mov	r0, r6
 8024406:	f3af 8000 	nop.w
 802440a:	4607      	mov	r7, r0
 802440c:	1c78      	adds	r0, r7, #1
 802440e:	d1d6      	bne.n	80243be <_vfiprintf_r+0x19e>
 8024410:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8024412:	07d9      	lsls	r1, r3, #31
 8024414:	d405      	bmi.n	8024422 <_vfiprintf_r+0x202>
 8024416:	89ab      	ldrh	r3, [r5, #12]
 8024418:	059a      	lsls	r2, r3, #22
 802441a:	d402      	bmi.n	8024422 <_vfiprintf_r+0x202>
 802441c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802441e:	f7ff fe1c 	bl	802405a <__retarget_lock_release_recursive>
 8024422:	89ab      	ldrh	r3, [r5, #12]
 8024424:	065b      	lsls	r3, r3, #25
 8024426:	f53f af1d 	bmi.w	8024264 <_vfiprintf_r+0x44>
 802442a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802442c:	e71c      	b.n	8024268 <_vfiprintf_r+0x48>
 802442e:	ab03      	add	r3, sp, #12
 8024430:	9300      	str	r3, [sp, #0]
 8024432:	462a      	mov	r2, r5
 8024434:	4b05      	ldr	r3, [pc, #20]	; (802444c <_vfiprintf_r+0x22c>)
 8024436:	a904      	add	r1, sp, #16
 8024438:	4630      	mov	r0, r6
 802443a:	f000 f879 	bl	8024530 <_printf_i>
 802443e:	e7e4      	b.n	802440a <_vfiprintf_r+0x1ea>
 8024440:	08026548 	.word	0x08026548
 8024444:	08026552 	.word	0x08026552
 8024448:	00000000 	.word	0x00000000
 802444c:	080241fb 	.word	0x080241fb
 8024450:	0802654e 	.word	0x0802654e

08024454 <_printf_common>:
 8024454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024458:	4616      	mov	r6, r2
 802445a:	4699      	mov	r9, r3
 802445c:	688a      	ldr	r2, [r1, #8]
 802445e:	690b      	ldr	r3, [r1, #16]
 8024460:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8024464:	4293      	cmp	r3, r2
 8024466:	bfb8      	it	lt
 8024468:	4613      	movlt	r3, r2
 802446a:	6033      	str	r3, [r6, #0]
 802446c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8024470:	4607      	mov	r7, r0
 8024472:	460c      	mov	r4, r1
 8024474:	b10a      	cbz	r2, 802447a <_printf_common+0x26>
 8024476:	3301      	adds	r3, #1
 8024478:	6033      	str	r3, [r6, #0]
 802447a:	6823      	ldr	r3, [r4, #0]
 802447c:	0699      	lsls	r1, r3, #26
 802447e:	bf42      	ittt	mi
 8024480:	6833      	ldrmi	r3, [r6, #0]
 8024482:	3302      	addmi	r3, #2
 8024484:	6033      	strmi	r3, [r6, #0]
 8024486:	6825      	ldr	r5, [r4, #0]
 8024488:	f015 0506 	ands.w	r5, r5, #6
 802448c:	d106      	bne.n	802449c <_printf_common+0x48>
 802448e:	f104 0a19 	add.w	sl, r4, #25
 8024492:	68e3      	ldr	r3, [r4, #12]
 8024494:	6832      	ldr	r2, [r6, #0]
 8024496:	1a9b      	subs	r3, r3, r2
 8024498:	42ab      	cmp	r3, r5
 802449a:	dc26      	bgt.n	80244ea <_printf_common+0x96>
 802449c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80244a0:	1e13      	subs	r3, r2, #0
 80244a2:	6822      	ldr	r2, [r4, #0]
 80244a4:	bf18      	it	ne
 80244a6:	2301      	movne	r3, #1
 80244a8:	0692      	lsls	r2, r2, #26
 80244aa:	d42b      	bmi.n	8024504 <_printf_common+0xb0>
 80244ac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80244b0:	4649      	mov	r1, r9
 80244b2:	4638      	mov	r0, r7
 80244b4:	47c0      	blx	r8
 80244b6:	3001      	adds	r0, #1
 80244b8:	d01e      	beq.n	80244f8 <_printf_common+0xa4>
 80244ba:	6823      	ldr	r3, [r4, #0]
 80244bc:	6922      	ldr	r2, [r4, #16]
 80244be:	f003 0306 	and.w	r3, r3, #6
 80244c2:	2b04      	cmp	r3, #4
 80244c4:	bf02      	ittt	eq
 80244c6:	68e5      	ldreq	r5, [r4, #12]
 80244c8:	6833      	ldreq	r3, [r6, #0]
 80244ca:	1aed      	subeq	r5, r5, r3
 80244cc:	68a3      	ldr	r3, [r4, #8]
 80244ce:	bf0c      	ite	eq
 80244d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80244d4:	2500      	movne	r5, #0
 80244d6:	4293      	cmp	r3, r2
 80244d8:	bfc4      	itt	gt
 80244da:	1a9b      	subgt	r3, r3, r2
 80244dc:	18ed      	addgt	r5, r5, r3
 80244de:	2600      	movs	r6, #0
 80244e0:	341a      	adds	r4, #26
 80244e2:	42b5      	cmp	r5, r6
 80244e4:	d11a      	bne.n	802451c <_printf_common+0xc8>
 80244e6:	2000      	movs	r0, #0
 80244e8:	e008      	b.n	80244fc <_printf_common+0xa8>
 80244ea:	2301      	movs	r3, #1
 80244ec:	4652      	mov	r2, sl
 80244ee:	4649      	mov	r1, r9
 80244f0:	4638      	mov	r0, r7
 80244f2:	47c0      	blx	r8
 80244f4:	3001      	adds	r0, #1
 80244f6:	d103      	bne.n	8024500 <_printf_common+0xac>
 80244f8:	f04f 30ff 	mov.w	r0, #4294967295
 80244fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024500:	3501      	adds	r5, #1
 8024502:	e7c6      	b.n	8024492 <_printf_common+0x3e>
 8024504:	18e1      	adds	r1, r4, r3
 8024506:	1c5a      	adds	r2, r3, #1
 8024508:	2030      	movs	r0, #48	; 0x30
 802450a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802450e:	4422      	add	r2, r4
 8024510:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8024514:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8024518:	3302      	adds	r3, #2
 802451a:	e7c7      	b.n	80244ac <_printf_common+0x58>
 802451c:	2301      	movs	r3, #1
 802451e:	4622      	mov	r2, r4
 8024520:	4649      	mov	r1, r9
 8024522:	4638      	mov	r0, r7
 8024524:	47c0      	blx	r8
 8024526:	3001      	adds	r0, #1
 8024528:	d0e6      	beq.n	80244f8 <_printf_common+0xa4>
 802452a:	3601      	adds	r6, #1
 802452c:	e7d9      	b.n	80244e2 <_printf_common+0x8e>
	...

08024530 <_printf_i>:
 8024530:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024534:	7e0f      	ldrb	r7, [r1, #24]
 8024536:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024538:	2f78      	cmp	r7, #120	; 0x78
 802453a:	4691      	mov	r9, r2
 802453c:	4680      	mov	r8, r0
 802453e:	460c      	mov	r4, r1
 8024540:	469a      	mov	sl, r3
 8024542:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8024546:	d807      	bhi.n	8024558 <_printf_i+0x28>
 8024548:	2f62      	cmp	r7, #98	; 0x62
 802454a:	d80a      	bhi.n	8024562 <_printf_i+0x32>
 802454c:	2f00      	cmp	r7, #0
 802454e:	f000 80d4 	beq.w	80246fa <_printf_i+0x1ca>
 8024552:	2f58      	cmp	r7, #88	; 0x58
 8024554:	f000 80c0 	beq.w	80246d8 <_printf_i+0x1a8>
 8024558:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802455c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8024560:	e03a      	b.n	80245d8 <_printf_i+0xa8>
 8024562:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8024566:	2b15      	cmp	r3, #21
 8024568:	d8f6      	bhi.n	8024558 <_printf_i+0x28>
 802456a:	a101      	add	r1, pc, #4	; (adr r1, 8024570 <_printf_i+0x40>)
 802456c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8024570:	080245c9 	.word	0x080245c9
 8024574:	080245dd 	.word	0x080245dd
 8024578:	08024559 	.word	0x08024559
 802457c:	08024559 	.word	0x08024559
 8024580:	08024559 	.word	0x08024559
 8024584:	08024559 	.word	0x08024559
 8024588:	080245dd 	.word	0x080245dd
 802458c:	08024559 	.word	0x08024559
 8024590:	08024559 	.word	0x08024559
 8024594:	08024559 	.word	0x08024559
 8024598:	08024559 	.word	0x08024559
 802459c:	080246e1 	.word	0x080246e1
 80245a0:	08024609 	.word	0x08024609
 80245a4:	0802469b 	.word	0x0802469b
 80245a8:	08024559 	.word	0x08024559
 80245ac:	08024559 	.word	0x08024559
 80245b0:	08024703 	.word	0x08024703
 80245b4:	08024559 	.word	0x08024559
 80245b8:	08024609 	.word	0x08024609
 80245bc:	08024559 	.word	0x08024559
 80245c0:	08024559 	.word	0x08024559
 80245c4:	080246a3 	.word	0x080246a3
 80245c8:	682b      	ldr	r3, [r5, #0]
 80245ca:	1d1a      	adds	r2, r3, #4
 80245cc:	681b      	ldr	r3, [r3, #0]
 80245ce:	602a      	str	r2, [r5, #0]
 80245d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80245d4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80245d8:	2301      	movs	r3, #1
 80245da:	e09f      	b.n	802471c <_printf_i+0x1ec>
 80245dc:	6820      	ldr	r0, [r4, #0]
 80245de:	682b      	ldr	r3, [r5, #0]
 80245e0:	0607      	lsls	r7, r0, #24
 80245e2:	f103 0104 	add.w	r1, r3, #4
 80245e6:	6029      	str	r1, [r5, #0]
 80245e8:	d501      	bpl.n	80245ee <_printf_i+0xbe>
 80245ea:	681e      	ldr	r6, [r3, #0]
 80245ec:	e003      	b.n	80245f6 <_printf_i+0xc6>
 80245ee:	0646      	lsls	r6, r0, #25
 80245f0:	d5fb      	bpl.n	80245ea <_printf_i+0xba>
 80245f2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80245f6:	2e00      	cmp	r6, #0
 80245f8:	da03      	bge.n	8024602 <_printf_i+0xd2>
 80245fa:	232d      	movs	r3, #45	; 0x2d
 80245fc:	4276      	negs	r6, r6
 80245fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8024602:	485a      	ldr	r0, [pc, #360]	; (802476c <_printf_i+0x23c>)
 8024604:	230a      	movs	r3, #10
 8024606:	e012      	b.n	802462e <_printf_i+0xfe>
 8024608:	682b      	ldr	r3, [r5, #0]
 802460a:	6820      	ldr	r0, [r4, #0]
 802460c:	1d19      	adds	r1, r3, #4
 802460e:	6029      	str	r1, [r5, #0]
 8024610:	0605      	lsls	r5, r0, #24
 8024612:	d501      	bpl.n	8024618 <_printf_i+0xe8>
 8024614:	681e      	ldr	r6, [r3, #0]
 8024616:	e002      	b.n	802461e <_printf_i+0xee>
 8024618:	0641      	lsls	r1, r0, #25
 802461a:	d5fb      	bpl.n	8024614 <_printf_i+0xe4>
 802461c:	881e      	ldrh	r6, [r3, #0]
 802461e:	4853      	ldr	r0, [pc, #332]	; (802476c <_printf_i+0x23c>)
 8024620:	2f6f      	cmp	r7, #111	; 0x6f
 8024622:	bf0c      	ite	eq
 8024624:	2308      	moveq	r3, #8
 8024626:	230a      	movne	r3, #10
 8024628:	2100      	movs	r1, #0
 802462a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802462e:	6865      	ldr	r5, [r4, #4]
 8024630:	60a5      	str	r5, [r4, #8]
 8024632:	2d00      	cmp	r5, #0
 8024634:	bfa2      	ittt	ge
 8024636:	6821      	ldrge	r1, [r4, #0]
 8024638:	f021 0104 	bicge.w	r1, r1, #4
 802463c:	6021      	strge	r1, [r4, #0]
 802463e:	b90e      	cbnz	r6, 8024644 <_printf_i+0x114>
 8024640:	2d00      	cmp	r5, #0
 8024642:	d04b      	beq.n	80246dc <_printf_i+0x1ac>
 8024644:	4615      	mov	r5, r2
 8024646:	fbb6 f1f3 	udiv	r1, r6, r3
 802464a:	fb03 6711 	mls	r7, r3, r1, r6
 802464e:	5dc7      	ldrb	r7, [r0, r7]
 8024650:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8024654:	4637      	mov	r7, r6
 8024656:	42bb      	cmp	r3, r7
 8024658:	460e      	mov	r6, r1
 802465a:	d9f4      	bls.n	8024646 <_printf_i+0x116>
 802465c:	2b08      	cmp	r3, #8
 802465e:	d10b      	bne.n	8024678 <_printf_i+0x148>
 8024660:	6823      	ldr	r3, [r4, #0]
 8024662:	07de      	lsls	r6, r3, #31
 8024664:	d508      	bpl.n	8024678 <_printf_i+0x148>
 8024666:	6923      	ldr	r3, [r4, #16]
 8024668:	6861      	ldr	r1, [r4, #4]
 802466a:	4299      	cmp	r1, r3
 802466c:	bfde      	ittt	le
 802466e:	2330      	movle	r3, #48	; 0x30
 8024670:	f805 3c01 	strble.w	r3, [r5, #-1]
 8024674:	f105 35ff 	addle.w	r5, r5, #4294967295
 8024678:	1b52      	subs	r2, r2, r5
 802467a:	6122      	str	r2, [r4, #16]
 802467c:	f8cd a000 	str.w	sl, [sp]
 8024680:	464b      	mov	r3, r9
 8024682:	aa03      	add	r2, sp, #12
 8024684:	4621      	mov	r1, r4
 8024686:	4640      	mov	r0, r8
 8024688:	f7ff fee4 	bl	8024454 <_printf_common>
 802468c:	3001      	adds	r0, #1
 802468e:	d14a      	bne.n	8024726 <_printf_i+0x1f6>
 8024690:	f04f 30ff 	mov.w	r0, #4294967295
 8024694:	b004      	add	sp, #16
 8024696:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802469a:	6823      	ldr	r3, [r4, #0]
 802469c:	f043 0320 	orr.w	r3, r3, #32
 80246a0:	6023      	str	r3, [r4, #0]
 80246a2:	4833      	ldr	r0, [pc, #204]	; (8024770 <_printf_i+0x240>)
 80246a4:	2778      	movs	r7, #120	; 0x78
 80246a6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80246aa:	6823      	ldr	r3, [r4, #0]
 80246ac:	6829      	ldr	r1, [r5, #0]
 80246ae:	061f      	lsls	r7, r3, #24
 80246b0:	f851 6b04 	ldr.w	r6, [r1], #4
 80246b4:	d402      	bmi.n	80246bc <_printf_i+0x18c>
 80246b6:	065f      	lsls	r7, r3, #25
 80246b8:	bf48      	it	mi
 80246ba:	b2b6      	uxthmi	r6, r6
 80246bc:	07df      	lsls	r7, r3, #31
 80246be:	bf48      	it	mi
 80246c0:	f043 0320 	orrmi.w	r3, r3, #32
 80246c4:	6029      	str	r1, [r5, #0]
 80246c6:	bf48      	it	mi
 80246c8:	6023      	strmi	r3, [r4, #0]
 80246ca:	b91e      	cbnz	r6, 80246d4 <_printf_i+0x1a4>
 80246cc:	6823      	ldr	r3, [r4, #0]
 80246ce:	f023 0320 	bic.w	r3, r3, #32
 80246d2:	6023      	str	r3, [r4, #0]
 80246d4:	2310      	movs	r3, #16
 80246d6:	e7a7      	b.n	8024628 <_printf_i+0xf8>
 80246d8:	4824      	ldr	r0, [pc, #144]	; (802476c <_printf_i+0x23c>)
 80246da:	e7e4      	b.n	80246a6 <_printf_i+0x176>
 80246dc:	4615      	mov	r5, r2
 80246de:	e7bd      	b.n	802465c <_printf_i+0x12c>
 80246e0:	682b      	ldr	r3, [r5, #0]
 80246e2:	6826      	ldr	r6, [r4, #0]
 80246e4:	6961      	ldr	r1, [r4, #20]
 80246e6:	1d18      	adds	r0, r3, #4
 80246e8:	6028      	str	r0, [r5, #0]
 80246ea:	0635      	lsls	r5, r6, #24
 80246ec:	681b      	ldr	r3, [r3, #0]
 80246ee:	d501      	bpl.n	80246f4 <_printf_i+0x1c4>
 80246f0:	6019      	str	r1, [r3, #0]
 80246f2:	e002      	b.n	80246fa <_printf_i+0x1ca>
 80246f4:	0670      	lsls	r0, r6, #25
 80246f6:	d5fb      	bpl.n	80246f0 <_printf_i+0x1c0>
 80246f8:	8019      	strh	r1, [r3, #0]
 80246fa:	2300      	movs	r3, #0
 80246fc:	6123      	str	r3, [r4, #16]
 80246fe:	4615      	mov	r5, r2
 8024700:	e7bc      	b.n	802467c <_printf_i+0x14c>
 8024702:	682b      	ldr	r3, [r5, #0]
 8024704:	1d1a      	adds	r2, r3, #4
 8024706:	602a      	str	r2, [r5, #0]
 8024708:	681d      	ldr	r5, [r3, #0]
 802470a:	6862      	ldr	r2, [r4, #4]
 802470c:	2100      	movs	r1, #0
 802470e:	4628      	mov	r0, r5
 8024710:	f7db fde6 	bl	80002e0 <memchr>
 8024714:	b108      	cbz	r0, 802471a <_printf_i+0x1ea>
 8024716:	1b40      	subs	r0, r0, r5
 8024718:	6060      	str	r0, [r4, #4]
 802471a:	6863      	ldr	r3, [r4, #4]
 802471c:	6123      	str	r3, [r4, #16]
 802471e:	2300      	movs	r3, #0
 8024720:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8024724:	e7aa      	b.n	802467c <_printf_i+0x14c>
 8024726:	6923      	ldr	r3, [r4, #16]
 8024728:	462a      	mov	r2, r5
 802472a:	4649      	mov	r1, r9
 802472c:	4640      	mov	r0, r8
 802472e:	47d0      	blx	sl
 8024730:	3001      	adds	r0, #1
 8024732:	d0ad      	beq.n	8024690 <_printf_i+0x160>
 8024734:	6823      	ldr	r3, [r4, #0]
 8024736:	079b      	lsls	r3, r3, #30
 8024738:	d413      	bmi.n	8024762 <_printf_i+0x232>
 802473a:	68e0      	ldr	r0, [r4, #12]
 802473c:	9b03      	ldr	r3, [sp, #12]
 802473e:	4298      	cmp	r0, r3
 8024740:	bfb8      	it	lt
 8024742:	4618      	movlt	r0, r3
 8024744:	e7a6      	b.n	8024694 <_printf_i+0x164>
 8024746:	2301      	movs	r3, #1
 8024748:	4632      	mov	r2, r6
 802474a:	4649      	mov	r1, r9
 802474c:	4640      	mov	r0, r8
 802474e:	47d0      	blx	sl
 8024750:	3001      	adds	r0, #1
 8024752:	d09d      	beq.n	8024690 <_printf_i+0x160>
 8024754:	3501      	adds	r5, #1
 8024756:	68e3      	ldr	r3, [r4, #12]
 8024758:	9903      	ldr	r1, [sp, #12]
 802475a:	1a5b      	subs	r3, r3, r1
 802475c:	42ab      	cmp	r3, r5
 802475e:	dcf2      	bgt.n	8024746 <_printf_i+0x216>
 8024760:	e7eb      	b.n	802473a <_printf_i+0x20a>
 8024762:	2500      	movs	r5, #0
 8024764:	f104 0619 	add.w	r6, r4, #25
 8024768:	e7f5      	b.n	8024756 <_printf_i+0x226>
 802476a:	bf00      	nop
 802476c:	08026559 	.word	0x08026559
 8024770:	0802656a 	.word	0x0802656a

08024774 <__sflush_r>:
 8024774:	898a      	ldrh	r2, [r1, #12]
 8024776:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802477a:	4605      	mov	r5, r0
 802477c:	0710      	lsls	r0, r2, #28
 802477e:	460c      	mov	r4, r1
 8024780:	d458      	bmi.n	8024834 <__sflush_r+0xc0>
 8024782:	684b      	ldr	r3, [r1, #4]
 8024784:	2b00      	cmp	r3, #0
 8024786:	dc05      	bgt.n	8024794 <__sflush_r+0x20>
 8024788:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802478a:	2b00      	cmp	r3, #0
 802478c:	dc02      	bgt.n	8024794 <__sflush_r+0x20>
 802478e:	2000      	movs	r0, #0
 8024790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024794:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024796:	2e00      	cmp	r6, #0
 8024798:	d0f9      	beq.n	802478e <__sflush_r+0x1a>
 802479a:	2300      	movs	r3, #0
 802479c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80247a0:	682f      	ldr	r7, [r5, #0]
 80247a2:	6a21      	ldr	r1, [r4, #32]
 80247a4:	602b      	str	r3, [r5, #0]
 80247a6:	d032      	beq.n	802480e <__sflush_r+0x9a>
 80247a8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80247aa:	89a3      	ldrh	r3, [r4, #12]
 80247ac:	075a      	lsls	r2, r3, #29
 80247ae:	d505      	bpl.n	80247bc <__sflush_r+0x48>
 80247b0:	6863      	ldr	r3, [r4, #4]
 80247b2:	1ac0      	subs	r0, r0, r3
 80247b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80247b6:	b10b      	cbz	r3, 80247bc <__sflush_r+0x48>
 80247b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80247ba:	1ac0      	subs	r0, r0, r3
 80247bc:	2300      	movs	r3, #0
 80247be:	4602      	mov	r2, r0
 80247c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80247c2:	6a21      	ldr	r1, [r4, #32]
 80247c4:	4628      	mov	r0, r5
 80247c6:	47b0      	blx	r6
 80247c8:	1c43      	adds	r3, r0, #1
 80247ca:	89a3      	ldrh	r3, [r4, #12]
 80247cc:	d106      	bne.n	80247dc <__sflush_r+0x68>
 80247ce:	6829      	ldr	r1, [r5, #0]
 80247d0:	291d      	cmp	r1, #29
 80247d2:	d82b      	bhi.n	802482c <__sflush_r+0xb8>
 80247d4:	4a29      	ldr	r2, [pc, #164]	; (802487c <__sflush_r+0x108>)
 80247d6:	410a      	asrs	r2, r1
 80247d8:	07d6      	lsls	r6, r2, #31
 80247da:	d427      	bmi.n	802482c <__sflush_r+0xb8>
 80247dc:	2200      	movs	r2, #0
 80247de:	6062      	str	r2, [r4, #4]
 80247e0:	04d9      	lsls	r1, r3, #19
 80247e2:	6922      	ldr	r2, [r4, #16]
 80247e4:	6022      	str	r2, [r4, #0]
 80247e6:	d504      	bpl.n	80247f2 <__sflush_r+0x7e>
 80247e8:	1c42      	adds	r2, r0, #1
 80247ea:	d101      	bne.n	80247f0 <__sflush_r+0x7c>
 80247ec:	682b      	ldr	r3, [r5, #0]
 80247ee:	b903      	cbnz	r3, 80247f2 <__sflush_r+0x7e>
 80247f0:	6560      	str	r0, [r4, #84]	; 0x54
 80247f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80247f4:	602f      	str	r7, [r5, #0]
 80247f6:	2900      	cmp	r1, #0
 80247f8:	d0c9      	beq.n	802478e <__sflush_r+0x1a>
 80247fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80247fe:	4299      	cmp	r1, r3
 8024800:	d002      	beq.n	8024808 <__sflush_r+0x94>
 8024802:	4628      	mov	r0, r5
 8024804:	f7ff fc96 	bl	8024134 <_free_r>
 8024808:	2000      	movs	r0, #0
 802480a:	6360      	str	r0, [r4, #52]	; 0x34
 802480c:	e7c0      	b.n	8024790 <__sflush_r+0x1c>
 802480e:	2301      	movs	r3, #1
 8024810:	4628      	mov	r0, r5
 8024812:	47b0      	blx	r6
 8024814:	1c41      	adds	r1, r0, #1
 8024816:	d1c8      	bne.n	80247aa <__sflush_r+0x36>
 8024818:	682b      	ldr	r3, [r5, #0]
 802481a:	2b00      	cmp	r3, #0
 802481c:	d0c5      	beq.n	80247aa <__sflush_r+0x36>
 802481e:	2b1d      	cmp	r3, #29
 8024820:	d001      	beq.n	8024826 <__sflush_r+0xb2>
 8024822:	2b16      	cmp	r3, #22
 8024824:	d101      	bne.n	802482a <__sflush_r+0xb6>
 8024826:	602f      	str	r7, [r5, #0]
 8024828:	e7b1      	b.n	802478e <__sflush_r+0x1a>
 802482a:	89a3      	ldrh	r3, [r4, #12]
 802482c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024830:	81a3      	strh	r3, [r4, #12]
 8024832:	e7ad      	b.n	8024790 <__sflush_r+0x1c>
 8024834:	690f      	ldr	r7, [r1, #16]
 8024836:	2f00      	cmp	r7, #0
 8024838:	d0a9      	beq.n	802478e <__sflush_r+0x1a>
 802483a:	0793      	lsls	r3, r2, #30
 802483c:	680e      	ldr	r6, [r1, #0]
 802483e:	bf08      	it	eq
 8024840:	694b      	ldreq	r3, [r1, #20]
 8024842:	600f      	str	r7, [r1, #0]
 8024844:	bf18      	it	ne
 8024846:	2300      	movne	r3, #0
 8024848:	eba6 0807 	sub.w	r8, r6, r7
 802484c:	608b      	str	r3, [r1, #8]
 802484e:	f1b8 0f00 	cmp.w	r8, #0
 8024852:	dd9c      	ble.n	802478e <__sflush_r+0x1a>
 8024854:	6a21      	ldr	r1, [r4, #32]
 8024856:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8024858:	4643      	mov	r3, r8
 802485a:	463a      	mov	r2, r7
 802485c:	4628      	mov	r0, r5
 802485e:	47b0      	blx	r6
 8024860:	2800      	cmp	r0, #0
 8024862:	dc06      	bgt.n	8024872 <__sflush_r+0xfe>
 8024864:	89a3      	ldrh	r3, [r4, #12]
 8024866:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802486a:	81a3      	strh	r3, [r4, #12]
 802486c:	f04f 30ff 	mov.w	r0, #4294967295
 8024870:	e78e      	b.n	8024790 <__sflush_r+0x1c>
 8024872:	4407      	add	r7, r0
 8024874:	eba8 0800 	sub.w	r8, r8, r0
 8024878:	e7e9      	b.n	802484e <__sflush_r+0xda>
 802487a:	bf00      	nop
 802487c:	dfbffffe 	.word	0xdfbffffe

08024880 <_fflush_r>:
 8024880:	b538      	push	{r3, r4, r5, lr}
 8024882:	690b      	ldr	r3, [r1, #16]
 8024884:	4605      	mov	r5, r0
 8024886:	460c      	mov	r4, r1
 8024888:	b913      	cbnz	r3, 8024890 <_fflush_r+0x10>
 802488a:	2500      	movs	r5, #0
 802488c:	4628      	mov	r0, r5
 802488e:	bd38      	pop	{r3, r4, r5, pc}
 8024890:	b118      	cbz	r0, 802489a <_fflush_r+0x1a>
 8024892:	6a03      	ldr	r3, [r0, #32]
 8024894:	b90b      	cbnz	r3, 802489a <_fflush_r+0x1a>
 8024896:	f7ff f9f3 	bl	8023c80 <__sinit>
 802489a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802489e:	2b00      	cmp	r3, #0
 80248a0:	d0f3      	beq.n	802488a <_fflush_r+0xa>
 80248a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80248a4:	07d0      	lsls	r0, r2, #31
 80248a6:	d404      	bmi.n	80248b2 <_fflush_r+0x32>
 80248a8:	0599      	lsls	r1, r3, #22
 80248aa:	d402      	bmi.n	80248b2 <_fflush_r+0x32>
 80248ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80248ae:	f7ff fbd3 	bl	8024058 <__retarget_lock_acquire_recursive>
 80248b2:	4628      	mov	r0, r5
 80248b4:	4621      	mov	r1, r4
 80248b6:	f7ff ff5d 	bl	8024774 <__sflush_r>
 80248ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80248bc:	07da      	lsls	r2, r3, #31
 80248be:	4605      	mov	r5, r0
 80248c0:	d4e4      	bmi.n	802488c <_fflush_r+0xc>
 80248c2:	89a3      	ldrh	r3, [r4, #12]
 80248c4:	059b      	lsls	r3, r3, #22
 80248c6:	d4e1      	bmi.n	802488c <_fflush_r+0xc>
 80248c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80248ca:	f7ff fbc6 	bl	802405a <__retarget_lock_release_recursive>
 80248ce:	e7dd      	b.n	802488c <_fflush_r+0xc>

080248d0 <__swhatbuf_r>:
 80248d0:	b570      	push	{r4, r5, r6, lr}
 80248d2:	460c      	mov	r4, r1
 80248d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80248d8:	2900      	cmp	r1, #0
 80248da:	b096      	sub	sp, #88	; 0x58
 80248dc:	4615      	mov	r5, r2
 80248de:	461e      	mov	r6, r3
 80248e0:	da0d      	bge.n	80248fe <__swhatbuf_r+0x2e>
 80248e2:	89a3      	ldrh	r3, [r4, #12]
 80248e4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80248e8:	f04f 0100 	mov.w	r1, #0
 80248ec:	bf0c      	ite	eq
 80248ee:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80248f2:	2340      	movne	r3, #64	; 0x40
 80248f4:	2000      	movs	r0, #0
 80248f6:	6031      	str	r1, [r6, #0]
 80248f8:	602b      	str	r3, [r5, #0]
 80248fa:	b016      	add	sp, #88	; 0x58
 80248fc:	bd70      	pop	{r4, r5, r6, pc}
 80248fe:	466a      	mov	r2, sp
 8024900:	f000 f848 	bl	8024994 <_fstat_r>
 8024904:	2800      	cmp	r0, #0
 8024906:	dbec      	blt.n	80248e2 <__swhatbuf_r+0x12>
 8024908:	9901      	ldr	r1, [sp, #4]
 802490a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802490e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8024912:	4259      	negs	r1, r3
 8024914:	4159      	adcs	r1, r3
 8024916:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802491a:	e7eb      	b.n	80248f4 <__swhatbuf_r+0x24>

0802491c <__smakebuf_r>:
 802491c:	898b      	ldrh	r3, [r1, #12]
 802491e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024920:	079d      	lsls	r5, r3, #30
 8024922:	4606      	mov	r6, r0
 8024924:	460c      	mov	r4, r1
 8024926:	d507      	bpl.n	8024938 <__smakebuf_r+0x1c>
 8024928:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802492c:	6023      	str	r3, [r4, #0]
 802492e:	6123      	str	r3, [r4, #16]
 8024930:	2301      	movs	r3, #1
 8024932:	6163      	str	r3, [r4, #20]
 8024934:	b002      	add	sp, #8
 8024936:	bd70      	pop	{r4, r5, r6, pc}
 8024938:	ab01      	add	r3, sp, #4
 802493a:	466a      	mov	r2, sp
 802493c:	f7ff ffc8 	bl	80248d0 <__swhatbuf_r>
 8024940:	9900      	ldr	r1, [sp, #0]
 8024942:	4605      	mov	r5, r0
 8024944:	4630      	mov	r0, r6
 8024946:	f7ff f887 	bl	8023a58 <_malloc_r>
 802494a:	b948      	cbnz	r0, 8024960 <__smakebuf_r+0x44>
 802494c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024950:	059a      	lsls	r2, r3, #22
 8024952:	d4ef      	bmi.n	8024934 <__smakebuf_r+0x18>
 8024954:	f023 0303 	bic.w	r3, r3, #3
 8024958:	f043 0302 	orr.w	r3, r3, #2
 802495c:	81a3      	strh	r3, [r4, #12]
 802495e:	e7e3      	b.n	8024928 <__smakebuf_r+0xc>
 8024960:	89a3      	ldrh	r3, [r4, #12]
 8024962:	6020      	str	r0, [r4, #0]
 8024964:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8024968:	81a3      	strh	r3, [r4, #12]
 802496a:	9b00      	ldr	r3, [sp, #0]
 802496c:	6163      	str	r3, [r4, #20]
 802496e:	9b01      	ldr	r3, [sp, #4]
 8024970:	6120      	str	r0, [r4, #16]
 8024972:	b15b      	cbz	r3, 802498c <__smakebuf_r+0x70>
 8024974:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8024978:	4630      	mov	r0, r6
 802497a:	f000 f81d 	bl	80249b8 <_isatty_r>
 802497e:	b128      	cbz	r0, 802498c <__smakebuf_r+0x70>
 8024980:	89a3      	ldrh	r3, [r4, #12]
 8024982:	f023 0303 	bic.w	r3, r3, #3
 8024986:	f043 0301 	orr.w	r3, r3, #1
 802498a:	81a3      	strh	r3, [r4, #12]
 802498c:	89a3      	ldrh	r3, [r4, #12]
 802498e:	431d      	orrs	r5, r3
 8024990:	81a5      	strh	r5, [r4, #12]
 8024992:	e7cf      	b.n	8024934 <__smakebuf_r+0x18>

08024994 <_fstat_r>:
 8024994:	b538      	push	{r3, r4, r5, lr}
 8024996:	4d07      	ldr	r5, [pc, #28]	; (80249b4 <_fstat_r+0x20>)
 8024998:	2300      	movs	r3, #0
 802499a:	4604      	mov	r4, r0
 802499c:	4608      	mov	r0, r1
 802499e:	4611      	mov	r1, r2
 80249a0:	602b      	str	r3, [r5, #0]
 80249a2:	f7dc fee4 	bl	800176e <_fstat>
 80249a6:	1c43      	adds	r3, r0, #1
 80249a8:	d102      	bne.n	80249b0 <_fstat_r+0x1c>
 80249aa:	682b      	ldr	r3, [r5, #0]
 80249ac:	b103      	cbz	r3, 80249b0 <_fstat_r+0x1c>
 80249ae:	6023      	str	r3, [r4, #0]
 80249b0:	bd38      	pop	{r3, r4, r5, pc}
 80249b2:	bf00      	nop
 80249b4:	24002140 	.word	0x24002140

080249b8 <_isatty_r>:
 80249b8:	b538      	push	{r3, r4, r5, lr}
 80249ba:	4d06      	ldr	r5, [pc, #24]	; (80249d4 <_isatty_r+0x1c>)
 80249bc:	2300      	movs	r3, #0
 80249be:	4604      	mov	r4, r0
 80249c0:	4608      	mov	r0, r1
 80249c2:	602b      	str	r3, [r5, #0]
 80249c4:	f7dc fee3 	bl	800178e <_isatty>
 80249c8:	1c43      	adds	r3, r0, #1
 80249ca:	d102      	bne.n	80249d2 <_isatty_r+0x1a>
 80249cc:	682b      	ldr	r3, [r5, #0]
 80249ce:	b103      	cbz	r3, 80249d2 <_isatty_r+0x1a>
 80249d0:	6023      	str	r3, [r4, #0]
 80249d2:	bd38      	pop	{r3, r4, r5, pc}
 80249d4:	24002140 	.word	0x24002140

080249d8 <_init>:
 80249d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80249da:	bf00      	nop
 80249dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80249de:	bc08      	pop	{r3}
 80249e0:	469e      	mov	lr, r3
 80249e2:	4770      	bx	lr

080249e4 <_fini>:
 80249e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80249e6:	bf00      	nop
 80249e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80249ea:	bc08      	pop	{r3}
 80249ec:	469e      	mov	lr, r3
 80249ee:	4770      	bx	lr
